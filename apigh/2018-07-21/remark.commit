{
  "sha": "fdf161850b737c39f6ea635474d5c1297c304c32",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmZkZjE2MTg1MGI3MzdjMzlmNmVhNjM1NDc0ZDVjMTI5N2MzMDRjMzI=",
  "commit": {
    "author": {
      "name": "Aleksei Gurianov",
      "email": "gurianov@gmail.com",
      "date": "2018-07-19T14:33:40Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-07-19T14:33:40Z"
    },
    "message": "Close DataStore on cleanup in tests (#173)\n\nWindows fs can't remove testDb until file still used.\r\nTherefore we need to close datastore on cleanup.",
    "tree": {
      "sha": "df8f20f1a20462b324ec28b0310cebe3bfa32732",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/df8f20f1a20462b324ec28b0310cebe3bfa32732"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/fdf161850b737c39f6ea635474d5c1297c304c32",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/fdf161850b737c39f6ea635474d5c1297c304c32",
  "html_url": "https://github.com/umputun/remark/commit/fdf161850b737c39f6ea635474d5c1297c304c32",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/fdf161850b737c39f6ea635474d5c1297c304c32/comments",
  "author": {
    "login": "Guria",
    "id": 36270,
    "node_id": "MDQ6VXNlcjM2Mjcw",
    "avatar_url": "https://avatars1.githubusercontent.com/u/36270?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Guria",
    "html_url": "https://github.com/Guria",
    "followers_url": "https://api.github.com/users/Guria/followers",
    "following_url": "https://api.github.com/users/Guria/following{/other_user}",
    "gists_url": "https://api.github.com/users/Guria/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Guria/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Guria/subscriptions",
    "organizations_url": "https://api.github.com/users/Guria/orgs",
    "repos_url": "https://api.github.com/users/Guria/repos",
    "events_url": "https://api.github.com/users/Guria/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Guria/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1a423a464bbdbe4c222f596584e3041652b54269",
      "url": "https://api.github.com/repos/umputun/remark/commits/1a423a464bbdbe4c222f596584e3041652b54269",
      "html_url": "https://github.com/umputun/remark/commit/1a423a464bbdbe4c222f596584e3041652b54269"
    }
  ],
  "stats": {
    "total": 93,
    "additions": 47,
    "deletions": 46
  },
  "files": [
    {
      "sha": "d3cc64ecaf1e2077ea26bd1c64c3758ebaeaf609",
      "filename": "backend/app/rest/api/admin_test.go",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark/blob/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/admin_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/admin_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/admin_test.go?ref=fdf161850b737c39f6ea635474d5c1297c304c32",
      "patch": "@@ -20,7 +20,7 @@ import (\n func TestAdmin_Delete(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", User: store.User{ID: \"id\", Name: \"name\"},\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}}\n@@ -51,7 +51,7 @@ func TestAdmin_Delete(t *testing.T) {\n func TestAdmin_DeleteUser(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Orig: \"o test test #1\", User: store.User{ID: \"id1\", Name: \"name\"},\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}}\n@@ -105,7 +105,7 @@ func TestAdmin_DeleteUser(t *testing.T) {\n func TestAdmin_Pin(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}}\n@@ -149,7 +149,7 @@ func TestAdmin_Pin(t *testing.T) {\n func TestAdmin_Block(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}\n@@ -230,7 +230,7 @@ func TestAdmin_Block(t *testing.T) {\n func TestAdmin_BlockedList(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tclient := http.Client{}\n \n@@ -272,7 +272,7 @@ func TestAdmin_BlockedList(t *testing.T) {\n func TestAdmin_ReadOnly(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}\n@@ -318,7 +318,7 @@ func TestAdmin_ReadOnly(t *testing.T) {\n func TestAdmin_ReadOnlyWithAge(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"},\n@@ -360,7 +360,7 @@ func TestAdmin_ReadOnlyWithAge(t *testing.T) {\n func TestAdmin_Verify(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}\n@@ -417,7 +417,7 @@ func TestAdmin_Verify(t *testing.T) {\n func TestAdmin_ExportStream(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -437,7 +437,7 @@ func TestAdmin_ExportStream(t *testing.T) {\n func TestAdmin_ExportFile(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -469,7 +469,7 @@ func TestAdmin_ExportFile(t *testing.T) {\n func TestAdmin_DeleteMeRequest(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}\n@@ -518,7 +518,7 @@ func TestAdmin_DeleteMeRequest(t *testing.T) {\n func TestAdmin_DeleteMeRequestFailed(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}\n@@ -595,7 +595,7 @@ func TestAdmin_DeleteMeRequestFailed(t *testing.T) {\n func TestAdmin_GetUserInfo(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n \t\tURL: \"https://radio-t.com/blah\"}, User: store.User{Name: \"user1 name\", ID: \"user1\"}}"
    },
    {
      "sha": "26d0993559155c152250f65551d6842c9adcd401",
      "filename": "backend/app/rest/api/rest_private_test.go",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_private_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_private_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_private_test.go?ref=fdf161850b737c39f6ea635474d5c1297c304c32",
      "patch": "@@ -19,7 +19,7 @@ import (\n func TestRest_Create(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tresp, err := post(t, ts.URL+\"/api/v1/comment\",\n \t\t`{\"text\": \"test 123\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"radio-t\"}}`)\n@@ -40,7 +40,7 @@ func TestRest_Create(t *testing.T) {\n func TestRest_CreateOldPost(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \t// make old, but not too old comment\n \told := store.Comment{Text: \"test test old\", ParentID: \"\", Timestamp: time.Now().AddDate(0, 0, -5),\n@@ -74,7 +74,7 @@ func TestRest_CreateOldPost(t *testing.T) {\n func TestRest_CreateTooBig(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tlongComment := fmt.Sprintf(`{\"text\": \"%4001s\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"radio-t\"}}`, \"Щ\")\n \n@@ -106,7 +106,7 @@ func TestRest_CreateRejected(t *testing.T) {\n \n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \tbody := `{\"text\": \"test 123\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"radio-t\"}}`\n \n \t// try to create without auth\n@@ -117,7 +117,7 @@ func TestRest_CreateRejected(t *testing.T) {\n func TestRest_CreateAndGet(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \t// create comment\n \tresp, err := post(t, ts.URL+\"/api/v1/comment\",\n@@ -149,7 +149,7 @@ func TestRest_CreateAndGet(t *testing.T) {\n func TestRest_Update(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", ParentID: \"p1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -188,7 +188,7 @@ func TestRest_Update(t *testing.T) {\n func TestRest_UpdateNotOwner(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", ParentID: \"p1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}, User: store.User{ID: \"xyz\"}}\n@@ -220,7 +220,7 @@ func TestRest_UpdateNotOwner(t *testing.T) {\n func TestRest_Vote(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}}\n@@ -264,7 +264,7 @@ func TestRest_Vote(t *testing.T) {\n func TestRest_UserAllData(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \t// write 3 comments\n \tuser := store.User{ID: \"dev\", Name: \"user name 1\"}\n@@ -319,7 +319,7 @@ func TestRest_UserAllData(t *testing.T) {\n func TestRest_UserAllDataManyComments(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tuser := store.User{ID: \"dev\", Name: \"user name 1\"}\n \tc := store.Comment{User: user, Text: \"test test #1\", Locator: store.Locator{SiteID: \"radio-t\",\n@@ -353,7 +353,7 @@ func TestRest_UserAllDataManyComments(t *testing.T) {\n func TestRest_DeleteMe(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodPost, fmt.Sprintf(\"%s/api/v1/deleteme?site=radio-t\", ts.URL), nil)"
    },
    {
      "sha": "31886ba1c33b2edf1329db4f0db2badf5fc6ecf2",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark/blob/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_public_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_public_test.go?ref=fdf161850b737c39f6ea635474d5c1297c304c32",
      "patch": "@@ -19,7 +19,7 @@ import (\n func TestRest_Ping(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tres, code := get(t, ts.URL+\"/api/v1/ping\")\n \tassert.Equal(t, \"pong\", res)\n@@ -29,7 +29,7 @@ func TestRest_Ping(t *testing.T) {\n func TestRest_Preview(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tresp, err := post(t, ts.URL+\"/api/v1/preview\", `{\"text\": \"test 123\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"radio-t\"}}`)\n \tassert.Nil(t, err)\n@@ -42,7 +42,7 @@ func TestRest_Preview(t *testing.T) {\n func TestRest_PreviewWithMD(t *testing.T) {\n \tsrv, ts := prep(t)\n \trequire.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \ttext := `\n # h1\n@@ -70,7 +70,7 @@ BKT\n func TestRest_Find(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \t_, code := get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah1\")\n \tassert.Equal(t, 400, code, \"nothing in\")\n@@ -124,7 +124,7 @@ func TestRest_Find(t *testing.T) {\n func TestRest_FindAge(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", ParentID: \"\", Timestamp: time.Now().AddDate(0, 0, -5),\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}, User: store.User{ID: \"u1\"}}\n@@ -156,7 +156,7 @@ func TestRest_FindAge(t *testing.T) {\n func TestRest_FindReadOnly(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", ParentID: \"\", Timestamp: time.Now().AddDate(0, 0, -1),\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}, User: store.User{ID: \"u1\"}}\n@@ -198,7 +198,7 @@ func TestRest_FindReadOnly(t *testing.T) {\n func TestRest_Last(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\", ParentID: \"p1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -243,7 +243,7 @@ func TestRest_Last(t *testing.T) {\n func TestRest_FindUserComments(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -280,7 +280,7 @@ func TestRest_FindUserComments(t *testing.T) {\n func TestRest_UserInfo(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tbody, code := getWithAuth(t, ts.URL+\"/api/v1/user?site=radio-t\")\n \tassert.Equal(t, 200, code)\n@@ -294,7 +294,7 @@ func TestRest_UserInfo(t *testing.T) {\n func TestRest_Count(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -324,7 +324,7 @@ func TestRest_Count(t *testing.T) {\n func TestRest_Counts(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -354,7 +354,7 @@ func TestRest_Counts(t *testing.T) {\n func TestRest_List(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tc1 := store.Comment{Text: \"test test #1\",\n \t\tLocator: store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah1\"}}\n@@ -381,7 +381,7 @@ func TestRest_List(t *testing.T) {\n func TestRest_Config(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tbody, code := get(t, ts.URL+\"/api/v1/config?site=radio-t\")\n \tassert.Equal(t, 200, code)\n@@ -401,7 +401,7 @@ func TestRest_Config(t *testing.T) {\n func TestRest_Info(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tsrv.ReadOnlyAge = 10000000 // make sure we don't hit read-only\n \n@@ -439,7 +439,7 @@ func TestRest_Info(t *testing.T) {\n func TestRest_Robots(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tbody, code := get(t, ts.URL+\"/robots.txt\")\n \tassert.Equal(t, 200, code)"
    },
    {
      "sha": "6dd652309b971aea07ec9a940e12ab4a4a6a9ac5",
      "filename": "backend/app/rest/api/rest_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rest_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_test.go?ref=fdf161850b737c39f6ea635474d5c1297c304c32",
      "patch": "@@ -31,7 +31,7 @@ var getStartedHTML = \"/tmp/getstarted.html\"\n func TestRest_FileServer(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \tbody, code := get(t, ts.URL+\"/web/test-remark.html\")\n \tassert.Equal(t, 200, code)\n@@ -41,7 +41,7 @@ func TestRest_FileServer(t *testing.T) {\n func TestRest_GetStarted(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \terr := ioutil.WriteFile(getStartedHTML, []byte(\"some html blah\"), 0700)\n \tassert.Nil(t, err)\n@@ -157,8 +157,9 @@ func addComment(t *testing.T, c store.Comment, ts *httptest.Server) string {\n \treturn crResp[\"id\"].(string)\n }\n \n-func cleanup(ts *httptest.Server) {\n+func cleanup(ts *httptest.Server, srv *Rest) {\n \tts.Close()\n+\tsrv.DataService.Close()\n \tos.Remove(testDb)\n \tos.Remove(testHTML)\n }"
    },
    {
      "sha": "3eaffe14c24c0bff7c4344566c82faa227f28dcf",
      "filename": "backend/app/rest/api/rss_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rss_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/fdf161850b737c39f6ea635474d5c1297c304c32/backend/app/rest/api/rss_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rss_test.go?ref=fdf161850b737c39f6ea635474d5c1297c304c32",
      "patch": "@@ -14,7 +14,7 @@ import (\n func TestServer_RssPost(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \twaitOnSecChange()\n \n@@ -55,7 +55,7 @@ func TestServer_RssPost(t *testing.T) {\n func TestServer_RssSite(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \twaitOnSecChange()\n \n@@ -109,7 +109,7 @@ func TestServer_RssSite(t *testing.T) {\n func TestServer_RssWithReply(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \twaitOnSecChange()\n \n@@ -161,7 +161,7 @@ func TestServer_RssWithReply(t *testing.T) {\n func TestServer_RssReplies(t *testing.T) {\n \tsrv, ts := prep(t)\n \tassert.NotNil(t, srv)\n-\tdefer cleanup(ts)\n+\tdefer cleanup(ts, srv)\n \n \twaitOnSecChange()\n "
    }
  ]
}
