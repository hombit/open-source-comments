{
  "sha": "0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e",
  "node_id": "MDY6Q29tbWl0NjI2ODQxOTowYTdiOGFlN2RmMWU0ZGQ1NGJhZDUxZDYxZDcwMmFmZjYzMmM1YzNl",
  "commit": {
    "author": {
      "name": "Benoît Latinier",
      "email": "benoit@latinier.fr",
      "date": "2018-07-28T21:22:29Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2018-07-28T21:22:29Z"
    },
    "message": "Merge pull request #447 from tribut/wsgi-docs\n\nUpdate docs for mod_wsgi",
    "tree": {
      "sha": "f6b70ad1aee3f3cf2025c722938a8c27370ee78c",
      "url": "https://api.github.com/repos/posativ/isso/git/trees/f6b70ad1aee3f3cf2025c722938a8c27370ee78c"
    },
    "url": "https://api.github.com/repos/posativ/isso/git/commits/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbXN6VCRBK7hj4Ov3rIwAAdHIIAH/Pw8bWxDJYGWRAIiH5NJa6\nXTDC2bTfe19QIJfc1mLwnjJ47whoVxtGX97Or5xti+P3wD8w1BmKb2rWbjpBg2ar\n/Gir3rk8m+KippOP6teQXkMLEnEZOzNSUbFkIklpJq5UE2ZCcqUxFBjvTUDK7eZ6\nUsInVRLVGc81/5ccjwKetL+F2yKNTLFrN7Lt9zvwns6RzfceK6OMhcsb6ztgs11R\nYehT3gEOiE6OMLV62HzaBHk7iCsJcD1E3EwZOzcn3RQXQK+lon/f38BTg4qrYPVX\nrHvTtdvJwKlv5rSdoiQfjFbn7pkKphsf32eH/6g5voMpTb+0oA9GmBh/NVNzxbM=\n=eby5\n-----END PGP SIGNATURE-----\n",
      "payload": "tree f6b70ad1aee3f3cf2025c722938a8c27370ee78c\nparent 5dad7bd353615de1885c6f9348cfedecdec899e7\nparent 8360dacbb17de8ddb00c28c874f5e3b70bd4899b\nauthor Benoît Latinier <benoit@latinier.fr> 1532812949 +0200\ncommitter GitHub <noreply@github.com> 1532812949 +0200\n\nMerge pull request #447 from tribut/wsgi-docs\n\nUpdate docs for mod_wsgi"
    }
  },
  "url": "https://api.github.com/repos/posativ/isso/commits/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e",
  "html_url": "https://github.com/posativ/isso/commit/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e",
  "comments_url": "https://api.github.com/repos/posativ/isso/commits/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e/comments",
  "author": {
    "login": "blatinier",
    "id": 1086629,
    "node_id": "MDQ6VXNlcjEwODY2Mjk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1086629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/blatinier",
    "html_url": "https://github.com/blatinier",
    "followers_url": "https://api.github.com/users/blatinier/followers",
    "following_url": "https://api.github.com/users/blatinier/following{/other_user}",
    "gists_url": "https://api.github.com/users/blatinier/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/blatinier/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/blatinier/subscriptions",
    "organizations_url": "https://api.github.com/users/blatinier/orgs",
    "repos_url": "https://api.github.com/users/blatinier/repos",
    "events_url": "https://api.github.com/users/blatinier/events{/privacy}",
    "received_events_url": "https://api.github.com/users/blatinier/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5dad7bd353615de1885c6f9348cfedecdec899e7",
      "url": "https://api.github.com/repos/posativ/isso/commits/5dad7bd353615de1885c6f9348cfedecdec899e7",
      "html_url": "https://github.com/posativ/isso/commit/5dad7bd353615de1885c6f9348cfedecdec899e7"
    },
    {
      "sha": "8360dacbb17de8ddb00c28c874f5e3b70bd4899b",
      "url": "https://api.github.com/repos/posativ/isso/commits/8360dacbb17de8ddb00c28c874f5e3b70bd4899b",
      "html_url": "https://github.com/posativ/isso/commit/8360dacbb17de8ddb00c28c874f5e3b70bd4899b"
    }
  ],
  "stats": {
    "total": 70,
    "additions": 47,
    "deletions": 23
  },
  "files": [
    {
      "sha": "b2c19e8f7aca24a345c153d1f676264e4270e85b",
      "filename": "docs/docs/extras/deployment.rst",
      "status": "modified",
      "additions": 47,
      "deletions": 23,
      "changes": 70,
      "blob_url": "https://github.com/posativ/isso/blob/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e/docs/docs/extras/deployment.rst",
      "raw_url": "https://github.com/posativ/isso/raw/0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e/docs/docs/extras/deployment.rst",
      "contents_url": "https://api.github.com/repos/posativ/isso/contents/docs/docs/extras/deployment.rst?ref=0a7b8ae7df1e4dd54bad51d61d702aff632c5c3e",
      "patch": "@@ -98,61 +98,85 @@ To execute Isso, use a command similar to:\n `mod_wsgi <https://code.google.com/p/modwsgi/>`__\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-First, create a startup script, called `isso.wsgi`. If Isso is in your system module \n-search path, then the script is quite simple:\n+First, create a startup script, called `isso.wsgi`. If Isso is in your system module\n+search path, then the script is quite simple. This script is included in the\n+isso distribution as `run.py`:\n \n .. code-block:: python\n \n+    from __future__ import unicode_literals\n+\n+    import os\n+\n     from isso import make_app\n-    from isso.core import Config\n+    from isso import dist, config\n \n-    application = make_app(Config.load(\"/path/to/isso.cfg\"))\n+    application = make_app(\n+    config.load(\n+        os.path.join(dist.location, dist.project_name, \"defaults.ini\"),\n+        \"/path/to/isso.cfg\"),\n+    multiprocessing=True)\n \n If you have installed Isso in a virtual environment, then you will have to add the path\n of the virtualenv to the site-specific paths of Python:\n \n .. code-block:: python\n-    \n+\n+    from __future__ import unicode_literals\n+\n     import site\n     site.addsitedir(\"/path/to/isso_virtualenv\")\n \n+    import os\n+\n     from isso import make_app\n-    from isso.core import Config\n+    from isso import dist, config\n \n-    application = make_app(Config.load(\"/path/to/isso.cfg\"))\n+    application = make_app(\n+    config.load(\n+        os.path.join(dist.location, dist.project_name, \"defaults.ini\"),\n+        \"/path/to/isso.cfg\",\n+    multiprocessing=True)\n \n Using the aforementioned script will load system modules when available and modules\n from the virtualenv otherwise. Should you want the opposite behavior, where modules from\n the virtualenv have priority over system modules, the following script does the trick:\n \n .. code-block:: python\n \n-    import site \n-    import sys \n+    from __future__ import unicode_literals\n+\n+    import os\n+    import site\n+    import sys\n \n     # Remember original sys.path.\n-    prev_sys_path = list(sys.path) \n+    prev_sys_path = list(sys.path)\n \n     # Add the new site-packages directory.\n     site.addsitedir(\"/path/to/isso_virtualenv\")\n \n     # Reorder sys.path so new directories at the front.\n-    new_sys_path = [] \n-    for item in list(sys.path): \n-        if item not in prev_sys_path: \n-            new_sys_path.append(item) \n-            sys.path.remove(item) \n-    sys.path[:0] = new_sys_path \n-    \n+    new_sys_path = []\n+    for item in list(sys.path):\n+        if item not in prev_sys_path:\n+            new_sys_path.append(item)\n+            sys.path.remove(item)\n+    sys.path[:0] = new_sys_path\n+\n     from isso import make_app\n-    from isso.core import Config\n+    from isso import dist, config\n \n-    application = make_app(Config.load(\"/path/to/isso.cfg\"))\n+    application = make_app(\n+    config.load(\n+        os.path.join(dist.location, dist.project_name, \"defaults.ini\"),\n+        \"/path/to/isso.cfg\",\n+    multiprocessing=True)\n \n-The last two scripts are based on those given by \n+The last two scripts are based on those given by\n `mod_wsgi documentation <https://code.google.com/p/modwsgi/wiki/VirtualEnvironments>`_.\n \n-The Apache configuration will then be similar to the following: \n+The Apache configuration will then be similar to the following:\n \n .. code-block:: apache\n \n@@ -163,9 +187,9 @@ The Apache configuration will then be similar to the following:\n         WSGIScriptAlias /mounted_isso_path /path/to/isso.wsgi\n     </VirtualHost>\n \n-You will need to adjust the user and group according to your Apache installation and \n+You will need to adjust the user and group according to your Apache installation and\n security policy. Be also aware that the directory containing the comments database must\n-be writable by the user or group running the WSGI daemon process: having a writable \n+be writable by the user or group running the WSGI daemon process: having a writable\n database only is not enough, since SQLite will need to create a lock file in the same\n directory.\n "
    }
  ]
}
