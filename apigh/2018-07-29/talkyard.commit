{
  "sha": "d03813e7ca7238b0157f2e78179dc9246be7f600",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6ZDAzODEzZTdjYTcyMzhiMDE1N2YyZTc4MTc5ZGM5MjQ2YmU3ZjYwMA==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2018-07-23T08:15:09Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2018-07-23T08:21:47Z"
    },
    "message": "Add weird-usernames e2e test.",
    "tree": {
      "sha": "1586aabf1ba17e7e23ff1d99199a81134d68d66f",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/1586aabf1ba17e7e23ff1d99199a81134d68d66f"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/d03813e7ca7238b0157f2e78179dc9246be7f600",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/d03813e7ca7238b0157f2e78179dc9246be7f600",
  "html_url": "https://github.com/debiki/talkyard/commit/d03813e7ca7238b0157f2e78179dc9246be7f600",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/d03813e7ca7238b0157f2e78179dc9246be7f600/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "145b6fe17e96429eadb537c9578dd2c829bbcb49",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/145b6fe17e96429eadb537c9578dd2c829bbcb49",
      "html_url": "https://github.com/debiki/talkyard/commit/145b6fe17e96429eadb537c9578dd2c829bbcb49"
    }
  ],
  "stats": {
    "total": 239,
    "additions": 215,
    "deletions": 24
  },
  "files": [
    {
      "sha": "232fad7a22a917797ff77bd3b2d4f7a760440ebf",
      "filename": "client/app/page-dialogs/about-user-dialog.more.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 9,
      "changes": 18,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/client/app/page-dialogs/about-user-dialog.more.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/client/app/page-dialogs/about-user-dialog.more.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app/page-dialogs/about-user-dialog.more.ts?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -160,11 +160,12 @@ const AboutUserDialog = createComponent({\n       }\n \n       content = r.div({}, ModalBody({}, content),\n-        ModalFooter({}, Button({ onClick: this.close }, t.Close)));\n+        ModalFooter({}, Button({ className: 'e_CloseB', onClick: this.close }, t.Close)));\n     }\n \n     return (\n       DropdownModal({ show: this.state.isOpen, onHide: this.close,\n+        dialogClassName2: 's_UD',\n         atRect: this.state.atRect, windowWidth: this.state.windowWidth,\n         className: 'esUsrDlg', showCloseButton: false }, content));\n   }\n@@ -174,21 +175,20 @@ const AboutUserDialog = createComponent({\n const AboutUser = createComponent({\n   displayName: 'AboutUser',\n \n-  componentWillMount: function() {\n-    this.isUnmounted = false;\n-  },\n-\n   componentWillUnmount: function() {\n-    this.isUnmounted = true;\n+    this.isGone = true;\n   },\n \n   removeFromPage: function() {\n     const user: MemberInclDetails = this.props.user;\n     Server.removeUsersFromPage([user.id], () => {\n-      if (!this.isUnmounted) this.props.close();\n+\n       // [redux] send a page-members patch [5FKE0WY2]\n       util.openDefaultStupidDialog({ body: \"Now I've removed him/her from this topic. \" +\n           \"Currently you need to refresh the page (hit F5) now, to see this change.\" })\n+\n+      if (this.isGone) return;\n+      this.props.close();\n     });\n   },\n \n@@ -250,8 +250,8 @@ const AboutUser = createComponent({\n             size: AvatarSize.Medium, clickOpensUserProfilePage: true }),\n         r.div({},\n           extraInfoNewline,\n-          r.b({}, user.username), r.br(),\n-          user.fullName, r.br(),\n+          r.b({ className: 's_UD_Un' }, user.username), r.br(),\n+          r.span({ className: 's_UD_FN' }, user.fullName), r.br(),\n           isStaffInfo,\n           isGoneInfo)));\n   }"
    },
    {
      "sha": "3206159ea98c3cf35cdf76f749af553e870f1229",
      "filename": "client/app/slim-bundle.d.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/client/app/slim-bundle.d.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/client/app/slim-bundle.d.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app/slim-bundle.d.ts?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -174,12 +174,11 @@ declare namespace debiki2 {\n   var Server: any;\n   var reactelements: any;\n   var hashStringToNumber: any;\n-  var canUseLocalStorage(): boolean;\n+  function canUseLocalStorage(): boolean;\n   var getFromLocalStorage: any;\n   var putInLocalStorage: any;\n   var event_isCtrlEnter: any;\n-  var page_isPrivateGroup: any;\n-  var page_isPrivateGroup: any;\n+  function page_isPrivateGroup(pageRole: PageRole): boolean;\n   function pageRole_iconClass(pageRole: PageRole): string;\n \n   function user_isSuspended(user: MemberInclDetails, nowMs: WhenMs): boolean;"
    },
    {
      "sha": "c80b2235812c880efd541c5136a49ecc7a44754c",
      "filename": "docs/bem-blocks.txt",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/docs/bem-blocks.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/docs/bem-blocks.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/bem-blocks.txt?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -19,6 +19,8 @@ It = list item\n D  = dialog\n CB = checkbox\n U  = user\n+Un = username\n+FN = full name\n Example: s_Whatever_SaveB = save button. Or s_SomethingElse_EmT = email addresses table.\n \n "
    },
    {
      "sha": "06a3dbf0b91394c257b1f787088dfc7e5e315021",
      "filename": "docs/e2e-tests-map.txt",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/docs/e2e-tests-map.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/docs/e2e-tests-map.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/docs/e2e-tests-map.txt?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -221,7 +221,8 @@ editor -\n         - email-notfs-discussion.test.ts  TyT4FKA2EQ02\n     edit, add new @username:\n         - email-notfs-discussion.test.ts  TyT2WREG78\n-\n+    unusual chars:\n+        - weird-usernames.2browsers.test.ts  TyT5ABKPUW2\n   other buttons -\n     ...\n \n@@ -263,6 +264,7 @@ post -\n   view author -\n     click opens dialog:\n     mentions click opens dialog:\n+      - weird-usernames.2browsers.test.ts  TyT2WAB5UY\n     profile shown:\n     ban guest:\n     send message:"
    },
    {
      "sha": "f970aa48561657b898c3f239fba3db52457ca74f",
      "filename": "modules/ed-core/src/main/scala/com/debiki/core/Validation.scala",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/modules/ed-core/src/main/scala/com/debiki/core/Validation.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/modules/ed-core/src/main/scala/com/debiki/core/Validation.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/main/scala/com/debiki/core/Validation.scala?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -80,7 +80,9 @@ object Validation {\n     */\n   // CLEAN_UP don't return the username — looks as if it's maybe getting changed\n   def checkUsername(username: String): String Or ErrorMessage = {  CLEAN_UP // merge with ReservedNames [2PGKR8ML]\n-    // Tested in ValidationTest.\n+    // Tested here:\n+    // - ValidationTest  TyT2AKB503\n+    // - weird-usernames.2browsers  TyT5ABKPUW2\n     // Also see [2WJBG04]\n \n     if (StackExchangeUsernameRegex.matches(username))  // [2QWGRC8P]"
    },
    {
      "sha": "8e93675d6fcb7212016bc7ef5ff1f0b2b1f4328a",
      "filename": "modules/ed-core/src/test/scala/com/debiki/core/ValidationTest.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/modules/ed-core/src/test/scala/com/debiki/core/ValidationTest.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/modules/ed-core/src/test/scala/com/debiki/core/ValidationTest.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/test/scala/com/debiki/core/ValidationTest.scala?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -21,7 +21,7 @@ package com.debiki.core\n import org.scalatest._\n \n \n-class ValidationTest extends FreeSpec with MustMatchers {\n+class ValidationTest extends FreeSpec with MustMatchers {    // TyT2AKB503\n \n \n   \"Validation can\" - {"
    },
    {
      "sha": "b68f57b4a3467730d54f130ac9ddc1a734171691",
      "filename": "s/run-e2e-tests.sh",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/s/run-e2e-tests.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/s/run-e2e-tests.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/run-e2e-tests.sh?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -199,6 +199,8 @@ function runAllE2eTests {\n   runE2eTest s/wdio target/e2e/wdio.2chrome.conf.js    --only invites-by-core-try-login-after.2browsers $args\n   runE2eTest s/wdio target/e2e/wdio.2chrome.conf.js    --only invites-weird-email-addrs.2browsers $args\n \n+  runE2eTest s/wdio target/e2e/wdio.2chrome.conf.js    --only weird-usernames.2browsers $args\n+\n \n   # wip:\n   # settings-allow-local-signup"
    },
    {
      "sha": "454433a797b5528b7d527b08e1955ebf1191d121",
      "filename": "tests/e2e/specs/__e2e-test-template__.2browsers.test.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/specs/__e2e-test-template__.2browsers.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/specs/__e2e-test-template__.2browsers.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/__e2e-test-template__.2browsers.test.ts?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -14,8 +14,6 @@ declare var browser: any;\n declare var browserA: any;\n declare var browserB: any;\n \n-let forum: LargeTestForum;\n-\n let everyonesBrowsers;\n let richBrowserA;\n let richBrowserB;\n@@ -38,7 +36,9 @@ let mallorysBrowser;\n let strangersBrowser;\n \n let siteIdAddress: IdAddress;\n-let forumTitle = \"Some E2E Test\";\n+let siteId;\n+\n+let forum: LargeTestForum;\n \n let discussionPageUrl: string;\n \n@@ -48,7 +48,7 @@ describe(\"some-e2e-test [TyT1234ABC]\", () => {\n   it(\"import a site\", () => {\n     const builder = buildSite();\n     forum = builder.addLargeForum({\n-      title: forumTitle,\n+      title: \"Some E2E Test\",\n       members: undefined, // default = everyone\n     });\n     builder.addPost({\n@@ -60,6 +60,7 @@ describe(\"some-e2e-test [TyT1234ABC]\", () => {\n     });\n     assert(builder.getSite() === forum.siteData);\n     siteIdAddress = server.importSiteData(forum.siteData);\n+    siteId = siteIdAddress.id;\n     discussionPageUrl = siteIdAddress.origin + '/' + forum.topics.byMichaelCategoryA.slug;\n   });\n "
    },
    {
      "sha": "0ad5c1a516fcdc4f4495a813958c913b9ce46dde",
      "filename": "tests/e2e/specs/weird-usernames.2browsers.test.ts",
      "status": "added",
      "additions": 157,
      "deletions": 0,
      "changes": 157,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/specs/weird-usernames.2browsers.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/specs/weird-usernames.2browsers.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/weird-usernames.2browsers.test.ts?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -0,0 +1,157 @@\n+/// <reference path=\"../test-types.ts\"/>\n+\n+import * as _ from 'lodash';\n+import assert = require('assert');\n+import server = require('../utils/server');\n+import utils = require('../utils/utils');\n+import { buildSite } from '../utils/site-builder';\n+import pagesFor = require('../utils/pages-for');\n+import settings = require('../utils/settings');\n+import logAndDie = require('../utils/log-and-die');\n+import c = require('../test-constants');\n+\n+declare var browser: any;\n+declare var browserA: any;\n+declare var browserB: any;\n+\n+let everyonesBrowsers;\n+let richBrowserA;\n+let richBrowserB;\n+let owen: Member;\n+let owensBrowser;\n+let mons: Member;\n+let monsBrowser;\n+let modya: Member;\n+let modyasBrowser;\n+let corax: Member;\n+let coraxBrowser;\n+let regina: Member;\n+let reginasBrowser;\n+let maria: Member;\n+let mariasBrowser;\n+let michael: Member;\n+let michaelsBrowser;\n+let mallory: Member;\n+let mallorysBrowser;\n+let strangersBrowser;\n+\n+let siteIdAddress: IdAddress;\n+let siteId;\n+\n+let forum: EmptyTestForum;\n+\n+const michaelsUsername = 'michael.lastname';\n+const coraxUsername = 'Corax-son-of-Tarzan';\n+const modyasUsername = 'modya.moody-mod';\n+const mallorysUsername = 'mallory';\n+\n+const mariasTopicTitle = 'mariasTopicTitle';\n+const mariasTopicTextWithMentions =\n+  `@${michaelsUsername} @${coraxUsername} @${modyasUsername} not_@${mallorysUsername}`;\n+\n+\n+describe(\"weird-usernames.2browsers  TyT5ABKPUW2\", () => {\n+\n+  it(\"import a site\", () => {\n+    const builder = buildSite();\n+    forum = builder.addEmptyForum({\n+      title: \"Weird Usernames\",\n+      members: undefined, // default = everyone\n+    });\n+    forum.members.michael.username = michaelsUsername;\n+    forum.members.corax.username = coraxUsername;\n+    forum.members.modya.username = modyasUsername;\n+    forum.members.mallory.username = mallorysUsername;\n+    assert(builder.getSite() === forum.siteData);\n+    siteIdAddress = server.importSiteData(forum.siteData);\n+    siteId = siteIdAddress.id;\n+  });\n+\n+  it(\"initialize people\", () => {\n+    everyonesBrowsers = _.assign(browser, pagesFor(browser));\n+    richBrowserA = _.assign(browserA, pagesFor(browserA));\n+    richBrowserB = _.assign(browserB, pagesFor(browserB));\n+\n+    owen = forum.members.owen;\n+    owensBrowser = richBrowserA;\n+    mons = forum.members.mons;\n+    monsBrowser = richBrowserA;\n+    modya = forum.members.modya;\n+    modyasBrowser = richBrowserA;\n+    corax = forum.members.corax;\n+    coraxBrowser = richBrowserA;\n+\n+    regina = forum.members.regina;\n+    reginasBrowser = richBrowserB;\n+    maria = forum.members.maria;\n+    mariasBrowser = richBrowserB;\n+    michael = forum.members.michael;\n+    michaelsBrowser = richBrowserB;\n+    mallory = forum.members.mallory;\n+    mallorysBrowser = richBrowserB;\n+    strangersBrowser = richBrowserB;\n+  });\n+\n+  it(\"Maria logs in\", () => {\n+    mariasBrowser.go(siteIdAddress.origin);\n+    mariasBrowser.complex.loginWithPasswordViaTopbar(maria);\n+    mariasBrowser.disableRateLimits();\n+  });\n+\n+  it(\"Maria posts a topic, mentions people with [.-] in their usernames\", () => {\n+    mariasBrowser.complex.createAndSaveTopic({\n+      title: mariasTopicTitle,\n+      body: mariasTopicTextWithMentions,\n+    });\n+  });\n+\n+  it(\"... Michael gets a mention notf, although '.' in his username\", () => {\n+    server.waitUntilLastEmailMatches(\n+        siteId, michael.emailAddress, [mariasTopicTitle, mariasTopicTextWithMentions], browser);\n+  });\n+\n+  it(\"... Corax gets a mention notf, although '-' in his username\", () => {\n+    server.waitUntilLastEmailMatches(\n+        siteId, corax.emailAddress, [mariasTopicTitle, mariasTopicTextWithMentions], browser);\n+  });\n+\n+  it(\"... Modya gets a mention notf, although both '.' and '-' in her username\", () => {\n+    server.waitUntilLastEmailMatches(\n+        siteId, modya.emailAddress, [mariasTopicTitle, mariasTopicTextWithMentions], browser);\n+  });\n+\n+  it(\"... Mallory got no email\", () => {\n+    assert.equal(\n+        server.countLastEmailsSentTo(siteId, mallory.emailAddress), 0);\n+  });\n+\n+  it(\"Maria can click Michael's mentioned username, to open about user dialogs  TyT2WAB5UY\", () => {\n+    mariasBrowser.click(`a.esMention=@${michaelsUsername}`);\n+    const usernameInAboutDialog = mariasBrowser.aboutUserDialog.getUsername();\n+    assert.equal(usernameInAboutDialog, michaelsUsername);\n+  });\n+\n+  it(\"... and Modya's mention\", () => {\n+    mariasBrowser.aboutUserDialog.close();\n+    mariasBrowser.click(`a.esMention=@${modyasUsername}`);\n+    const usernameInAboutDialog = mariasBrowser.aboutUserDialog.getUsername();\n+    assert.equal(usernameInAboutDialog, modyasUsername);\n+  });\n+\n+  it(\"... and Corax'\", () => {\n+    mariasBrowser.aboutUserDialog.close();\n+    mariasBrowser.click(`a.esMention=@${coraxUsername}`);\n+    const usernameInAboutDialog = mariasBrowser.aboutUserDialog.getUsername();\n+    assert.equal(usernameInAboutDialog, coraxUsername);\n+  });\n+\n+  it(\"The View Profile link really opens the user's profile page\", () => {\n+    mariasBrowser.aboutUserDialog.clickViewProfile();\n+    mariasBrowser.userProfilePage.waitForName();\n+    mariasBrowser.userProfilePage.assertUsernameIs(corax.username);\n+  });\n+\n+  // ...  Next: Some users rename themselves, to conflicting - . _ names?\n+\n+});\n+"
    },
    {
      "sha": "9f4288a7f9d4b99e12cf266b7e25abff2dcf4c61",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 31,
      "deletions": 5,
      "changes": 36,
      "blob_url": "https://github.com/debiki/talkyard/blob/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/d03813e7ca7238b0157f2e78179dc9246be7f600/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=d03813e7ca7238b0157f2e78179dc9246be7f600",
      "patch": "@@ -278,14 +278,19 @@ function pagesFor(browser) {\n       origWaitForEnabled.apply(browser, arguments);\n     },\n \n-    waitForText: function(selector: string) {\n+    waitForText: function(selector: string, timeoutMillis?: number) {\n       origWaitForText.apply(browser, arguments);\n     },\n \n-    waitForExist: function(selector: string) {\n+    waitForExist: function(selector: string, timeoutMillis?: number) {\n       origWaitForExist.apply(browser, arguments);\n     },\n \n+    waitForGone: function(selector: string, timeoutMillis?: number) {\n+      // True reverses, i.e. wait until not visible\n+      origWaitForExist.call(browser, selector, timeoutMillis, true);\n+    },\n+\n     waitAndClick: function(selector: string, opts: { maybeMoves?: boolean, clickFirst?: boolean } = {}) {\n       api._waitAndClickImpl(selector, opts);\n     },\n@@ -1866,19 +1871,40 @@ function pagesFor(browser) {\n \n \n     aboutUserDialog: {\n-      clickSendMessage: function() {\n+      waitForLoaded: () => {\n+        api.waitUntilLoadingOverlayGone();\n+        api.waitForEnabled('.s_UD .e_CloseB');\n+        api.waitUntilDoesNotMove('.s_UD .e_CloseB');\n+      },\n+\n+      getUsername: (): string => {\n+        api.aboutUserDialog.waitForLoaded();\n+        return api.waitAndGetVisibleText('.s_UD_Un');\n+      },\n+\n+      close: () => {\n+        api.aboutUserDialog.waitForLoaded();\n+        api.waitAndClick('.s_UD .e_CloseB');\n+        browser.waitForGone('.s_UD');\n+        api.waitUntilModalGone();\n+      },\n+\n+      clickSendMessage: () => {\n+        api.aboutUserDialog.waitForLoaded();\n         api.rememberCurrentUrl();\n         api.waitAndClick('#e2eUD_MessageB');\n         api.waitForNewUrl();\n       },\n \n-      clickViewProfile: function() {\n+      clickViewProfile: () => {\n+        api.aboutUserDialog.waitForLoaded();\n         api.rememberCurrentUrl();\n         api.waitAndClick('#e2eUD_ProfileB');\n         api.waitForNewUrl();\n       },\n \n-      clickRemoveFromPage: function() {\n+      clickRemoveFromPage: () => {\n+        api.aboutUserDialog.waitForLoaded();\n         api.waitAndClick('#e2eUD_RemoveB');\n         // Later: browser.waitUntilModalGone();\n         // But for now:  [5FKE0WY2]"
    }
  ]
}
