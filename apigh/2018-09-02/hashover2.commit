{
  "sha": "f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
  "node_id": "MDY6Q29tbWl0MTgwOTYzMjI6ZjQ4MzhmNmVjMmNjNDVjOWNjZTZmNWVmZGIyZjAxNWZmMDg0MDU5Mg==",
  "commit": {
    "author": {
      "name": "jacobwb",
      "email": "jacobbarkdull@gmail.com",
      "date": "2018-08-30T03:11:33Z"
    },
    "committer": {
      "name": "jacobwb",
      "email": "jacobbarkdull@gmail.com",
      "date": "2018-08-30T03:11:33Z"
    },
    "message": "Added backend sorting & default sorting support",
    "tree": {
      "sha": "34807de6248444152a246b7393ff1b7170ea5ac3",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/git/trees/34807de6248444152a246b7393ff1b7170ea5ac3"
    },
    "url": "https://api.github.com/repos/jacobwb/hashover-next/git/commits/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
  "html_url": "https://github.com/jacobwb/hashover-next/commit/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
  "comments_url": "https://api.github.com/repos/jacobwb/hashover-next/commits/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/comments",
  "author": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c832ca1cfb49fe7d47cc23cc190f562709b73523",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/c832ca1cfb49fe7d47cc23cc190f562709b73523",
      "html_url": "https://github.com/jacobwb/hashover-next/commit/c832ca1cfb49fe7d47cc23cc190f562709b73523"
    }
  ],
  "stats": {
    "total": 517,
    "additions": 423,
    "deletions": 94
  },
  "files": [
    {
      "sha": "7d4e17acc619b026e83990ea736181ff9ff977a9",
      "filename": "hashover/admin/views/settings/index.php",
      "status": "modified",
      "additions": 24,
      "deletions": 2,
      "changes": 26,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/admin/views/settings/index.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/admin/views/settings/index.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/admin/views/settings/index.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -18,7 +18,7 @@\n \n \n // Generates an array of various settings information\n-function ui_array (Setup $setup)\n+function ui_array (Setup $setup, Locale $locale)\n {\n \t// Theme names\n \t$themes = array ();\n@@ -63,6 +63,28 @@ function ui_array (Setup $setup)\n \t\t\t'value' => $setup->theme,\n \t\t\t'options' => $themes\n \t\t),\n+\t\t'default-sorting' => array (\n+\t\t\t'type' => 'select',\n+\t\t\t'value' => $setup->defaultSorting,\n+\n+\t\t\t'options' => array (\n+\t\t\t\t'ascending'\t=> $locale->text['sort-ascending'],\n+\t\t\t\t'descending'\t=> $locale->text['sort-descending'],\n+\t\t\t\t'by-date'\t=> $locale->text['sort-by-date'],\n+\t\t\t\t'by-likes'\t=> $locale->text['sort-by-likes'],\n+\t\t\t\t'by-replies'\t=> $locale->text['sort-by-replies'],\n+\t\t\t\t'by-name'\t=> $locale->text['sort-by-name'],\n+\n+\t\t\t\t'sort-threads' => array (\n+\t\t\t\t\t'threaded-descending'\t=> $locale->text['sort-descending'],\n+\t\t\t\t\t'threaded-by-date'\t=> $locale->text['sort-by-date'],\n+\t\t\t\t\t'threaded-by-likes'\t=> $locale->text['sort-by-likes'],\n+\t\t\t\t\t'by-popularity'\t\t=> $locale->text['sort-by-popularity'],\n+\t\t\t\t\t'by-discussion'\t\t=> $locale->text['sort-by-discussion'],\n+\t\t\t\t\t'threaded-by-name'\t=> $locale->text['sort-by-name']\n+\t\t\t\t)\n+\t\t\t)\n+\t\t),\n \t\t'uses-moderation' => array (\n \t\t\t'type' => 'checkbox',\n \t\t\t'value' => $setup->usesModeration\n@@ -341,7 +363,7 @@ function ui_array (Setup $setup)\n \trequire (realpath ('../view-setup.php'));\n \n \t// Get array of UI elements to create\n-\t$ui = ui_array ($hashover->setup);\n+\t$ui = ui_array ($hashover->setup, $hashover->locale);\n \n \t// Check if the form has been submitted\n \tif (isset ($_POST['save'])) {"
    },
    {
      "sha": "a5808c4ffaab2fdbe6bdc24c7baea380e961a485",
      "filename": "hashover/backend/classes/formui.php",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/formui.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/formui.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/classes/formui.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -927,6 +927,11 @@ public function initialHTML ($hashover_wrapper = true)\n \t\t\t\t\t\t'innerHTML' => $html\n \t\t\t\t\t), false);\n \n+\t\t\t\t\t// Set option as selected if its the configured default\n+\t\t\t\t\tif ($value === $this->setup->defaultSorting) {\n+\t\t\t\t\t\t$option->createAttribute ('selected', 'selected');\n+\t\t\t\t\t}\n+\n \t\t\t\t\t// Add sort option element to sort dropdown menu\n \t\t\t\t\t$sort_select->appendChild ($option);\n \t\t\t\t}\n@@ -962,6 +967,11 @@ public function initialHTML ($hashover_wrapper = true)\n \t\t\t\t\t\t'innerHTML' => $html\n \t\t\t\t\t), false);\n \n+\t\t\t\t\t// Set option as selected if its the configured default\n+\t\t\t\t\tif ($value === $this->setup->defaultSorting) {\n+\t\t\t\t\t\t$option->createAttribute ('selected', 'selected');\n+\t\t\t\t\t}\n+\n \t\t\t\t\t// Add sort option element to threaded option group\n \t\t\t\t\t$threaded_optgroup->appendChild ($option);\n \t\t\t\t}"
    },
    {
      "sha": "cbff80e7cef6ca22d5ff0dd251607b21bf107c99",
      "filename": "hashover/backend/classes/hashover.php",
      "status": "modified",
      "additions": 305,
      "deletions": 37,
      "changes": 342,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/hashover.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/hashover.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/classes/hashover.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -117,21 +117,8 @@ public function initiate ()\n \t\t// Query a list of comments\n \t\t$this->thread->queryComments ();\n \n-\t\t// Where to stop reading comments\n-\t\tif ($this->usage['mode'] !== 'php'\n-\t\t    and $this->setup->collapsesComments !== false\n-\t\t    and $this->setup->popularityLimit <= 0\n-\t\t    and $this->setup->usesAjax !== false)\n-\t\t{\n-\t\t\t// Use collapse limit when collapsing and AJAX is enabled\n-\t\t\t$end = $this->setup->collapseLimit;\n-\t\t} else {\n-\t\t\t// Otherwise read all comments\n-\t\t\t$end = null;\n-\t\t}\n-\n-\t\t// TODO: Fix structure when using starting point\n-\t\t$this->rawComments = $this->thread->read (0, $end);\n+\t\t// Read all comments\n+\t\t$this->rawComments = $this->thread->read ();\n \n \t\t// Instantiate locales class\n \t\t$this->locale = new HashOver\\Locale ($this->setup);\n@@ -236,21 +223,6 @@ public function parsePrimary ()\n \t\t// Last existing comment date for sorting deleted comments\n \t\t$last_date = 0;\n \n-\t\t// Allowed comment count\n-\t\t$allowed_count = 0;\n-\n-\t\t// Where to stop reading comments\n-\t\tif ($this->usage['mode'] !== 'php'\n-\t\t    and $this->setup->collapsesComments !== false\n-\t\t    and $this->setup->usesAjax !== false)\n-\t\t{\n-\t\t\t// Use collapse limit when collapsing and AJAX is enabled\n-\t\t\t$end = $this->setup->collapseLimit;\n-\t\t} else {\n-\t\t\t// Otherwise read all comments\n-\t\t\t$end = null;\n-\t\t}\n-\n \t\t// Run all comments through parser\n \t\tforeach ($this->rawComments as $key => $comment) {\n \t\t\t// Split comment key by dash\n@@ -264,11 +236,6 @@ public function parsePrimary ()\n \t\t\t\t$this->checkPopularity ($comment, $key, $key_parts);\n \t\t\t}\n \n-\t\t\t// Stop parsing after end point\n-\t\t\tif ($end !== null and $allowed_count >= $end) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n \t\t\t// Check if the comment has two or more indention levels\n \t\t\tif ($indentions > 1 and $this->setup->streamDepth > 0) {\n \t\t\t\t// If so, set level to first array item reference\n@@ -360,8 +327,6 @@ public function parsePrimary ()\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n-\n-\t\t\t$allowed_count++;\n \t\t}\n \n \t\t// Reset array keys\n@@ -400,6 +365,309 @@ public function parsePopular ()\n \t\t}\n \t}\n \n+\t// Recursively descend into comment replies\n+\tprotected function replyDescender (array &$output, array $comment)\n+\t{\n+\t\t// Add the current comment to flattened output\n+\t\t$output[] =& $comment;\n+\n+\t\t// Check if comment has replies\n+\t\tif (!empty ($comment['replies'])) {\n+\t\t\t// If so, descend into the replies\n+\t\t\tfor ($i = 0, $il = count ($comment['replies']); $i < $il; $i++) {\n+\t\t\t\t$this->replyDescender ($output, $comment['replies'][$i]);\n+\t\t\t}\n+\n+\t\t\t// And remove replies from flattened output\n+\t\t\tunset ($comment['replies']);\n+\t\t}\n+\t}\n+\n+\t// \"Flatten\" an array of comments\n+\tprotected function getAllComments (array $comments)\n+\t{\n+\t\t// Initial flattened comments\n+\t\t$output = array ();\n+\n+\t\t// Initial descent into comments\n+\t\tfor ($i = 0, $il = count ($comments); $i < $il; $i++) {\n+\t\t\t$this->replyDescender ($output, $comments[$i]);\n+\t\t}\n+\n+\t\t// Return flattened comments\n+\t\treturn $output;\n+\t}\n+\n+\t// Sorts comments by date\n+\tprotected function sortByDate (array $a, array $b)\n+\t{\n+\t\t// Return microtime difference if dates are different\n+\t\tif ($b['sort-date'] !== $a['sort-date']) {\n+\t\t\treturn $b['sort-date'] - $a['sort-date'];\n+\t\t}\n+\n+\t\t// Otherwise, return 1\n+\t\treturn 1;\n+\t}\n+\n+\t// Returns a comment's number of likes minus dislikes\n+\tprotected function netLikes (array $comment)\n+\t{\n+\t\t// Number of likes or zero\n+\t\t$likes = !empty ($comment['likes']) ? $comment['likes'] : 0;\n+\n+\t\t// Number of dislikes or zero\n+\t\t$dislikes = !empty ($comment['dislikes']) ? $comment['dislikes'] : 0;\n+\n+\t\t// Return the difference\n+\t\treturn $likes - $dislikes;\n+\t}\n+\n+\t// Returns a comment's number of replies\n+\tprotected function replyCounter (array $comment)\n+\t{\n+\t\treturn !empty ($comment['replies']) ? count ($comment['replies']) : 0;\n+\t}\n+\n+\t// Returns the sum number of replies in a comment thread\n+\tprotected function replySum (array $comment, $callback)\n+\t{\n+\t\t// Initial sum\n+\t\t$sum = 0;\n+\n+\t\t// Check if there are replies to the current comment\n+\t\tif (!empty ($comment['replies'])) {\n+\t\t\t// If so, run through them adding up the number of replies\n+\t\t\tfor ($i = 0, $il = count ($comment['replies']); $i < $il; $i++) {\n+\t\t\t\t$sum += $this->replySum ($comment['replies'][$i], $callback);\n+\t\t\t}\n+\t\t}\n+\n+\t\t// Calculate the sum based on the give callback\n+\t\t$sum += $callback ($comment);\n+\n+\t\treturn $sum;\n+\t}\n+\n+\t// Sorts comments alphabetically by commenters names\n+\tprotected function sortByCommenter (array $a, array $b)\n+\t{\n+\t\t// Commenter name or default name\n+\t\t$name_a = !empty ($a['name']) ? $a['name'] : $this->setup->defaultName;\n+\t\t$name_b = !empty ($b['name']) ? $b['name'] : $this->setup->defaultName;\n+\n+\t\t// Remove @ character if present\n+\t\t$name_a = ($name_a[0] === '@') ? substr ($name_a, 1) : $name_a;\n+\t\t$name_b = ($name_b[0] === '@') ? substr ($name_b, 1) : $name_b;\n+\n+\t\t// Convert names to lowercase\n+\t\t$name_a = mb_strtolower ($name_a);\n+\t\t$name_b = mb_strtolower ($name_b);\n+\n+\t\t// Return 1 or -1 based on lexicographical difference\n+\t\tif ($name_a !== $name_b) {\n+\t\t\treturn ($name_a > $name_b) ? 1 : -1;\n+\t\t}\n+\n+\t\t// Sort by permalink when the names are the same\n+\t\treturn ($a['permalink'] > $b['permalink']);\n+\t}\n+\n+\t// Sort any given comments\n+\tpublic function sortComments (array $comments, $method = false)\n+\t{\n+\t\t// Sort method or default\n+\t\t$method = $method ?: $this->setup->defaultSorting;\n+\n+\t\t// Decide how to sort the comments\n+\t\tswitch ($method) {\n+\t\t\t// Sort all comments in reverse order\n+\t\t\tcase 'descending': {\n+\t\t\t\t// Get all comments\n+\t\t\t\t$sort_array = $this->getAllComments ($comments);\n+\n+\t\t\t\t// And return reversed comments\n+\t\t\t\treturn array_reverse ($sort_array);\n+\t\t\t}\n+\n+\t\t\t// Sort all comments by date\n+\t\t\tcase 'by-date': {\n+\t\t\t\t// Get all comments\n+\t\t\t\t$sort_array = $this->getAllComments ($comments);\n+\n+\t\t\t\t// Sort comments by date\n+\t\t\t\tusort ($sort_array, 'self::sortByDate');\n+\n+\t\t\t\t// And return comments sorted by date\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort all comments by net number of likes\n+\t\t\tcase 'by-likes': {\n+\t\t\t\t// Get all comments\n+\t\t\t\t$sort_array = $this->getAllComments ($comments);\n+\n+\t\t\t\t// Sort comments by net likes\n+\t\t\t\tusort ($sort_array, function (array $a, array $b) {\n+\t\t\t\t\treturn $this->netLikes ($b) - $this->netLikes ($a);\n+\t\t\t\t});\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort all comment by number of replies\n+\t\t\tcase 'by-replies': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort comments by number of replies\n+\t\t\t\tusort ($sort_array, function (array $a, array $b) {\n+\t\t\t\t\treturn $this->replyCounter ($b) - $this->replyCounter ($a);\n+\t\t\t\t});\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort threads by the sum of replies to its comments\n+\t\t\tcase 'by-discussion': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort comments by the sum of each comment's replies\n+\t\t\t\tusort ($sort_array, function (array $a, array $b) {\n+\t\t\t\t\t$reply_count_a = $this->replySum ($a, array ($this, 'replyCounter'));\n+\t\t\t\t\t$reply_count_b = $this->replySum ($b, array ($this, 'replyCounter'));\n+\n+\t\t\t\t\treturn $reply_count_b - $reply_count_a;\n+\t\t\t\t});\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort threads by the sum of likes to it's comments\n+\t\t\tcase 'by-popularity': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort comments by the sum of each comment's net likes\n+\t\t\t\tusort ($sort_array, function (array $a, array $b) {\n+\t\t\t\t\t$like_count_a = $this->replySum ($a, array ($this, 'netLikes'));\n+\t\t\t\t\t$like_count_b = $this->replySum ($b, array ($this, 'netLikes'));\n+\n+\t\t\t\t\treturn $like_count_b - $like_count_a;\n+\t\t\t\t});\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort all comments by the commenter names\n+\t\t\tcase 'by-name': {\n+\t\t\t\t// Get all comments\n+\t\t\t\t$sort_array = $this->getAllComments ($comments);\n+\n+\t\t\t\t// Sort comments by the commenter names\n+\t\t\t\tusort ($sort_array, 'self::sortByCommenter');\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort threads in reverse order\n+\t\t\tcase 'threaded-descending': {\n+\t\t\t\treturn array_reverse ($comments);\n+\t\t\t}\n+\n+\t\t\t// Sort threads by date\n+\t\t\tcase 'threaded-by-date': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort threads by date\n+\t\t\t\tusort ($sort_array, 'self::sortByDate');\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort threads by net likes\n+\t\t\tcase 'threaded-by-likes': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort threads by not likes\n+\t\t\t\tusort ($sort_array, function ($a, $b) {\n+\t\t\t\t\treturn $this->netLikes ($b) - $this->netLikes ($a);\n+\t\t\t\t});\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\n+\t\t\t// Sort threads by commenter names\n+\t\t\tcase 'threaded-by-name': {\n+\t\t\t\t// Copy the comments\n+\t\t\t\t$sort_array = $comments;\n+\n+\t\t\t\t// Sort threads by commenter names\n+\t\t\t\tusort ($sort_array, 'self::sortByCommenter');\n+\n+\t\t\t\t// And return sorted comments\n+\t\t\t\treturn $sort_array;\n+\t\t\t}\n+\t\t}\n+\n+\t\t// By default simply return the comments as-is\n+\t\treturn $comments;\n+\t}\n+\n+\t// Sort primary comments\n+\tpublic function sortPrimary ($method = false)\n+\t{\n+\t\t// Sort the primary comments\n+\t\t$sorted = $this->sortComments ($this->comments['primary'], $method);\n+\n+\t\t// Update comments\n+\t\t$this->comments['primary'] = $sorted;\n+\t}\n+\n+\t// Collapse a given comment array\n+\tprotected function commentCollapser (array &$comments)\n+\t{\n+\t\t// Trim comments to collapse limit\n+\t\t$comments = array_slice ($comments, 0, $this->setup->collapseLimit);\n+\n+\t\t// Run through remaining comments\n+\t\tfor ($i = 0, $il = count ($comments); $i < $il; $i++) {\n+\t\t\t// Check if we have reached collapse limit\n+\t\t\tif ($this->collapseCount >= $this->setup->collapseLimit) {\n+\t\t\t\t// If so, remove the comment\n+\t\t\t\tunset ($comments[$i]);\n+\t\t\t} else {\n+\t\t\t\t// If not, increase the collapse count\n+\t\t\t\t$this->collapseCount++;\n+\t\t\t}\n+\n+\t\t\t// Collapse replies if comment has replies\n+\t\t\tif (!empty ($comments[$i]['replies'])) {\n+\t\t\t\t$this->commentCollapser ($comments[$i]['replies']);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t// Returns limited number of comments\n+\tpublic function collapseComments ()\n+\t{\n+\t\t// Numbers of comments added to output\n+\t\t$this->collapseCount = 0;\n+\n+\t\t// Collapse the comments\n+\t\t$this->commentCollapser ($this->comments['primary']);\n+\t}\n+\n \t// Do final initialization work\n \tpublic function finalize ()\n \t{"
    },
    {
      "sha": "87907980736cdcb376a9bf79cf07ce824717b1ee",
      "filename": "hashover/backend/classes/safesettings.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/safesettings.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/classes/safesettings.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/classes/safesettings.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -36,6 +36,7 @@ class SafeSettings\n \tpublic $allowsDislikes\t\t= false;\t\t\t// Whether a \"Dislike\" link is displayed; allowing Reddit-style voting\n \tpublic $usesAjax\t\t= true;\t\t\t\t// Whether AJAX is used for posting, editing, and loading comments\n \tpublic $collapsesInterface\t= false;\t\t\t// Whether the comment form, thread, and end links are all initially hidden\n+\tpublic $defaultSorting\t\t= 'ascending';\t\t\t// Default way comments are sorted\n \tpublic $collapsesComments\t= true;\t\t\t\t// Whether to hide comments and display a link to show them\n \tpublic $collapseLimit\t\t= 3;\t\t\t\t// Number of comments that aren't hidden\n \tpublic $replyMode\t\t= 'thread';\t\t\t// Whether to display replies as a 'thread' or as a 'stream'"
    },
    {
      "sha": "2f1b7ab0d8131bacd14a13a04e66537545d12b7f",
      "filename": "hashover/backend/comments-ajax.php",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/comments-ajax.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/comments-ajax.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/comments-ajax.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -48,6 +48,17 @@\n \t// Page, setup, and comment data array\n \t$data = array ();\n \n+\t// Check if backend sorting and collapsing is enabled\n+\tif ($hashover->setup->collapsesComments === true\n+\t    and $hashover->setup->usesAjax === true)\n+\t{\n+\t\t// If so, sort the comments first\n+\t\t$hashover->sortPrimary ();\n+\n+\t\t// Then collapse the comments\n+\t\t$hashover->collapseComments ();\n+\t}\n+\n \t// Check if we're preparing HashOver\n \tif ($hashover->setup->getRequest ('prepare') !== false) {\n \t\t// Set/update default page metadata\n@@ -93,6 +104,7 @@\n \t\t$data['setup'] = array (\n \t\t\t'server-eol'\t\t=> PHP_EOL,\n \t\t\t'collapse-limit'\t=> $hashover->setup->collapseLimit,\n+\t\t\t'default-sorting'\t=> $hashover->setup->defaultSorting,\n \t\t\t'default-name'\t\t=> $hashover->setup->defaultName,\n \t\t\t'user-is-logged-in'\t=> $hashover->login->userIsLoggedIn,\n \t\t\t'user-is-admin'\t\t=> $hashover->login->userIsAdmin,"
    },
    {
      "sha": "98e8ac8a1722f15791f0e14370a401213c5a88bb",
      "filename": "hashover/backend/locales/da.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/da.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/da.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/da.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Sprog',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Standard kommentar sorteringsrækkefølge',\n \t'setting-uses-moderation'\t\t=> 'Kommentarer indsendt af normale brugere kræver moderering',\n \t'setting-pends-user-edits'\t\t=> 'Kommentarer redigeret af normale brugere kræver moderering',\n \t'setting-data-format'\t\t\t=> 'Kommentar dataformat',"
    },
    {
      "sha": "9ef92e99357a546d0edc2364010c7eee2bd245cd",
      "filename": "hashover/backend/locales/de.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/de.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/de.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/de.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Sprache',\n \t'setting-theme'\t\t\t\t=> 'Thema',\n+\t'setting-default-sorting'\t\t=> 'Standardsortierfolge für Kommentare',\n \t'setting-uses-moderation'\t\t=> 'Kommentare von normalen Benutzern erfordern Moderation',\n \t'setting-pends-user-edits'\t\t=> 'Bearbeitete Kommentare von normalen Benutzern erfordern eine Moderation',\n \t'setting-data-format'\t\t\t=> 'Kommentar Datenformat',"
    },
    {
      "sha": "d68ee7606acf64f3cc5f8800ab5b1f3cde8e1397",
      "filename": "hashover/backend/locales/el.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/el.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/el.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/el.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Γλώσσα',\n \t'setting-theme'\t\t\t\t=> 'Θέμα',\n+\t'setting-default-sorting'\t\t=> 'Προκαθορισμένη σειρά ταξινόμησης σχολίων',\n \t'setting-uses-moderation'\t\t=> 'Τα σχόλια από απλούς χρήστες απαιτούν έγκριση',\n \t'setting-pends-user-edits'\t\t=> 'Τα επεξεργασμένα σχόλια από απλούς χρήστες απαιτούν έγκριση',\n \t'setting-data-format'\t\t\t=> 'Τύπος δεδομένων σχολίων',"
    },
    {
      "sha": "9576430235fa8fd22fec65d01b71004a86585a3a",
      "filename": "hashover/backend/locales/en.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/en.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/en.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/en.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Language',\n \t'setting-theme'\t\t\t\t=> 'Theme',\n+\t'setting-default-sorting'\t\t=> 'Default comment sorting order',\n \t'setting-uses-moderation'\t\t=> 'Comments posted by normal users require moderation',\n \t'setting-pends-user-edits'\t\t=> 'Comments edited by normal users require moderation',\n \t'setting-data-format'\t\t\t=> 'Comment data format',"
    },
    {
      "sha": "85a5acdb2e1808a4dec3703fb4f51192475d7610",
      "filename": "hashover/backend/locales/es.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/es.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/es.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/es.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Idioma',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Orden de clasificación de comentarios predeterminada',\n \t'setting-uses-moderation'\t\t=> 'Los comentarios publicados por usuarios normales requieren moderación',\n \t'setting-pends-user-edits'\t\t=> 'Los comentarios editados por usuarios normales requieren moderación',\n \t'setting-data-format'\t\t\t=> 'Formato de datos de comentarios',"
    },
    {
      "sha": "1d4d310b9f1e04e43f4d915c72fa15603ab5a8ca",
      "filename": "hashover/backend/locales/fa.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/fa.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/fa.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/fa.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'زبان',\n \t'setting-theme'\t\t\t\t=> 'تم',\n+\t'setting-default-sorting'\t\t=> 'نظم مرتب سازی پیشفرض پیش فرض',\n \t'setting-uses-moderation'\t\t=> 'نظرات ارسال شده توسط کاربران عادی نیاز به نظارت دارند',\n \t'setting-pends-user-edits'\t\t=> 'نظرات ویرایش شده توسط کاربران عادی نیاز به نظارت دارند',\n \t'setting-data-format'\t\t\t=> 'فرمت داده اظهار نظر',"
    },
    {
      "sha": "7988f9f128a90aaf3bcbd9cb8f128422a4c3aad2",
      "filename": "hashover/backend/locales/fr.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/fr.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/fr.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/fr.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -167,6 +167,7 @@\n \n \t'setting-language'\t\t\t=> 'Langue',\n \t'setting-theme'\t\t\t\t=> 'Thème',\n+\t'setting-default-sorting'\t\t=> 'Ordre de tri des commentaires par défaut',\n \t'setting-uses-moderation'\t\t=> 'Les commentaires postés par les utilisateurs normaux nécessitent une modération',\n \t'setting-pends-user-edits'\t\t=> 'Les commentaires édités par des utilisateurs normaux nécessitent une modération',\n \t'setting-data-format'\t\t\t=> 'Format des données de commentaire',"
    },
    {
      "sha": "814eeed18c8cb0d8e20b21470beae11f1a88dead",
      "filename": "hashover/backend/locales/jp.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/jp.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/jp.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/jp.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> '言語',\n \t'setting-theme'\t\t\t\t=> 'テーマ',\n+\t'setting-default-sorting'\t\t=> 'デフォルトのコメント並べ替え順',\n \t'setting-uses-moderation'\t\t=> '普通のユーザーが投稿したコメントは管理が必要です',\n \t'setting-pends-user-edits'\t\t=> '通常のユーザーが編集したコメントは管理が必要です',\n \t'setting-data-format'\t\t\t=> 'コメントデータフォーマット',"
    },
    {
      "sha": "6947c03c1e3f758206908b6bacc7e9ae9462c64e",
      "filename": "hashover/backend/locales/ko.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/ko.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/ko.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/ko.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> '언어',\n \t'setting-theme'\t\t\t\t=> '테마',\n+\t'setting-default-sorting'\t\t=> '기본 댓글 정렬 순서',\n \t'setting-uses-moderation'\t\t=> '최종 사용자가 게시 한 댓글의는 검토가 필요합니다',\n \t'setting-pends-user-edits'\t\t=> '일반 사용자가 편집 한 댓글에는 검토가 필요합니다',\n \t'setting-data-format'\t\t\t=> '설명 데이터 형식',"
    },
    {
      "sha": "9ae25af0b40528b76eabe514907f884307a7afd8",
      "filename": "hashover/backend/locales/lt.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/lt.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/lt.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/lt.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -169,6 +169,7 @@\n \n \t'setting-language'\t\t\t=> 'Kalba',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Numatytoji komentarų rūšiavimo tvarka',\n \t'setting-uses-moderation'\t\t=> 'Įprastų vartotojų paskelbtiems komentarai reikalauja moderacijos',\n \t'setting-pends-user-edits'\t\t=> 'Norint įprastus naudotojus redaguoti komentarai reikalauja moderacijos',\n \t'setting-data-format'\t\t\t=> 'Komentarų duomenų formatas',"
    },
    {
      "sha": "ea2849e298d6877b296fd825716ef232aa2a86dd",
      "filename": "hashover/backend/locales/nl.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/nl.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/nl.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/nl.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Taal',\n \t'setting-theme'\t\t\t\t=> 'Thema',\n+\t'setting-default-sorting'\t\t=> 'Standaard sorteervolgorde voor reacties',\n \t'setting-uses-moderation'\t\t=> 'Opmerkingen geplaatst door normale gebruikers vereisen moderatie',\n \t'setting-pends-user-edits'\t\t=> 'Opmerkingen bewerkt door normale gebruikers vereisen moderatie',\n \t'setting-data-format'\t\t\t=> 'Gegevensindeling van de gegevens',"
    },
    {
      "sha": "4a137d8e7a6032bdfe03bb4bcdda0abab2c85210",
      "filename": "hashover/backend/locales/pl.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/pl.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/pl.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/pl.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Język',\n \t'setting-theme'\t\t\t\t=> 'Temat',\n+\t'setting-default-sorting'\t\t=> 'Domyślna kolejność sortowania komentarzy',\n \t'setting-uses-moderation'\t\t=> 'Komentarze publikowane przez zwykłych użytkowników wymagają moderacji',\n \t'setting-pends-user-edits'\t\t=> 'Komentarze edytowane przez zwykłych użytkowników wymagają moderacji',\n \t'setting-data-format'\t\t\t=> 'Format danych komentarzy',"
    },
    {
      "sha": "365403c17143e2b341309503054436cc5ef75a08",
      "filename": "hashover/backend/locales/pt-br.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/pt-br.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/pt-br.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/pt-br.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Língua',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Ordem de classificação de comentário padrão',\n \t'setting-uses-moderation'\t\t=> 'Os comentários postados por usuários normais requerem moderação',\n \t'setting-pends-user-edits'\t\t=> 'Os comentários editados por usuários normais requerem moderação',\n \t'setting-data-format'\t\t\t=> 'Formato de dados de comentários',"
    },
    {
      "sha": "14c6b30ce73bf4203557819805214d4f22ba80d1",
      "filename": "hashover/backend/locales/ro.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/ro.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/ro.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/ro.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Limba',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Ordinea de sortare a comentariilor implicite',\n \t'setting-uses-moderation'\t\t=> 'Comentarii postate de utilizatori normali necesită moderare',\n \t'setting-pends-user-edits'\t\t=> 'Comentariile editate de utilizatorii normali necesită moderare',\n \t'setting-data-format'\t\t\t=> 'Format de date pentru comentarii',"
    },
    {
      "sha": "69c0daf3e1f80e0a6bab9e91d76fc08867bcf8e1",
      "filename": "hashover/backend/locales/tr.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/tr.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/tr.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/tr.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> 'Dil',\n \t'setting-theme'\t\t\t\t=> 'Tema',\n+\t'setting-default-sorting'\t\t=> 'Varsayılan yorum sıralama sırası',\n \t'setting-uses-moderation'\t\t=> 'Normal kullanıcılar tarafından gönderilen yorumlar ılımlılık gerektirir',\n \t'setting-pends-user-edits'\t\t=> 'Normal kullanıcılar tarafından düzenlendi yorumlar ılımlılık gerektirir',\n \t'setting-data-format'\t\t\t=> 'Yorum veri formatı',"
    },
    {
      "sha": "2b3187198fbdcbe5343e4d0a47d7d928bed85205",
      "filename": "hashover/backend/locales/zh-cn.php",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/zh-cn.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/backend/locales/zh-cn.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/backend/locales/zh-cn.php?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -160,6 +160,7 @@\n \n \t'setting-language'\t\t\t=> '语言',\n \t'setting-theme'\t\t\t\t=> '主题',\n+\t'setting-default-sorting'\t\t=> '默认评论排序顺序',\n \t'setting-uses-moderation'\t\t=> '普通用户发布的评论需要审核',\n \t'setting-pends-user-edits'\t\t=> '普通用户编辑的评论需要审核',\n \t'setting-data-format'\t\t\t=> '评论数据格式',"
    },
    {
      "sha": "60729a4c338ab0edcd38151e7ea64acc530317bd",
      "filename": "hashover/frontend/init.js",
      "status": "modified",
      "additions": 13,
      "deletions": 7,
      "changes": 20,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/frontend/init.js",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/frontend/init.js",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/frontend/init.js?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -134,8 +134,16 @@ HashOver.prototype.init = function ()\n \t\t}\n \t});\n \n-\t// Add initial event handlers\n-\tthis.parseAll (this.instance.comments.primary, sortSection, this.setup['collapses-comments']);\n+\t// Initial comments\n+\tvar comments = this.instance.comments.primary;\n+\n+\t// Sort the initial comments if they weren't sorted on the backend\n+\tif (this.setup['collapses-comments'] === false || this.setup['uses-ajax'] === false) {\n+\t\tcomments = this.sortComments (comments);\n+\t}\n+\n+\t// Parse all of the initial comments\n+\tthis.parseAll (comments, sortSection, this.setup['collapses-comments']);\n \n \t// Create uncollapse UI hyperlink if enabled\n \tthis.optionalMethod ('uncollapseInterfaceLink');\n@@ -180,13 +188,11 @@ HashOver.prototype.init = function ()\n \n \t\t\t\t// And uncollapse the comments before sorting\n \t\t\t\thashover.showMoreComments (sortSelectDiv, function () {\n-\t\t\t\t\thashover.instance['sort-section'].textContent = '';\n-\t\t\t\t\thashover.sortComments (sortSelect.value);\n+\t\t\t\t\thashover.sortPrimary (sortSelect.value);\n \t\t\t\t}, false);\n \t\t\t} else {\n-\t\t\t\t// If not, sort the comments normally\n-\t\t\t\thashover.instance['sort-section'].textContent = '';\n-\t\t\t\thashover.sortComments (sortSelect.value);\n+\t\t\t\t// If not, sort comments immediately\n+\t\t\t\thashover.sortPrimary (sortSelect.value);\n \t\t\t}\n \t\t};\n \t});"
    },
    {
      "sha": "6cee20b16b7c26714e8817fed696bd5ac628d804",
      "filename": "hashover/frontend/sortcomments.js",
      "status": "modified",
      "additions": 42,
      "deletions": 48,
      "changes": 90,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/frontend/sortcomments.js",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/f4838f6ec2cc45c9cce6f5efdb2f015ff0840592/hashover/frontend/sortcomments.js",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/hashover/frontend/sortcomments.js?ref=f4838f6ec2cc45c9cce6f5efdb2f015ff0840592",
      "patch": "@@ -1,8 +1,8 @@\n // Sort any given comments (sortcomments.js)\n-HashOver.prototype.sortComments = function (method)\n+HashOver.prototype.sortComments = function (comments, method)\n {\n-\t// Initial sorted comments array\n-\tvar sortArray = [];\n+\t// Sort method or default\n+\tmethod = method || this.setup['default-sorting'];\n \n \t// Configurable default name\n \tvar defaultName = this.setup['default-name'];\n@@ -83,141 +83,135 @@ HashOver.prototype.sortComments = function (method)\n \t\t// Sort all comments in reverse order\n \t\tcase 'descending': {\n \t\t\t// Get all comments\n-\t\t\tvar tmpArray = this.getAllComments (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.getAllComments (comments);\n \n \t\t\t// And return reversed comments\n-\t\t\tsortArray = tmpArray.reverse ();\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.reverse ();\n \t\t}\n \n \t\t// Sort all comments by date\n \t\tcase 'by-date': {\n \t\t\t// Get all comments\n-\t\t\tvar tmpArray = this.getAllComments (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.getAllComments (comments);\n \n \t\t\t// And return comments sorted by date\n-\t\t\tsortArray = tmpArray.sort (sortByDate);\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.sort (sortByDate);\n \t\t}\n \n \t\t// Sort all comments by net number of likes\n \t\tcase 'by-likes': {\n \t\t\t// Get all comments\n-\t\t\tvar tmpArray = this.getAllComments (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.getAllComments (comments);\n \n \t\t\t// And return sorted comments\n-\t\t\tsortArray = tmpArray.sort (function (a, b) {\n+\t\t\treturn sortArray.sort (function (a, b) {\n \t\t\t\treturn netLikes (b) - netLikes (a);\n \t\t\t});\n-\n-\t\t\tbreak;\n \t\t}\n \n \t\t// Sort all comments by number of replies\n \t\tcase 'by-replies': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by number of replies\n-\t\t\tsortArray = tmpArray.sort (function (a, b) {\n+\t\t\treturn sortArray.sort (function (a, b) {\n \t\t\t\treturn replyCounter (b) - replyCounter (a);\n \t\t\t});\n-\n-\t\t\tbreak;\n \t\t}\n \n \t\t// Sort threads by the sum of replies to its comments\n \t\tcase 'by-discussion': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by the sum of each comment's replies\n-\t\t\tsortArray = tmpArray.sort (function (a, b) {\n+\t\t\treturn sortArray.sort (function (a, b) {\n \t\t\t\tvar replyCountA = replySum (a, replyCounter);\n \t\t\t\tvar replyCountB = replySum (b, replyCounter);\n \n \t\t\t\treturn replyCountB - replyCountA;\n \t\t\t});\n-\n-\t\t\tbreak;\n \t\t}\n \n \t\t// Sort threads by the sum of likes to it's comments\n \t\tcase 'by-popularity': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by the sum of each comment's net likes\n-\t\t\tsortArray = tmpArray.sort (function (a, b) {\n+\t\t\treturn sortArray.sort (function (a, b) {\n \t\t\t\tvar likeCountA = replySum (a, netLikes);\n \t\t\t\tvar likeCountB = replySum (b, netLikes);\n \n \t\t\t\treturn likeCountB - likeCountA;\n \t\t\t});\n-\n-\t\t\tbreak;\n \t\t}\n \n \t\t// Sort all comments by the commenter names\n \t\tcase 'by-name': {\n \t\t\t// Get all comments\n-\t\t\tvar tmpArray = this.getAllComments (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.getAllComments (comments);\n \n \t\t\t// And return comments sorted by the commenter names\n-\t\t\tsortArray = tmpArray.sort (sortByCommenter);\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.sort (sortByCommenter);\n \t\t}\n \n \t\t// Sort threads in reverse order\n \t\tcase 'threaded-descending': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return reversed comments\n-\t\t\tsortArray = tmpArray.reverse ();\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.reverse ();\n \t\t}\n \n \t\t// Sort threads by date\n \t\tcase 'threaded-by-date': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by date\n-\t\t\tsortArray = tmpArray.sort (sortByDate);\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.sort (sortByDate);\n \t\t}\n \n \t\t// Sort threads by net likes\n \t\tcase 'threaded-by-likes': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by the net number of likes\n-\t\t\tsortArray = tmpArray.sort (function (a, b) {\n+\t\t\treturn sortArray.sort (function (a, b) {\n \t\t\t\treturn netLikes (b) - netLikes (a);\n \t\t\t});\n-\n-\t\t\tbreak;\n \t\t}\n \n \t\t// Sort threads by commenter names\n \t\tcase 'threaded-by-name': {\n \t\t\t// Clone the comments\n-\t\t\tvar tmpArray = this.cloneObject (this.instance.comments.primary);\n+\t\t\tvar sortArray = this.cloneObject (comments);\n \n \t\t\t// And return comments sorted by the commenter names\n-\t\t\tsortArray = tmpArray.sort (sortByCommenter);\n-\n-\t\t\tbreak;\n+\t\t\treturn sortArray.sort (sortByCommenter);\n \t\t}\n \t}\n \n+\t// By default simply return the comments as-is\n+\treturn comments;\n+};\n+\n+// Sort primary comments (sortcomments.js)\n+HashOver.prototype.sortPrimary = function (method)\n+{\n+\t// Sorted comment destination\n+\tvar dest = this.instance['sort-section'];\n+\n+\t// Sort the primary comments\n+\tvar sorted = this.sortComments (this.instance.comments.primary, method);\n+\n+\t// Remove all content at the destination\n+\tdest.textContent = '';\n+\n \t// Parse the sorted comments\n-\tthis.parseAll (sortArray, this.instance['sort-section']);\n+\tthis.parseAll (sorted, dest);\n };"
    }
  ]
}
