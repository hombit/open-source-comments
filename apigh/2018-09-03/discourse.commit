{
  "sha": "ecf60c0c33a8bfd391f37f931f5430b0617a9cb1",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplY2Y2MGMwYzMzYThiZmQzOTFmMzdmOTMxZjU0MzBiMDYxN2E5Y2Ix",
  "commit": {
    "author": {
      "name": "Guo Xiang Tan",
      "email": "tgx_world@hotmail.com",
      "date": "2018-09-03T06:48:56Z"
    },
    "committer": {
      "name": "Guo Xiang Tan",
      "email": "tgx_world@hotmail.com",
      "date": "2018-09-03T06:52:15Z"
    },
    "message": "DEV: More attempts at stablizing specs in Travis.\n\nRe-enable skipped test because it doesn't fail locally\nfor me to debug it.",
    "tree": {
      "sha": "0c524961a685eabfa9e7f274c7c691506574e3f7",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/0c524961a685eabfa9e7f274c7c691506574e3f7"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1",
  "html_url": "https://github.com/discourse/discourse/commit/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1/comments",
  "author": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "tgxworld",
    "id": 4335742,
    "node_id": "MDQ6VXNlcjQzMzU3NDI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4335742?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tgxworld",
    "html_url": "https://github.com/tgxworld",
    "followers_url": "https://api.github.com/users/tgxworld/followers",
    "following_url": "https://api.github.com/users/tgxworld/following{/other_user}",
    "gists_url": "https://api.github.com/users/tgxworld/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tgxworld/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tgxworld/subscriptions",
    "organizations_url": "https://api.github.com/users/tgxworld/orgs",
    "repos_url": "https://api.github.com/users/tgxworld/repos",
    "events_url": "https://api.github.com/users/tgxworld/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tgxworld/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f33433bf9e0c1b57c5862d8e5c7ae28579b5bd3b",
      "url": "https://api.github.com/repos/discourse/discourse/commits/f33433bf9e0c1b57c5862d8e5c7ae28579b5bd3b",
      "html_url": "https://github.com/discourse/discourse/commit/f33433bf9e0c1b57c5862d8e5c7ae28579b5bd3b"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 7,
    "deletions": 16
  },
  "files": [
    {
      "sha": "c207a6ba141bbef7b19c31c3a88ac050cd545598",
      "filename": "spec/components/active_record/connection_adapters/postgresql_fallback_adapter_spec.rb",
      "status": "modified",
      "additions": 7,
      "deletions": 16,
      "changes": 23,
      "blob_url": "https://github.com/discourse/discourse/blob/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1/spec/components/active_record/connection_adapters/postgresql_fallback_adapter_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ecf60c0c33a8bfd391f37f931f5430b0617a9cb1/spec/components/active_record/connection_adapters/postgresql_fallback_adapter_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/active_record/connection_adapters/postgresql_fallback_adapter_spec.rb?ref=ecf60c0c33a8bfd391f37f931f5430b0617a9cb1",
      "patch": "@@ -40,14 +40,7 @@\n     postgresql_fallback_handler.setup!\n     Discourse.disable_readonly_mode(Discourse::PG_READONLY_MODE_KEY)\n     ActiveRecord::Base.unstub(:postgresql_connection)\n-\n-    (Thread.list - @threads).each do |thread|\n-      unless thread.join(5)\n-        puts Thread.list - @threads\n-        raise \"Threads still running\"\n-      end\n-    end\n-\n+    (Thread.list - @threads).each(&:kill)\n     ActiveRecord::Base.establish_connection\n   end\n \n@@ -80,11 +73,6 @@\n       end\n \n       it 'should failover to a replica server' do\n-        # erratically fails with: ActiveRecord::ConnectionTimeoutError:\n-        # could not obtain a connection from the pool within 5.000 seconds (waited 5.000 seconds); all pooled connections were in use\n-        #\n-        skip(\"This test is failing erratically\")\n-\n         RailsMultisite::ConnectionManagement.stubs(:all_dbs).returns(['default', multisite_db])\n         postgresql_fallback_handler.expects(:verify_master).at_least(3)\n \n@@ -178,8 +166,11 @@\n   end\n \n   def with_multisite_db(dbname)\n-    RailsMultisite::ConnectionManagement.expects(:current_db).returns(dbname).at_least_once\n-    yield\n-    RailsMultisite::ConnectionManagement.unstub(:current_db)\n+    begin\n+      RailsMultisite::ConnectionManagement.expects(:current_db).returns(dbname).at_least_once\n+      yield\n+    ensure\n+      RailsMultisite::ConnectionManagement.unstub(:current_db)\n+    end\n   end\n end"
    }
  ]
}
