{
  "sha": "17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxNzA4N2VmZjJhMGMwMmI4MTA4Y2NlZTBmNmFmNDJlZDVhZDYxMDBl",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2018-09-05T15:18:52Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2018-09-05T15:18:52Z"
    },
    "message": "FIX: Reset tags on category change (#6363)",
    "tree": {
      "sha": "ca8b9e7e482a8eb98008d171dc661b22dc2727e1",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/ca8b9e7e482a8eb98008d171dc661b22dc2727e1"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
    "comment_count": 1,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbj/PcCRBK7hj4Ov3rIwAAdHIIAA6YMCfQKq/cmVJdpah2zsVZ\nZPQZoYoTE6wad7BI1yPbQ8YNDcRjwM51jqYvhCkoQ4Z+cDwAKvePJJSe7F+zr+Qx\nfbf2fQSZkhU6rzHR7A91DGKPUmYYFsYBexeOh39fjRpqcnGN8uD4qMSCvN+ruNt5\nX8WB9CP3hDpYirElHE2vDglt9bhMGC3G6lfBgujbMMSXUfZiUZTm2kHwlApcetY9\nOCCw4Kk+b6q8kD4ew1TueMKG2dBvs7/hD5XP+wyZDHCbUwIdAFoiOKzXRkehHaPj\nXSpSpYxNf6RAPvUCNnRGSZCmuryj5brtCYtN2/LQ73Tt0iqHQAIGLPI7KY+a0kw=\n=LbDV\n-----END PGP SIGNATURE-----\n",
      "payload": "tree ca8b9e7e482a8eb98008d171dc661b22dc2727e1\nparent f3aef2cc83905a976fa9bf7439bdf0a9d911206f\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1536160732 +0200\ncommitter GitHub <noreply@github.com> 1536160732 +0200\n\nFIX: Reset tags on category change (#6363)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
  "html_url": "https://github.com/discourse/discourse/commit/17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f3aef2cc83905a976fa9bf7439bdf0a9d911206f",
      "url": "https://api.github.com/repos/discourse/discourse/commits/f3aef2cc83905a976fa9bf7439bdf0a9d911206f",
      "html_url": "https://github.com/discourse/discourse/commit/f3aef2cc83905a976fa9bf7439bdf0a9d911206f"
    }
  ],
  "stats": {
    "total": 121,
    "additions": 117,
    "deletions": 4
  },
  "files": [
    {
      "sha": "009fd35a8ddceb34b933e4bfb90be17d853a9bfa",
      "filename": "app/assets/javascripts/discourse/controllers/composer.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/composer.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -297,6 +297,12 @@ export default Ember.Controller.extend({\n   uploadIcon: () => uploadIcon(),\n \n   actions: {\n+    resetTagsSelection() {\n+      if (this.get(\"model.tags\")) {\n+        this.set(\"model.tags\", []);\n+      }\n+    },\n+\n     cancelUpload() {\n       this.set(\"model.uploadCancelled\", true);\n     },"
    },
    {
      "sha": "e544c80ed94e9162b5d8009405b62fae1231b7ca",
      "filename": "app/assets/javascripts/discourse/lib/plugin-api.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/lib/plugin-api.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/lib/plugin-api.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/lib/plugin-api.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -38,7 +38,7 @@ import Sharing from \"discourse/lib/sharing\";\n import { addComposerUploadHandler } from \"discourse/components/composer-editor\";\n \n // If you add any methods to the API ensure you bump up this number\n-const PLUGIN_API_VERSION = \"0.8.24\";\n+const PLUGIN_API_VERSION = \"0.8.25\";\n \n class PluginApi {\n   constructor(version, container) {"
    },
    {
      "sha": "7c75f0ba03ab97e92feee688887beeef010c4099",
      "filename": "app/assets/javascripts/discourse/templates/composer.hbs",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/templates/composer.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/discourse/templates/composer.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/templates/composer.hbs?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -60,7 +60,13 @@\n \n                 {{#if model.showCategoryChooser}}\n                   <div class=\"category-input\">\n-                    {{category-chooser fullWidthOnMobile=true value=model.categoryId scopedCategoryId=scopedCategoryId tabindex=\"3\"}}\n+                    {{category-chooser\n+                      fullWidthOnMobile=true\n+                      value=model.categoryId\n+                      scopedCategoryId=scopedCategoryId\n+                      onSelect=(action \"resetTagsSelection\")\n+                      onSelectNone=(action \"resetTagsSelection\")\n+                      tabindex=\"3\"}}\n                     {{popup-input-tip validation=categoryValidation}}\n                   </div>\n                 {{/if}}"
    },
    {
      "sha": "b2a71ebf88ca801d215383ad7f39c1fb18486a5e",
      "filename": "app/assets/javascripts/select-kit/components/multi-select.js.es6",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/components/multi-select.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/components/multi-select.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/components/multi-select.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -2,7 +2,10 @@ import SelectKitComponent from \"select-kit/components/select-kit\";\n import computed from \"ember-addons/ember-computed-decorators\";\n import { on } from \"ember-addons/ember-computed-decorators\";\n const { get, isNone, isEmpty, makeArray, run } = Ember;\n-import { applyOnSelectPluginApiCallbacks } from \"select-kit/mixins/plugin-api\";\n+import {\n+  applyOnSelectPluginApiCallbacks,\n+  applyOnSelectNonePluginApiCallbacks\n+} from \"select-kit/mixins/plugin-api\";\n \n export default SelectKitComponent.extend({\n   pluginApiIdentifiers: [\"multi-select\"],\n@@ -253,6 +256,11 @@ export default SelectKitComponent.extend({\n       !computedContentItem ||\n       computedContentItem.__sk_row_type === \"noneRow\"\n     ) {\n+      applyOnSelectNonePluginApiCallbacks(\n+        this.get(\"pluginApiIdentifiers\"),\n+        this\n+      );\n+      this._boundaryActionHandler(\"onSelectNone\");\n       this.clearSelection();\n       return;\n     }"
    },
    {
      "sha": "7713d51194be57d41c0ba7972026ef4808c6bd0d",
      "filename": "app/assets/javascripts/select-kit/components/single-select.js.es6",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/components/single-select.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/components/single-select.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/components/single-select.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -5,7 +5,10 @@ import {\n } from \"ember-addons/ember-computed-decorators\";\n const { get, isNone, isEmpty, isPresent, run, makeArray } = Ember;\n \n-import { applyOnSelectPluginApiCallbacks } from \"select-kit/mixins/plugin-api\";\n+import {\n+  applyOnSelectPluginApiCallbacks,\n+  applyOnSelectNonePluginApiCallbacks\n+} from \"select-kit/mixins/plugin-api\";\n \n export default SelectKitComponent.extend({\n   pluginApiIdentifiers: [\"single-select\"],\n@@ -211,6 +214,11 @@ export default SelectKitComponent.extend({\n       !computedContentItem ||\n       computedContentItem.__sk_row_type === \"noneRow\"\n     ) {\n+      applyOnSelectNonePluginApiCallbacks(\n+        this.get(\"pluginApiIdentifiers\"),\n+        this\n+      );\n+      this._boundaryActionHandler(\"onSelectNone\");\n       this.clearSelection();\n       return;\n     }"
    },
    {
      "sha": "daa1e362a7d5639113fa6da89a189eef7b5c9308",
      "filename": "app/assets/javascripts/select-kit/mixins/plugin-api.js.es6",
      "status": "modified",
      "additions": 20,
      "deletions": 0,
      "changes": 20,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/mixins/plugin-api.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/app/assets/javascripts/select-kit/mixins/plugin-api.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/select-kit/mixins/plugin-api.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -47,6 +47,15 @@ function modifyCollectionHeader(pluginApiIdentifiers, contentFunction) {\n   _modifyCollectionHeaderCallbacks[pluginApiIdentifiers].push(contentFunction);\n }\n \n+let _onSelectNoneCallbacks = {};\n+function onSelectNone(pluginApiIdentifiers, mutationFunction) {\n+  if (Ember.isNone(_onSelectNoneCallbacks[pluginApiIdentifiers])) {\n+    _onSelectNoneCallbacks[pluginApiIdentifiers] = [];\n+  }\n+\n+  _onSelectNoneCallbacks[pluginApiIdentifiers].push(mutationFunction);\n+}\n+\n let _onSelectCallbacks = {};\n function onSelect(pluginApiIdentifiers, mutationFunction) {\n   if (Ember.isNone(_onSelectCallbacks[pluginApiIdentifiers])) {\n@@ -102,6 +111,12 @@ export function applyOnSelectPluginApiCallbacks(identifiers, val, context) {\n   });\n }\n \n+export function applyOnSelectNonePluginApiCallbacks(identifiers, context) {\n+  identifiers.forEach(key => {\n+    (_onSelectNoneCallbacks[key] || []).forEach(c => c(context));\n+  });\n+}\n+\n export function modifySelectKit(pluginApiIdentifiers) {\n   return {\n     appendContent: content => {\n@@ -131,6 +146,10 @@ export function modifySelectKit(pluginApiIdentifiers) {\n     onSelect: callback => {\n       onSelect(pluginApiIdentifiers, callback);\n       return modifySelectKit(pluginApiIdentifiers);\n+    },\n+    onSelectNone: callback => {\n+      onSelectNone(pluginApiIdentifiers, callback);\n+      return modifySelectKit(pluginApiIdentifiers);\n     }\n   };\n }\n@@ -142,6 +161,7 @@ export function clearCallbacks() {\n   _modifyHeaderComputedContentCallbacks = {};\n   _modifyCollectionHeaderCallbacks = {};\n   _onSelectCallbacks = {};\n+  _onSelectNoneCallbacks = {};\n }\n \n const EMPTY_ARRAY = Object.freeze([]);"
    },
    {
      "sha": "234eb2d85659e6347308b24c54db492f3cf85787",
      "filename": "test/javascripts/acceptance/category-chooser-with-tags-test.js.es6",
      "status": "added",
      "additions": 39,
      "deletions": 0,
      "changes": 39,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/test/javascripts/acceptance/category-chooser-with-tags-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/test/javascripts/acceptance/category-chooser-with-tags-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/acceptance/category-chooser-with-tags-test.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -0,0 +1,39 @@\n+import { acceptance } from \"helpers/qunit-helpers\";\n+\n+acceptance(\"CategoryChooser - with tags\", {\n+  loggedIn: true,\n+  site: { can_tag_topics: true },\n+  settings: {\n+    tagging_enabled: true,\n+    allow_uncategorized_topics: false\n+  }\n+});\n+\n+QUnit.test(\"resets tags when changing category\", async assert => {\n+  const categoryChooser = selectKit(\".category-chooser\");\n+  const miniTagChooser = selectKit(\".mini-tag-chooser\");\n+  const findSelected = () =>\n+    find(\".mini-tag-chooser .mini-tag-chooser-header .selected-name\").text();\n+\n+  await visit(\"/\");\n+  await click(\"#create-topic\");\n+  await miniTagChooser.expand();\n+  await miniTagChooser.selectRowByValue(\"monkey\");\n+\n+  assert.equal(findSelected(), \"monkey\");\n+\n+  await categoryChooser.expand();\n+  await categoryChooser.selectRowByValue(6);\n+\n+  assert.equal(findSelected(), \"optional tags\");\n+\n+  await miniTagChooser.expand();\n+  await miniTagChooser.selectRowByValue(\"monkey\");\n+\n+  assert.equal(findSelected(), \"monkey\");\n+\n+  await categoryChooser.expand();\n+  await categoryChooser.selectNoneRow();\n+\n+  assert.equal(findSelected(), \"optional tags\");\n+});"
    },
    {
      "sha": "7e6c6158a405320b9d39858c629b90334fdf0706",
      "filename": "test/javascripts/components/single-select-test.js.es6",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/discourse/discourse/blob/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/test/javascripts/components/single-select-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/17087eff2a0c02b8108ccee0f6af42ed5ad6100e/test/javascripts/components/single-select-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/components/single-select-test.js.es6?ref=17087eff2a0c02b8108ccee0f6af42ed5ad6100e",
      "patch": "@@ -501,6 +501,32 @@ componentTest(\"support modifying on select behavior through plugin api\", {\n   }\n });\n \n+componentTest(\"support modifying on select none behavior through plugin api\", {\n+  template:\n+    '<span class=\"on-select-none-test\"></span>{{single-select none=\"none\" content=content}}',\n+\n+  beforeEach() {\n+    withPluginApi(\"0.8.25\", api => {\n+      api.modifySelectKit(\"select-kit\").onSelectNone(() => {\n+        find(\".on-select-none-test\").html(\"NONE\");\n+      });\n+    });\n+\n+    this.set(\"content\", [{ id: \"1\", name: \"robin\" }]);\n+  },\n+\n+  async test(assert) {\n+    await this.get(\"subject\").expand();\n+    await this.get(\"subject\").selectRowByValue(1);\n+    await this.get(\"subject\").expand();\n+    await this.get(\"subject\").selectNoneRow();\n+\n+    assert.equal(find(\".on-select-none-test\").html(), \"NONE\");\n+\n+    clearCallbacks();\n+  }\n+});\n+\n componentTest(\"with nameChanges\", {\n   template: \"{{single-select content=content nameChanges=true}}\",\n "
    }
  ]
}
