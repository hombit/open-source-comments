{
  "sha": "b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6YjlkODgyNTFlNmNkNDVkYTYxZjFlNDZlZjQzZWQxMmE2ZDQ3MDAwYQ==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2018-09-06T15:22:58Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2018-09-06T15:22:58Z"
    },
    "message": "External User Fix (#1846)\n\n* fix: return user if user was not initially found\r\n\r\n* fix: added tests, added wasUpserted boolean",
    "tree": {
      "sha": "7d943fa57c6d9455a28b200b69c79e302d7c082b",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/7d943fa57c6d9455a28b200b69c79e302d7c082b"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbkUZSCRBK7hj4Ov3rIwAAdHIIADf7LwCpELPu4c1DUaMTAz7V\nEourox3/3CgHxF7fXVz74GsTNj8I9tiGvyZtYETP6rwUGYDP9JGyoiOmAJuKGmr4\nEUdobLgbnqxWKimHuu5sJ2l8yfykDIAneRRFRAS8hM23wSyej0nDJLciud/TzA33\n6HFmyNx3Dkl+RksL2hN808J0qmZbS7b/lFGDYd23la/7bRIP2rLL2ZTCN3gYzbfS\noj4P/8lj1e6+H+GaQnp0FpzZMcaLB95vducOfDwM9J4+Sn8zGtZJEfagFVzjD8Fm\nTW9jGPLA/FYL82uV/J6GHLJ/XxzVlVWJxyOiqBMu1P8F1kwYjggiS1kMOI+GYnI=\n=sAHB\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 7d943fa57c6d9455a28b200b69c79e302d7c082b\nparent 382019d907e97d3ca3f78eb4f5a592f96dc32a15\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1536247378 +0000\ncommitter GitHub <noreply@github.com> 1536247378 +0000\n\nExternal User Fix (#1846)\n\n* fix: return user if user was not initially found\r\n\r\n* fix: added tests, added wasUpserted boolean\r\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
  "html_url": "https://github.com/coralproject/talk/commit/b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/b9d88251e6cd45da61f1e46ef43ed12a6d47000a/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "382019d907e97d3ca3f78eb4f5a592f96dc32a15",
      "url": "https://api.github.com/repos/coralproject/talk/commits/382019d907e97d3ca3f78eb4f5a592f96dc32a15",
      "html_url": "https://github.com/coralproject/talk/commit/382019d907e97d3ca3f78eb4f5a592f96dc32a15"
    }
  ],
  "stats": {
    "total": 66,
    "additions": 64,
    "deletions": 2
  },
  "files": [
    {
      "sha": "2ce0b7c15b1e7e6142c2b063780be816fe15bc8c",
      "filename": "services/users.js",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/b9d88251e6cd45da61f1e46ef43ed12a6d47000a/services/users.js",
      "raw_url": "https://github.com/coralproject/talk/raw/b9d88251e6cd45da61f1e46ef43ed12a6d47000a/services/users.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/services/users.js?ref=b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
      "patch": "@@ -68,6 +68,8 @@ async function upsertUser(\n     },\n   });\n   if (user) {\n+    user.wasUpserted = false;\n+    user.$ignore('wasUpserted');\n     return user;\n   }\n \n@@ -98,8 +100,16 @@ async function upsertUser(\n   // Save the user in the database.\n   await user.save();\n \n-  // Emit that the user was created.\n-  ctx.pubsub.publish('userCreated', user);\n+  if (ctx) {\n+    // Emit that the user was created if the context is set.\n+    ctx.pubsub.publish('userCreated', user);\n+  }\n+\n+  // Indicate that the user was upserted.\n+  user.wasUpserted = true;\n+  user.$ignore('wasUpserted');\n+\n+  return user;\n }\n \n // Users is the interface for the application to interact with the"
    },
    {
      "sha": "95313fbec2f567bce06660f52904e6b7f0c22c9e",
      "filename": "test/server/services/users.js",
      "status": "modified",
      "additions": 52,
      "deletions": 0,
      "changes": 52,
      "blob_url": "https://github.com/coralproject/talk/blob/b9d88251e6cd45da61f1e46ef43ed12a6d47000a/test/server/services/users.js",
      "raw_url": "https://github.com/coralproject/talk/raw/b9d88251e6cd45da61f1e46ef43ed12a6d47000a/test/server/services/users.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/test/server/services/users.js?ref=b9d88251e6cd45da61f1e46ef43ed12a6d47000a",
      "patch": "@@ -363,6 +363,58 @@ describe('services.UsersService', () => {\n     });\n   });\n \n+  describe('#upsertExternalUser', () => {\n+    it('should return a user when the desired user is found', async () => {\n+      const ctx = Context.forSystem();\n+      let user = await UsersService.upsertExternalUser(\n+        ctx,\n+        'an-id',\n+        'a-provider',\n+        'a-display-name'\n+      );\n+\n+      expect(user).to.be.defined;\n+      expect(user.wasUpserted).to.be.true;\n+\n+      user = await UsersService.upsertExternalUser(\n+        ctx,\n+        'an-id',\n+        'a-provider',\n+        'a-display-name'\n+      );\n+\n+      expect(user).to.be.defined;\n+      expect(user.wasUpserted).to.be.false;\n+    });\n+\n+    it('should return a user when the desired user is not found', async () => {\n+      const ctx = Context.forSystem();\n+      let user = await UsersService.upsertExternalUser(\n+        ctx,\n+        'an-id',\n+        'a-provider',\n+        'a-display-name'\n+      );\n+\n+      expect(user).to.be.defined;\n+      expect(user.wasUpserted).to.be.true;\n+      expect(user).to.have.property('metadata');\n+      expect(user.metadata).to.have.property('displayName', 'a-display-name');\n+    });\n+\n+    it('should work if the context passed is null', async () => {\n+      let user = await UsersService.upsertExternalUser(\n+        null,\n+        'an-id',\n+        'a-provider',\n+        'a-display-name'\n+      );\n+\n+      expect(user).to.be.defined;\n+      expect(user.wasUpserted).to.be.true;\n+    });\n+  });\n+\n   describe('#isValidUsername', () => {\n     it('should not allow non-alphanumeric characters in usernames', () => {\n       return UsersService.isValidUsername('hiðŸ–•')"
    }
  ]
}
