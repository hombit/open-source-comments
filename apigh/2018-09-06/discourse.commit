{
  "sha": "f13c34aaedec037aa83df9368aac6aadf7e3f567",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpmMTNjMzRhYWVkZWMwMzdhYTgzZGY5MzY4YWFjNmFhZGY3ZTNmNTY3",
  "commit": {
    "author": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2018-09-06T15:27:17Z"
    },
    "committer": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2018-09-06T15:27:17Z"
    },
    "message": "Adds a check for invalid message formats to rake i18n:check",
    "tree": {
      "sha": "af59452d455e4f5dfa66715e66e555eafba21ce2",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/af59452d455e4f5dfa66715e66e555eafba21ce2"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/f13c34aaedec037aa83df9368aac6aadf7e3f567",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/f13c34aaedec037aa83df9368aac6aadf7e3f567",
  "html_url": "https://github.com/discourse/discourse/commit/f13c34aaedec037aa83df9368aac6aadf7e3f567",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/f13c34aaedec037aa83df9368aac6aadf7e3f567/comments",
  "author": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3c09026fe45f04d317b2f1f9d917369549e8c389",
      "url": "https://api.github.com/repos/discourse/discourse/commits/3c09026fe45f04d317b2f1f9d917369549e8c389",
      "html_url": "https://github.com/discourse/discourse/commit/3c09026fe45f04d317b2f1f9d917369549e8c389"
    }
  ],
  "stats": {
    "total": 31,
    "additions": 28,
    "deletions": 3
  },
  "files": [
    {
      "sha": "4d47c06af4c6b7e084d0a4f95efda171972b9e11",
      "filename": "lib/i18n/locale_file_checker.rb",
      "status": "modified",
      "additions": 23,
      "deletions": 2,
      "changes": 25,
      "blob_url": "https://github.com/discourse/discourse/blob/f13c34aaedec037aa83df9368aac6aadf7e3f567/lib/i18n/locale_file_checker.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/f13c34aaedec037aa83df9368aac6aadf7e3f567/lib/i18n/locale_file_checker.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/i18n/locale_file_checker.rb?ref=f13c34aaedec037aa83df9368aac6aadf7e3f567",
      "patch": "@@ -5,6 +5,7 @@ class LocaleFileChecker\n   TYPE_MISSING_INTERPOLATION_KEYS = 1\n   TYPE_UNSUPPORTED_INTERPOLATION_KEYS = 2\n   TYPE_MISSING_PLURAL_KEYS = 3\n+  TYPE_INVALID_MESSAGE_FORMAT = 4\n \n   def check(locale)\n     @errors = {}\n@@ -19,8 +20,7 @@ def check(locale)\n \n       check_interpolation_keys\n       check_plural_keys\n-\n-      # TODO check MessageFormat\n+      check_message_format\n     end\n \n     @errors\n@@ -111,6 +111,27 @@ def check_plural_keys\n     end\n   end\n \n+  def check_message_format\n+    mf_locale, mf_filename = JsLocaleHelper.find_message_format_locale([@locale], true)\n+\n+    traverse_hash(@locale_yaml, []) do |keys, value|\n+      next unless keys.last.ends_with?(\"_MF\")\n+\n+      begin\n+        JsLocaleHelper.with_context do |ctx|\n+          ctx.load(mf_filename) if File.exist?(mf_filename)\n+          ctx.eval(\"mf = new MessageFormat('#{mf_locale}');\")\n+          ctx.eval(\"mf.precompile(mf.parse(#{value.to_s.inspect}))\")\n+        end\n+      rescue MiniRacer::EvalError => error\n+        error_message = error.message.sub(/at undefined[:\\d]+/, \"\").strip\n+        add_error(keys, TYPE_INVALID_MESSAGE_FORMAT, error_message, pluralized: false)\n+      end\n+    end\n+\n+    JsLocaleHelper.reset_context\n+  end\n+\n   def reference_value(keys)\n     value = @reference_yaml[REFERENCE_LOCALE]\n "
    },
    {
      "sha": "ddd7e25891f715e3c5b59274814c09570cd29970",
      "filename": "lib/tasks/i18n.rake",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/f13c34aaedec037aa83df9368aac6aadf7e3f567/lib/tasks/i18n.rake",
      "raw_url": "https://github.com/discourse/discourse/raw/f13c34aaedec037aa83df9368aac6aadf7e3f567/lib/tasks/i18n.rake",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/tasks/i18n.rake?ref=f13c34aaedec037aa83df9368aac6aadf7e3f567",
      "patch": "@@ -37,7 +37,9 @@ task \"i18n:check\", [:locale] => [:environment] do |_, args|\n           when LocaleFileChecker::TYPE_UNSUPPORTED_INTERPOLATION_KEYS\n             \"Unsupported interpolation keys\".red\n           when LocaleFileChecker::TYPE_MISSING_PLURAL_KEYS\n-            \"Missing plural keys\".yellow\n+            \"Missing plural keys\".magenta\n+          when LocaleFileChecker::TYPE_INVALID_MESSAGE_FORMAT\n+            \"Invalid message format\".yellow\n           end\n         details = error[:details] ? \": #{error[:details]}\" : \"\"\n \n@@ -49,5 +51,7 @@ task \"i18n:check\", [:locale] => [:environment] do |_, args|\n   failed_locales.each do |failed_locale|\n     puts \"\", \"Failed to check locale files for #{failed_locale}\".red\n   end\n+\n+  puts \"\"\n   exit 1 unless failed_locales.empty?\n end"
    }
  ]
}
