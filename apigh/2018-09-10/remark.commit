{
  "sha": "a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmE4NTZmZDljN2RlNzBmYjFlN2JmN2EzYTJjYWYyZTc4YWE3MWYyYjE=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-09-10T15:44:22Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-09-10T15:44:22Z"
    },
    "message": "pass revision as common opts instead of package global",
    "tree": {
      "sha": "ec44ae45da266e45bb0dd466bbef402377938440",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/ec44ae45da266e45bb0dd466bbef402377938440"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
  "html_url": "https://github.com/umputun/remark/commit/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "75a1edcff3bc4faecd60c98144f555e2468c62e4",
      "url": "https://api.github.com/repos/umputun/remark/commits/75a1edcff3bc4faecd60c98144f555e2468c62e4",
      "html_url": "https://github.com/umputun/remark/commit/75a1edcff3bc4faecd60c98144f555e2468c62e4"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 19,
    "deletions": 15
  },
  "files": [
    {
      "sha": "e163d0f4591313210c9612c5561cb5c6dd70e2aa",
      "filename": "backend/app/cmd/backup_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/backup_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/backup_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/backup_test.go?ref=a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
      "patch": "@@ -8,7 +8,7 @@ import (\n \t\"os\"\n \t\"testing\"\n \n-\tflags \"github.com/jessevdk/go-flags\"\n+\t\"github.com/jessevdk/go-flags\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n )"
    },
    {
      "sha": "664dba0b2ee946be29fb8f98ed0690a9034e65f6",
      "filename": "backend/app/cmd/cmd.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/cmd.go",
      "raw_url": "https://github.com/umputun/remark/raw/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/cmd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/cmd.go?ref=a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
      "patch": "@@ -16,9 +16,6 @@ import (\n \t\"github.com/pkg/errors\"\n )\n \n-// Revision sets from main\n-var Revision = \"unknown\"\n-\n // CommonOptionsCommander extends flags.Commander with SetCommon\n // All commands should implement this interfaces\n type CommonOptionsCommander interface {\n@@ -30,12 +27,15 @@ type CommonOptionsCommander interface {\n type CommonOpts struct {\n \tRemarkURL    string\n \tSharedSecret string\n+\tRevision     string\n }\n \n // SetCommon satisfies CommonOptionsCommander interface and sets common option fields\n+// The method called by main for each command\n func (c *CommonOpts) SetCommon(commonOpts CommonOpts) {\n \tc.RemarkURL = commonOpts.RemarkURL\n \tc.SharedSecret = commonOpts.SharedSecret\n+\tc.Revision = commonOpts.Revision\n }\n \n // fileParser used to convert template strings like blah-{{.SITE}}-{{.YYYYMMDD}} the final format"
    },
    {
      "sha": "b1d7ab2f759f0642fdc33881ff2c212cfc324837",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server.go?ref=a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
      "patch": "@@ -149,7 +149,7 @@ func (s *ServerCommand) Execute(args []string) error {\n \t\tlog.Fatalf(\"[ERROR] failed to setup application, %+v\", err)\n \t}\n \tif err = app.run(ctx); err != nil {\n-\t\tlog.Printf(\"[INFO] remark terminated with error %+v\", err)\n+\t\tlog.Printf(\"[WARN] remark terminated with error %+v\", err)\n \t\treturn err\n \t}\n \tlog.Printf(\"[INFO] remark terminated\")\n@@ -170,17 +170,18 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \n \tstoreEngine, err := s.makeDataStore()\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn nil, errors.Wrap(err, \"failed to make data store engine\")\n \t}\n \n \tkeyStore, err := s.makeKeyStore()\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn nil, errors.Wrap(err, \"failed to make key store\")\n+\n \t}\n \n \tadminStore, err := s.makeAdminStore()\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn nil, errors.Wrap(err, \"failed to make admin store\")\n \t}\n \n \tdataService := &service.DataStore{\n@@ -193,7 +194,7 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \n \tloadingCache, err := s.makeCache()\n \tif err != nil {\n-\t\treturn nil, err\n+\t\treturn nil, errors.Wrap(err, \"failed to make cache\")\n \t}\n \n \t// token TTL is 5 minutes, inactivity interval 7+ days by default\n@@ -225,7 +226,7 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \tcommentFormatter := store.NewCommentFormatter(imgProxy)\n \n \tsrv := &api.Rest{\n-\t\tVersion:          Revision,\n+\t\tVersion:          s.Revision,\n \t\tDataService:      dataService,\n \t\tWebRoot:          s.WebRoot,\n \t\tRemarkURL:        s.RemarkURL,"
    },
    {
      "sha": "c2985795831e9e0ad3d86648f90de2b6f9f77d04",
      "filename": "backend/app/cmd/server_test.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/server_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/cmd/server_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server_test.go?ref=a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
      "patch": "@@ -142,7 +142,7 @@ func TestServerApp_Failed(t *testing.T) {\n \t_, err := p.ParseArgs([]string{\"--backup=/tmp\", \"--store.bolt.path=/dev/null\"})\n \tassert.Nil(t, err)\n \t_, err = opts.newServerApp()\n-\tassert.EqualError(t, err, \"can't initialize data store: failed to make boltdb for /dev/null/remark.db: \"+\n+\tassert.EqualError(t, err, \"failed to make data store engine: can't initialize data store: failed to make boltdb for /dev/null/remark.db: \"+\n \t\t\"open /dev/null/remark.db: not a directory\")\n \tt.Log(err)\n \n@@ -174,7 +174,7 @@ func TestServerApp_Failed(t *testing.T) {\n \n \topts.Store.Type = \"blah\"\n \t_, err = opts.newServerApp()\n-\tassert.EqualError(t, err, \"unsupported store type blah\")\n+\tassert.EqualError(t, err, \"failed to make data store engine: unsupported store type blah\")\n \tt.Log(err)\n }\n "
    },
    {
      "sha": "36040c703dff9b947403892f135c79c83b943811",
      "filename": "backend/app/main.go",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark/blob/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/main.go",
      "raw_url": "https://github.com/umputun/remark/raw/a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1/backend/app/main.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/main.go?ref=a856fd9c7de70fb1e7bf7a3a2caf2e78aa71f2b1",
      "patch": "@@ -28,15 +28,18 @@ var revision = \"unknown\"\n \n func main() {\n \tfmt.Printf(\"remark42 %s\\n\", revision)\n-\tcmd.Revision = revision\n \n \tvar opts Opts\n \tp := flags.NewParser(&opts, flags.Default)\n \tp.CommandHandler = func(command flags.Commander, args []string) error {\n \t\tsetupLog(opts.Dbg)\n-\t\tcommonOpts := cmd.CommonOpts{RemarkURL: opts.RemarkURL, SharedSecret: opts.SharedSecret}\n+\t\t// commands implements CommonOptionsCommander to allow passing set of extra options defined for all commands\n \t\tc := command.(cmd.CommonOptionsCommander)\n-\t\tc.SetCommon(commonOpts)\n+\t\tc.SetCommon(cmd.CommonOpts{\n+\t\t\tRemarkURL:    opts.RemarkURL,\n+\t\t\tSharedSecret: opts.SharedSecret,\n+\t\t\tRevision:     revision,\n+\t\t})\n \t\terr := c.Execute(args)\n \t\tif err != nil {\n \t\t\tlog.Printf(\"[ERROR] failed with %+v\", err)"
    }
  ]
}
