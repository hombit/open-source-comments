{
  "sha": "7b0213299a5cd3d201da5ff4d95ac84353fdd917",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6N2IwMjEzMjk5YTVjZDNkMjAxZGE1ZmY0ZDk1YWM4NDM1M2ZkZDkxNw==",
  "commit": {
    "author": {
      "name": "immber",
      "email": "jessiekrushing@hotmail.com",
      "date": "2018-09-21T03:24:44Z"
    },
    "committer": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2018-09-21T03:24:44Z"
    },
    "message": "Updated quickstart (#1898)\n\n* udpated quickstart\r\n\r\n* fixed typo and removed quote from quickstart\r\n\r\n* fixed broken link in readme\r\n\r\n* fixed broken anchor tags\r\n\r\n* fix: fixed anchor links",
    "tree": {
      "sha": "f5588d6ac556b66110dda5e715405ee2ce8deec4",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/f5588d6ac556b66110dda5e715405ee2ce8deec4"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/7b0213299a5cd3d201da5ff4d95ac84353fdd917",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/7b0213299a5cd3d201da5ff4d95ac84353fdd917",
  "html_url": "https://github.com/coralproject/talk/commit/7b0213299a5cd3d201da5ff4d95ac84353fdd917",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/7b0213299a5cd3d201da5ff4d95ac84353fdd917/comments",
  "author": {
    "login": "immber",
    "id": 7496030,
    "node_id": "MDQ6VXNlcjc0OTYwMzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7496030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/immber",
    "html_url": "https://github.com/immber",
    "followers_url": "https://api.github.com/users/immber/followers",
    "following_url": "https://api.github.com/users/immber/following{/other_user}",
    "gists_url": "https://api.github.com/users/immber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/immber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/immber/subscriptions",
    "organizations_url": "https://api.github.com/users/immber/orgs",
    "repos_url": "https://api.github.com/users/immber/repos",
    "events_url": "https://api.github.com/users/immber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/immber/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f4dbc7a24d6cc3ebb5957e006ba8fabc2a239cfd",
      "url": "https://api.github.com/repos/coralproject/talk/commits/f4dbc7a24d6cc3ebb5957e006ba8fabc2a239cfd",
      "html_url": "https://github.com/coralproject/talk/commit/f4dbc7a24d6cc3ebb5957e006ba8fabc2a239cfd"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 36,
    "deletions": 36
  },
  "files": [
    {
      "sha": "a57451e003d7f57efaa765f0396191a2f9ad3955",
      "filename": "README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7b0213299a5cd3d201da5ff4d95ac84353fdd917/README.md",
      "raw_url": "https://github.com/coralproject/talk/raw/7b0213299a5cd3d201da5ff4d95ac84353fdd917/README.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/README.md?ref=7b0213299a5cd3d201da5ff4d95ac84353fdd917",
      "patch": "@@ -14,7 +14,7 @@ Learn more about Talk, including a deep dive into features for commenters and mo\n \n ## Pre-Launch Guide\n \n-You’ve installed Talk on your server, and you’re preparing to launch it on your site. The real community work starts now, before you go live. You have a unique opportunity pre-launch to set your community up for success. Read our [Talk Community Guide](https://blog.coralproject.net/youve-installed-talk-now-what/).\n+You’ve installed Talk on your server, and you’re preparing to launch it on your site. The real community work starts now, before you go live. You have a unique opportunity pre-launch to set your community up for success. Read our [Talk Community Guide](https://coralproject.net/blog/youve-installed-talk-now-what/).\n \n ## Advanced Usage\n "
    },
    {
      "sha": "8478ed0f23cc6a1ae99e34fb6dce41287b1d39d8",
      "filename": "docs/source/01-01-talk-quickstart.md",
      "status": "modified",
      "additions": 27,
      "deletions": 27,
      "changes": 54,
      "blob_url": "https://github.com/coralproject/talk/blob/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/01-01-talk-quickstart.md",
      "raw_url": "https://github.com/coralproject/talk/raw/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/01-01-talk-quickstart.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/01-01-talk-quickstart.md?ref=7b0213299a5cd3d201da5ff4d95ac84353fdd917",
      "patch": "@@ -22,13 +22,10 @@ to persist data. The following versions are supported:\n - MongoDB 3.2+\n - Redis 3.2.5+\n \n-An optional dependency for Talk is\n-[Docker](https://www.docker.com/community-edition#/download).\n-It is used during development to set up the database and can be\n-used to [install via Docker](#installation-from-docker).  We have tested Talk\n-and this documentation with versions 17.06.2+.\n+You can run Talk (and its dependencies) locally or from [Docker](https://www.docker.com/community-edition#/download) containers.  Docker is used in the local example below for the database and cache, however it is possible to run Talk without Docker by configuring your own MongoDB and Redis instances. We have tested Talk\n+and this documentation with Docker versions 17.06.2+.\n \n-Another optional dependency for Talk is\n+An optional dependency for Talk is\n [Docker Compose](https://docs.docker.com/compose/install/). It\n can be used to setup your environment easily for testing. We have tested Talk\n and this documentation with versions 1.14.0+.\n@@ -38,8 +35,9 @@ and this documentation with versions 1.14.0+.\n ### Installation from Docker\n \n To use Talk without major customization you can run the application using our\n-provided docker image. The following is a `docker-compose.yml` file that can\n-be used to setup Talk:\n+provided docker image. \n+\n+Start by making a new directory and create a file called `docker-compose.yml` and copy the following:\n \n ```yml\n # For details on the syntax of docker-compose.yml files, check out:\n@@ -79,7 +77,7 @@ volumes:\n     external: false\n ```\n \n-This is the bare minimum needed to run the demo, for more configuration\n+The environment variables listed above are the bare minimum needed to run the demo, for more configuration\n variables, check out the [Configuration](/talk/configuration/) section.\n \n \n@@ -104,8 +102,7 @@ Creating talk_1 ...\n Creating talk_1 ... done\n ```\n \n-\n-And when you run `docker-compose ps`, you should see something like:\n+Once everything has completed, run `docker-compose ps`, and you should see something like:\n \n ```\n     Name                   Command               State           Ports\n@@ -116,8 +113,8 @@ talk_1    yarn start                       Up      0.0.0.0:3000->3000/tcp\n ```\n \n \n-Continue onto the [Running](#running) section for details on how to complete the\n-installation and get started using Talk.\n+You now have a Talk instance up and running! Continue on to the [Setup](#setup) section for details on how to complete the\n+initial setup and get started using Talk.\n \n ### Installation from Source\n \n@@ -178,32 +175,35 @@ You can now start the application by running:\n yarn watch:server\n ```\n \n-Continue onto the [Running](#running) section for details on how to complete the\n+Continue onto the [Setup](#setup) section for details on how to complete the\n installation and get started using Talk.\n \n-## Running\n+## Setup\n+### Create Admin Account\n \n-You can now navigate to\n+With Talk running, you can now navigate to\n [http://127.0.0.1:3000/admin/install](http://127.0.0.1:3000/admin/install)\n-and go through the admin installation. There you will be prompted to create your\n-first admin account, and specify the domain whitelist for domains that are\n-allowed to have the comment box on.\n+and walk through the initial setup steps. \n+\n+* First, enter your **Organization Name** and **Organization Contact Email**. This will appear in emails when inviting new team members.\n+* Next, create your Admin user. You can specify an **Email Address**, **Username**, and **Password**\n+* Finally, enter your list of **Permitted Domains**, read [here](/talk/configuring-talk/#permitted-domains) about whitelisting domains \n \n _During development, ensure you whitelist 127.0.0.1:3000 otherwise the\n [http://127.0.0.1:3000/](http://127.0.0.1:3000/) page will not\n load._\n \n-Once you've completed the installation, you can visit\n-[http://127.0.0.1:3000/](http://127.0.0.1:3000/) where you can\n-view our development area where we test out features in Talk where you can write\n-comments and see them in the admin interface where you can do moderation and\n-reconfigure the user experience.\n+Once the setup wizard has been completed you can log into Talk ([http://127.0.0.1:3000/](http://127.0.0.1:3000/)) using the email address and password for the Admin user account that you just created. \n+\n+From here you can test out features in Talk, see comments in the admin interface where you can do moderation, and configure the user experience. \n+In the next step you'll create some user comments to moderate. \n+\n \n-## Demo\n+### Demo Embedded Comments\n \n If you've followed the documentation above, you'll now have a running copy of\n-Talk. To demonstrate what your own self-hosted copy of Talk can do, below\n-you'll find a demo that can be used to test the copy that is running now on your\n+Talk. To demonstrate what your own self-hosted copy of Talk can do, we created the demo below\n+that can be used to test the copy that is running now on your\n machine.\n \n In order for the demo to work, you must add"
    },
    {
      "sha": "409c9f00b0ad805303625c10633f23e296ccfd83",
      "filename": "docs/source/api/overview.md",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/api/overview.md",
      "raw_url": "https://github.com/coralproject/talk/raw/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/api/overview.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/api/overview.md?ref=7b0213299a5cd3d201da5ff4d95ac84353fdd917",
      "patch": "@@ -144,9 +144,9 @@ Some queries you may notice seem to return `null` or an error of\n route that requires authorization. You can perform authorization a few ways in\n Talk:\n \n-1. As a [Bearer Token](#Bearer-Token)\n-2. As a [Query Parameter](#Query-Parameter)\n-3. As a [Cookie](#Cookie)\n+1. As a [Bearer Token](#bearer-token)\n+2. As a [Query Parameter](#query-parameter)\n+3. As a [Cookie](#cookie)\n \n Essentially, you need to get access to a JWT token that you can use to authorize\n your requests. Generating one is simple, you can use the CLI tools in Talk to do"
    },
    {
      "sha": "52bb11b69ee891b1d8ad7ed978022539e7bfd470",
      "filename": "docs/source/integrating/asset-management.md",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/integrating/asset-management.md",
      "raw_url": "https://github.com/coralproject/talk/raw/7b0213299a5cd3d201da5ff4d95ac84353fdd917/docs/source/integrating/asset-management.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/integrating/asset-management.md?ref=7b0213299a5cd3d201da5ff4d95ac84353fdd917",
      "patch": "@@ -18,11 +18,11 @@ By default, Talk will use \"Lazy Asset Creation\" to dynamically generate Assets\n in Talk in order to make it easier for lighter installations. In order to have\n more strict control over this flow, we will create a plugin that will:\n \n-1. Disable \"Lazy Asset Creation\" by [Overriding a Resolver](#Overriding-a-Resolver).\n-2. Create Assets from our CMS by [Creating a New Asset Route](#Creating-a-New-Asset-Route).\n-3. Facilitate updates from our CMS to keep Talk in sync by [Creating an Asset Update Route](#Creating-an-Asset-Update-Route).\n+1. Disable \"Lazy Asset Creation\" by [Overriding a Resolver](#overriding-a-resolver).\n+2. Create Assets from our CMS by [Creating a New Asset Route](#creating-a-new-asset-route).\n+3. Facilitate updates from our CMS to keep Talk in sync by [Creating an Asset Update Route](#creating-an-asset-update-route).\n \n-We will then modify our embed so that we can [Target the Asset](#Target-the-Asset).\n+We will then modify our embed so that we can [Target the Asset](#target-the-asset).\n \n But first we should grab our basic plugin structure:\n \n@@ -248,7 +248,7 @@ module.exports = router => {\n };\n ```\n \n-As you can see from the previous step of [Creating a New Asset Route](#Creating-a-New-Asset-Route)\n+As you can see from the previous step of [Creating a New Asset Route](#creating-a-New-Asset-Route)\n , we have added the new `PUT` route to the router. This is a simple addition\n that allows your CMS to call into Talk when the asset has updated it's title,\n it's url (or really anything in the [AssetSchema](https://github.com/coralproject/talk/blob/master/models/asset.js)) to keep the Talk Admin and links up to date."
    }
  ]
}
