{
  "sha": "3e232412e3a70669abda43c7ca003e25df752a3b",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODozZTIzMjQxMmUzYTcwNjY5YWJkYTQzYzdjYTAwM2UyNWRmNzUyYTNi",
  "commit": {
    "author": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2018-10-22T17:00:30Z"
    },
    "committer": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2018-10-22T17:00:30Z"
    },
    "message": "UX: show error when hitting the rate limit on password reset",
    "tree": {
      "sha": "e8254fcb312496ee110d287d68b741f967602039",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/e8254fcb312496ee110d287d68b741f967602039"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/3e232412e3a70669abda43c7ca003e25df752a3b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/3e232412e3a70669abda43c7ca003e25df752a3b",
  "html_url": "https://github.com/discourse/discourse/commit/3e232412e3a70669abda43c7ca003e25df752a3b",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/3e232412e3a70669abda43c7ca003e25df752a3b/comments",
  "author": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "db26fe1527f1514d12c72db88cce5952b10302f9",
      "url": "https://api.github.com/repos/discourse/discourse/commits/db26fe1527f1514d12c72db88cce5952b10302f9",
      "html_url": "https://github.com/discourse/discourse/commit/db26fe1527f1514d12c72db88cce5952b10302f9"
    }
  ],
  "stats": {
    "total": 79,
    "additions": 62,
    "deletions": 17
  },
  "files": [
    {
      "sha": "2caf6e6b708649bc4983229dd6191ce4d33a4389",
      "filename": "app/assets/javascripts/discourse/controllers/password-reset.js.es6",
      "status": "modified",
      "additions": 7,
      "deletions": 4,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/3e232412e3a70669abda43c7ca003e25df752a3b/app/assets/javascripts/discourse/controllers/password-reset.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/3e232412e3a70669abda43c7ca003e25df752a3b/app/assets/javascripts/discourse/controllers/password-reset.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/password-reset.js.es6?ref=3e232412e3a70669abda43c7ca003e25df752a3b",
      "patch": "@@ -41,8 +41,7 @@ export default Ember.Controller.extend(PasswordValidation, {\n           second_factor_token: this.get(\"secondFactor\"),\n           second_factor_method: this.get(\"secondFactorMethod\")\n         }\n-      })\n-        .then(result => {\n+      }).then(result => {\n           if (result.success) {\n             this.set(\"successMessage\", result.message);\n             this.set(\"redirectTo\", result.redirect_to);\n@@ -83,8 +82,12 @@ export default Ember.Controller.extend(PasswordValidation, {\n             }\n           }\n         })\n-        .catch(error => {\n-          throw new Error(error);\n+        .catch(e => {\n+          if (e.jqXHR && e.jqXHR.status === 429) {\n+            this.set(\"errorMessage\", I18n.t(\"user.second_factor.rate_limit\"));\n+          } else {\n+            throw new Error(e);\n+          }\n         });\n     },\n "
    },
    {
      "sha": "5a762a985aefe128f42d2fdd8e4857b83b561888",
      "filename": "app/assets/javascripts/discourse/templates/password-reset.hbs",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/3e232412e3a70669abda43c7ca003e25df752a3b/app/assets/javascripts/discourse/templates/password-reset.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/3e232412e3a70669abda43c7ca003e25df752a3b/app/assets/javascripts/discourse/templates/password-reset.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/templates/password-reset.hbs?ref=3e232412e3a70669abda43c7ca003e25df752a3b",
      "patch": "@@ -18,7 +18,15 @@\n       <form>\n         {{#if secondFactorRequired}}\n           {{#second-factor-form secondFactorMethod=secondFactorMethod backupEnabled=backupEnabled}}\n-            {{text-field value=secondFactor id=\"second-factor\" autocorrect=\"off\" autocapitalize=\"off\" autofocus=\"autofocus\" secondFactorMethod=secondFactorMethod}}\n+            {{text-field\n+                id=\"second-factor\"\n+                value=secondFactor\n+                autocorrect=\"off\"\n+                autocapitalize=\"off\"\n+                autofocus=\"autofocus\"\n+                maxlength=\"6\"\n+                secondFactorMethod=secondFactorMethod\n+            }}\n           {{/second-factor-form}}\n           {{d-button action=\"submit\" class='btn-primary' label='submit'}}\n         {{else}}"
    },
    {
      "sha": "2153f47b78f7f7f7122e680d4a71ba9b948c0c71",
      "filename": "app/controllers/users_controller.rb",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/discourse/discourse/blob/3e232412e3a70669abda43c7ca003e25df752a3b/app/controllers/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/3e232412e3a70669abda43c7ca003e25df752a3b/app/controllers/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users_controller.rb?ref=3e232412e3a70669abda43c7ca003e25df752a3b",
      "patch": "@@ -453,12 +453,11 @@ def password_reset\n     token = params[:token]\n \n     if EmailToken.valid_token_format?(token)\n-      @user =\n-        if request.put?\n-          EmailToken.confirm(token)\n-        else\n-          EmailToken.confirmable(token)&.user\n-        end\n+      @user = if request.put?\n+        EmailToken.confirm(token)\n+      else\n+        EmailToken.confirmable(token)&.user\n+      end\n \n       if @user\n         secure_session[\"password-#{token}\"] = @user.id\n@@ -468,9 +467,15 @@ def password_reset\n       end\n     end\n \n-    totp_enabled = @user&.totp_enabled?\n+    second_factor_token = params[:second_factor_token]\n+    second_factor_method = params[:second_factor_method].to_i\n+\n+    if second_factor_token.present? && second_factor_token[/\\d{6}/] && UserSecondFactor.methods[second_factor_method]\n+      RateLimiter.new(nil, \"second-factor-min-#{request.remote_ip}\", 3, 1.minute).performed!\n+      second_factor_authenticated = @user&.authenticate_second_factor(second_factor_token, second_factor_method)\n+    end\n \n-    if !totp_enabled || @user.authenticate_second_factor(params[:second_factor_token], params[:second_factor_method].to_i)\n+    if second_factor_authenticated || !@user&.totp_enabled?\n       secure_session[\"second-factor-#{token}\"] = \"true\"\n     end\n \n@@ -479,13 +484,10 @@ def password_reset\n     if !@user\n       @error = I18n.t('password_reset.no_token')\n     elsif request.put?\n-      @invalid_password = params[:password].blank? || params[:password].length > User.max_password_length\n-\n       if !valid_second_factor\n-        RateLimiter.new(nil, \"second-factor-min-#{request.remote_ip}\", 3, 1.minute).performed!\n         @user.errors.add(:user_second_factors, :invalid)\n         @error = I18n.t('login.invalid_second_factor_code')\n-      elsif @invalid_password\n+      elsif @invalid_password = params[:password].blank? || params[:password].size > User.max_password_length\n         @user.errors.add(:password, :invalid)\n       else\n         @user.password = params[:password]\n@@ -547,6 +549,8 @@ def password_reset\n         end\n       end\n     end\n+  rescue RateLimiter::LimitExceeded => e\n+    render_rate_limit_error(e)\n   end\n \n   def confirm_email_token"
    },
    {
      "sha": "7bf0b3e45ba16d2df2a2f3e22242d75ff6916a08",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/3e232412e3a70669abda43c7ca003e25df752a3b/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/3e232412e3a70669abda43c7ca003e25df752a3b/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=3e232412e3a70669abda43c7ca003e25df752a3b",
      "patch": "@@ -771,6 +771,7 @@ en:\n         enable: \"Enable <a href>two factor authentication</a> for enhanced account security\"\n         confirm_password_description: \"Please confirm your password to continue\"\n         label: \"Code\"\n+        rate_limit: \"Please wait before trying another authentication code.\"\n         enable_description: |\n           Scan this QR code in a supported app (<a href=\"https://www.google.com/search?q=authenticator+apps+for+android\" target=\"_blank\">Android</a> – <a href=\"https://www.google.com/search?q=authenticator+apps+for+ios\" target=\"_blank\">iOS</a> and enter your authentication code.\n         disable_description: \"Please enter the authentication code from your app\""
    },
    {
      "sha": "106cf80e93293294fe4818282836d903dba61566",
      "filename": "spec/requests/users_controller_spec.rb",
      "status": "modified",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/discourse/discourse/blob/3e232412e3a70669abda43c7ca003e25df752a3b/spec/requests/users_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/3e232412e3a70669abda43c7ca003e25df752a3b/spec/requests/users_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/users_controller_spec.rb?ref=3e232412e3a70669abda43c7ca003e25df752a3b",
      "patch": "@@ -250,6 +250,35 @@\n         expect(UserAuthToken.where(id: user_token.id).count).to eq(1)\n       end\n \n+      context \"rate limiting\" do\n+\n+        before { RateLimiter.clear_all!; RateLimiter.enable }\n+        after  { RateLimiter.disable }\n+\n+        it \"rate limits reset passwords\" do\n+          freeze_time\n+\n+          token = user.email_tokens.create!(email: user.email).token\n+\n+          3.times do\n+            put \"/u/password-reset/#{token}\", params: {\n+              second_factor_token: 123456,\n+              second_factor_method: 1\n+            }\n+\n+            expect(response.status).to eq(200)\n+          end\n+\n+          put \"/u/password-reset/#{token}\", params: {\n+            second_factor_token: 123456,\n+            second_factor_method: 1\n+          }\n+\n+          expect(response.status).to eq(429)\n+        end\n+\n+      end\n+\n       context '2 factor authentication required' do\n         let!(:second_factor) { Fabricate(:user_second_factor_totp, user: user) }\n "
    }
  ]
}
