{
  "sha": "968d20e74436dad59823f07a316eedcde67633bc",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6OTY4ZDIwZTc0NDM2ZGFkNTk4MjNmMDdhMzE2ZWVkY2RlNjc2MzNiYw==",
  "commit": {
    "author": {
      "name": "Kiwi",
      "email": "vinh@wikiwi.io",
      "date": "2018-10-26T18:28:19Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2018-10-26T18:28:19Z"
    },
    "message": "Merge pull request #2018 from coralproject/admin-improvements\n\nConsistency Improvements",
    "tree": {
      "sha": "c65eb1bf0764636beaae7ae489b276ecdd218a84",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/c65eb1bf0764636beaae7ae489b276ecdd218a84"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/968d20e74436dad59823f07a316eedcde67633bc",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb01zDCRBK7hj4Ov3rIwAAdHIIAHkzCeSf+Wume2yvvLNSMiUS\n0YomOIRvU0L5Luuhn7YRakXUWaqpc1MjE+K/ju5RRsg3mIvyYAj4Rj99iBctF2Ke\nSooX9O0BL0U6Lz4tngUslbvelN4hzunHfFIug0VBooytK9fjdw/UUrYZGmd21kge\n3bkohDHX1ux4WoBv01S4RpWJl2A4wsMLjr+v+d8NkCVK5aDU6ZbmMcH+dhIvHA6T\nR81/m1kma1AXH9GOVrtmOn8sPQ1hQu5tbpYd1/y23FNAxwtH72WNGNW6LRBqwVmN\n1VfnwVIUz/+x4N5TjKZlJigqI6HcBx7yzXWuUcaqcs4uIYcz3ZcoCSbDXv4QSQ8=\n=BtBi\n-----END PGP SIGNATURE-----\n",
      "payload": "tree c65eb1bf0764636beaae7ae489b276ecdd218a84\nparent aac7cae6d68026570bc5f314e721022db64a8305\nparent 49d2416172dd2ab2d23ffbc5b45b819da329340f\nauthor Kiwi <vinh@wikiwi.io> 1540578499 +0200\ncommitter GitHub <noreply@github.com> 1540578499 +0200\n\nMerge pull request #2018 from coralproject/admin-improvements\n\nConsistency Improvements"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/968d20e74436dad59823f07a316eedcde67633bc",
  "html_url": "https://github.com/coralproject/talk/commit/968d20e74436dad59823f07a316eedcde67633bc",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/968d20e74436dad59823f07a316eedcde67633bc/comments",
  "author": {
    "login": "cvle",
    "id": 14221600,
    "node_id": "MDQ6VXNlcjE0MjIxNjAw",
    "avatar_url": "https://avatars2.githubusercontent.com/u/14221600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cvle",
    "html_url": "https://github.com/cvle",
    "followers_url": "https://api.github.com/users/cvle/followers",
    "following_url": "https://api.github.com/users/cvle/following{/other_user}",
    "gists_url": "https://api.github.com/users/cvle/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cvle/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cvle/subscriptions",
    "organizations_url": "https://api.github.com/users/cvle/orgs",
    "repos_url": "https://api.github.com/users/cvle/repos",
    "events_url": "https://api.github.com/users/cvle/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cvle/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aac7cae6d68026570bc5f314e721022db64a8305",
      "url": "https://api.github.com/repos/coralproject/talk/commits/aac7cae6d68026570bc5f314e721022db64a8305",
      "html_url": "https://github.com/coralproject/talk/commit/aac7cae6d68026570bc5f314e721022db64a8305"
    },
    {
      "sha": "49d2416172dd2ab2d23ffbc5b45b819da329340f",
      "url": "https://api.github.com/repos/coralproject/talk/commits/49d2416172dd2ab2d23ffbc5b45b819da329340f",
      "html_url": "https://github.com/coralproject/talk/commit/49d2416172dd2ab2d23ffbc5b45b819da329340f"
    }
  ],
  "stats": {
    "total": 76,
    "additions": 54,
    "deletions": 22
  },
  "files": [
    {
      "sha": "bf7964cf90bcfab0144c87b8ff3595b2c45b2391",
      "filename": "client/coral-framework/actions/auth.js",
      "status": "modified",
      "additions": 6,
      "deletions": 14,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/actions/auth.js",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/actions/auth.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-framework/actions/auth.js?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -1,10 +1,5 @@\n import * as actions from '../constants/auth';\n-import jwtDecode from 'jwt-decode';\n-\n-function cleanAuthData(localStorage) {\n-  localStorage.removeItem('token');\n-  localStorage.removeItem('exp');\n-}\n+import { setStorageAuthToken, clearStorageAuthToken } from '../services/auth';\n \n export const checkLogin = () => (\n   dispatch,\n@@ -15,7 +10,7 @@ export const checkLogin = () => (\n   rest('/auth')\n     .then(result => {\n       if (!result.user) {\n-        cleanAuthData(localStorage);\n+        clearStorageAuthToken(localStorage);\n         dispatch(checkLoginSuccess(null));\n         client.resetWebsocket();\n         return;\n@@ -32,7 +27,7 @@ export const checkLogin = () => (\n     .catch(error => {\n       if (error.status && error.status === 401 && localStorage) {\n         // Unauthorized.\n-        cleanAuthData(localStorage);\n+        clearStorageAuthToken(localStorage);\n         client.resetWebsocket();\n       } else {\n         console.error(error);\n@@ -58,8 +53,7 @@ export const setAuthToken = token => (\n   _,\n   { localStorage, client }\n ) => {\n-  localStorage.setItem('exp', jwtDecode(token).exp);\n-  localStorage.setItem('token', token);\n+  setStorageAuthToken(localStorage, token);\n \n   // Dispatch the set auth token action. For some browsers and situations, we\n   // may not be able to persist the auth token any other way. Keep it in redux!\n@@ -76,9 +70,7 @@ export const handleSuccessfulLogin = (user, token) => (\n   _,\n   { client, localStorage, postMessage }\n ) => {\n-  const { exp } = jwtDecode(token);\n-  localStorage.setItem('exp', exp);\n-  localStorage.setItem('token', token);\n+  setStorageAuthToken(localStorage, token);\n \n   // Send the message via the messages service to the window.opener if it\n   // exists.\n@@ -117,7 +109,7 @@ export const logout = () => async (\n   }\n \n   // Clear the auth data persisted to localStorage.\n-  cleanAuthData(localStorage);\n+  clearStorageAuthToken(localStorage);\n \n   // Reset the websocket.\n   client.resetWebsocket();"
    },
    {
      "sha": "a23a6dd0d6ca1de248baca64a9749851bef4e706",
      "filename": "client/coral-framework/services/auth.js",
      "status": "added",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/services/auth.js",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/services/auth.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-framework/services/auth.js?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -0,0 +1,11 @@\n+import jwtDecode from 'jwt-decode';\n+\n+export const setStorageAuthToken = (storage, token) => {\n+  storage.setItem('exp', jwtDecode(token).exp);\n+  storage.setItem('token', token);\n+};\n+\n+export const clearStorageAuthToken = storage => {\n+  storage.removeItem('token');\n+  storage.removeItem('exp');\n+};"
    },
    {
      "sha": "300cd3e700b8618c213e7f4ba57157f5cdf70f40",
      "filename": "client/coral-framework/services/bootstrap.js",
      "status": "modified",
      "additions": 25,
      "deletions": 1,
      "changes": 26,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/services/bootstrap.js",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/client/coral-framework/services/bootstrap.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-framework/services/bootstrap.js?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -22,6 +22,7 @@ import {\n } from 'coral-framework/services/storage';\n import { createHistory } from 'coral-framework/services/history';\n import { createIntrospection } from 'coral-framework/services/introspection';\n+import { setStorageAuthToken } from 'coral-framework/services/auth';\n import introspectionData from 'coral-framework/graphql/introspection.json';\n import coreReducers from '../reducers';\n import { checkLogin as checkLoginAction } from '../actions/auth';\n@@ -46,7 +47,30 @@ const getAuthToken = (store, storage) => {\n     // capable of storing the token in localStorage, then we would have\n     // persisted it to the redux state.\n     return state.config.auth_token || state.auth.token;\n-  } else if (!bowser.safari && !bowser.ios && storage) {\n+  } else if (location.hash && location.hash.startsWith('#access_token=')) {\n+    // Check to see if the access token is living in the URL as a hash.\n+    const token = location.hash.substring(14);\n+\n+    history.replaceState(\n+      {},\n+      document.title,\n+      window.location.pathname + window.location.search\n+    );\n+\n+    // Once we clear the hash above, this login method will not persist across\n+    // refreshes. We will need to persist the token to storage if it's\n+    // available.\n+    if (storage) {\n+      setStorageAuthToken(storage, token);\n+    }\n+\n+    return token;\n+  } else if (\n+    !bowser.safari &&\n+    !bowser.ios &&\n+    storage &&\n+    storage.getItem('token')\n+  ) {\n     // Use local storage auth tokens where there's a stable api.\n     return storage.getItem('token');\n   }"
    },
    {
      "sha": "7966d3b3667c83863be67de7d6e840d658baff30",
      "filename": "plugins/talk-plugin-toxic-comments/server/perspective.js",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/plugins/talk-plugin-toxic-comments/server/perspective.js",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/plugins/talk-plugin-toxic-comments/server/perspective.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/plugins/talk-plugin-toxic-comments/server/perspective.js?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -10,7 +10,8 @@ const debug = require('debug')('talk:plugin:toxic-comments');\n \n /**\n  * Get scores from the perspective api\n- * @param  {string}  text  text to be anaylized\n+ *\n+ * @param  {string}  text  text to be analyzed\n  * @return {object}        object containing toxicity scores\n  */\n async function getScores(text) {\n@@ -43,13 +44,13 @@ async function getScores(text) {\n \n   // If we get an error, just say it's not a toxic comment.\n   if (data.error) {\n-    debug('Recieved Error when submitting: %o', data.error);\n+    debug('Received Error when submitting: %o', data.error);\n     return {\n       TOXICITY: {\n-        summaryScore: 0.0,\n+        summaryScore: null,\n       },\n       SEVERE_TOXICITY: {\n-        summaryScore: 0.0,\n+        summaryScore: null,\n       },\n     };\n   }\n@@ -66,6 +67,7 @@ async function getScores(text) {\n \n /**\n  * Get toxicity probability\n+ *\n  * @param  {object} scores  scores as returned by `getScores`\n  * @return {number}         toxicity probability from 0 - 1.0\n  */\n@@ -74,7 +76,9 @@ function getProbability(scores) {\n }\n \n /**\n- * isToxic determines if given probabilty or scores meets the toxicity threshold.\n+ * isToxic determines if given probability or scores meets the toxicity\n+ * threshold.\n+ *\n  * @param  {object|number} scoresOrProbability scores or probability\n  * @return {boolean}\n  */\n@@ -89,6 +93,7 @@ function isToxic(scoresOrProbability) {\n /**\n  * maskKeyInError is a decorator that calls fn and masks the\n  * API_KEY in errors before throwing.\n+ *\n  * @param  {function} fn Function that returns a Promise\n  * @return {function} decorated function\n  */"
    },
    {
      "sha": "c31cf0c1393fd368eebc2ca25cf75776bc2d905a",
      "filename": "services/moderation/phases/links.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/services/moderation/phases/links.js",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/services/moderation/phases/links.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/services/moderation/phases/links.js?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -11,7 +11,7 @@ module.exports = (\n     },\n   }\n ) => {\n-  if (premodLinksEnable && linkify.test(comment.body)) {\n+  if (premodLinksEnable && linkify.test(comment.body.replace(/\\xAD/g, ''))) {\n     // Add the flag related to Trust to the comment.\n     return {\n       status: 'SYSTEM_WITHHELD',"
    },
    {
      "sha": "bede0b9fcc54c48e2f8cbb67680675b7b8bdf68c",
      "filename": "views/account/password/reset.njk",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/968d20e74436dad59823f07a316eedcde67633bc/views/account/password/reset.njk",
      "raw_url": "https://github.com/coralproject/talk/raw/968d20e74436dad59823f07a316eedcde67633bc/views/account/password/reset.njk",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/views/account/password/reset.njk?ref=968d20e74436dad59823f07a316eedcde67633bc",
      "patch": "@@ -8,7 +8,7 @@\n     <h1>{{ t('password_reset.set_new_password') }}</h1>\n     <p>{{ t('password_reset.change_password_help') }}</p>\n     <div class=\"error-console\"><span></span></div>\n-    <form id=\"reset-password-form\">\n+    <form id=\"reset-password-form\" method=\"post\">\n       <label for=\"password\">\n         {{ t('password_reset.new_password') }}\n         <input type=\"password\" name=\"password\" placeholder=\"{{ t('password_reset.new_password') }}\" />"
    }
  ]
}
