{
  "sha": "dec2d0062c5db720a0717666ba2e4474b9a41432",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmRlYzJkMDA2MmM1ZGI3MjBhMDcxNzY2NmJhMmU0NDc0YjlhNDE0MzI=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-11-04T19:13:56Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-11-04T19:13:56Z"
    },
    "message": "ssl redirect test",
    "tree": {
      "sha": "d05203be88c3ffe0c91817ace811341513ec7224",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/d05203be88c3ffe0c91817ace811341513ec7224"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/dec2d0062c5db720a0717666ba2e4474b9a41432",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/dec2d0062c5db720a0717666ba2e4474b9a41432",
  "html_url": "https://github.com/umputun/remark/commit/dec2d0062c5db720a0717666ba2e4474b9a41432",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/dec2d0062c5db720a0717666ba2e4474b9a41432/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a66886a731015289d1c597a4fbda0a8e232d5e98",
      "url": "https://api.github.com/repos/umputun/remark/commits/a66886a731015289d1c597a4fbda0a8e232d5e98",
      "html_url": "https://github.com/umputun/remark/commit/a66886a731015289d1c597a4fbda0a8e232d5e98"
    }
  ],
  "stats": {
    "total": 44,
    "additions": 41,
    "deletions": 3
  },
  "files": [
    {
      "sha": "ca35ee36a2aa6b269f1b0cf01d483f31b10ca72a",
      "filename": "backend/app/rest/api/rest.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/rest.go",
      "raw_url": "https://github.com/umputun/remark/raw/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/rest.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest.go?ref=dec2d0062c5db720a0717666ba2e4474b9a41432",
      "patch": "@@ -83,7 +83,7 @@ func (s *Rest) Run(port int) {\n \t\terr := s.httpServer.ListenAndServe()\n \t\tlog.Printf(\"[WARN] http server terminated, %s\", err)\n \tcase Static:\n-\t\tlog.Printf(\"[INFO] activate rest https server in 'static' mode on port %d\", s.SSLConfig.Port)\n+\t\tlog.Printf(\"[INFO] activate https server in 'static' mode on port %d\", s.SSLConfig.Port)\n \n \t\ts.lock.Lock()\n \t\ts.httpsServer = s.makeHTTPServer(s.SSLConfig.Port, s.routes())\n@@ -92,15 +92,14 @@ func (s *Rest) Run(port int) {\n \n \t\tgo func() {\n \t\t\tlog.Printf(\"[INFO] activate http redirect server on port %d\", port)\n-\n \t\t\terr := s.httpServer.ListenAndServe()\n \t\t\tlog.Printf(\"[WARN] http redirect server terminated, %s\", err)\n \t\t}()\n \n \t\terr := s.httpsServer.ListenAndServeTLS(s.SSLConfig.Cert, s.SSLConfig.Key)\n \t\tlog.Printf(\"[WARN] https server terminated, %s\", err)\n \tcase Auto:\n-\t\tlog.Printf(\"[WARN] Autocert mode is not implemented yet\")\n+\t\tlog.Printf(\"[WARN] autocert mode is not implemented yet\")\n \t}\n \n }"
    },
    {
      "sha": "4eca924ede577a26286bf256be22cddf56acb3ae",
      "filename": "backend/app/rest/api/ssl.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/ssl.go",
      "raw_url": "https://github.com/umputun/remark/raw/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/ssl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/ssl.go?ref=dec2d0062c5db720a0717666ba2e4474b9a41432",
      "patch": "@@ -1,6 +1,7 @@\n package api\n \n import (\n+\t\"log\"\n \t\"net/http\"\n \t\"time\"\n \n@@ -32,6 +33,7 @@ type SSLConfig struct {\n \n // httpToHTTPSRouter creates new router which does redirect from http to https server\n func (s *Rest) httpToHTTPSRouter() chi.Router {\n+\tlog.Printf(\"[DEBUG] create https-to-http redirect routes\")\n \trouter := chi.NewRouter()\n \trouter.Use(middleware.RealIP, Recoverer)\n \trouter.Use(middleware.Throttle(1000), middleware.Timeout(60*time.Second))"
    },
    {
      "sha": "0c459fb7fc3e4cf5a778761409b47431d07336d9",
      "filename": "backend/app/rest/api/ssl_test.go",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark/blob/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/ssl_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/dec2d0062c5db720a0717666ba2e4474b9a41432/backend/app/rest/api/ssl_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/ssl_test.go?ref=dec2d0062c5db720a0717666ba2e4474b9a41432",
      "patch": "@@ -0,0 +1,37 @@\n+package api\n+\n+import (\n+\t\"crypto/tls\"\n+\t\"net/http\"\n+\t\"net/http/httptest\"\n+\t\"testing\"\n+\n+\t\"github.com/stretchr/testify/assert\"\n+\t\"github.com/stretchr/testify/require\"\n+)\n+\n+func TestSSL_Redirect(t *testing.T) {\n+\trest := Rest{RemarkURL: \"https://localhost:443\"}\n+\n+\tts := httptest.NewServer(rest.httpToHTTPSRouter())\n+\tdefer ts.Close()\n+\n+\tclient := http.Client{\n+\t\t// prevent http redirect\n+\t\tCheckRedirect: func(req *http.Request, via []*http.Request) error {\n+\t\t\treturn http.ErrUseLastResponse\n+\t\t},\n+\n+\t\t// allow self-signed certificate\n+\t\tTransport: &http.Transport{\n+\t\t\tTLSClientConfig: &tls.Config{InsecureSkipVerify: true},\n+\t\t},\n+\t}\n+\n+\t// check http to https redirect response\n+\tresp, err := client.Get(ts.URL + \"/blah?param=1\")\n+\trequire.Nil(t, err)\n+\tdefer resp.Body.Close()\n+\tassert.Equal(t, 307, resp.StatusCode)\n+\tassert.Equal(t, \"https://localhost:443/blah?param=1\", resp.Header.Get(\"Location\"))\n+}"
    }
  ]
}
