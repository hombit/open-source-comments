{
  "sha": "f8e36551ea6181a81bbe0a4967a34364e15e419a",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmY4ZTM2NTUxZWE2MTgxYTgxYmJlMGE0OTY3YTM0MzY0ZTE1ZTQxOWE=",
  "commit": {
    "author": {
      "name": "Aleksandr Melnikov",
      "email": "a.melnikov@mylivn.com",
      "date": "2018-11-23T23:47:42Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2018-11-23T23:47:42Z"
    },
    "message": "added maximum votes limit per comment (#223)\n\n* added maximum votes limit per comment\r\n\r\n* added 'max-votes' param description into README",
    "tree": {
      "sha": "d347de4c8c5247449b4cb689e9d08207f2c15419",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/d347de4c8c5247449b4cb689e9d08207f2c15419"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/f8e36551ea6181a81bbe0a4967a34364e15e419a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/f8e36551ea6181a81bbe0a4967a34364e15e419a",
  "html_url": "https://github.com/umputun/remark/commit/f8e36551ea6181a81bbe0a4967a34364e15e419a",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/f8e36551ea6181a81bbe0a4967a34364e15e419a/comments",
  "author": {
    "login": "amelnikov-mylivn",
    "id": 20863850,
    "node_id": "MDQ6VXNlcjIwODYzODUw",
    "avatar_url": "https://avatars2.githubusercontent.com/u/20863850?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/amelnikov-mylivn",
    "html_url": "https://github.com/amelnikov-mylivn",
    "followers_url": "https://api.github.com/users/amelnikov-mylivn/followers",
    "following_url": "https://api.github.com/users/amelnikov-mylivn/following{/other_user}",
    "gists_url": "https://api.github.com/users/amelnikov-mylivn/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/amelnikov-mylivn/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/amelnikov-mylivn/subscriptions",
    "organizations_url": "https://api.github.com/users/amelnikov-mylivn/orgs",
    "repos_url": "https://api.github.com/users/amelnikov-mylivn/repos",
    "events_url": "https://api.github.com/users/amelnikov-mylivn/events{/privacy}",
    "received_events_url": "https://api.github.com/users/amelnikov-mylivn/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "11d8338989f3947216de692c7b825aadb07ece3b",
      "url": "https://api.github.com/repos/umputun/remark/commits/11d8338989f3947216de692c7b825aadb07ece3b",
      "html_url": "https://github.com/umputun/remark/commit/11d8338989f3947216de692c7b825aadb07ece3b"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 32,
    "deletions": 0
  },
  "files": [
    {
      "sha": "84776d78da2551d1310286a138720aad7225e50d",
      "filename": "README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/f8e36551ea6181a81bbe0a4967a34364e15e419a/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/f8e36551ea6181a81bbe0a4967a34364e15e419a/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/README.md?ref=f8e36551ea6181a81bbe0a4967a34364e15e419a",
      "patch": "@@ -124,6 +124,7 @@ _this is the recommended way to run remark42_\n | ssl.cert                | SSL_CERT                |                       | path to cert.pem file                            |\n | ssl.key                 | SSL_KEY                 |                       | path to key.pem file                             |\n | max-comment             | MAX_COMMENT_SIZE        | 2048                  | comment's size limit                             |\n+| max-votes               | MAX_VOTES               | `-1`                  | votes limit per comment, `-1` - unlimited        |\n | low-score               | LOW_SCORE               | `-5`                  | low score threshold                              |\n | critical-score          | CRITICAL_SCORE          | `-10`                 | critical score threshold                         |\n | edit-time               | EDIT_TIME               | `5m`                  | edit window                                      |"
    },
    {
      "sha": "ef6930c3ebdcf5e2d779665b59fd9f2238233df1",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server.go?ref=f8e36551ea6181a81bbe0a4967a34364e15e419a",
      "patch": "@@ -45,6 +45,7 @@ type ServerCommand struct {\n \tMaxBackupFiles int           `long:\"max-back\" env:\"MAX_BACKUP_FILES\" default:\"10\" description:\"max backups to keep\"`\n \tImageProxy     bool          `long:\"img-proxy\" env:\"IMG_PROXY\" description:\"enable image proxy\"`\n \tMaxCommentSize int           `long:\"max-comment\" env:\"MAX_COMMENT_SIZE\" default:\"2048\" description:\"max comment size\"`\n+\tMaxVotes       int           `long:\"max-votes\" env:\"MAX_VOTES\" default:\"-1\" description:\"maximum number of votes per comment\"`\n \tLowScore       int           `long:\"low-score\" env:\"LOW_SCORE\" default:\"-5\" description:\"low score threshold\"`\n \tCriticalScore  int           `long:\"critical-score\" env:\"CRITICAL_SCORE\" default:\"-10\" description:\"critical score threshold\"`\n \tReadOnlyAge    int           `long:\"read-age\" env:\"READONLY_AGE\" default:\"0\" description:\"read-only age of comments\"`\n@@ -206,6 +207,7 @@ func (s *ServerCommand) newServerApp() (*serverApp, error) {\n \t\tEditDuration:   s.EditDuration,\n \t\tAdminStore:     adminStore,\n \t\tMaxCommentSize: s.MaxCommentSize,\n+\t\tMaxVotes:       s.MaxVotes,\n \t}\n \n \tloadingCache, err := s.makeCache()"
    },
    {
      "sha": "876622d832b508a07399bac8c0874b8bbc9f0328",
      "filename": "backend/app/store/service/service.go",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/umputun/remark/blob/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/store/service/service.go",
      "raw_url": "https://github.com/umputun/remark/raw/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/store/service/service.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service.go?ref=f8e36551ea6181a81bbe0a4967a34364e15e419a",
      "patch": "@@ -18,6 +18,7 @@ type DataStore struct {\n \tEditDuration   time.Duration\n \tAdminStore     admin.Store\n \tMaxCommentSize int\n+\tMaxVotes       int\n \n \t// granular locks\n \tscopedLocks struct {\n@@ -28,6 +29,7 @@ type DataStore struct {\n }\n \n const defaultCommentMaxSize = 2000\n+const defaultVotesLimit = -1 // unlimited\n \n // Create prepares comment and forward to Interface.Create\n func (s *DataStore) Create(comment store.Comment) (commentID string, err error) {\n@@ -97,6 +99,15 @@ func (s *DataStore) Vote(locator store.Locator, commentID string, userID string,\n \t\treturn comment, errors.Errorf(\"user %s already voted for %s\", userID, commentID)\n \t}\n \n+\tmaxVotes := s.MaxVotes\n+\tif s.MaxVotes <= 0 {\n+\t\tmaxVotes = defaultVotesLimit\n+\t}\n+\n+\tif maxVotes >= 0 && len(comment.Votes) >= maxVotes {\n+\t\treturn comment, errors.Errorf(\"maximum number of votes exceeded for comment %s\", commentID)\n+\t}\n+\n \t// reset vote if user changed to opposite\n \tif voted && v != val {\n \t\tdelete(comment.Votes, userID)"
    },
    {
      "sha": "99fcef35f95324aa2ee859b99b12790436abd981",
      "filename": "backend/app/store/service/service_test.go",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark/blob/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/store/service/service_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/f8e36551ea6181a81bbe0a4967a34364e15e419a/backend/app/store/service/service_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service_test.go?ref=f8e36551ea6181a81bbe0a4967a34364e15e419a",
      "patch": "@@ -116,6 +116,24 @@ func TestService_Vote(t *testing.T) {\n \tassert.Equal(t, map[string]bool{}, res[0].Votes, \"vote reset ok\")\n }\n \n+func TestService_VoteLimit(t *testing.T) {\n+\tdefer os.Remove(testDb)\n+\tb := DataStore{Interface: prepStoreEngine(t), AdminStore: admin.NewStaticKeyStore(\"secret 123\"), MaxVotes: 2}\n+\n+\t_, err := b.Vote(store.Locator{URL: \"https://radio-t.com\", SiteID: \"radio-t\"}, \"id-1\", \"user2\", true)\n+\tassert.Nil(t, err)\n+\n+\t_, err = b.Vote(store.Locator{URL: \"https://radio-t.com\", SiteID: \"radio-t\"}, \"id-1\", \"user3\", true)\n+\tassert.Nil(t, err)\n+\n+\t_, err = b.Vote(store.Locator{URL: \"https://radio-t.com\", SiteID: \"radio-t\"}, \"id-1\", \"user4\", true)\n+\tassert.NotNil(t, err, \"vote limit reached\")\n+\tassert.True(t, strings.HasPrefix(err.Error(), \"maximum number of votes exceeded for comment id-1\"))\n+\n+\t_, err = b.Vote(store.Locator{URL: \"https://radio-t.com\", SiteID: \"radio-t\"}, \"id-2\", \"user4\", true)\n+\tassert.Nil(t, err)\n+}\n+\n func TestService_VoteAggressive(t *testing.T) {\n \tdefer os.Remove(testDb)\n \tb := DataStore{Interface: prepStoreEngine(t), AdminStore: admin.NewStaticKeyStore(\"secret 123\")}"
    }
  ]
}
