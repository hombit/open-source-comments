{
  "sha": "8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
  "node_id": "MDY6Q29tbWl0MTA1Nzg5MzY1OjhlNWViMjZiYzNmYzg3N2JlNWI4YTI4ZGU2ZmViMDZjMGY5Zjc1ZmU=",
  "commit": {
    "author": {
      "name": "Gregor Aisch",
      "email": "gka@users.noreply.github.com",
      "date": "2018-11-26T16:43:52Z"
    },
    "committer": {
      "name": "Gregor Aisch",
      "email": "gka@users.noreply.github.com",
      "date": "2018-11-26T16:43:52Z"
    },
    "message": "make language in schnack comment form and display customizable",
    "tree": {
      "sha": "6c91c592ae1eb7c05a061c1eb1d5938582a6e446",
      "url": "https://api.github.com/repos/schn4ck/schnack/git/trees/6c91c592ae1eb7c05a061c1eb1d5938582a6e446"
    },
    "url": "https://api.github.com/repos/schn4ck/schnack/git/commits/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/schn4ck/schnack/commits/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
  "html_url": "https://github.com/schn4ck/schnack/commit/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
  "comments_url": "https://api.github.com/repos/schn4ck/schnack/commits/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/comments",
  "author": {
    "login": "gka",
    "id": 617518,
    "node_id": "MDQ6VXNlcjYxNzUxOA==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/617518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gka",
    "html_url": "https://github.com/gka",
    "followers_url": "https://api.github.com/users/gka/followers",
    "following_url": "https://api.github.com/users/gka/following{/other_user}",
    "gists_url": "https://api.github.com/users/gka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gka/subscriptions",
    "organizations_url": "https://api.github.com/users/gka/orgs",
    "repos_url": "https://api.github.com/users/gka/repos",
    "events_url": "https://api.github.com/users/gka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gka/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "gka",
    "id": 617518,
    "node_id": "MDQ6VXNlcjYxNzUxOA==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/617518?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gka",
    "html_url": "https://github.com/gka",
    "followers_url": "https://api.github.com/users/gka/followers",
    "following_url": "https://api.github.com/users/gka/following{/other_user}",
    "gists_url": "https://api.github.com/users/gka/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gka/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gka/subscriptions",
    "organizations_url": "https://api.github.com/users/gka/orgs",
    "repos_url": "https://api.github.com/users/gka/repos",
    "events_url": "https://api.github.com/users/gka/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gka/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "acc6ad80ef22c63b0bb3b5d7fe3b2b871ab8cd5c",
      "url": "https://api.github.com/repos/schn4ck/schnack/commits/acc6ad80ef22c63b0bb3b5d7fe3b2b871ab8cd5c",
      "html_url": "https://github.com/schn4ck/schnack/commit/acc6ad80ef22c63b0bb3b5d7fe3b2b871ab8cd5c"
    }
  ],
  "stats": {
    "total": 130,
    "additions": 75,
    "deletions": 55
  },
  "files": [
    {
      "sha": "6abf477ed0e1b1de8ac92fcd52fb20149a429189",
      "filename": "build/client.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/build/client.js",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/build/client.js",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/build/client.js?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -1 +1 @@\n-!function(n,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):n.Schnack=t()}(this,function(){\"use strict\";function n(n){var t,e=\"\";n.user?(e+=\"\\n    \",n.user.admin&&(e+='\\n    <div class=\"schnack-settings\">\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\">un</button>\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\">mute notifications</button>\\n    </div>\\n    '),e+='\\n<div class=\"schnack-login-status\">\\n    (signed in as <span class=\"schnack-user\">@'+(null==(t=n.user.name)?\"\":t)+'</span> :: <a class=\"schnack-signout\" href=\"#\">sign out</a>)\\n</div>\\n<div class=\"schnack-above\">\\n    <div class=\"schnack-form\">\\n        <textarea class=\"schnack-body\" placeholder=\"Post a comment. Markdown is supported!\"></textarea>\\n        <blockquote class=\"schnack-body\" style=\"display:none\"></blockquote>\\n        <br>\\n        <button class=\"schnack-preview\">Preview</button>\\n        <button style=\"display:none\" class=\"schnack-write\">Edit</button>&nbsp;\\n        <button class=\"schnack-button\">Send comment</button>&nbsp;\\n        <button class=\"schnack-cancel-reply\" style=\"display:none\">Cancel</button>\\n    </div>\\n</div>\\n'):(e+=\"\\nTo post a comment you need to sign in via<br>\\n\",n.auth.forEach(function(n,a){e+=\"\\n    \"+(null==(t=a?\" or \":\"\")?\"\":t)+'<button class=\"schnack-signin-'+(null==(t=n.id)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n.id)?\"\":t)+'\"></i> '+(null==(t=n.name)?\"\":t)+\"</button>\\n\"}),e+=\"\\n\"),e+=\"\\n\";var a=[];return n.replies={},n.comments.forEach(function(t){t.reply_to?(n.replies[t.reply_to]||(n.replies[t.reply_to]=[]),n.replies[t.reply_to].push(t)):a.push(t)}),n.comments=a,e+=\"\\n\"+(null==(t=n.comments_tpl(n))?\"\":t)+'\\n<style type=\"text/css\">\\n.schnack-action > * { pointer-events: none; }\\n</style>\\n'}function t(n){var t,e=\"\";return e+='<ul class=\"schnack-comments\">\\n    ',n.comments.forEach(function(a){e+='\\n        <li id=\"comment-'+(null==(t=a.id)?\"\":t)+'\" data-id=\"'+(null==(t=a.id)?\"\":t)+'\" class=\"schnack-comment',a.approved||a.trusted||(e+=\" schnack-not-approved\"),e+='\">\\n            <div class=\"schnack-dateline\">\\n                <span class=\"schnack-author\">',a.author_url&&(e+='<a href=\"'+(null==(t=a.author_url)?\"\":t)+'\" target=\"_blank\">'),e+=null==(t=a.display_name||a.name)?\"\":t,a.author_url&&(e+=\"</a>\"),e+=\"</span>\\n                \",n.user&&n.user.admin&&!a.trusted&&[\"trust\",\"block\"].forEach(function(n){e+='\\n                <button class=\"schnack-action\" data-target=\"'+(null==(t=a.user_id)?\"\":t)+'\" data-class=\"user\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                \"}),e+='\\n                <span class=\"schnack-date\"><a href=\"#comment-'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=a.created_at_s)?\"\":t)+'</a></span>\\n            </div>\\n            <blockquote class=\"schnack-body\">\\n                '+(null==(t=a.comment)?\"\":t)+\"\\n            </blockquote>\\n            \",a.approved||a.trusted?n.user&&(e+='\\n            <button class=\"schnack-reply\" data-reply-to=\"'+(null==(t=a.id)?\"\":t)+'\">reply</button>\\n            '):(e+='\\n            <div class=\"schnack-awaiting-approval\">\\n                ',n.user&&n.user.admin&&[\"approve\",\"reject\"].forEach(function(n){e+='\\n                <button class=\"schnack-action\" data-target=\"'+(null==(t=a.id)?\"\":t)+'\" data-class=\"comment\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                \"}),e+=\"\\n                \"+(null==(t=n.user.admin?\"This\":\"Your\")?\"\":t)+\" comment is still waiting for \"+(null==(t=n.user.admin?\"your \":\"\")?\"\":t)+\"approval\"+(null==(t=n.user.admin?\"\":\" by the site owner\")?\"\":t)+\".\\n            </div>\\n            \"),e+=\"\\n            \",n.replies[a.id]&&(n.comments=n.replies[a.id],e+=\"\\n            \"+(null==(t=n.comments_tpl(n))?\"\":t)+\"\\n            \"),e+=\"\\n        </li>\\n    \"}),e+=\"\\n</ul>\\n\"}var e=\"function\"==typeof fetch?fetch.bind():function(n,t){return t=t||{},new Promise(function(e,a){function s(){var n,t=[],e=[],a={};return o.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,o,i){t.push(o=o.toLowerCase()),e.push([o,i]),n=a[o],a[o]=n?n+\",\"+i:i}),{ok:2==(o.status/100|0),status:o.status,statusText:o.statusText,url:o.responseURL,clone:s,text:function(){return Promise.resolve(o.responseText)},json:function(){return Promise.resolve(o.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([o.response]))},headers:{keys:function(){return t},entries:function(){return e},get:function(n){return a[n.toLowerCase()]},has:function(n){return n.toLowerCase()in a}}}}var o=new XMLHttpRequest;o.open(t.method||\"get\",n,!0);for(var i in t.headers)o.setRequestHeader(i,t.headers[i]);o.withCredentials=\"include\"==t.credentials,o.onload=function(){e(s())},o.onerror=a,o.send(t.body||null)})},a=function(n){return document.querySelector(n)},s=function(n){return document.querySelectorAll(n)},o=function(n){this.options=n,this.options.endpoint=n.host+\"/comments/\"+n.slug,this.initialized=!1,this.firstLoad=!0;var t=new URL(n.host);\"localhost\"!==t.hostname&&(document.domain=t.hostname.split(\".\").slice(1).join(\".\")),this.refresh()};return o.prototype.refresh=function(){var o=this,i=this.options,c=i.target,l=i.slug,r=i.host,u=i.endpoint;e(u,{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(n){return n.json()}).then(function(i){i.comments_tpl=t,a(c).innerHTML=n(i);var d=a(c+\" div.schnack-above\"),h=a(c+\" div.schnack-form\"),p=a(c+\" textarea.schnack-body\"),f=a(c+\" .schnack-form blockquote.schnack-body\"),m=window.localStorage.getItem(\"schnack-draft-\"+l);m&&p&&(p.value=m);var y=a(c+\" .schnack-button\"),k=a(c+\" .schnack-preview\"),v=a(c+\" .schnack-write\"),b=a(c+\" .schnack-cancel-reply\"),g=s(c+\" .schnack-reply\");if(y&&(y.addEventListener(\"click\",function(n){var t=p.value;e(u,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t,replyTo:h.dataset.reply})}).then(function(n){return n.json()}).then(function(n){p.value=\"\",window.localStorage.setItem(\"schnack-draft-\"+l,p.value),n.id&&(o.firstLoad=!0,window.location.hash=\"#comment-\"+n.id),o.refresh()})}),k.addEventListener(\"click\",function(n){var t=p.value;p.style.display=\"none\",k.style.display=\"none\",f.style.display=\"block\",v.style.display=\"inline\",e(r+\"/markdown\",{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t})}).then(function(n){return n.json()}).then(function(n){f.innerHTML=n.html})}),v.addEventListener(\"click\",function(n){p.style.display=\"inline\",k.style.display=\"inline\",f.style.display=\"none\",v.style.display=\"none\"}),p.addEventListener(\"keyup\",function(){window.localStorage.setItem(\"schnack-draft-\"+l,p.value)}),g.forEach(function(n){n.addEventListener(\"click\",function(){h.dataset.reply=n.dataset.replyTo,b.style.display=\"inline-block\",n.parentElement.appendChild(h)})}),b.addEventListener(\"click\",function(){d.appendChild(h),delete h.dataset.reply,b.style.display=\"none\"})),i.user){var w=a(\"a.schnack-signout\");w&&w.addEventListener(\"click\",function(n){n.preventDefault(),e(r+\"/signout\",{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(){return o.refresh()})})}else i.auth.forEach(function(n){var t=a(c+\" .schnack-signin-\"+n.id);t&&t.addEventListener(\"click\",function(t){var a=function(t){void 0===t&&(t=\"\");var e=window.open(r+\"/auth/\"+n.id+(t?\"/d/\"+t:\"\"),n.name+\" Sign-In\",\"resizable,scrollbars,status,width=600,height=500\");window.__schnack_wait_for_oauth=function(){e.close(),o.refresh()}};if(\"mastodon\"==n.id){var s=window.prompt(\"Please enter the domain name of the Mastodon instance you want to sign in with:\",\"mastodon.social\");e(\"https://\"+s+\"/api/v1/instance\").then(function(n){return n.json()}).then(function(n){n.uri==s?a(s):alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')}).catch(function(n){alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')})}else a()})});if(i.user&&i.user.admin){if(!o.initialized){var L=document.createElement(\"script\");L.setAttribute(\"src\",r+\"/push.js\"),document.head.appendChild(L),o.initialized=!0}var E=function(n){var t=n.target.dataset;e(r+\"/\"+t.class+\"/\"+t.target+\"/\"+t.action,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:\"\"}).then(function(){return o.refresh()})};document.querySelectorAll(\".schnack-action\").forEach(function(n){n.addEventListener(\"click\",E)})}if(o.firstLoad&&window.location.hash.match(/^#comment-\\d+$/)){var _=document.querySelector(window.location.hash);_.scrollIntoView(),_.classList.add(\"schnack-highlight\"),o.firstLoad=!1}})},o});\n+!function(n,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):n.Schnack=t()}(this,function(){\"use strict\";function n(n){var t,e=\"\";n.user?(e+=\"\\n    \",n.user.admin&&(e+='\\n    <div class=\"schnack-settings\">\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\">'+(null==(t=n.partials.UnMute)?\"\":t)+'</button>\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\">'+(null==(t=n.partials.Mute)?\"\":t)+\"</button>\\n    </div>\\n    \"),e+='\\n<div class=\"schnack-login-status\">\\n    '+(null==(t=n.partials.LoginStatus.replace(\"%USER%\",n.user.name))?\"\":t)+'\\n</div>\\n<div class=\"schnack-above\">\\n    <div class=\"schnack-form\">\\n        <textarea class=\"schnack-body\" placeholder=\"'+(null==(t=n.partials.PostComment)?\"\":t)+'\"></textarea>\\n        <blockquote class=\"schnack-body\" style=\"display:none\"></blockquote>\\n        <br>\\n        <button class=\"schnack-preview\">'+(null==(t=n.partials.Preview)?\"\":t)+'</button>\\n        <button style=\"display:none\" class=\"schnack-write\">'+(null==(t=n.partials.Edit)?\"\":t)+'</button>&nbsp;\\n        <button class=\"schnack-button\">'+(null==(t=n.partials.SendComment)?\"\":t)+'</button>&nbsp;\\n        <button class=\"schnack-cancel-reply\" style=\"display:none\">'+(null==(t=n.partials.Cancel)?\"\":t)+\"</button>\\n    </div>\\n</div>\\n\"):(e+=\"\\n\"+(null==(t=n.partials.SignInVia)?\"\":t)+\"<br>\\n\",n.auth.forEach(function(a,s){e+=\"\\n    \"+(null==(t=s?n.partials.Or:\"\")?\"\":t)+'<button class=\"schnack-signin-'+(null==(t=a.id)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=a.id)?\"\":t)+'\"></i> '+(null==(t=a.name)?\"\":t)+\"</button>\\n\"}),e+=\"\\n\"),e+=\"\\n\";var a=[];return n.replies={},n.comments.forEach(function(t){t.reply_to?(n.replies[t.reply_to]||(n.replies[t.reply_to]=[]),n.replies[t.reply_to].push(t)):a.push(t)}),n.comments=a,e+=\"\\n\"+(null==(t=n.comments_tpl(n))?\"\":t)+'\\n<style type=\"text/css\">\\n.schnack-action > * { pointer-events: none; }\\n</style>\\n'}function t(n){var t,e=\"\";return e+='<ul class=\"schnack-comments\">\\n    ',n.comments.forEach(function(a){e+='\\n        <li id=\"comment-'+(null==(t=a.id)?\"\":t)+'\" data-id=\"'+(null==(t=a.id)?\"\":t)+'\" class=\"schnack-comment',a.approved||a.trusted||(e+=\" schnack-not-approved\"),e+='\">\\n            <div class=\"schnack-comment-inner\">\\n                <div class=\"schnack-dateline\">\\n                    <span class=\"schnack-author\">',a.author_url&&(e+='<a href=\"'+(null==(t=a.author_url)?\"\":t)+'\" target=\"_blank\">'),e+=null==(t=a.display_name||a.name)?\"\":t,a.author_url&&(e+=\"</a>\"),e+=\"</span>\\n                    \",n.user&&n.user.admin&&!a.trusted&&[\"trust\",\"block\"].forEach(function(n){e+='\\n                    <button class=\"schnack-action\" data-target=\"'+(null==(t=a.user_id)?\"\":t)+'\" data-class=\"user\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                    \"}),e+='\\n                    <span class=\"schnack-date\"><a href=\"#comment-'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=a.created_at_s)?\"\":t)+'</a></span>\\n                </div>\\n                <blockquote class=\"schnack-body\">\\n                    '+(null==(t=a.comment)?\"\":t)+\"\\n                </blockquote>\\n                \",a.approved||a.trusted?n.user&&(e+='\\n                <button class=\"schnack-reply\" data-reply-to=\"'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=n.partials.Reply)?\"\":t)+\"</button>\\n                \"):(e+='\\n                <div class=\"schnack-awaiting-approval\">\\n                    ',n.user&&n.user.admin&&[\"approve\",\"reject\"].forEach(function(n){e+='\\n                    <button class=\"schnack-action\" data-target=\"'+(null==(t=a.id)?\"\":t)+'\" data-class=\"comment\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                    \"}),e+=\"\\n                    \"+(null==(t=n.user.admin?n.partials.AdminApproval:n.partials.WaitingForApproval)?\"\":t)+\"\\n                </div>\\n                \"),e+=\"\\n            </div>\\n            \",n.replies[a.id]&&(n.comments=n.replies[a.id],e+=\"\\n            \"+(null==(t=n.comments_tpl(n))?\"\":t)+\"\\n            \"),e+=\"\\n        </li>\\n    \"}),e+=\"\\n</ul>\\n\"}var e=\"function\"==typeof fetch?fetch.bind():function(n,t){return t=t||{},new Promise(function(e,a){function s(){var n,t=[],e=[],a={};return o.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,o,i){t.push(o=o.toLowerCase()),e.push([o,i]),n=a[o],a[o]=n?n+\",\"+i:i}),{ok:2==(o.status/100|0),status:o.status,statusText:o.statusText,url:o.responseURL,clone:s,text:function(){return Promise.resolve(o.responseText)},json:function(){return Promise.resolve(o.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([o.response]))},headers:{keys:function(){return t},entries:function(){return e},get:function(n){return a[n.toLowerCase()]},has:function(n){return n.toLowerCase()in a}}}}var o=new XMLHttpRequest;o.open(t.method||\"get\",n,!0);for(var i in t.headers)o.setRequestHeader(i,t.headers[i]);o.withCredentials=\"include\"==t.credentials,o.onload=function(){e(s())},o.onerror=a,o.send(t.body||null)})},a=function(n){return document.querySelector(n)},s=function(n){return document.querySelectorAll(n)},o=function(n){this.options=n,this.options.endpoint=n.host+\"/comments/\"+n.slug,this.initialized=!1,this.firstLoad=!0;var t=new URL(n.host);\"localhost\"!==t.hostname&&(document.domain=t.hostname.split(\".\").slice(1).join(\".\")),this.refresh()};return o.prototype.refresh=function(){var o=this,i=this.options,c=i.target,l=i.slug,r=i.host,u=i.endpoint,d=i.partials;e(u,{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(n){return n.json()}).then(function(i){i.comments_tpl=t,i.partials=d,a(c).innerHTML=n(i);var h=a(c+\" div.schnack-above\"),p=a(c+\" div.schnack-form\"),f=a(c+\" textarea.schnack-body\"),m=a(c+\" .schnack-form blockquote.schnack-body\"),y=window.localStorage.getItem(\"schnack-draft-\"+l);y&&f&&(f.value=y);var v=a(c+\" .schnack-button\"),k=a(c+\" .schnack-preview\"),b=a(c+\" .schnack-write\"),g=a(c+\" .schnack-cancel-reply\"),w=s(c+\" .schnack-reply\");if(v&&(v.addEventListener(\"click\",function(n){var t=f.value;e(u,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t,replyTo:p.dataset.reply})}).then(function(n){return n.json()}).then(function(n){f.value=\"\",window.localStorage.setItem(\"schnack-draft-\"+l,f.value),n.id&&(o.firstLoad=!0,window.location.hash=\"#comment-\"+n.id),o.refresh()})}),k.addEventListener(\"click\",function(n){var t=f.value;f.style.display=\"none\",k.style.display=\"none\",m.style.display=\"block\",b.style.display=\"inline\",e(r+\"/markdown\",{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t})}).then(function(n){return n.json()}).then(function(n){m.innerHTML=n.html})}),b.addEventListener(\"click\",function(n){f.style.display=\"inline\",k.style.display=\"inline\",m.style.display=\"none\",b.style.display=\"none\"}),f.addEventListener(\"keyup\",function(){window.localStorage.setItem(\"schnack-draft-\"+l,f.value)}),w.forEach(function(n){n.addEventListener(\"click\",function(){p.dataset.reply=n.dataset.replyTo,g.style.display=\"inline-block\",n.parentElement.appendChild(p)})}),g.addEventListener(\"click\",function(){h.appendChild(p),delete p.dataset.reply,g.style.display=\"none\"})),i.user){var L=a(\"a.schnack-signout\");L&&L.addEventListener(\"click\",function(n){n.preventDefault(),e(r+\"/signout\",{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(){return o.refresh()})})}else i.auth.forEach(function(n){var t=a(c+\" .schnack-signin-\"+n.id);t&&t.addEventListener(\"click\",function(t){var a=function(t){void 0===t&&(t=\"\");var e=window.open(r+\"/auth/\"+n.id+(t?\"/d/\"+t:\"\"),n.name+\" Sign-In\",\"resizable,scrollbars,status,width=600,height=500\");window.__schnack_wait_for_oauth=function(){e.close(),o.refresh()}};if(\"mastodon\"==n.id){var s=window.prompt(\"Please enter the domain name of the Mastodon instance you want to sign in with:\",\"mastodon.social\");e(\"https://\"+s+\"/api/v1/instance\").then(function(n){return n.json()}).then(function(n){n.uri==s?a(s):alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')}).catch(function(n){alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')})}else a()})});if(i.user&&i.user.admin){if(!o.initialized){var E=document.createElement(\"script\");E.setAttribute(\"src\",r+\"/push.js\"),document.head.appendChild(E),o.initialized=!0}var S=function(n){var t=n.target.dataset;e(r+\"/\"+t.class+\"/\"+t.target+\"/\"+t.action,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:\"\"}).then(function(){return o.refresh()})};document.querySelectorAll(\".schnack-action\").forEach(function(n){n.addEventListener(\"click\",S)})}if(o.firstLoad&&window.location.hash.match(/^#comment-\\d+$/)){var _=document.querySelector(window.location.hash);_.scrollIntoView(),_.classList.add(\"schnack-highlight\"),o.firstLoad=!1}})},o});"
    },
    {
      "sha": "6dfd1d7709a5cc58d37908858346b35671d65d42",
      "filename": "build/embed.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/build/embed.js",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/build/embed.js",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/build/embed.js?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -1 +1 @@\n-!function(){\"use strict\";function n(n){var t,e=\"\";n.user?(e+=\"\\n    \",n.user.admin&&(e+='\\n    <div class=\"schnack-settings\">\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\">un</button>\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\">mute notifications</button>\\n    </div>\\n    '),e+='\\n<div class=\"schnack-login-status\">\\n    (signed in as <span class=\"schnack-user\">@'+(null==(t=n.user.name)?\"\":t)+'</span> :: <a class=\"schnack-signout\" href=\"#\">sign out</a>)\\n</div>\\n<div class=\"schnack-above\">\\n    <div class=\"schnack-form\">\\n        <textarea class=\"schnack-body\" placeholder=\"Post a comment. Markdown is supported!\"></textarea>\\n        <blockquote class=\"schnack-body\" style=\"display:none\"></blockquote>\\n        <br>\\n        <button class=\"schnack-preview\">Preview</button>\\n        <button style=\"display:none\" class=\"schnack-write\">Edit</button>&nbsp;\\n        <button class=\"schnack-button\">Send comment</button>&nbsp;\\n        <button class=\"schnack-cancel-reply\" style=\"display:none\">Cancel</button>\\n    </div>\\n</div>\\n'):(e+=\"\\nTo post a comment you need to sign in via<br>\\n\",n.auth.forEach(function(n,a){e+=\"\\n    \"+(null==(t=a?\" or \":\"\")?\"\":t)+'<button class=\"schnack-signin-'+(null==(t=n.id)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n.id)?\"\":t)+'\"></i> '+(null==(t=n.name)?\"\":t)+\"</button>\\n\"}),e+=\"\\n\"),e+=\"\\n\";var a=[];return n.replies={},n.comments.forEach(function(t){t.reply_to?(n.replies[t.reply_to]||(n.replies[t.reply_to]=[]),n.replies[t.reply_to].push(t)):a.push(t)}),n.comments=a,e+=\"\\n\"+(null==(t=n.comments_tpl(n))?\"\":t)+'\\n<style type=\"text/css\">\\n.schnack-action > * { pointer-events: none; }\\n</style>\\n'}function t(n){var t,e=\"\";return e+='<ul class=\"schnack-comments\">\\n    ',n.comments.forEach(function(a){e+='\\n        <li id=\"comment-'+(null==(t=a.id)?\"\":t)+'\" data-id=\"'+(null==(t=a.id)?\"\":t)+'\" class=\"schnack-comment',a.approved||a.trusted||(e+=\" schnack-not-approved\"),e+='\">\\n            <div class=\"schnack-dateline\">\\n                <span class=\"schnack-author\">',a.author_url&&(e+='<a href=\"'+(null==(t=a.author_url)?\"\":t)+'\" target=\"_blank\">'),e+=null==(t=a.display_name||a.name)?\"\":t,a.author_url&&(e+=\"</a>\"),e+=\"</span>\\n                \",n.user&&n.user.admin&&!a.trusted&&[\"trust\",\"block\"].forEach(function(n){e+='\\n                <button class=\"schnack-action\" data-target=\"'+(null==(t=a.user_id)?\"\":t)+'\" data-class=\"user\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                \"}),e+='\\n                <span class=\"schnack-date\"><a href=\"#comment-'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=a.created_at_s)?\"\":t)+'</a></span>\\n            </div>\\n            <blockquote class=\"schnack-body\">\\n                '+(null==(t=a.comment)?\"\":t)+\"\\n            </blockquote>\\n            \",a.approved||a.trusted?n.user&&(e+='\\n            <button class=\"schnack-reply\" data-reply-to=\"'+(null==(t=a.id)?\"\":t)+'\">reply</button>\\n            '):(e+='\\n            <div class=\"schnack-awaiting-approval\">\\n                ',n.user&&n.user.admin&&[\"approve\",\"reject\"].forEach(function(n){e+='\\n                <button class=\"schnack-action\" data-target=\"'+(null==(t=a.id)?\"\":t)+'\" data-class=\"comment\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                \"}),e+=\"\\n                \"+(null==(t=n.user.admin?\"This\":\"Your\")?\"\":t)+\" comment is still waiting for \"+(null==(t=n.user.admin?\"your \":\"\")?\"\":t)+\"approval\"+(null==(t=n.user.admin?\"\":\" by the site owner\")?\"\":t)+\".\\n            </div>\\n            \"),e+=\"\\n            \",n.replies[a.id]&&(n.comments=n.replies[a.id],e+=\"\\n            \"+(null==(t=n.comments_tpl(n))?\"\":t)+\"\\n            \"),e+=\"\\n        </li>\\n    \"}),e+=\"\\n</ul>\\n\"}var e=\"function\"==typeof fetch?fetch.bind():function(n,t){return t=t||{},new Promise(function(e,a){function s(){var n,t=[],e=[],a={};return o.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,o,c){t.push(o=o.toLowerCase()),e.push([o,c]),n=a[o],a[o]=n?n+\",\"+c:c}),{ok:2==(o.status/100|0),status:o.status,statusText:o.statusText,url:o.responseURL,clone:s,text:function(){return Promise.resolve(o.responseText)},json:function(){return Promise.resolve(o.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([o.response]))},headers:{keys:function(){return t},entries:function(){return e},get:function(n){return a[n.toLowerCase()]},has:function(n){return n.toLowerCase()in a}}}}var o=new XMLHttpRequest;o.open(t.method||\"get\",n,!0);for(var c in t.headers)o.setRequestHeader(c,t.headers[c]);o.withCredentials=\"include\"==t.credentials,o.onload=function(){e(s())},o.onerror=a,o.send(t.body||null)})},a=function(n){return document.querySelector(n)},s=function(n){return document.querySelectorAll(n)},o=function(n){this.options=n,this.options.endpoint=n.host+\"/comments/\"+n.slug,this.initialized=!1,this.firstLoad=!0;var t=new URL(n.host);\"localhost\"!==t.hostname&&(document.domain=t.hostname.split(\".\").slice(1).join(\".\")),this.refresh()};o.prototype.refresh=function(){var o=this,c=this.options,i=c.target,r=c.slug,l=c.host,u=c.endpoint;e(u,{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(n){return n.json()}).then(function(c){c.comments_tpl=t,a(i).innerHTML=n(c);var d=a(i+\" div.schnack-above\"),h=a(i+\" div.schnack-form\"),p=a(i+\" textarea.schnack-body\"),f=a(i+\" .schnack-form blockquote.schnack-body\"),m=window.localStorage.getItem(\"schnack-draft-\"+r);m&&p&&(p.value=m);var y=a(i+\" .schnack-button\"),k=a(i+\" .schnack-preview\"),v=a(i+\" .schnack-write\"),b=a(i+\" .schnack-cancel-reply\"),g=s(i+\" .schnack-reply\");if(y&&(y.addEventListener(\"click\",function(n){var t=p.value;e(u,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t,replyTo:h.dataset.reply})}).then(function(n){return n.json()}).then(function(n){p.value=\"\",window.localStorage.setItem(\"schnack-draft-\"+r,p.value),n.id&&(o.firstLoad=!0,window.location.hash=\"#comment-\"+n.id),o.refresh()})}),k.addEventListener(\"click\",function(n){var t=p.value;p.style.display=\"none\",k.style.display=\"none\",f.style.display=\"block\",v.style.display=\"inline\",e(l+\"/markdown\",{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t})}).then(function(n){return n.json()}).then(function(n){f.innerHTML=n.html})}),v.addEventListener(\"click\",function(n){p.style.display=\"inline\",k.style.display=\"inline\",f.style.display=\"none\",v.style.display=\"none\"}),p.addEventListener(\"keyup\",function(){window.localStorage.setItem(\"schnack-draft-\"+r,p.value)}),g.forEach(function(n){n.addEventListener(\"click\",function(){h.dataset.reply=n.dataset.replyTo,b.style.display=\"inline-block\",n.parentElement.appendChild(h)})}),b.addEventListener(\"click\",function(){d.appendChild(h),delete h.dataset.reply,b.style.display=\"none\"})),c.user){var w=a(\"a.schnack-signout\");w&&w.addEventListener(\"click\",function(n){n.preventDefault(),e(l+\"/signout\",{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(){return o.refresh()})})}else c.auth.forEach(function(n){var t=a(i+\" .schnack-signin-\"+n.id);t&&t.addEventListener(\"click\",function(t){var a=function(t){void 0===t&&(t=\"\");var e=window.open(l+\"/auth/\"+n.id+(t?\"/d/\"+t:\"\"),n.name+\" Sign-In\",\"resizable,scrollbars,status,width=600,height=500\");window.__schnack_wait_for_oauth=function(){e.close(),o.refresh()}};if(\"mastodon\"==n.id){var s=window.prompt(\"Please enter the domain name of the Mastodon instance you want to sign in with:\",\"mastodon.social\");e(\"https://\"+s+\"/api/v1/instance\").then(function(n){return n.json()}).then(function(n){n.uri==s?a(s):alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')}).catch(function(n){alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')})}else a()})});if(c.user&&c.user.admin){if(!o.initialized){var L=document.createElement(\"script\");L.setAttribute(\"src\",l+\"/push.js\"),document.head.appendChild(L),o.initialized=!0}var E=function(n){var t=n.target.dataset;e(l+\"/\"+t.class+\"/\"+t.target+\"/\"+t.action,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:\"\"}).then(function(){return o.refresh()})};document.querySelectorAll(\".schnack-action\").forEach(function(n){n.addEventListener(\"click\",E)})}if(o.firstLoad&&window.location.hash.match(/^#comment-\\d+$/)){var _=document.querySelector(window.location.hash);_.scrollIntoView(),_.classList.add(\"schnack-highlight\"),o.firstLoad=!1}})},function(){var n=document.querySelector(\"script[data-schnack-target]\");if(!n)return console.warn(\"schnack script tag needs some data attributes\");var t=n.dataset,e=t.schnackSlug,a=new URL(n.getAttribute(\"src\")),s=a.protocol+\"//\"+a.host;new o({target:t.schnackTarget,slug:e,host:s})}()}();\n+!function(){\"use strict\";function n(n){var t,e=\"\";n.user?(e+=\"\\n    \",n.user.admin&&(e+='\\n    <div class=\"schnack-settings\">\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\">'+(null==(t=n.partials.UnMute)?\"\":t)+'</button>\\n        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\">'+(null==(t=n.partials.Mute)?\"\":t)+\"</button>\\n    </div>\\n    \"),e+='\\n<div class=\"schnack-login-status\">\\n    '+(null==(t=n.partials.LoginStatus.replace(\"%USER%\",n.user.name))?\"\":t)+'\\n</div>\\n<div class=\"schnack-above\">\\n    <div class=\"schnack-form\">\\n        <textarea class=\"schnack-body\" placeholder=\"'+(null==(t=n.partials.PostComment)?\"\":t)+'\"></textarea>\\n        <blockquote class=\"schnack-body\" style=\"display:none\"></blockquote>\\n        <br>\\n        <button class=\"schnack-preview\">'+(null==(t=n.partials.Preview)?\"\":t)+'</button>\\n        <button style=\"display:none\" class=\"schnack-write\">'+(null==(t=n.partials.Edit)?\"\":t)+'</button>&nbsp;\\n        <button class=\"schnack-button\">'+(null==(t=n.partials.SendComment)?\"\":t)+'</button>&nbsp;\\n        <button class=\"schnack-cancel-reply\" style=\"display:none\">'+(null==(t=n.partials.Cancel)?\"\":t)+\"</button>\\n    </div>\\n</div>\\n\"):(e+=\"\\n\"+(null==(t=n.partials.SignInVia)?\"\":t)+\"<br>\\n\",n.auth.forEach(function(a,s){e+=\"\\n    \"+(null==(t=s?n.partials.Or:\"\")?\"\":t)+'<button class=\"schnack-signin-'+(null==(t=a.id)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=a.id)?\"\":t)+'\"></i> '+(null==(t=a.name)?\"\":t)+\"</button>\\n\"}),e+=\"\\n\"),e+=\"\\n\";var a=[];return n.replies={},n.comments.forEach(function(t){t.reply_to?(n.replies[t.reply_to]||(n.replies[t.reply_to]=[]),n.replies[t.reply_to].push(t)):a.push(t)}),n.comments=a,e+=\"\\n\"+(null==(t=n.comments_tpl(n))?\"\":t)+'\\n<style type=\"text/css\">\\n.schnack-action > * { pointer-events: none; }\\n</style>\\n'}function t(n){var t,e=\"\";return e+='<ul class=\"schnack-comments\">\\n    ',n.comments.forEach(function(a){e+='\\n        <li id=\"comment-'+(null==(t=a.id)?\"\":t)+'\" data-id=\"'+(null==(t=a.id)?\"\":t)+'\" class=\"schnack-comment',a.approved||a.trusted||(e+=\" schnack-not-approved\"),e+='\">\\n            <div class=\"schnack-comment-inner\">\\n                <div class=\"schnack-dateline\">\\n                    <span class=\"schnack-author\">',a.author_url&&(e+='<a href=\"'+(null==(t=a.author_url)?\"\":t)+'\" target=\"_blank\">'),e+=null==(t=a.display_name||a.name)?\"\":t,a.author_url&&(e+=\"</a>\"),e+=\"</span>\\n                    \",n.user&&n.user.admin&&!a.trusted&&[\"trust\",\"block\"].forEach(function(n){e+='\\n                    <button class=\"schnack-action\" data-target=\"'+(null==(t=a.user_id)?\"\":t)+'\" data-class=\"user\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                    \"}),e+='\\n                    <span class=\"schnack-date\"><a href=\"#comment-'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=a.created_at_s)?\"\":t)+'</a></span>\\n                </div>\\n                <blockquote class=\"schnack-body\">\\n                    '+(null==(t=a.comment)?\"\":t)+\"\\n                </blockquote>\\n                \",a.approved||a.trusted?n.user&&(e+='\\n                <button class=\"schnack-reply\" data-reply-to=\"'+(null==(t=a.id)?\"\":t)+'\">'+(null==(t=n.partials.Reply)?\"\":t)+\"</button>\\n                \"):(e+='\\n                <div class=\"schnack-awaiting-approval\">\\n                    ',n.user&&n.user.admin&&[\"approve\",\"reject\"].forEach(function(n){e+='\\n                    <button class=\"schnack-action\" data-target=\"'+(null==(t=a.id)?\"\":t)+'\" data-class=\"comment\" data-action=\"'+(null==(t=n)?\"\":t)+'\"><i class=\"icon schnack-icon-'+(null==(t=n)?\"\":t)+'\"></i> <span>'+(null==(t=n)?\"\":t)+\"</span></button>\\n                    \"}),e+=\"\\n                    \"+(null==(t=n.user.admin?n.partials.AdminApproval:n.partials.WaitingForApproval)?\"\":t)+\"\\n                </div>\\n                \"),e+=\"\\n            </div>\\n            \",n.replies[a.id]&&(n.comments=n.replies[a.id],e+=\"\\n            \"+(null==(t=n.comments_tpl(n))?\"\":t)+\"\\n            \"),e+=\"\\n        </li>\\n    \"}),e+=\"\\n</ul>\\n\"}var e=\"function\"==typeof fetch?fetch.bind():function(n,t){return t=t||{},new Promise(function(e,a){function s(){var n,t=[],e=[],a={};return i.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(s,i,o){t.push(i=i.toLowerCase()),e.push([i,o]),n=a[i],a[i]=n?n+\",\"+o:o}),{ok:2==(i.status/100|0),status:i.status,statusText:i.statusText,url:i.responseURL,clone:s,text:function(){return Promise.resolve(i.responseText)},json:function(){return Promise.resolve(i.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([i.response]))},headers:{keys:function(){return t},entries:function(){return e},get:function(n){return a[n.toLowerCase()]},has:function(n){return n.toLowerCase()in a}}}}var i=new XMLHttpRequest;i.open(t.method||\"get\",n,!0);for(var o in t.headers)i.setRequestHeader(o,t.headers[o]);i.withCredentials=\"include\"==t.credentials,i.onload=function(){e(s())},i.onerror=a,i.send(t.body||null)})},a=function(n){return document.querySelector(n)},s=function(n){return document.querySelectorAll(n)},i=function(n){this.options=n,this.options.endpoint=n.host+\"/comments/\"+n.slug,this.initialized=!1,this.firstLoad=!0;var t=new URL(n.host);\"localhost\"!==t.hostname&&(document.domain=t.hostname.split(\".\").slice(1).join(\".\")),this.refresh()};i.prototype.refresh=function(){var i=this,o=this.options,c=o.target,l=o.slug,r=o.host,u=o.endpoint,d=o.partials;e(u,{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(n){return n.json()}).then(function(o){o.comments_tpl=t,o.partials=d,a(c).innerHTML=n(o);var p=a(c+\" div.schnack-above\"),h=a(c+\" div.schnack-form\"),m=a(c+\" textarea.schnack-body\"),f=a(c+\" .schnack-form blockquote.schnack-body\"),v=window.localStorage.getItem(\"schnack-draft-\"+l);v&&m&&(m.value=v);var y=a(c+\" .schnack-button\"),k=a(c+\" .schnack-preview\"),b=a(c+\" .schnack-write\"),g=a(c+\" .schnack-cancel-reply\"),w=s(c+\" .schnack-reply\");if(y&&(y.addEventListener(\"click\",function(n){var t=m.value;e(u,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t,replyTo:h.dataset.reply})}).then(function(n){return n.json()}).then(function(n){m.value=\"\",window.localStorage.setItem(\"schnack-draft-\"+l,m.value),n.id&&(i.firstLoad=!0,window.location.hash=\"#comment-\"+n.id),i.refresh()})}),k.addEventListener(\"click\",function(n){var t=m.value;m.style.display=\"none\",k.style.display=\"none\",f.style.display=\"block\",b.style.display=\"inline\",e(r+\"/markdown\",{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({comment:t})}).then(function(n){return n.json()}).then(function(n){f.innerHTML=n.html})}),b.addEventListener(\"click\",function(n){m.style.display=\"inline\",k.style.display=\"inline\",f.style.display=\"none\",b.style.display=\"none\"}),m.addEventListener(\"keyup\",function(){window.localStorage.setItem(\"schnack-draft-\"+l,m.value)}),w.forEach(function(n){n.addEventListener(\"click\",function(){h.dataset.reply=n.dataset.replyTo,g.style.display=\"inline-block\",n.parentElement.appendChild(h)})}),g.addEventListener(\"click\",function(){p.appendChild(h),delete h.dataset.reply,g.style.display=\"none\"})),o.user){var S=a(\"a.schnack-signout\");S&&S.addEventListener(\"click\",function(n){n.preventDefault(),e(r+\"/signout\",{credentials:\"include\",headers:{\"Content-Type\":\"application/json\"}}).then(function(){return i.refresh()})})}else o.auth.forEach(function(n){var t=a(c+\" .schnack-signin-\"+n.id);t&&t.addEventListener(\"click\",function(t){var a=function(t){void 0===t&&(t=\"\");var e=window.open(r+\"/auth/\"+n.id+(t?\"/d/\"+t:\"\"),n.name+\" Sign-In\",\"resizable,scrollbars,status,width=600,height=500\");window.__schnack_wait_for_oauth=function(){e.close(),i.refresh()}};if(\"mastodon\"==n.id){var s=window.prompt(\"Please enter the domain name of the Mastodon instance you want to sign in with:\",\"mastodon.social\");e(\"https://\"+s+\"/api/v1/instance\").then(function(n){return n.json()}).then(function(n){n.uri==s?a(s):alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')}).catch(function(n){alert('We could not find a Mastodon instance at \"'+s+'\". Please try again.')})}else a()})});if(o.user&&o.user.admin){if(!i.initialized){var E=document.createElement(\"script\");E.setAttribute(\"src\",r+\"/push.js\"),document.head.appendChild(E),i.initialized=!0}var L=function(n){var t=n.target.dataset;e(r+\"/\"+t.class+\"/\"+t.target+\"/\"+t.action,{credentials:\"include\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:\"\"}).then(function(){return i.refresh()})};document.querySelectorAll(\".schnack-action\").forEach(function(n){n.addEventListener(\"click\",L)})}if(i.firstLoad&&window.location.hash.match(/^#comment-\\d+$/)){var _=document.querySelector(window.location.hash);_.scrollIntoView(),_.classList.add(\"schnack-highlight\"),i.firstLoad=!1}})},function(){var n=document.querySelector(\"script[data-schnack-target]\");if(!n)return console.warn(\"schnack script tag needs some data attributes\");var t=n.dataset,e=t.schnackSlug,a=new URL(n.getAttribute(\"src\")),s=a.protocol+\"//\"+a.host,o={Preview:\"Preview\",Edit:\"Edit\",SendComment:\"Send comment\",Cancel:\"Cancel\",Or:\"Or\",Mute:\"mute notifications\",UnMute:\"unmute\",PostComment:\"Post a comment. Markdown is supported!\",AdminApproval:\"This comment is still waiting for your approval\",WaitingForApproval:\"Your comment is still waiting for approval by the site owner\",SignInVia:\"To post a comment you need to sign in via\",Reply:\"<i class='icon schnack-icon-reply'></i> reply\",LoginStatus:\"(signed in as <span class='schnack-user'>@%USER%</span> :: <a class='schnack-signout' href='#'>sign out</a>)\"};Object.keys(o).forEach(function(t){n.dataset[\"schnackPartial\"+t]&&(o[t]=n.dataset[\"schnackPartial\"+t])}),new i({target:t.schnackTarget,slug:e,host:s,partials:o})}()}();"
    },
    {
      "sha": "a9cb8ea9fe1b34fe3269e2e3bbd962bc80a0d3b3",
      "filename": "src/config.js",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/config.js",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/config.js",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/src/config.js?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -17,6 +17,9 @@ nconf.argv()\n             sessions: 'sessions.db'\n         },\n         port: 3000,\n+        template: {\n+            login_status: '(signed in as %USER% :: <a class=\"schnack-signout\" href=\"#\">sign out</a>)'\n+        },\n         date_format: 'MMMM DD, YYYY - h:mm a',\n         notification_interval: 300000,\n         oauth: {"
    },
    {
      "sha": "8f172d0fe8999bf2b18e0681adb8520ce7a12a67",
      "filename": "src/embed/client.js",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/client.js",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/client.js",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/src/embed/client.js?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -22,7 +22,7 @@ export default class Schnack {\n     }\n \n     refresh() {\n-        const { target, slug, host, endpoint } = this.options;\n+        const { target, slug, host, endpoint, partials } = this.options;\n \n         fetch(endpoint, {\n                 credentials: 'include',\n@@ -33,7 +33,9 @@ export default class Schnack {\n             .then(r => r.json())\n             .then((data) => {\n                 data.comments_tpl = comments_tpl;\n+                data.partials = partials;\n                 $(target).innerHTML = schnack_tpl(data);\n+                // console.log('data', data);\n \n                 const above = $(`${target} div.schnack-above`);\n                 const form = $(`${target} div.schnack-form`);"
    },
    {
      "sha": "532f36c5512286dbdb022fd841c4370df1a7295b",
      "filename": "src/embed/comments.jst.html",
      "status": "modified",
      "additions": 23,
      "deletions": 21,
      "changes": 44,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/comments.jst.html",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/comments.jst.html",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/src/embed/comments.jst.html?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -1,28 +1,30 @@\n <ul class=\"schnack-comments\">\n     <% data.comments.forEach((comment) => { %>\n         <li id=\"comment-<%= comment.id %>\" data-id=\"<%= comment.id %>\" class=\"schnack-comment<% if (!comment.approved && !comment.trusted) { %> schnack-not-approved<% } %>\">\n-            <div class=\"schnack-dateline\">\n-                <span class=\"schnack-author\"><% if (comment.author_url) { %><a href=\"<%= comment.author_url %>\" target=\"_blank\"><% } %><%= comment.display_name || comment.name %><% if (comment.author_url) { %></a><% } %></span>\n-                <% if (data.user && data.user.admin &&!comment.trusted) {\n-                ['trust', 'block'].forEach((action) => { %>\n-                <button class=\"schnack-action\" data-target=\"<%= comment.user_id %>\" data-class=\"user\" data-action=\"<%= action %>\"><i class=\"icon schnack-icon-<%= action %>\"></i> <span><%= action %></span></button>\n-                <% }); } %>\n-                <span class=\"schnack-date\"><a href=\"#comment-<%= comment.id %>\"><%= comment.created_at_s %></a></span>\n+            <div class=\"schnack-comment-inner\">\n+                <div class=\"schnack-dateline\">\n+                    <span class=\"schnack-author\"><% if (comment.author_url) { %><a href=\"<%= comment.author_url %>\" target=\"_blank\"><% } %><%= comment.display_name || comment.name %><% if (comment.author_url) { %></a><% } %></span>\n+                    <% if (data.user && data.user.admin &&!comment.trusted) {\n+                    ['trust', 'block'].forEach((action) => { %>\n+                    <button class=\"schnack-action\" data-target=\"<%= comment.user_id %>\" data-class=\"user\" data-action=\"<%= action %>\"><i class=\"icon schnack-icon-<%= action %>\"></i> <span><%= action %></span></button>\n+                    <% }); } %>\n+                    <span class=\"schnack-date\"><a href=\"#comment-<%= comment.id %>\"><%= comment.created_at_s %></a></span>\n+                </div>\n+                <blockquote class=\"schnack-body\">\n+                    <%= comment.comment %>\n+                </blockquote>\n+                <% if (!comment.approved && !comment.trusted) { %>\n+                <div class=\"schnack-awaiting-approval\">\n+                    <% if (data.user && data.user.admin) {\n+                    ['approve', 'reject'].forEach((action) => { %>\n+                    <button class=\"schnack-action\" data-target=\"<%= comment.id %>\" data-class=\"comment\" data-action=\"<%= action %>\"><i class=\"icon schnack-icon-<%= action %>\"></i> <span><%= action %></span></button>\n+                    <% }); } %>\n+                    <%= data.user.admin ? data.partials.AdminApproval : data.partials.WaitingForApproval %>\n+                </div>\n+                <% } else if (data.user) { %>\n+                <button class=\"schnack-reply\" data-reply-to=\"<%= comment.id %>\"><%= data.partials.Reply %></button>\n+                <% } %>\n             </div>\n-            <blockquote class=\"schnack-body\">\n-                <%= comment.comment %>\n-            </blockquote>\n-            <% if (!comment.approved && !comment.trusted) { %>\n-            <div class=\"schnack-awaiting-approval\">\n-                <% if (data.user && data.user.admin) {\n-                ['approve', 'reject'].forEach((action) => { %>\n-                <button class=\"schnack-action\" data-target=\"<%= comment.id %>\" data-class=\"comment\" data-action=\"<%= action %>\"><i class=\"icon schnack-icon-<%= action %>\"></i> <span><%= action %></span></button>\n-                <% }); } %>\n-                <%= data.user.admin ? 'This' : 'Your' %> comment is still waiting for <%= data.user.admin ? 'your ' : '' %>approval<%= !data.user.admin ? ' by the site owner' : ''%>.\n-            </div>\n-            <% } else if (data.user) { %>\n-            <button class=\"schnack-reply\" data-reply-to=\"<%= comment.id %>\">reply</button>\n-            <% } %>\n             <% if (data.replies[comment.id]) {\n             data.comments = data.replies[comment.id];\n             %>"
    },
    {
      "sha": "e500a659b9b1d4a2453e68be0fc5275158465d63",
      "filename": "src/embed/index.js",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/index.js",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/index.js",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/src/embed/index.js?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -8,10 +8,30 @@ import Schnack from './client';\n     const slug = opts.schnackSlug;\n     const url = new URL(script.getAttribute('src'));\n     const host = `${url.protocol}//${url.host}`;\n+    const partials = {\n+        Preview: `Preview`,\n+        Edit: `Edit`,\n+        SendComment: `Send comment`,\n+        Cancel: `Cancel`,\n+        Or: `Or`,\n+        Mute: `mute notifications`,\n+        UnMute: `unmute`,\n+        PostComment: `Post a comment. Markdown is supported!`,\n+        AdminApproval: `This comment is still waiting for your approval`,\n+        WaitingForApproval: `Your comment is still waiting for approval by the site owner`,\n+        SignInVia: `To post a comment you need to sign in via`,\n+        Reply: `<i class='icon schnack-icon-reply'></i> reply`,\n+        LoginStatus: \"(signed in as <span class='schnack-user'>@%USER%</span> :: <a class='schnack-signout' href='#'>sign out</a>)\"\n+    };\n+\n+    Object.keys(partials).forEach(k => {\n+        if (script.dataset[`schnackPartial${k}`]) partials[k] = script.dataset[`schnackPartial${k}`];\n+    });\n \n     new Schnack({\n         target: opts.schnackTarget,\n         slug,\n-        host\n+        host,\n+        partials\n     });\n })();"
    },
    {
      "sha": "c5e17e63fb16cf22cee372ffe2605b747f1dd072",
      "filename": "src/embed/schnack.jst.html",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/schnack.jst.html",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/src/embed/schnack.jst.html",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/src/embed/schnack.jst.html?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -1,28 +1,28 @@\n <% if (data.user) { %>\n     <% if (data.user.admin) { %>\n     <div class=\"schnack-settings\">\n-        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\">un</button>\n-        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\">mute notifications</button>\n+        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"true\"><%= data.partials.UnMute %></button>\n+        <button class=\"schnack-action\" data-target=\"notification\" data-class=\"setting\" data-action=\"false\"><%= data.partials.Mute %></button>\n     </div>\n     <% } %>\n <div class=\"schnack-login-status\">\n-    (signed in as <span class=\"schnack-user\">@<%= data.user.name %></span> :: <a class=\"schnack-signout\" href=\"#\">sign out</a>)\n+    <%= data.partials.LoginStatus.replace('%USER%', data.user.name) %>\n </div>\n <div class=\"schnack-above\">\n     <div class=\"schnack-form\">\n-        <textarea class=\"schnack-body\" placeholder=\"Post a comment. Markdown is supported!\"></textarea>\n+        <textarea class=\"schnack-body\" placeholder=\"<%= data.partials.PostComment %>\"></textarea>\n         <blockquote class=\"schnack-body\" style=\"display:none\"></blockquote>\n         <br>\n-        <button class=\"schnack-preview\">Preview</button>\n-        <button style=\"display:none\" class=\"schnack-write\">Edit</button>&nbsp;\n-        <button class=\"schnack-button\">Send comment</button>&nbsp;\n-        <button class=\"schnack-cancel-reply\" style=\"display:none\">Cancel</button>\n+        <button class=\"schnack-preview\"><%= data.partials.Preview %></button>\n+        <button style=\"display:none\" class=\"schnack-write\"><%= data.partials.Edit %></button>&nbsp;\n+        <button class=\"schnack-button\"><%= data.partials.SendComment %></button>&nbsp;\n+        <button class=\"schnack-cancel-reply\" style=\"display:none\"><%= data.partials.Cancel %></button>\n     </div>\n </div>\n <% } else { %>\n-To post a comment you need to sign in via<br>\n+<%= data.partials.SignInVia %><br>\n <% data.auth.forEach((provider, i) => {  %>\n-    <%= i ? ' or ' : '' %><button class=\"schnack-signin-<%= provider.id %>\"><i class=\"icon schnack-icon-<%= provider.id %>\"></i> <%= provider.name %></button>\n+    <%= i ? data.partials.Or : '' %><button class=\"schnack-signin-<%= provider.id %>\"><i class=\"icon schnack-icon-<%= provider.id %>\"></i> <%= provider.name %></button>\n <% }) %>\n <% } %>\n <%"
    },
    {
      "sha": "88aa0c9965176b403426d64fafee8591d6b5cd1a",
      "filename": "test/index.html",
      "status": "modified",
      "additions": 13,
      "deletions": 20,
      "changes": 33,
      "blob_url": "https://github.com/schn4ck/schnack/blob/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/test/index.html",
      "raw_url": "https://github.com/schn4ck/schnack/raw/8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe/test/index.html",
      "contents_url": "https://api.github.com/repos/schn4ck/schnack/contents/test/index.html?ref=8e5eb26bc3fc877be5b8a28de6feb06c0f9f75fe",
      "patch": "@@ -3,29 +3,22 @@\n <head>\n   <meta charset=\"utf-8\">\n   <title>schnack.js test page</title>\n-  <link rel=\"stylesheet\" type=\"text/css\" href=\"schnack.css\">\n+  <style>\n+\n+  </style>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"schnack-icons.css\">\n </head>\n <body>\n-    <script\n-        src=\"http://localhost:8080/embed.js\"\n+    <script type=\"text/javascript\"\n+        src=\"http://localhost:3000/embed.js\"\n+        data-schnack-host=\"//localhost:3000\"\n         data-schnack-slug=\"foo\"\n-        data-schnack-target=\"#my-comments\">\n-    </script>\n+        data-schnack-target=\"#my-comments\"\n+        data-schnack-partial-reply=\"Answer to this comment\"\n+        data-schnack-partial-post-comment=\"Write your comment here. But remember to be nice :)\"\n+        data-schnack-partial-login-status=\"You are signed in as <b>%USER%</b> (<a class='schnack-signout' href='#'>sign out</a>)\"\n+    ></script>\n+    Comments:\n     <div id=\"my-comments\"></div>\n-\n-\n-    <!-- here we are using schnack programmatically -->\n-\n-    <div id=\"my-comments-client\"></div>\n-\n-    <script src=\"http://localhost:8080/client.js\"></script>\n-    <script>\n-        new Schnack({\n-            target: '#my-comments-client',\n-            slug: 'foo-client',\n-            host: 'http://localhost:8080'\n-        });\n-    </script>\n </body>\n-</html>\n\\ No newline at end of file\n+</html>"
    }
  ]
}
