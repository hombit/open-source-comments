{
  "sha": "08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6MDhkMzQyZWEyZTlkYzU0MTJlZjFmZjRmNWIzNTJmYWYzMGFhY2ZiYg==",
  "commit": {
    "author": {
      "name": "immber",
      "email": "jessiekrushing@gmail.com",
      "date": "2018-12-03T19:47:46Z"
    },
    "committer": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2018-12-03T19:47:46Z"
    },
    "message": "Docs update (#2105)\n\n* merging in typo fixes from docs (rtd) branch\r\n\r\n* revert generateIntrospectionResult.json\r\n\r\n* revert git ignore\r\n\r\n* added asset mgmt to prelaunch checklist\r\n\r\n* updated cusotm plugin docker onbuild instructions\r\n\r\n* add google to auth options\r\n\r\n* add google to auth options\r\n\r\n* added yarn watch to from source\r\n\r\n* added dev links to quickstart\r\n\r\n* typo on following\r\n\r\n* fixed typos\r\n\r\n* fixing links",
    "tree": {
      "sha": "94e149814f51d68251ce31a06dcd01013c39990d",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/94e149814f51d68251ce31a06dcd01013c39990d"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
  "html_url": "https://github.com/coralproject/talk/commit/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/comments",
  "author": {
    "login": "immber",
    "id": 7496030,
    "node_id": "MDQ6VXNlcjc0OTYwMzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7496030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/immber",
    "html_url": "https://github.com/immber",
    "followers_url": "https://api.github.com/users/immber/followers",
    "following_url": "https://api.github.com/users/immber/following{/other_user}",
    "gists_url": "https://api.github.com/users/immber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/immber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/immber/subscriptions",
    "organizations_url": "https://api.github.com/users/immber/orgs",
    "repos_url": "https://api.github.com/users/immber/repos",
    "events_url": "https://api.github.com/users/immber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/immber/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5d32c4ec034c44f4167a7cf25fe2e80c3f5fb01f",
      "url": "https://api.github.com/repos/coralproject/talk/commits/5d32c4ec034c44f4167a7cf25fe2e80c3f5fb01f",
      "html_url": "https://github.com/coralproject/talk/commit/5d32c4ec034c44f4167a7cf25fe2e80c3f5fb01f"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 46,
    "deletions": 10
  },
  "files": [
    {
      "sha": "6c5ecb5d158d316dda57cbd32bda2a7473256728",
      "filename": "docs/source/01-01-talk-quickstart.md",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-01-talk-quickstart.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-01-talk-quickstart.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/01-01-talk-quickstart.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -187,8 +187,10 @@ and walk through the initial setup steps.\n \n * First, enter your **Organization Name** and **Organization Contact Email**. This will appear in emails when inviting new team members.\n * Next, create your Admin user. You can specify an **Email Address**, **Username**, and **Password**\n+\n * Finally, enter your list of **Permitted Domains**, read [here](/talk/configuring-talk/#permitted-domains) about whitelisting domains \n \n+\n _During development, ensure you whitelist 127.0.0.1:3000 otherwise the\n [http://127.0.0.1:3000/](http://127.0.0.1:3000/) page will not\n load._\n@@ -220,6 +222,17 @@ Once you have added the domain of these docs, you can click the button below.\n   <div class=\"mount\"></div>\n </div>\n \n+### Developer Endpoints\n+\n+With your local instance of Talk running in development mode (env variable `NODE_ENV=development`) you should now also be able to access the following developer routes:\n+\n+* [http://127.0.0.1:3000/dev](http://127.0.0.1:3000/dev]) provides a sample comment stream \n+\n+* [http://127.0.0.1:3000/dev/assets](http://127.0.0.1:3000/dev/assets]) provides a list of all stories in Talk and can generate new sample assets\n+\n+### Conclusion\n At this point you've successfully installed, configured, and ran your very own\n instance of Talk! Continue through this documentation on this site to learn more\n on how to configure, develop with, and contribute to Talk!\n+\n+"
    },
    {
      "sha": "978ffedd03288f77b4e75166ea983ccf3f7bf8a8",
      "filename": "docs/source/01-03-installation-from-source.md",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-03-installation-from-source.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-03-installation-from-source.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/01-03-installation-from-source.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -70,5 +70,7 @@ You can now start the application by running:\n yarn watch:server\n ```\n \n+If you are developing a custom plugin you can use `yarn watch:client` or `yarn watch` to run both client and server.\n+\n At this stage, you should refer to the [configuration](/talk/configuration/) for\n configuration variables that are specific to your installation."
    },
    {
      "sha": "854ead0628056a16ca1fd5763ecdbdcc6f8e66c7",
      "filename": "docs/source/01-05-pre-launch-checklist.md",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-05-pre-launch-checklist.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/01-05-pre-launch-checklist.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/01-05-pre-launch-checklist.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -23,11 +23,13 @@ permalink: /pre-launch-checklist/\n \n - [ ] Do you need to migrate comments from a legacy system? We currently support Disqus, Livefyre, and Civil Comments.\n   - Use the [Talk Import](https://github.com/coralproject/talk-importer) framework\n-\n+  \n \n - [ ] Do you want to provide single sign-on (SSO) by integrating with an external auth system?\n   - See [Authenticating with Talk](/talk/integrating/authentication/)\n \n+- [ ] Do you want to integrate Talk with your CMS to automate embedding Talk Comment Stream into your site?\n+  - See [Asset Management](/talk/integrating/asset-management/)\n \n - [ ] Do you want to use Social sign-on?\n   - Facebook"
    },
    {
      "sha": "c89e018e75ceb6cd39450ed409836e47569d94fb",
      "filename": "docs/source/03-02-product-guide-commenter-features.md",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/03-02-product-guide-commenter-features.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/03-02-product-guide-commenter-features.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/03-02-product-guide-commenter-features.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -5,13 +5,15 @@ permalink: /commenter-features/\n \n ## Signing up for Talk\n \n-There are 2 ways that newsrooms can support signup/login functionality with Talk:\n+There are 3 ways that newsrooms can support signup/login functionality with Talk:\n \n * Use Talkâ€™s auth plugin out of the box (supports account registration with username and password, as well as features like forgot password)\n \n+* Use 3rd party authentication provider such as FaceBook or Google. We provide plugins that support logging in with either [Facebook](/talk/plugin/talk-plugin-facebook-auth/)\n+or [Google](/talk/plugin/talk-plugin-google-auth/). (Note: you must provide your own Facebook App ID and Secret, which you can read more about here: [https://developers.facebook.com](https://developers.facebook.com))\n+\n * Create their own auth plugin to integrate with your own auth systems\n \n-We also provide a Facebook auth plugin that supports logging in with Facebook (you must provide your own Facebook App ID and Secret, which you can read more about here: [https://developers.facebook.com](https://developers.facebook.com))\n \n ## Comments and Replies\n "
    },
    {
      "sha": "190b67c635c35761dace9279096c1335826d1608",
      "filename": "docs/source/integrating/asset-management.md",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/integrating/asset-management.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/integrating/asset-management.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/integrating/asset-management.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -18,6 +18,7 @@ By default, Talk will use \"Lazy Asset Creation\" to dynamically generate Assets\n in Talk in order to make it easier for lighter installations. In order to have\n more strict control over this flow, we will create a plugin that will:\n \n+\n 1. Disable \"Lazy Asset Creation\" by [Overriding a Resolver](#overriding-a-resolver).\n 2. Create Assets from our CMS by [Creating a New Asset Route](#creating-a-new-asset-route).\n 3. Facilitate updates from our CMS to keep Talk in sync by [Creating an Asset Update Route](#creating-an-asset-update-route).\n@@ -248,7 +249,7 @@ module.exports = router => {\n };\n ```\n \n-As you can see from the previous step of [Creating a New Asset Route](#creating-a-New-Asset-Route)\n+As you can see from the previous step of [Creating a New Asset Route](#Creating%20a%20New%20Asset%20Route)\n , we have added the new `PUT` route to the router. This is a simple addition\n that allows your CMS to call into Talk when the asset has updated it's title,\n it's url (or really anything in the [AssetSchema](https://github.com/coralproject/talk/blob/master/models/asset.js)) to keep the Talk Admin and links up to date."
    },
    {
      "sha": "f834f3e53dd83f146ffd03c9754d9ffab4ad58fe",
      "filename": "docs/source/integrating/authentication.md",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/integrating/authentication.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/integrating/authentication.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/integrating/authentication.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -3,8 +3,10 @@ title: Authenticating with Talk\n permalink: /integrating/authentication/\n ---\n \n-You can integrate Talk with any external authentication service that will enable\n-seamless single sign-on for users within your organization. There are a few\n+Out of the box Talk supports account registration with username and password, as well as features like forgot password. \n+\n+You can also integrate Talk with any external authentication service that will enable\n+seamless single sign-on (SSO) for users within your organization. There are a few\n methods of doing so:\n \n 1. Passport Middleware\n@@ -17,8 +19,12 @@ choice.\n \n You would choose the **Passport Middleware** route when you are OK using an auth\n that is triggered from inside Talk that is not connected to an external auth\n-state (you don't use the auth anywhere else now). A great example of this is our\n-[talk-plugin-facebook-auth](/talk/plugin/talk-plugin-facebook-auth/) plugin.\n+state (you don't use the auth anywhere else now). \n+\n+Plugins are available for the following 3rd party authentication providers:\n+\n+* [Facebook](/talk/plugin/talk-plugin-facebook-auth/)\n+* [Google](/talk/plugin/talk-plugin-google-auth/) \n \n ## Custom Token Integration \n "
    },
    {
      "sha": "1f734edeb506551802684a1e4bf23d3ae041606b",
      "filename": "docs/source/plugins/overview.md",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/plugins/overview.md",
      "raw_url": "https://github.com/coralproject/talk/raw/08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb/docs/source/plugins/overview.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/plugins/overview.md?ref=08d342ea2e9dc5412ef1ff4f5b352faf30aacfbb",
      "patch": "@@ -105,21 +105,31 @@ Then the application can be started as is.\n \n ### Docker\n \n+To deploy customized plugins to a production instance of Talk, we recommend using the Docker onbuild strategy outlined below.\n+\n If you deploy using Docker, you can extend from the `*-onbuild` image, an\n example `Dockerfile` for your project could be:\n \n ```Dockerfile\n FROM coralproject/talk:4.5-onbuild\n ```\n \n-Where the directory for your instance would contain a `plugins.json` file\n-describing the plugin requirements and a `plugins` directory containing any\n+Establish a private repository for your instance that includes the following:\n+\n+* a `plugins.json` file\n+listing the plugin requirements\n+* a `plugins` directory containing any\n other local plugins that should be included.\n+* a Dockerfile as outlined above\n+\n+Git submodules can also be used to point to plugin directories that might be outside your primary repository. \n \n Onbuild triggers will execute when the image is building with your custom\n configuration and will ensure that the image is ready to use by building all\n assets inside the image as well.\n \n+Once built, you can deploy the docker image to your architecture by tagging the image and including it in your docker-compose.yml. \n+\n For more information on the onbuild image, refer to the\n [Installation from Docker](/talk/installation-from-docker/) documentation.\n "
    }
  ]
}
