{
  "sha": "69aa8f18c2171dbfc2569847bb5e674daf62ded9",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo2OWFhOGYxOGMyMTcxZGJmYzI1Njk4NDdiYjVlNjc0ZGFmNjJkZWQ5",
  "commit": {
    "author": {
      "name": "Sam Saffron",
      "email": "sam.saffron@gmail.com",
      "date": "2018-12-25T15:02:28Z"
    },
    "committer": {
      "name": "Sam Saffron",
      "email": "sam.saffron@gmail.com",
      "date": "2018-12-25T15:02:28Z"
    },
    "message": "FEATURE: allow for custom excerpt BBCODE\n\nThis allows fidelity in controlling excerpt (text that shows up when you pin a topic or link to it externally):\n\n```\nI am some text\n\n[excerpt]\nThis is some **custom** markdown that should be the excerpt\n[/excerpt]\n\nMore text\n```\n\nPrevious solution relied on DIVs, unfortunately DIVs do not play well,\nby design with mixing markdown unless you have a preceding newline eg:\n\n```\n<div class='hello'>\n\nthis will be treated properly as markdown\n\n</div>\n```\n\nThis extra newline is not desirable.\n\nI am also considering adding\n\n```\n[div class=excerpt]\n[/div]\n```\n\nThis would offer lots of flexibility to themes and plugins that do not want the extra annoying newline.",
    "tree": {
      "sha": "49543bd38898f8b761626f37545a3100b6e9816a",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/49543bd38898f8b761626f37545a3100b6e9816a"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/69aa8f18c2171dbfc2569847bb5e674daf62ded9",
    "comment_count": 1,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/69aa8f18c2171dbfc2569847bb5e674daf62ded9",
  "html_url": "https://github.com/discourse/discourse/commit/69aa8f18c2171dbfc2569847bb5e674daf62ded9",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/69aa8f18c2171dbfc2569847bb5e674daf62ded9/comments",
  "author": {
    "login": "SamSaffron",
    "id": 5213,
    "node_id": "MDQ6VXNlcjUyMTM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/5213?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamSaffron",
    "html_url": "https://github.com/SamSaffron",
    "followers_url": "https://api.github.com/users/SamSaffron/followers",
    "following_url": "https://api.github.com/users/SamSaffron/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamSaffron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamSaffron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamSaffron/subscriptions",
    "organizations_url": "https://api.github.com/users/SamSaffron/orgs",
    "repos_url": "https://api.github.com/users/SamSaffron/repos",
    "events_url": "https://api.github.com/users/SamSaffron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamSaffron/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "SamSaffron",
    "id": 5213,
    "node_id": "MDQ6VXNlcjUyMTM=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/5213?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SamSaffron",
    "html_url": "https://github.com/SamSaffron",
    "followers_url": "https://api.github.com/users/SamSaffron/followers",
    "following_url": "https://api.github.com/users/SamSaffron/following{/other_user}",
    "gists_url": "https://api.github.com/users/SamSaffron/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SamSaffron/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SamSaffron/subscriptions",
    "organizations_url": "https://api.github.com/users/SamSaffron/orgs",
    "repos_url": "https://api.github.com/users/SamSaffron/repos",
    "events_url": "https://api.github.com/users/SamSaffron/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SamSaffron/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2cbb513c9806f3aa9459f524c27aa5c6809ff724",
      "url": "https://api.github.com/repos/discourse/discourse/commits/2cbb513c9806f3aa9459f524c27aa5c6809ff724",
      "html_url": "https://github.com/discourse/discourse/commit/2cbb513c9806f3aa9459f524c27aa5c6809ff724"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 17,
    "deletions": 1
  },
  "files": [
    {
      "sha": "2270d8a612e3178a1f5b16215cbccfd15c52315a",
      "filename": "app/assets/javascripts/pretty-text/engines/discourse-markdown/bbcode-block.js.es6",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/69aa8f18c2171dbfc2569847bb5e674daf62ded9/app/assets/javascripts/pretty-text/engines/discourse-markdown/bbcode-block.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/69aa8f18c2171dbfc2569847bb5e674daf62ded9/app/assets/javascripts/pretty-text/engines/discourse-markdown/bbcode-block.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/pretty-text/engines/discourse-markdown/bbcode-block.js.es6?ref=69aa8f18c2171dbfc2569847bb5e674daf62ded9",
      "patch": "@@ -344,6 +344,11 @@ export function setup(helper) {\n   helper.registerPlugin(md => {\n     const ruler = md.block.bbcode.ruler;\n \n+    ruler.push(\"excerpt\", {\n+      tag: \"excerpt\",\n+      wrap: \"div.excerpt\"\n+    });\n+\n     ruler.push(\"code\", {\n       tag: \"code\",\n       replace: function(state, tagInfo, content) {"
    },
    {
      "sha": "1e0cfe9c73cd72d9fd68fee938b030b3be204f58",
      "filename": "spec/components/pretty_text_spec.rb",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/discourse/discourse/blob/69aa8f18c2171dbfc2569847bb5e674daf62ded9/spec/components/pretty_text_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/69aa8f18c2171dbfc2569847bb5e674daf62ded9/spec/components/pretty_text_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/pretty_text_spec.rb?ref=69aa8f18c2171dbfc2569847bb5e674daf62ded9",
      "patch": "@@ -287,7 +287,7 @@ def cook(*args)\n       end\n \n       it 'should not convert mentions to links' do\n-        user = Fabricate(:user)\n+        _user = Fabricate(:user)\n \n         expect(PrettyText.cook('hi @user')).to eq('<p>hi @user</p>')\n       end\n@@ -579,6 +579,17 @@ def extract_urls(text)\n       expect(PrettyText.excerpt(nil, 100)).to eq('')\n     end\n \n+    it \"handles custom bbcode excerpt\" do\n+      raw = <<~RAW\n+      [excerpt]\n+      hello [site](https://site.com)\n+      [/excerpt]\n+      more stuff\n+      RAW\n+      post = Fabricate(:post, raw: raw)\n+      expect(post.excerpt).to eq(\"hello <a href=\\\"https://site.com\\\" rel=\\\"nofollow noopener\\\">site</a>\")\n+    end\n+\n     it \"handles span excerpt at the beginning of a post\" do\n       expect(PrettyText.excerpt(\"<span class='excerpt'>hi</span> test\", 100)).to eq('hi')\n       post = Fabricate(:post, raw: \"<span class='excerpt'>hi</span> test\")"
    }
  ]
}
