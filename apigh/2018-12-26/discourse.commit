{
  "sha": "f637286db545591471286c49054181c3252bab07",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpmNjM3Mjg2ZGI1NDU1OTE0NzEyODZjNDkwNTQxODFjMzI1MmJhYjA3",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2018-12-26T09:29:33Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2018-12-26T09:29:33Z"
    },
    "message": "UX: improves flags-status report (#6773)\n\n- link to post\r\n- cover more post action types",
    "tree": {
      "sha": "8400c46a008dfbdab88a03014a839128dd0b8f68",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/8400c46a008dfbdab88a03014a839128dd0b8f68"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/f637286db545591471286c49054181c3252bab07",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcI0n9CRBK7hj4Ov3rIwAAdHIIAAyXQ8Kk5Eki9609as9BoHuB\nPe5Cs0hLvygojedErrCzc9CnX0wQyZmSwFvNppdYk8UoCSXWeLW8bzyr4QSDTjQl\nhXycxQCO3q3Nvp33OXgFgr3WIAzEoFahiuITnjI8v1sQSM+nsM6u859qEBnTSw1q\nR8F9RYJfU3qbxddX/1HDiQGBz2vkNFnbvRMDCAaxm63sC74rw1fQwm/V9meKcRMk\n99ndMbXeB/PQkzxV/vFLNi8zvZzyHCn8gQzmNJ+9s9yn/CrJznTOFHtETB04Fgxw\nvyRV9HgvaIIoSk0qNd6QLN3Ncxk6Zl2xyAB8/qtF5LeIG3v0kRCGHUQOd4M/8w0=\n=hLOT\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 8400c46a008dfbdab88a03014a839128dd0b8f68\nparent 0402f0f35714dfb25c19050611a9bf7555d0c2bc\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1545816573 +0100\ncommitter GitHub <noreply@github.com> 1545816573 +0100\n\nUX: improves flags-status report (#6773)\n\n- link to post\r\n- cover more post action types"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/f637286db545591471286c49054181c3252bab07",
  "html_url": "https://github.com/discourse/discourse/commit/f637286db545591471286c49054181c3252bab07",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/f637286db545591471286c49054181c3252bab07/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "0402f0f35714dfb25c19050611a9bf7555d0c2bc",
      "url": "https://api.github.com/repos/discourse/discourse/commits/0402f0f35714dfb25c19050611a9bf7555d0c2bc",
      "html_url": "https://github.com/discourse/discourse/commit/0402f0f35714dfb25c19050611a9bf7555d0c2bc"
    }
  ],
  "stats": {
    "total": 27,
    "additions": 20,
    "deletions": 7
  },
  "files": [
    {
      "sha": "8ddd46e17efa1bd763d24acb7107a8b92045ebf0",
      "filename": "app/models/report.rb",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/discourse/discourse/blob/f637286db545591471286c49054181c3252bab07/app/models/report.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/f637286db545591471286c49054181c3252bab07/app/models/report.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/report.rb?ref=f637286db545591471286c49054181c3252bab07",
      "patch": "@@ -943,7 +943,12 @@ def self.report_flags_status(report)\n \n     report.labels = [\n       {\n-        property: :action_type,\n+        type: :post,\n+        properties: {\n+          topic_id: :topic_id,\n+          number: :post_number,\n+          truncated_raw: :post_type\n+        },\n         title: I18n.t(\"reports.flags_status.labels.flag\")\n       },\n       {\n@@ -982,7 +987,7 @@ def self.report_flags_status(report)\n \n     report.data = []\n \n-    flag_types = PostActionType.flag_types_without_custom\n+    flag_types = PostActionType.flag_types\n \n     sql = <<~SQL\n     WITH period_actions AS (\n@@ -999,13 +1004,16 @@ def self.report_flags_status(report)\n     user_id,\n     COALESCE(disagreed_at, agreed_at, deferred_at) AS responded_at\n     FROM post_actions\n-    WHERE post_action_type_id IN (#{PostActionType.flag_types_without_custom.values.join(',')})\n-    AND created_at >= '#{report.start_date}'\n-    AND created_at <= '#{report.end_date}'\n+    WHERE post_action_type_id IN (#{flag_types.values.join(',')})\n+      AND created_at >= '#{report.start_date}'\n+      AND created_at <= '#{report.end_date}'\n+    ORDER BY created_at DESC\n     ),\n     poster_data AS (\n     SELECT pa.id,\n     p.user_id AS poster_id,\n+    p.topic_id as topic_id,\n+    p.post_number as post_number,\n     u.username_lower AS poster_username,\n     u.uploaded_avatar_id AS poster_avatar_id\n     FROM period_actions pa\n@@ -1039,6 +1047,8 @@ def self.report_flags_status(report)\n     pd.poster_username,\n     pd.poster_id,\n     pd.poster_avatar_id,\n+    pd.post_number,\n+    pd.topic_id,\n     fd.flagger_username,\n     fd.flagger_id,\n     fd.flagger_avatar_id,\n@@ -1062,7 +1072,10 @@ def self.report_flags_status(report)\n \n     DB.query(sql).each do |row|\n       data = {}\n-      data[:action_type] = flag_types.key(row.post_action_type_id).to_s\n+\n+      data[:post_type] = flag_types.key(row.post_action_type_id).to_s\n+      data[:post_number] = row.post_number\n+      data[:topic_id] = row.topic_id\n \n       if row.staff_id\n         data[:staff_username] = row.staff_username"
    },
    {
      "sha": "5866905b7abb7cd391460c7a14fca61b5613cdc9",
      "filename": "spec/models/report_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/f637286db545591471286c49054181c3252bab07/spec/models/report_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/f637286db545591471286c49054181c3252bab07/spec/models/report_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/report_spec.rb?ref=f637286db545591471286c49054181c3252bab07",
      "patch": "@@ -498,7 +498,7 @@\n         expect(report.data).to be_present\n \n         row = report.data[0]\n-        expect(row[:action_type]).to eq(\"spam\")\n+        expect(row[:post_type]).to eq(\"spam\")\n         expect(row[:staff_username]).to eq(nil)\n         expect(row[:staff_id]).to eq(nil)\n         expect(row[:poster_username]).to eq(post.user.username)"
    }
  ]
}
