{
  "sha": "02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjAyZDk0ZWFkMWQ0OTQ4YmMwYTY1YjRkMmEzNGNkYWU0MTEyNzEyYzg=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-01-08T10:01:33Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-01-08T10:01:33Z"
    },
    "message": "Merge pull request #245 from umputun/lgr\n\nLgr",
    "tree": {
      "sha": "a1b65f58daeb6f22f3d3a56830f7b4f58c19d5bb",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/a1b65f58daeb6f22f3d3a56830f7b4f58c19d5bb"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcNHT+CRBK7hj4Ov3rIwAAdHIIADo8AbCUOFxGi6/A8fIxstCu\nGqbz4u+ZDxc7bj5He5W215FneMwQTuyeZk65glE2EkfGbhFG9Km7VG+hjesKDnqi\noOVhFtBW5xoaRX0PMzxZUcKwGon85qPjdPe56XvfQZzYZGzLboT/mqNOi3NWQ8/N\nHDoBsceJJ3DP6B3cz0jxGslhur1nemSGJImlF/GwkUySSvow9DqA2RVO/eSpC9nb\nixHaogZsJtgDkND0vfvPo3/3osMt673j5DvrtzvhlZIFFx1KAsNK+uS/GdqHn8JM\ntxpl4kMlKAxKJN5/drSV6rKuohSDFV9em/G+GtTjBFgbvOG2cOk1DNyclehLPF8=\n=stYG\n-----END PGP SIGNATURE-----\n",
      "payload": "tree a1b65f58daeb6f22f3d3a56830f7b4f58c19d5bb\nparent a6df83e96023e0c569fd80ea4f0766a84f12e7a7\nparent 61cf54d2310af174267e3aee0ed788b6b00550d2\nauthor Umputun <umputun@gmail.com> 1546941693 -0600\ncommitter GitHub <noreply@github.com> 1546941693 -0600\n\nMerge pull request #245 from umputun/lgr\n\nLgr"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
  "html_url": "https://github.com/umputun/remark/commit/02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "url": "https://api.github.com/repos/umputun/remark/commits/a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "html_url": "https://github.com/umputun/remark/commit/a6df83e96023e0c569fd80ea4f0766a84f12e7a7"
    },
    {
      "sha": "61cf54d2310af174267e3aee0ed788b6b00550d2",
      "url": "https://api.github.com/repos/umputun/remark/commits/61cf54d2310af174267e3aee0ed788b6b00550d2",
      "html_url": "https://github.com/umputun/remark/commit/61cf54d2310af174267e3aee0ed788b6b00550d2"
    }
  ],
  "stats": {
    "total": 1084,
    "additions": 441,
    "deletions": 643
  },
  "files": [
    {
      "sha": "faf143e702538769992c3117ec3f2c53aa846503",
      "filename": "Dockerfile.artifacts",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/Dockerfile.artifacts",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/Dockerfile.artifacts",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/Dockerfile.artifacts?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,6 +1,11 @@\n FROM node:10.11-alpine as build-frontend-deps\n \n ARG CI\n+ARG DRONE\n+ARG DRONE_TAG\n+ARG DRONE_COMMIT\n+ARG DRONE_BRANCH\n+\n ENV SKIP_FRONTEND_TEST=true\n \n RUN apk add --no-cache --update git"
    },
    {
      "sha": "7d613a7c1a4b429e531c6d2cd09e824399810809",
      "filename": "backend/Gopkg.lock",
      "status": "modified",
      "additions": 16,
      "deletions": 17,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/Gopkg.lock",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/Gopkg.lock",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/Gopkg.lock?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -112,19 +112,26 @@\n   version = \"v1.0.0\"\n \n [[projects]]\n-  digest = \"1:5371050ba40cd7482fa2e9f0ff17fc18e2c37a6353ac012eaaacc6250eee4748\"\n+  digest = \"1:94bd00c67ee734ccdafa8c29a3dec31a71e1c0906d12136d50b59af98f0f2a9c\"\n   name = \"github.com/go-pkgz/auth\"\n   packages = [\n     \".\",\n     \"avatar\",\n-    \"logger\",\n     \"middleware\",\n     \"provider\",\n     \"token\",\n   ]\n   pruneopts = \"UT\"\n-  revision = \"6f889bf1c6eb61c926dbb759897e6dc577b10655\"\n-  version = \"v0.3.0\"\n+  revision = \"720bf3c94e674562c17355923524c067e43b6078\"\n+  version = \"v0.3.1\"\n+\n+[[projects]]\n+  digest = \"1:01f2a0dea4785957fb0832580a244e693c710130e2785e4a2f73cc7872cdfa82\"\n+  name = \"github.com/go-pkgz/lgr\"\n+  packages = [\".\"]\n+  pruneopts = \"UT\"\n+  revision = \"5bea4c7108c41005f69ad77c05f516b2228837e2\"\n+  version = \"v0.1.3\"\n \n [[projects]]\n   digest = \"1:1212e114344a5cdcc834ea69e19d456eef230f9784659080fee67e02ba2cb574\"\n@@ -146,16 +153,16 @@\n   version = \"v1.0.0\"\n \n [[projects]]\n-  digest = \"1:e133aa7be09588b02198e4ddb98df5033b0319b56533881d0163ee51b903305b\"\n+  digest = \"1:f90abdc7788e4c799b440eba9ba2c0da647b734d4bd7c0d6a66b8af74d836e67\"\n   name = \"github.com/go-pkgz/rest\"\n   packages = [\n     \".\",\n     \"cache\",\n     \"logger\",\n   ]\n   pruneopts = \"UT\"\n-  revision = \"553c0e1b55b215f8f55da4682ac57aff9aec8b6d\"\n-  version = \"v1.1.5\"\n+  revision = \"8fbfa5089252d9c40ed780e00e97763c28764e67\"\n+  version = \"v1.1.6\"\n \n [[projects]]\n   digest = \"1:ffc060c551980d37ee9e428ef528ee2813137249ccebb0bfc412ef83071cac91\"\n@@ -208,14 +215,6 @@\n   pruneopts = \"UT\"\n   revision = \"0fb14efe8c47ae851c0034ed7a448854d3d34cf3\"\n \n-[[projects]]\n-  branch = \"master\"\n-  digest = \"1:ce3f7860fd68bd2dd4c3735e2aed8c9de7c7d05bd6ad7d97a6bedcf4fe7b84fb\"\n-  name = \"github.com/hashicorp/logutils\"\n-  packages = [\".\"]\n-  pruneopts = \"UT\"\n-  revision = \"0dc08b1671f34c4250ce212759ebd880f743d883\"\n-\n [[projects]]\n   branch = \"master\"\n   digest = \"1:3217800110ab50cd0e0784307be46b5344c0c103dbd15a16d0994ae4abdc96ab\"\n@@ -403,9 +402,9 @@\n     \"github.com/go-chi/render\",\n     \"github.com/go-pkgz/auth\",\n     \"github.com/go-pkgz/auth/avatar\",\n-    \"github.com/go-pkgz/auth/logger\",\n     \"github.com/go-pkgz/auth/provider\",\n     \"github.com/go-pkgz/auth/token\",\n+    \"github.com/go-pkgz/lgr\",\n     \"github.com/go-pkgz/mongo\",\n     \"github.com/go-pkgz/repeater\",\n     \"github.com/go-pkgz/rest\",\n@@ -414,7 +413,6 @@\n     \"github.com/google/uuid\",\n     \"github.com/gorilla/feeds\",\n     \"github.com/hashicorp/go-multierror\",\n-    \"github.com/hashicorp/logutils\",\n     \"github.com/jessevdk/go-flags\",\n     \"github.com/microcosm-cc/bluemonday\",\n     \"github.com/patrickmn/go-cache\",\n@@ -423,6 +421,7 @@\n     \"github.com/stretchr/testify/assert\",\n     \"github.com/stretchr/testify/require\",\n     \"golang.org/x/crypto/acme/autocert\",\n+    \"golang.org/x/net/html\",\n     \"gopkg.in/russross/blackfriday.v2\",\n   ]\n   solver-name = \"gps-cdcl\""
    },
    {
      "sha": "d6e93dbd308e18074ca23a25165465c9c46d20bf",
      "filename": "backend/Gopkg.toml",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/Gopkg.toml",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/Gopkg.toml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/Gopkg.toml?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -12,10 +12,6 @@ required = [\"github.com/patrickmn/go-cache\"]\n   name = \"github.com/google/uuid\"\n   version = \"0.2.0\"\n \n-[[constraint]]\n-  branch = \"master\"\n-  name = \"github.com/hashicorp/logutils\"\n-\n [[constraint]]\n   branch = \"master\"\n   name = \"github.com/microcosm-cc/bluemonday\""
    },
    {
      "sha": "b93d6b32fb23ed53e18581baa9b784dde640714d",
      "filename": "backend/app/cmd/avatar.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/avatar.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/avatar.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/avatar.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,11 +1,11 @@\n package cmd\n \n import (\n-\t\"log\"\n \t\"path\"\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/go-pkgz/auth/avatar\""
    },
    {
      "sha": "715e0dede53fbb69fd5b79135fd17c807f865a25",
      "filename": "backend/app/cmd/backup.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/backup.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/backup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/backup.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,11 +4,11 @@ import (\n \t\"context\"\n \t\"fmt\"\n \t\"io\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n )\n "
    },
    {
      "sha": "1d03cdcf3bd0505f2b18530fc3b3ac8312ff95d1",
      "filename": "backend/app/cmd/cleanup.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/cleanup.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/cleanup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/cleanup.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,13 +3,14 @@ package cmd\n import (\n \t\"encoding/json\"\n \t\"fmt\"\n-\t\"log\"\n \t\"math\"\n \t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n+\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n "
    },
    {
      "sha": "f165bf34cff8de66914e643e69a148dba60d340a",
      "filename": "backend/app/cmd/cmd.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/cmd.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/cmd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/cmd.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,14 +5,14 @@ package cmd\n import (\n \t\"bytes\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"path/filepath\"\n \t\"strings\"\n \t\"text/template\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n )\n "
    },
    {
      "sha": "9275a7df23239214d2d252237b881f51fd7f28b6",
      "filename": "backend/app/cmd/import.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/import.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/import.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/import.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -6,12 +6,12 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"strings\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n )\n "
    },
    {
      "sha": "b7846f4853f73b80a4343920a8a19ad558f49b37",
      "filename": "backend/app/cmd/import_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/import_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/import_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/import_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,13 +3,13 @@ package cmd\n import (\n \t\"fmt\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"net/http/httptest\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \tflags \"github.com/jessevdk/go-flags\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\""
    },
    {
      "sha": "eeefa2b3f1b5298e01579461081eff8b49be94b5",
      "filename": "backend/app/cmd/restore.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/restore.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/restore.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/restore.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,8 +1,9 @@\n package cmd\n \n import (\n-\t\"log\"\n \t\"time\"\n+\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // RestoreCommand set of flags and command for restore from backup"
    },
    {
      "sha": "4a550f81b999625ca25e83499917168a33f3714d",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,7 +3,6 @@ package cmd\n import (\n \t\"context\"\n \t\"fmt\"\n-\t\"log\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"os\"\n@@ -14,11 +13,12 @@ import (\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\t\"github.com/go-pkgz/lgr\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/go-pkgz/auth\"\n \t\"github.com/go-pkgz/auth/avatar\"\n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/provider\"\n \t\"github.com/go-pkgz/auth/token\"\n \t\"github.com/go-pkgz/mongo\"\n@@ -170,16 +170,16 @@ func (s *ServerCommand) Execute(args []string) error {\n \t\tstop := make(chan os.Signal, 1)\n \t\tsignal.Notify(stop, os.Interrupt, syscall.SIGTERM)\n \t\t<-stop\n-\t\tlog.Print(\"[WARN] interrupt signal\")\n+\t\tlog.Printf(\"[WARN] interrupt signal\")\n \t\tcancel()\n \t}()\n \n \tapp, err := s.newServerApp()\n \tif err != nil {\n-\t\tlog.Fatalf(\"[ERROR] failed to setup application, %+v\", err)\n+\t\tlog.Printf(\"[PANIC] failed to setup application, %+v\", err)\n \t}\n \tif err = app.run(ctx); err != nil {\n-\t\tlog.Printf(\"[WARN] remark terminated with error %+v\", err)\n+\t\tlog.Printf(\"[ERROR] remark terminated with error %+v\", err)\n \t\treturn err\n \t}\n \tlog.Printf(\"[INFO] remark terminated\")\n@@ -550,7 +550,7 @@ func (s *ServerCommand) makeAuthenticator(ds *service.DataStore, avas avatar.Sto\n \t\tAvatarStore:       avas,\n \t\tAvatarResizeLimit: s.Avatar.RszLmt,\n \t\tAvatarRoutePath:   \"/api/v1/avatar\",\n-\t\tLogger:            logger.Std,\n+\t\tLogger:            lgr.Default(),\n \t})\n \ts.addAuthProviders(authenticator)\n \treturn authenticator"
    },
    {
      "sha": "c0413f0ab6a59deba1be95fd0a6724bcc9629e5a",
      "filename": "backend/app/cmd/server_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/server_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/cmd/server_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,7 +5,6 @@ import (\n \t\"crypto/tls\"\n \t\"fmt\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"strings\"\n@@ -16,6 +15,7 @@ import (\n \tjwt \"github.com/dgrijalva/jwt-go\"\n \t\"github.com/globalsign/mgo\"\n \t\"github.com/go-pkgz/auth/token\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/mongo\"\n \tflags \"github.com/jessevdk/go-flags\"\n "
    },
    {
      "sha": "171a88306e89f4f7ed46770aca2aca383a6db348",
      "filename": "backend/app/main.go",
      "status": "modified",
      "additions": 2,
      "deletions": 13,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/main.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/main.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/main.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,13 +2,12 @@ package main\n \n import (\n \t\"fmt\"\n-\t\"log\"\n \t\"os\"\n \t\"os/signal\"\n \t\"runtime\"\n \t\"syscall\"\n \n-\t\"github.com/hashicorp/logutils\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \tflags \"github.com/jessevdk/go-flags\"\n \n \t\"github.com/umputun/remark/backend/app/cmd\"\n@@ -62,19 +61,9 @@ func main() {\n }\n \n func setupLog(dbg bool) {\n-\tfilter := &logutils.LevelFilter{\n-\t\tLevels:   []logutils.LogLevel{\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\"},\n-\t\tMinLevel: logutils.LogLevel(\"INFO\"),\n-\t\tWriter:   os.Stdout,\n-\t}\n-\n-\tlog.SetFlags(log.Ldate | log.Ltime)\n-\n \tif dbg {\n-\t\tlog.SetFlags(log.Ldate | log.Ltime | log.Lmicroseconds | log.Lshortfile)\n-\t\tfilter.MinLevel = logutils.LogLevel(\"DEBUG\")\n+\t\tlog.Setup(log.Debug, log.Caller)\n \t}\n-\tlog.SetOutput(filter)\n }\n \n // getDump reads runtime stack and returns as a string"
    },
    {
      "sha": "d93851714b267a6134a04404f80a694955776c0e",
      "filename": "backend/app/main_test.go",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/main_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/main_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/main_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,7 +2,6 @@ package main\n \n import (\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"strings\"\n@@ -11,6 +10,8 @@ import (\n \t\"testing\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n+\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n )\n@@ -54,5 +55,5 @@ func TestGetDump(t *testing.T) {\n \tassert.True(t, strings.Contains(dump, \"goroutine\"))\n \tassert.True(t, strings.Contains(dump, \"[running]\"))\n \tassert.True(t, strings.Contains(dump, \"backend/app/main.go\"))\n-\tlog.Print(\"\\n dump:\" + dump)\n+\tlog.Printf(\"\\n dump: %s\", dump)\n }"
    },
    {
      "sha": "e68a9bc75ec21753815f58940f9740153fcc29fd",
      "filename": "backend/app/migrator/backup.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/backup.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/backup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/backup.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,12 +5,12 @@ import (\n \t\"context\"\n \t\"fmt\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"os\"\n \t\"sort\"\n \t\"strings\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n )\n "
    },
    {
      "sha": "bbe0b2608b62b8eb8e40d6dd2202d1b326e477c1",
      "filename": "backend/app/migrator/disqus.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/disqus.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/disqus.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/disqus.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,10 +3,10 @@ package migrator\n import (\n \t\"encoding/xml\"\n \t\"io\"\n-\t\"log\"\n \t\"strings\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "334c00e9281f747281d629312ad4a0f77d4f1a34",
      "filename": "backend/app/migrator/disqus_test.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/disqus_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/disqus_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/disqus_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -7,13 +7,13 @@ import (\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n+\n \t\"github.com/umputun/remark/backend/app/store\"\n \t\"github.com/umputun/remark/backend/app/store/admin\"\n \t\"github.com/umputun/remark/backend/app/store/engine\"\n \t\"github.com/umputun/remark/backend/app/store/service\"\n-\n-\t\"github.com/stretchr/testify/assert\"\n )\n \n func TestDisqus_Import(t *testing.T) {"
    },
    {
      "sha": "a63d56c3c98bb85a304ef2d6b68dfc64ada0c2b2",
      "filename": "backend/app/migrator/migrator.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/migrator.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/migrator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/migrator.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,9 +5,9 @@ package migrator\n \n import (\n \t\"io\"\n-\t\"log\"\n \t\"os\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "b3a03d82b02ef0bbb34e7bc70e12667c824ed965",
      "filename": "backend/app/migrator/native.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/native.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/native.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/native.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,8 +4,8 @@ import (\n \t\"bytes\"\n \t\"encoding/json\"\n \t\"io\"\n-\t\"log\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "f6ec722c205a6819ecd00f2b8e895747d77c8f7d",
      "filename": "backend/app/migrator/native_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/native_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/native_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/native_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,13 +4,13 @@ import (\n \t\"bytes\"\n \t\"encoding/json\"\n \t\"fmt\"\n-\t\"log\"\n \t\"os\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n "
    },
    {
      "sha": "90dce39be168bb0e1ae54b44bafd6c52c0ed960a",
      "filename": "backend/app/migrator/wordpress.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/wordpress.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/migrator/wordpress.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/wordpress.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,9 +4,9 @@ import (\n \t\"encoding/xml\"\n \t\"html\"\n \t\"io\"\n-\t\"log\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "67b1b7bbe42b26ccee395dc0abb3fdf891c05d42",
      "filename": "backend/app/notify/notify.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/notify.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/notify.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/notify.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,10 +4,11 @@ package notify\n import (\n \t\"context\"\n \t\"fmt\"\n-\t\"log\"\n \t\"sync\"\n \t\"sync/atomic\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n+\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n "
    },
    {
      "sha": "b3ca33c503b33ffde735661a882d1e01b710ab2e",
      "filename": "backend/app/notify/notify_test.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/notify_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/notify_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/notify_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,14 +4,15 @@ import (\n \t\"context\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"log\"\n \t\"math/rand\"\n \t\"sync\"\n \t\"sync/atomic\"\n \t\"testing\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/stretchr/testify/assert\"\n+\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n "
    },
    {
      "sha": "a5dd78e3ef51a340cf4c5c56a9d963355487efb7",
      "filename": "backend/app/notify/telegram.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/telegram.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/telegram.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/telegram.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -6,11 +6,11 @@ import (\n \t\"encoding/json\"\n \t\"fmt\"\n \t\"html\"\n-\t\"log\"\n \t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/repeater\"\n \t\"github.com/pkg/errors\"\n )"
    },
    {
      "sha": "c90caf636f0c4c8351b67a0902b99c4ea852ab66",
      "filename": "backend/app/notify/telegram_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/telegram_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/notify/telegram_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/telegram_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -9,6 +9,7 @@ import (\n \n \t\"github.com/go-chi/chi\"\n \t\"github.com/stretchr/testify/assert\"\n+\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n "
    },
    {
      "sha": "87667f73ad1171af1772b5c77ff1ebcbe735d343",
      "filename": "backend/app/rest/api/admin.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/admin.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/admin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/admin.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,15 +2,14 @@ package api\n \n import (\n \t\"errors\"\n-\t\"log\"\n \t\"net/http\"\n \t\"path\"\n \t\"time\"\n \n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n-\n \t\"github.com/go-pkgz/auth\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n "
    },
    {
      "sha": "b909e5314d1a3925b243f959bb9cf82aac77d62d",
      "filename": "backend/app/rest/api/migrator.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/migrator.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/migrator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/migrator.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -6,15 +6,14 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"sync\"\n \t\"time\"\n \n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n-\n+\tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/pkg/errors\""
    },
    {
      "sha": "cc32c556bad140da18469f4849faa00a4d95889a",
      "filename": "backend/app/rest/api/migrator_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/migrator_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/migrator_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/migrator_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -15,11 +15,10 @@ import (\n \t\"testing\"\n \t\"time\"\n \n-\t\"github.com/go-pkgz/auth/token\"\n-\n \tbolt \"github.com/coreos/bbolt\"\n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-pkgz/auth\"\n+\t\"github.com/go-pkgz/auth/token\"\n \t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\""
    },
    {
      "sha": "7219a322384359c1cae1a3ade50a210383c65253",
      "filename": "backend/app/rest/api/rest.go",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -6,7 +6,6 @@ import (\n \t\"encoding/json\"\n \t\"fmt\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net/http\"\n \t\"path\"\n \t\"strings\"\n@@ -19,13 +18,13 @@ import (\n \t\"github.com/go-chi/chi/middleware\"\n \t\"github.com/go-chi/cors\"\n \t\"github.com/go-chi/render\"\n-\t\"github.com/pkg/errors\"\n-\t\"github.com/rakyll/statik/fs\"\n-\n \t\"github.com/go-pkgz/auth\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/go-pkgz/rest/logger\"\n+\t\"github.com/pkg/errors\"\n+\t\"github.com/rakyll/statik/fs\"\n \n \t\"github.com/umputun/remark/backend/app/notify\"\n \t\"github.com/umputun/remark/backend/app/rest\""
    },
    {
      "sha": "303c36cac8adf303c421068f63e259051b8492d5",
      "filename": "backend/app/rest/api/rest_private.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest_private.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest_private.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_private.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,19 +5,18 @@ import (\n \t\"encoding/json\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"log\"\n \t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n \tjwt \"github.com/dgrijalva/jwt-go\"\n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n-\tmultierror \"github.com/hashicorp/go-multierror\"\n-\n \t\"github.com/go-pkgz/auth/token\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n+\tmultierror \"github.com/hashicorp/go-multierror\"\n \n \t\"github.com/umputun/remark/backend/app/rest\"\n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "4f49f91d228771c190e2a584d929a59f6bc2f847",
      "filename": "backend/app/rest/api/rest_public.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest_public.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rest_public.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_public.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,14 +3,13 @@ package api\n import (\n \t\"crypto/sha1\"\n \t\"encoding/base64\"\n-\t\"log\"\n \t\"net/http\"\n \t\"strconv\"\n \t\"strings\"\n \n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n-\n+\tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n "
    },
    {
      "sha": "8dd58f38e28f18d3931483fa973f1cd17660019e",
      "filename": "backend/app/rest/api/rss.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rss.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/rss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rss.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,16 +2,15 @@ package api\n \n import (\n \t\"fmt\"\n-\t\"log\"\n \t\"net/http\"\n \t\"time\"\n \n \t\"github.com/go-chi/chi\"\n+\tlog \"github.com/go-pkgz/lgr\"\n+\t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/gorilla/feeds\"\n \t\"github.com/pkg/errors\"\n \n-\t\"github.com/go-pkgz/rest/cache\"\n-\n \t\"github.com/umputun/remark/backend/app/rest\"\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n@@ -165,6 +164,7 @@ func (s *Rest) toRssFeed(url string, comments []store.Comment) (string, error) {\n \t\t\tDescription: c.Text,\n \t\t\tCreated:     c.Timestamp,\n \t\t\tAuthor:      &feeds.Author{Name: c.User.Name},\n+\t\t\tId:          c.ID,\n \t\t}\n \t\tif c.ParentID != \"\" {\n \t\t\t// add indication to parent comment"
    },
    {
      "sha": "ac11100739873ed88e4806b28bc0db9ef76a46c4",
      "filename": "backend/app/rest/api/ssl.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/ssl.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/api/ssl.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/ssl.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,13 +2,13 @@ package api\n \n import (\n \t\"crypto/tls\"\n-\t\"log\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"time\"\n \n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/chi/middleware\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"golang.org/x/crypto/acme/autocert\"\n \n \tR \"github.com/go-pkgz/rest\""
    },
    {
      "sha": "e4db2a00e39246b6770cff338d860460e20b1718",
      "filename": "backend/app/rest/httperrors.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/httperrors.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/httperrors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/httperrors.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,13 +2,13 @@ package rest\n \n import (\n \t\"fmt\"\n-\t\"log\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"runtime\"\n \t\"strings\"\n \n \t\"github.com/go-chi/render\"\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // SendErrorJSON makes {error: blah, details: blah} json body and responds with error code"
    },
    {
      "sha": "17160658608e69d03382134c8ec86b2301caccc7",
      "filename": "backend/app/rest/proxy/image.go",
      "status": "modified",
      "additions": 2,
      "deletions": 3,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/proxy/image.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/proxy/image.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/proxy/image.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,16 +3,15 @@ package proxy\n import (\n \t\"encoding/base64\"\n \t\"io\"\n-\t\"log\"\n \t\"net/http\"\n \t\"strings\"\n \t\"time\"\n \n \t\"github.com/PuerkitoBio/goquery\"\n \t\"github.com/go-chi/chi\"\n-\t\"github.com/pkg/errors\"\n-\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/repeater\"\n+\t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/rest\"\n )"
    },
    {
      "sha": "114b533e08b4d7b236101499215ebfa2287f4297",
      "filename": "backend/app/rest/tree_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/tree_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/rest/tree_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/tree_test.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,10 +3,10 @@ package rest\n import (\n \t\"encoding/json\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"testing\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n "
    },
    {
      "sha": "d0b5069253f5166d179e0e4b843defc599060657",
      "filename": "backend/app/store/admin/admin.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/admin/admin.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/admin/admin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/admin/admin.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,7 +3,8 @@ package admin\n \n import (\n \t\"errors\"\n-\t\"log\"\n+\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // Store defines interface returning admins info for given site"
    },
    {
      "sha": "1f19bc328c5003961d6f6d4cbf311ed336a08272",
      "filename": "backend/app/store/admin/mongo.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/admin/mongo.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/admin/mongo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/admin/mongo.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,10 +1,9 @@\n package admin\n \n import (\n-\t\"log\"\n-\n \t\"github.com/globalsign/mgo\"\n \t\"github.com/globalsign/mgo/bson\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \n \t\"github.com/go-pkgz/mongo\"\n )"
    },
    {
      "sha": "877febd4dfec60f694c27e60f58b2d1466888011",
      "filename": "backend/app/store/engine/bolt_accessor.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/bolt_accessor.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/bolt_accessor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/bolt_accessor.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -3,11 +3,11 @@ package engine\n import (\n \t\"encoding/json\"\n \t\"fmt\"\n-\t\"log\"\n \t\"strings\"\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \tmultierror \"github.com/hashicorp/go-multierror\"\n \t\"github.com/pkg/errors\"\n "
    },
    {
      "sha": "579d34dbf2c9baf60849149c95a729cbbaf96595",
      "filename": "backend/app/store/engine/bolt_admin.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/bolt_admin.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/bolt_admin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/bolt_admin.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,10 +2,10 @@ package engine\n \n import (\n \t\"encoding/json\"\n-\t\"log\"\n \t\"time\"\n \n \tbolt \"github.com/coreos/bbolt\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "587e7bdaecfc5e36fd140bd86fe446c315bfb08a",
      "filename": "backend/app/store/engine/mongo.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/mongo.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/engine/mongo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/mongo.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,11 +5,10 @@ import (\n \n \t\"github.com/globalsign/mgo\"\n \t\"github.com/globalsign/mgo/bson\"\n+\t\"github.com/go-pkgz/mongo\"\n \tmultierror \"github.com/hashicorp/go-multierror\"\n \t\"github.com/pkg/errors\"\n \n-\t\"github.com/go-pkgz/mongo\"\n-\n \t\"github.com/umputun/remark/backend/app/store\"\n )\n "
    },
    {
      "sha": "1603dc890ff62bfdf5f22114c1c2219513bf4ab9",
      "filename": "backend/app/store/service/service.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/service/service.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/service/service.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,11 +1,11 @@\n package service\n \n import (\n-\t\"log\"\n \t\"sort\"\n \t\"sync\"\n \t\"time\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/google/uuid\"\n \tmultierror \"github.com/hashicorp/go-multierror\"\n \t\"github.com/pkg/errors\""
    },
    {
      "sha": "30c1e021b8b86e61788c4c553598679c34f84b92",
      "filename": "backend/app/store/service/title.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/service/title.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/service/title.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/title.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,9 +2,9 @@ package service\n \n import (\n \t\"io\"\n-\t\"log\"\n \t\"net/http\"\n \n+\tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/pkg/errors\"\n \t\"golang.org/x/net/html\""
    },
    {
      "sha": "d447d8aab715b4f8186d24f222bef4dbe43d9311",
      "filename": "backend/app/store/user.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/user.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/app/store/user.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/user.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -8,8 +8,9 @@ import (\n \t\"hash\"\n \t\"hash/crc64\"\n \t\"io\"\n-\t\"log\"\n \t\"regexp\"\n+\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // User holds user-related info"
    },
    {
      "sha": "79289200bee0d198f442c3c002c6e037fcd754b8",
      "filename": "backend/vendor/github.com/go-pkgz/auth/README.md",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/README.md?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -203,7 +203,8 @@ _Warning: this is not the real oauth2 server but just a small fake thing for dev\n In addition to the primary method (i.e. JWT cookie with XSRF header) there are two more ways to authenticate:\n \n 1. Send JWT header as `X-JWT`. This shouldn't be used for web application, however can be helpful for service-to-service authentication.\n-2. [Basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). This mode disabled by default and will be enabled if `Opts.AdminPasswd` defined. This will allow access with basic auth admin:<Opts.AdminPasswd> with user [admin](https://github.com/go-pkgz/auth/blob/master/middleware/auth.go#L24). Such method can be used for automation scripts.\n+2. Send JWT token as query parameter, i.e. `/something?token=<jwt>`\n+3. [Basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). This mode disabled by default and will be enabled if `Opts.AdminPasswd` defined. This will allow access with basic auth admin:<Opts.AdminPasswd> with user [admin](https://github.com/go-pkgz/auth/blob/master/middleware/auth.go#L24). Such method can be used for automation scripts.\n \n ### Logging\n "
    },
    {
      "sha": "24e4fece9177230c63de43780890e4c9e36bdd64",
      "filename": "backend/vendor/github.com/go-pkgz/auth/auth.go",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/auth.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/auth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/auth.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -6,19 +6,19 @@ import (\n \t\"strings\"\n \t\"time\"\n \n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/go-pkgz/auth/avatar\"\n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/middleware\"\n \t\"github.com/go-pkgz/auth/provider\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n // Service provides higher level wrapper allowing to construct everything and get back token middleware\n type Service struct {\n-\tlogger         logger.L\n+\tlogger         lgr.L\n \topts           Opts\n \tjwtService     *token.Service\n \tproviders      []provider.Service\n@@ -56,7 +56,7 @@ type Opts struct {\n \tAdminPasswd    string         // if presented, allows basic auth with user admin and given password\n \tAudienceReader token.Audience // list of allowed aud values, default (empty) allows any\n \tRefreshFactor  int            // estimated number of request client sends in parallel during token refresh.\n-\tLogger         logger.L       // logger interface, default is no logging at all\n+\tLogger         lgr.L          // logger interface, default is no logging at all\n }\n \n // NewService initializes everything\n@@ -78,7 +78,7 @@ func NewService(opts Opts) (res *Service) {\n \t}\n \n \tif opts.Logger == nil {\n-\t\tres.logger = logger.Func(func(fmt string, args ...interface{}) {}) // do-nothing logger\n+\t\tres.logger = lgr.Func(func(fmt string, args ...interface{}) {}) // do-nothing logger\n \t}\n \n \tjwtService := token.NewService(token.Opts{"
    },
    {
      "sha": "336c9c1c873c9a97c3c412a0b2b518b40c3b03e7",
      "filename": "backend/vendor/github.com/go-pkgz/auth/avatar/avatar.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/avatar/avatar.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/avatar/avatar.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/avatar/avatar.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -12,18 +12,18 @@ import (\n \t\"strings\"\n \t\"time\"\n \n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest\"\n \t\"github.com/pkg/errors\"\n \t\"golang.org/x/image/draw\"\n \n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n // Proxy provides http handler for avatars from avatar.Store\n // On user login token will call Put and it will retrieve and save picture locally.\n type Proxy struct {\n-\tlogger.L\n+\tlgr.L\n \tStore       Store\n \tRoutePath   string\n \tURL         string"
    },
    {
      "sha": "adf70140e7b0e4ce9ee4282f17a75d605f2dc27b",
      "filename": "backend/vendor/github.com/go-pkgz/auth/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/go.mod?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,10 +5,12 @@ require (\n \tgithub.com/coreos/bbolt v1.3.0\n \tgithub.com/dgrijalva/jwt-go v3.2.0+incompatible\n \tgithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8\n+\tgithub.com/go-pkgz/lgr v0.1.0 // indirect\n \tgithub.com/go-pkgz/mongo v1.0.0\n \tgithub.com/go-pkgz/rest v1.1.5\n \tgithub.com/nullrocks/identicon v0.0.0-20180626043057-7875f45b0022\n \tgithub.com/pkg/errors v0.8.0\n+\tgithub.com/stretchr/objx v0.1.1 // indirect\n \tgolang.org/x/image v0.0.0-20181116024801-cd38e8056d9b\n \tgolang.org/x/net v0.0.0-20181220203305-927f97764cc3 // indirect\n \tgolang.org/x/oauth2 v0.0.0-20181203162652-d668ce993890"
    },
    {
      "sha": "24fc75fe2a9f44611a5ba1c81e7641558e880f55",
      "filename": "backend/vendor/github.com/go-pkgz/auth/go.sum",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/go.sum?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,12 +2,17 @@ cloud.google.com/go v0.34.0 h1:eOI3/cP2VTU6uZLDYAoic+eyzzB9YyGmJ7eIjl8rOPg=\n cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n github.com/coreos/bbolt v1.3.0 h1:HIgH5xUWXT914HCI671AxuTTqjj64UOFr7pHn48LUTI=\n github.com/coreos/bbolt v1.3.0/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/dgrijalva/jwt-go v3.2.0+incompatible h1:7qlOGliEKZXTDg6OTjfoBKDXWrumCAMpl/TFQ4/5kLM=\n github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=\n github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8 h1:DujepqpGd1hyOd7aW59XpK7Qymp8iy83xq74fLr21is=\n github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\n+github.com/go-pkgz/lgr v0.0.0-20190107224007-7d791fb529cb h1:HBzmL2t7mb8A14Vc1uMInWQlKAY5rq1i1M4svUIQTNQ=\n+github.com/go-pkgz/lgr v0.0.0-20190107224007-7d791fb529cb/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n+github.com/go-pkgz/lgr v0.1.0 h1:JzSBxyNW9gli9PMVGI8IUhmFsQZaK2usJ62pmUGj0BY=\n+github.com/go-pkgz/lgr v0.1.0/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n github.com/go-pkgz/mongo v1.0.0 h1:9jijAK7prCRMetiyTu3c1rv/2lMypzuf2DWcVpTlwzw=\n github.com/go-pkgz/mongo v1.0.0/go.mod h1:R9si/F2aJsjz4MUxhzuppIHY8yLV3YCeuCpgcI50cu4=\n github.com/go-pkgz/rest v1.1.3 h1:rMf+xJn8i1Ip9OKohusZsRxwntM0BwYu8OX8BuEwN80=\n@@ -24,8 +29,11 @@ github.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\n github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\n github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n golang.org/x/image v0.0.0-20181116024801-cd38e8056d9b h1:VHyIDlv3XkfCa5/a81uzaoDkHH4rr81Z62g+xlnO8uM=\n golang.org/x/image v0.0.0-20181116024801-cd38e8056d9b/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\n golang.org/x/net v0.0.0-20181220203305-927f97764cc3 h1:eH6Eip3UpmR+yM/qI9Ijluzb1bNv/cAU/n+6l8tRSis="
    },
    {
      "sha": "5c62407d303c4d41374856c80e4c94582cbf5950",
      "filename": "backend/vendor/github.com/go-pkgz/auth/logger/logger.go",
      "status": "removed",
      "additions": 0,
      "deletions": 20,
      "changes": 20,
      "blob_url": "https://github.com/umputun/remark/blob/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/go-pkgz/auth/logger/logger.go",
      "raw_url": "https://github.com/umputun/remark/raw/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/go-pkgz/auth/logger/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/logger/logger.go?ref=a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "patch": "@@ -1,20 +0,0 @@\n-package logger\n-\n-import \"log\"\n-\n-// L defines minimal interface used to log things\n-type L interface {\n-\tLogf(format string, args ...interface{})\n-}\n-\n-// Func type is an adapter to allow the use of ordinary functions as Logger.\n-type Func func(format string, args ...interface{})\n-\n-// Logf calls f(id)\n-func (f Func) Logf(format string, args ...interface{}) { f(format, args...) }\n-\n-// NoOp logger\n-var NoOp = Func(func(format string, args ...interface{}) {})\n-\n-// Std logger\n-var Std = Func(func(format string, args ...interface{}) { log.Printf(format, args...) })"
    },
    {
      "sha": "82990751525d29381e3cd4979338e61c8baad052",
      "filename": "backend/vendor/github.com/go-pkgz/auth/middleware/auth.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/middleware/auth.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/middleware/auth.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/middleware/auth.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,16 +5,16 @@ import (\n \t\"math/rand\"\n \t\"net/http\"\n \n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/pkg/errors\"\n \n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/provider\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n // Authenticator is top level auth object providing middlewares\n type Authenticator struct {\n-\tlogger.L\n+\tlgr.L\n \tJWTService    TokenService\n \tProviders     []provider.Service\n \tValidator     token.Validator"
    },
    {
      "sha": "8287054c784ccfff5c44e0fdff970f4a415b9010",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/provider/dev_provider.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -10,11 +10,11 @@ import (\n \t\"text/template\"\n \t\"time\"\n \n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/nullrocks/identicon\"\n \t\"github.com/pkg/errors\"\n \t\"golang.org/x/oauth2\"\n \n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n@@ -26,7 +26,7 @@ const devAuthPort = 8084\n // can run in interactive and non-interactive mode. In interactive mode login attempts will show login form to select\n // desired user name, this is the mode used for development. Non-interactive mode for tests only.\n type DevAuthServer struct {\n-\tlogger.L\n+\tlgr.L\n \tProvider  Oauth2Handler\n \tAutomatic bool\n \tusername  string // unsafe, but fine for dev"
    },
    {
      "sha": "1644b722c04c916c36849925b834b73daba9a957",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/direct.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/direct.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/direct.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/provider/direct.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -4,17 +4,17 @@ import (\n \t\"errors\"\n \t\"net/http\"\n \n-\t\"github.com/dgrijalva/jwt-go\"\n+\tjwt \"github.com/dgrijalva/jwt-go\"\n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest\"\n \n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n // DirectHandler implements non-oauth2 provider authorizing user in traditional way with storage\n // with users and hashes\n type DirectHandler struct {\n-\tlogger.L\n+\tlgr.L\n \tCredChecker  CredChecker\n \tProviderName string\n \tTokenService TokenService"
    },
    {
      "sha": "628df27d0ce607145f7c89d0fd8779ba3d48a12f",
      "filename": "backend/vendor/github.com/go-pkgz/auth/provider/oauth2.go",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/oauth2.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/provider/oauth2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/provider/oauth2.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -9,10 +9,10 @@ import (\n \t\"time\"\n \n \tjwt \"github.com/dgrijalva/jwt-go\"\n+\t\"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest\"\n \t\"golang.org/x/oauth2\"\n \n-\t\"github.com/go-pkgz/auth/logger\"\n \t\"github.com/go-pkgz/auth/token\"\n )\n \n@@ -32,7 +32,7 @@ type Oauth2Handler struct {\n \n // Params to make initialized and ready to use provider\n type Params struct {\n-\tlogger.L\n+\tlgr.L\n \tURL         string\n \tJwtService  TokenService\n \tCid         string\n@@ -54,7 +54,7 @@ func (u userData) value(key string) string {\n // initOauth2Handler makes oauth2 handler for given provider\n func initOauth2Handler(p Params, service Oauth2Handler) Oauth2Handler {\n \tif p.L == nil {\n-\t\tp.L = logger.Func(func(fmt string, args ...interface{}) {})\n+\t\tp.L = lgr.NoOp\n \t}\n \tp.Logf(\"[INFO] init oauth2 service %s\", service.name)\n \tservice.Params = p"
    },
    {
      "sha": "d5598a7ce88cba2724e31bdc35e31490f448d46f",
      "filename": "backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/token/jwt.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -38,6 +38,7 @@ const (\n \tjwtHeaderKey   = \"X-JWT\"\n \txsrfCookieName = \"XSRF-TOKEN\"\n \txsrfHeaderKey  = \"X-XSRF-TOKEN\"\n+\ttokenQuery     = \"token\"\n \tissuer         = \"go-pkgz/auth\"\n \ttokenDuration  = time.Minute * 15\n \tcookieDuration = time.Hour * 24 * 31\n@@ -208,15 +209,20 @@ func (j *Service) Set(w http.ResponseWriter, claims Claims) error {\n \treturn nil\n }\n \n-// Get token from header or cookie\n+// Get token from url, header or cookie\n // if cookie used, verify xsrf token to match\n func (j *Service) Get(r *http.Request) (Claims, string, error) {\n \n \tfromCookie := false\n \ttokenString := \"\"\n \n+\t// try to get from \"token\" query param\n+\tif tkQuery := r.URL.Query().Get(tokenQuery); tkQuery != \"\" {\n+\t\ttokenString = tkQuery\n+\t}\n+\n \t// try to get from X-JWT header\n-\tif tokenHeader := r.Header.Get(jwtHeaderKey); tokenHeader != \"\" {\n+\tif tokenHeader := r.Header.Get(jwtHeaderKey); tokenHeader != \"\" && tokenString == \"\" {\n \t\ttokenString = tokenHeader\n \t}\n "
    },
    {
      "sha": "6e85044942a6d41bb0e338246fdbff2ba4508acf",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/.gitignore",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/.gitignore",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/.gitignore?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,13 @@\n+# Binaries for programs and plugins\n+*.exe\n+*.exe~\n+*.dll\n+*.so\n+*.dylib\n+\n+# Test binary, build with `go test -c`\n+*.test\n+\n+# Output of the go coverage tool, specifically when used with LiteIDE\n+*.out\n+vendor"
    },
    {
      "sha": "3c6ef3e7505d0f6f1f9a6eb157e03e894c8a8b90",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/.travis.yml",
      "status": "added",
      "additions": 19,
      "deletions": 0,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/.travis.yml",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/.travis.yml?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,19 @@\n+language: go\n+\n+go:\n+  - \"1.11.x\"\n+\n+install: true\n+\n+before_install:\n+  - export TZ=America/Chicago\n+  - curl -L https://git.io/vp6lP | sh \n+  - go get github.com/mattn/goveralls\n+  - export PATH=$(pwd)/bin:$PATH\n+\n+script:\n+  - GO111MODULE=on go get ./...\n+  - GO111MODULE=on go mod vendor\n+  - GO111MODULE=on go test  -v -mod=vendor -covermode=count -coverprofile=profile.cov ./... || travis_terminate 1;\n+  - ./bin/gometalinter --deadline=120s --exclude=test --exclude=mock --exclude=vendor --exclude=_example --disable-all --enable=errcheck --enable=vet --enable=vetshadow --enable=megacheck --enable=ineffassign --enable=varcheck --enable=unconvert --enable=deadcode --enable=interfacer --enable=gotype ./... || travis_terminate 1;\n+  - $GOPATH/bin/goveralls -coverprofile=profile.cov -service=travis-ci"
    },
    {
      "sha": "ac540250027fcbbda2f64479f6e3e155961beb5b",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/LICENSE?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,21 @@\n+MIT License\n+\n+Copyright (c) 2019 Umputun\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE."
    },
    {
      "sha": "3f6a9a8d5d88d20d078ab7071d5dd99408827fd7",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/README.md",
      "status": "added",
      "additions": 48,
      "deletions": 0,
      "changes": 48,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/README.md?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,48 @@\n+# lgr - simple logger with some extras [![Build Status](https://travis-ci.org/go-pkgz/lgr.svg?branch=master)](https://travis-ci.org/go-pkgz/lgr) [![Coverage Status](https://coveralls.io/repos/github/go-pkgz/lgr/badge.svg?branch=master)](https://coveralls.io/github/go-pkgz/lgr?branch=master) [![godoc](https://godoc.org/github.com/go-pkgz/lgr?status.svg)](https://godoc.org/github.com/go-pkgz/lgr)\n+\n+## install\n+\n+`go get github/go-pkgz/lgr`\n+\n+## usage\n+\n+```go\n+    l := lgr.New(lgr.Debug, lgr.Caller) // allow debug and caller info\n+    l.Logf(\"INFO some important err message, %v\", err)\n+    l.Logf(\"DEBUG some less important err message, %v\", err)\n+```\n+\n+output looks like this:\n+```\n+2018/01/07 13:02:34.000 INFO  {svc/handler.go:101 h.MyFunc1} some important err message, can't open file`\n+2018/01/07 13:02:34.015 DEBUG {svc/handler.go:155 h.MyFunc2} some less important err message, file is too small`\n+```\n+\n+_Without `lgr.Caller` it will drop `{caller}` part_\n+\n+## details\n+\n+### interfaces and default loggers\n+\n+- `lgr` package provides a single interface `lgr.L` with a single method `Logf(format string, args ...interface{})`. Function wrapper `lgr.Func` allows to make `lgr.L` from a function directly.\n+- Default logger functionality can be used without `lgr.New`, but just `lgr.Printf`\n+- Two predefined loggers available: `lgr.NoOp` (do-nothing logger) and `lgr.Std` (passing directly to stdlib log)\n+\n+### options\n+\n+`lgr.New` call accepts functional options:\n+\n+- `lgr.Debug` - turn debug mode on. This allows messages with \"DEBUG\" level (filtered overwise)\n+- `lgr.Caller` - adds the caller info each message\n+- `lgr.Out(io.Writer)` - sets the output writer, default `os.Stdout`\n+- `lgr.Err(io.Writer)` - sets the error writer, default `os.Stderr`\n+\n+### levels\n+\n+`lgr.Logf` recognizes prefixes like \"INFO\" or \"[INFO]\" as levels. The full list of supported levels - \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"PANIC\" and \"FATAL\"\n+\n+- `DEBUG` will be filtered unless `lgr.Debug` option defined\n+- `INFO` and `WARN` don't have any special behavior attached\n+- `ERROR` sends messages to both out and err writers\n+- \"PANIC\" and \"FATAL\" send messages to both out and err writers. In addition sends dump of callers and runtime info to err only, and call `os.Exit(1)`.\n+  \n\\ No newline at end of file"
    },
    {
      "sha": "6664c915e1a7f767f2f35ce272aec4b749a8c385",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/go.mod?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,3 @@\n+module github.com/go-pkgz/lgr\n+\n+require github.com/stretchr/testify v1.3.0"
    },
    {
      "sha": "4347755afe827004877426c3140362ac27e4dd69",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/go.sum?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,7 @@\n+github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI="
    },
    {
      "sha": "44b971771785e69d44a83b0fd4b2c261514b4c8a",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/interface.go",
      "status": "added",
      "additions": 41,
      "deletions": 0,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/interface.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/interface.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/interface.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,41 @@\n+package lgr\n+\n+import stdlog \"log\"\n+\n+var def = New() // default logger doesn't allow DEBUG and doesn't add caller info\n+\n+// L defines minimal interface used to log things\n+type L interface {\n+\tLogf(format string, args ...interface{})\n+}\n+\n+// Func type is an adapter to allow the use of ordinary functions as Logger.\n+type Func func(format string, args ...interface{})\n+\n+// Logf calls f(id)\n+func (f Func) Logf(format string, args ...interface{}) { f(format, args...) }\n+\n+// NoOp logger\n+var NoOp = Func(func(format string, args ...interface{}) {})\n+\n+// Std logger sends to std default logger directly\n+var Std = Func(func(format string, args ...interface{}) { stdlog.Printf(format, args...) })\n+\n+// Printf simplifies replacement of std logger\n+func Printf(format string, args ...interface{}) {\n+\tdef.Logf(format, args...)\n+}\n+\n+// Print simplifies replacement of std logger\n+func Print(line string) {\n+\tdef.Logf(line)\n+}\n+\n+// Setup default logger with options\n+func Setup(opts ...Option) {\n+\tdef = New(opts...)\n+\tdef.skipCallers = 2\n+}\n+\n+// Default returns pre-constructed def logger (debug on, callers disabled)\n+func Default() L { return def }"
    },
    {
      "sha": "ac67af91a14295883ae6bc29619cc60881a977f3",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "status": "added",
      "additions": 143,
      "deletions": 0,
      "changes": 143,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/logger.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -0,0 +1,143 @@\n+package lgr\n+\n+import (\n+\t\"fmt\"\n+\t\"io\"\n+\t\"os\"\n+\t\"runtime\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"time\"\n+)\n+\n+var levels = []string{\"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"PANIC\", \"FATAL\"}\n+\n+// Logger provided simple logger with basic support of levels. Thread safe\n+type Logger struct {\n+\tstdout, stderr io.Writer\n+\tdbg            bool\n+\tlock           sync.Mutex\n+\tcallers        bool\n+\tnow            nowFn\n+\tfatal          panicFn\n+\tskipCallers    int\n+}\n+\n+type nowFn func() time.Time\n+type panicFn func()\n+\n+// New makes new leveled logger. Accepts dbg flag turing on info about the caller and allowing DEBUG messages/\n+// Two writers can be passed optionally - first for out and second for err\n+func New(options ...Option) *Logger {\n+\tres := Logger{\n+\t\tnow:         time.Now,\n+\t\tfatal:       func() { os.Exit(1) },\n+\t\tstdout:      os.Stdout,\n+\t\tstderr:      os.Stderr,\n+\t\tskipCallers: 1,\n+\t}\n+\tfor _, opt := range options {\n+\t\topt(&res)\n+\t}\n+\treturn &res\n+}\n+\n+// Logf implements L interface to output with printf style.\n+// Each line prefixed with ts, level and optionally (dbg mode only) by caller info.\n+// ERROR and FATAL also send the same line to err writer.\n+// FATAL adds runtime stack and os.exit(1), like panic.\n+func (l *Logger) Logf(format string, args ...interface{}) {\n+\n+\tlv, msg := l.extractLevel(fmt.Sprintf(format, args...))\n+\tvar bld strings.Builder\n+\tbld.WriteString(l.now().Format(\"2006/01/02 15:04:05.000 \"))\n+\tbld.WriteString(lv)\n+\n+\tif l.dbg && l.callers {\n+\t\tif pc, file, line, ok := runtime.Caller(l.skipCallers); ok {\n+\t\t\tfnameElems := strings.Split(file, \"/\")\n+\t\t\tfuncNameElems := strings.Split(runtime.FuncForPC(pc).Name(), \"/\")\n+\t\t\tsrcFileInfo := fmt.Sprintf(\"{%s:%d %s} \", strings.Join(fnameElems[len(fnameElems)-2:], \"/\"),\n+\t\t\t\tline, funcNameElems[len(funcNameElems)-1])\n+\t\t\tbld.WriteString(srcFileInfo)\n+\t\t}\n+\t}\n+\n+\tif lv == \"DEBUG \" && !l.dbg {\n+\t\treturn\n+\t}\n+\tbld.WriteString(msg)  //nolint\n+\tbld.WriteString(\"\\n\") //nolint\n+\n+\tl.lock.Lock()\n+\tmsgb := []byte(bld.String())\n+\tl.stdout.Write(msgb) //nolint\n+\n+\tswitch lv {\n+\tcase \"PANIC \", \"FATAL \":\n+\t\tl.stderr.Write(msgb)      //nolint\n+\t\tl.stderr.Write(getDump()) //nolint\n+\t\tl.fatal()\n+\tcase \"ERROR \":\n+\t\tl.stderr.Write(msgb) //nolint\n+\t}\n+\n+\tl.lock.Unlock()\n+}\n+\n+func (l *Logger) extractLevel(line string) (level, msg string) {\n+\tspaces := \" \"\n+\tfor _, lv := range levels {\n+\t\tif strings.HasPrefix(line, lv) {\n+\t\t\tif len(lv) == 4 {\n+\t\t\t\tspaces = \"  \"\n+\t\t\t}\n+\t\t\treturn lv + spaces, line[len(lv)+1:]\n+\t\t}\n+\t\tif strings.HasPrefix(line, \"[\"+lv+\"]\") {\n+\t\t\tif len(lv) == 4 {\n+\t\t\t\tspaces = \"  \"\n+\t\t\t}\n+\t\t\treturn lv + spaces, line[len(lv)+3:]\n+\t\t}\n+\t}\n+\treturn \"\", line\n+}\n+\n+// getDump reads runtime stack and returns as a string\n+func getDump() []byte {\n+\tmaxSize := 5 * 1024 * 1024\n+\tstacktrace := make([]byte, maxSize)\n+\tlength := runtime.Stack(stacktrace, true)\n+\tif length > maxSize {\n+\t\tlength = maxSize\n+\t}\n+\treturn stacktrace[:length]\n+}\n+\n+// Option func type\n+type Option func(l *Logger)\n+\n+// Out sets out writer\n+func Out(w io.Writer) Option {\n+\treturn func(l *Logger) {\n+\t\tl.stdout = w\n+\t}\n+}\n+\n+// Err sets error writer\n+func Err(w io.Writer) Option {\n+\treturn func(l *Logger) {\n+\t\tl.stderr = w\n+\t}\n+}\n+\n+// Debug turn on dbg mode\n+func Debug(l *Logger) {\n+\tl.dbg = true\n+}\n+\n+// Caller adds caller info with func, file, and line number\n+func Caller(l *Logger) {\n+\tl.callers = true\n+}"
    },
    {
      "sha": "c151ef6560270749337ee4123341b600b4e542c6",
      "filename": "backend/vendor/github.com/go-pkgz/rest/cache/memory.go",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/cache/memory.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/cache/memory.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/cache/memory.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,10 +1,9 @@\n package cache\n \n import (\n-\t\"log\"\n \t\"sync/atomic\"\n \n-\t\"github.com/hashicorp/golang-lru\"\n+\tlru \"github.com/hashicorp/golang-lru\"\n \t\"github.com/pkg/errors\"\n )\n \n@@ -20,7 +19,6 @@ type memoryCache struct {\n \n // NewMemoryCache makes memoryCache implementation\n func NewMemoryCache(options ...Option) (LoadingCache, error) {\n-\tlog.Print(\"[INFO] make memory cache\")\n \n \tres := memoryCache{\n \t\tpostFlushFn:  func() {},\n@@ -44,8 +42,6 @@ func NewMemoryCache(options ...Option) (LoadingCache, error) {\n \t\treturn nil, errors.Wrap(err, \"failed to make cache\")\n \t}\n \n-\tlog.Printf(\"[DEBUG] create lru cache, maxKeys=%d, maxValueSize=%d, maxCacheSize=%d\",\n-\t\tres.maxKeys, res.maxValueSize, res.maxCacheSize)\n \treturn &res, nil\n }\n "
    },
    {
      "sha": "9df44c31e12cbb60b00c35ed592f70110ce3f8e9",
      "filename": "backend/vendor/github.com/go-pkgz/rest/go.mod",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/go.mod?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,8 +2,8 @@ module github.com/go-pkgz/rest\n \n require (\n \tgithub.com/davecgh/go-spew v1.1.1 // indirect\n+\tgithub.com/go-pkgz/lgr v0.1.3\n \tgithub.com/hashicorp/golang-lru v0.5.0\n \tgithub.com/pkg/errors v0.8.0\n-\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n-\tgithub.com/stretchr/testify v1.2.2\n+\tgithub.com/stretchr/testify v1.3.0\n )"
    },
    {
      "sha": "25d685e75ce0af693f04dfda124937cf480bb0c0",
      "filename": "backend/vendor/github.com/go-pkgz/rest/go.sum",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/go.sum?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,10 +1,14 @@\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/go-pkgz/lgr v0.1.3 h1:jGPFbzfXWSt3r8qyjXnuKFNM6J10bs3YnD8wPSGdsww=\n+github.com/go-pkgz/lgr v0.1.3/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n github.com/hashicorp/golang-lru v0.5.0 h1:CL2msUPvZTLb5O648aiLNJw3hnBxN2+1Jq8rCOH9wdo=\n github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/pkg/errors v0.8.0 h1:WdK/asTD0HN+q6hsWO3/vpuAkAr+tw6aNJNDFFf0+qw=\n github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\n github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n-github.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\n-github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI="
    },
    {
      "sha": "65909cd85a0ccc351742a688e1a5afec5a23b06a",
      "filename": "backend/vendor/github.com/go-pkgz/rest/logger/logger.go",
      "status": "modified",
      "additions": 6,
      "deletions": 3,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/logger/logger.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/logger/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/logger/logger.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -5,13 +5,14 @@ import (\n \t\"bytes\"\n \t\"fmt\"\n \t\"io/ioutil\"\n-\t\"log\"\n \t\"net\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"regexp\"\n \t\"strings\"\n \t\"time\"\n+\n+\t\"github.com/go-pkgz/lgr\"\n )\n \n var reMultWhtsp = regexp.MustCompile(`[\\s\\p{Zs}]{2,}`)\n@@ -23,6 +24,7 @@ type Middleware struct {\n \tflags       []Flag\n \tipFn        func(ip string) string\n \tuserFn      func(r *http.Request) (string, error)\n+\tlog         lgr.L\n }\n \n // Flag type\n@@ -38,7 +40,7 @@ const (\n \n // Logger returns default logger middleware\n func Logger(next http.Handler) http.Handler {\n-\tl := New(Flags(All), Prefix(\"[REST]\"))\n+\tl := New(Flags(All), Prefix(\"REST\"))\n \treturn l.Handler(next)\n \n }\n@@ -49,6 +51,7 @@ func New(options ...Option) *Middleware {\n \t\tprefix:      \"\",\n \t\tmaxBodySize: 1024,\n \t\tflags:       []Flag{All},\n+\t\tlog:         lgr.Default(),\n \t}\n \tfor _, opt := range options {\n \t\topt(&res)\n@@ -86,7 +89,7 @@ func (l *Middleware) Handler(next http.Handler) http.Handler {\n \t\t\t\tremoteIP = l.ipFn(remoteIP)\n \t\t\t}\n \n-\t\t\tlog.Printf(\"%s %s - %s - %s - %d (%d) - %v %s %s\",\n+\t\t\tl.log.Logf(\"%s %s - %s - %s - %d (%d) - %v %s %s\",\n \t\t\t\tl.prefix, r.Method, q, remoteIP, ww.status, ww.size, t2.Sub(t1), user, body)\n \t\t}()\n "
    },
    {
      "sha": "dcdef464ef6b8c69a7126549c0b9ff2cb287c67c",
      "filename": "backend/vendor/github.com/go-pkgz/rest/logger/options.go",
      "status": "modified",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/logger/options.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/logger/options.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/logger/options.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -2,6 +2,8 @@ package logger\n \n import (\n \t\"net/http\"\n+\n+\t\"github.com/go-pkgz/lgr\"\n )\n \n // Option func type\n@@ -43,3 +45,10 @@ func UserFn(userFn func(r *http.Request) (string, error)) Option {\n \t\tl.userFn = userFn\n \t}\n }\n+\n+// Log functional option defines loging backend.\n+func Log(log lgr.L) Option {\n+\treturn func(l *Middleware) {\n+\t\tl.log = log\n+\t}\n+}"
    },
    {
      "sha": "39173386d78b47537e632ecc86408e9686f364ca",
      "filename": "backend/vendor/github.com/go-pkgz/rest/middleware.go",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/middleware.go",
      "raw_url": "https://github.com/umputun/remark/raw/02d94ead1d4948bc0a65b4d2a34cdae4112712c8/backend/vendor/github.com/go-pkgz/rest/middleware.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/middleware.go?ref=02d94ead1d4948bc0a65b4d2a34cdae4112712c8",
      "patch": "@@ -1,11 +1,12 @@\n package rest\n \n import (\n-\t\"log\"\n \t\"net/http\"\n \t\"os\"\n \t\"runtime/debug\"\n \t\"strings\"\n+\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // AppInfo adds custom app-info to the response header\n@@ -32,9 +33,7 @@ func Ping(next http.Handler) http.Handler {\n \t\tif r.Method == \"GET\" && strings.HasSuffix(strings.ToLower(r.URL.Path), \"/ping\") {\n \t\t\tw.Header().Set(\"Content-Type\", \"text/plain\")\n \t\t\tw.WriteHeader(http.StatusOK)\n-\t\t\tif _, err := w.Write([]byte(\"pong\")); err != nil {\n-\t\t\t\tlog.Printf(\"[WARN] can't send pong, %s\", err)\n-\t\t\t}\n+\t\t\tw.Write([]byte(\"pong\")) //nolint\n \t\t\treturn\n \t\t}\n \t\tnext.ServeHTTP(w, r)"
    },
    {
      "sha": "00268614f04567605359c96e714e834db9cebab6",
      "filename": "backend/vendor/github.com/hashicorp/logutils/.gitignore",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/.gitignore",
      "raw_url": "https://github.com/umputun/remark/raw/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/hashicorp/logutils/.gitignore?ref=a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "patch": "@@ -1,22 +0,0 @@\n-# Compiled Object files, Static and Dynamic libs (Shared Objects)\n-*.o\n-*.a\n-*.so\n-\n-# Folders\n-_obj\n-_test\n-\n-# Architecture specific extensions/prefixes\n-*.[568vq]\n-[568vq].out\n-\n-*.cgo1.go\n-*.cgo2.c\n-_cgo_defun.c\n-_cgo_gotypes.go\n-_cgo_export.*\n-\n-_testmain.go\n-\n-*.exe"
    },
    {
      "sha": "c33dcc7c928c646b497b74de395fb53916a7be25",
      "filename": "backend/vendor/github.com/hashicorp/logutils/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 354,
      "changes": 354,
      "blob_url": "https://github.com/umputun/remark/blob/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/hashicorp/logutils/LICENSE?ref=a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "patch": "@@ -1,354 +0,0 @@\n-Mozilla Public License, version 2.0\n-\n-1. Definitions\n-\n-1.1. “Contributor”\n-\n-     means each individual or legal entity that creates, contributes to the\n-     creation of, or owns Covered Software.\n-\n-1.2. “Contributor Version”\n-\n-     means the combination of the Contributions of others (if any) used by a\n-     Contributor and that particular Contributor’s Contribution.\n-\n-1.3. “Contribution”\n-\n-     means Covered Software of a particular Contributor.\n-\n-1.4. “Covered Software”\n-\n-     means Source Code Form to which the initial Contributor has attached the\n-     notice in Exhibit A, the Executable Form of such Source Code Form, and\n-     Modifications of such Source Code Form, in each case including portions\n-     thereof.\n-\n-1.5. “Incompatible With Secondary Licenses”\n-     means\n-\n-     a. that the initial Contributor has attached the notice described in\n-        Exhibit B to the Covered Software; or\n-\n-     b. that the Covered Software was made available under the terms of version\n-        1.1 or earlier of the License, but not also under the terms of a\n-        Secondary License.\n-\n-1.6. “Executable Form”\n-\n-     means any form of the work other than Source Code Form.\n-\n-1.7. “Larger Work”\n-\n-     means a work that combines Covered Software with other material, in a separate\n-     file or files, that is not Covered Software.\n-\n-1.8. “License”\n-\n-     means this document.\n-\n-1.9. “Licensable”\n-\n-     means having the right to grant, to the maximum extent possible, whether at the\n-     time of the initial grant or subsequently, any and all of the rights conveyed by\n-     this License.\n-\n-1.10. “Modifications”\n-\n-     means any of the following:\n-\n-     a. any file in Source Code Form that results from an addition to, deletion\n-        from, or modification of the contents of Covered Software; or\n-\n-     b. any new file in Source Code Form that contains any Covered Software.\n-\n-1.11. “Patent Claims” of a Contributor\n-\n-      means any patent claim(s), including without limitation, method, process,\n-      and apparatus claims, in any patent Licensable by such Contributor that\n-      would be infringed, but for the grant of the License, by the making,\n-      using, selling, offering for sale, having made, import, or transfer of\n-      either its Contributions or its Contributor Version.\n-\n-1.12. “Secondary License”\n-\n-      means either the GNU General Public License, Version 2.0, the GNU Lesser\n-      General Public License, Version 2.1, the GNU Affero General Public\n-      License, Version 3.0, or any later versions of those licenses.\n-\n-1.13. “Source Code Form”\n-\n-      means the form of the work preferred for making modifications.\n-\n-1.14. “You” (or “Your”)\n-\n-      means an individual or a legal entity exercising rights under this\n-      License. For legal entities, “You” includes any entity that controls, is\n-      controlled by, or is under common control with You. For purposes of this\n-      definition, “control” means (a) the power, direct or indirect, to cause\n-      the direction or management of such entity, whether by contract or\n-      otherwise, or (b) ownership of more than fifty percent (50%) of the\n-      outstanding shares or beneficial ownership of such entity.\n-\n-\n-2. License Grants and Conditions\n-\n-2.1. Grants\n-\n-     Each Contributor hereby grants You a world-wide, royalty-free,\n-     non-exclusive license:\n-\n-     a. under intellectual property rights (other than patent or trademark)\n-        Licensable by such Contributor to use, reproduce, make available,\n-        modify, display, perform, distribute, and otherwise exploit its\n-        Contributions, either on an unmodified basis, with Modifications, or as\n-        part of a Larger Work; and\n-\n-     b. under Patent Claims of such Contributor to make, use, sell, offer for\n-        sale, have made, import, and otherwise transfer either its Contributions\n-        or its Contributor Version.\n-\n-2.2. Effective Date\n-\n-     The licenses granted in Section 2.1 with respect to any Contribution become\n-     effective for each Contribution on the date the Contributor first distributes\n-     such Contribution.\n-\n-2.3. Limitations on Grant Scope\n-\n-     The licenses granted in this Section 2 are the only rights granted under this\n-     License. No additional rights or licenses will be implied from the distribution\n-     or licensing of Covered Software under this License. Notwithstanding Section\n-     2.1(b) above, no patent license is granted by a Contributor:\n-\n-     a. for any code that a Contributor has removed from Covered Software; or\n-\n-     b. for infringements caused by: (i) Your and any other third party’s\n-        modifications of Covered Software, or (ii) the combination of its\n-        Contributions with other software (except as part of its Contributor\n-        Version); or\n-\n-     c. under Patent Claims infringed by Covered Software in the absence of its\n-        Contributions.\n-\n-     This License does not grant any rights in the trademarks, service marks, or\n-     logos of any Contributor (except as may be necessary to comply with the\n-     notice requirements in Section 3.4).\n-\n-2.4. Subsequent Licenses\n-\n-     No Contributor makes additional grants as a result of Your choice to\n-     distribute the Covered Software under a subsequent version of this License\n-     (see Section 10.2) or under the terms of a Secondary License (if permitted\n-     under the terms of Section 3.3).\n-\n-2.5. Representation\n-\n-     Each Contributor represents that the Contributor believes its Contributions\n-     are its original creation(s) or it has sufficient rights to grant the\n-     rights to its Contributions conveyed by this License.\n-\n-2.6. Fair Use\n-\n-     This License is not intended to limit any rights You have under applicable\n-     copyright doctrines of fair use, fair dealing, or other equivalents.\n-\n-2.7. Conditions\n-\n-     Sections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted in\n-     Section 2.1.\n-\n-\n-3. Responsibilities\n-\n-3.1. Distribution of Source Form\n-\n-     All distribution of Covered Software in Source Code Form, including any\n-     Modifications that You create or to which You contribute, must be under the\n-     terms of this License. You must inform recipients that the Source Code Form\n-     of the Covered Software is governed by the terms of this License, and how\n-     they can obtain a copy of this License. You may not attempt to alter or\n-     restrict the recipients’ rights in the Source Code Form.\n-\n-3.2. Distribution of Executable Form\n-\n-     If You distribute Covered Software in Executable Form then:\n-\n-     a. such Covered Software must also be made available in Source Code Form,\n-        as described in Section 3.1, and You must inform recipients of the\n-        Executable Form how they can obtain a copy of such Source Code Form by\n-        reasonable means in a timely manner, at a charge no more than the cost\n-        of distribution to the recipient; and\n-\n-     b. You may distribute such Executable Form under the terms of this License,\n-        or sublicense it under different terms, provided that the license for\n-        the Executable Form does not attempt to limit or alter the recipients’\n-        rights in the Source Code Form under this License.\n-\n-3.3. Distribution of a Larger Work\n-\n-     You may create and distribute a Larger Work under terms of Your choice,\n-     provided that You also comply with the requirements of this License for the\n-     Covered Software. If the Larger Work is a combination of Covered Software\n-     with a work governed by one or more Secondary Licenses, and the Covered\n-     Software is not Incompatible With Secondary Licenses, this License permits\n-     You to additionally distribute such Covered Software under the terms of\n-     such Secondary License(s), so that the recipient of the Larger Work may, at\n-     their option, further distribute the Covered Software under the terms of\n-     either this License or such Secondary License(s).\n-\n-3.4. Notices\n-\n-     You may not remove or alter the substance of any license notices (including\n-     copyright notices, patent notices, disclaimers of warranty, or limitations\n-     of liability) contained within the Source Code Form of the Covered\n-     Software, except that You may alter any license notices to the extent\n-     required to remedy known factual inaccuracies.\n-\n-3.5. Application of Additional Terms\n-\n-     You may choose to offer, and to charge a fee for, warranty, support,\n-     indemnity or liability obligations to one or more recipients of Covered\n-     Software. However, You may do so only on Your own behalf, and not on behalf\n-     of any Contributor. You must make it absolutely clear that any such\n-     warranty, support, indemnity, or liability obligation is offered by You\n-     alone, and You hereby agree to indemnify every Contributor for any\n-     liability incurred by such Contributor as a result of warranty, support,\n-     indemnity or liability terms You offer. You may include additional\n-     disclaimers of warranty and limitations of liability specific to any\n-     jurisdiction.\n-\n-4. Inability to Comply Due to Statute or Regulation\n-\n-   If it is impossible for You to comply with any of the terms of this License\n-   with respect to some or all of the Covered Software due to statute, judicial\n-   order, or regulation then You must: (a) comply with the terms of this License\n-   to the maximum extent possible; and (b) describe the limitations and the code\n-   they affect. Such description must be placed in a text file included with all\n-   distributions of the Covered Software under this License. Except to the\n-   extent prohibited by statute or regulation, such description must be\n-   sufficiently detailed for a recipient of ordinary skill to be able to\n-   understand it.\n-\n-5. Termination\n-\n-5.1. The rights granted under this License will terminate automatically if You\n-     fail to comply with any of its terms. However, if You become compliant,\n-     then the rights granted under this License from a particular Contributor\n-     are reinstated (a) provisionally, unless and until such Contributor\n-     explicitly and finally terminates Your grants, and (b) on an ongoing basis,\n-     if such Contributor fails to notify You of the non-compliance by some\n-     reasonable means prior to 60 days after You have come back into compliance.\n-     Moreover, Your grants from a particular Contributor are reinstated on an\n-     ongoing basis if such Contributor notifies You of the non-compliance by\n-     some reasonable means, this is the first time You have received notice of\n-     non-compliance with this License from such Contributor, and You become\n-     compliant prior to 30 days after Your receipt of the notice.\n-\n-5.2. If You initiate litigation against any entity by asserting a patent\n-     infringement claim (excluding declaratory judgment actions, counter-claims,\n-     and cross-claims) alleging that a Contributor Version directly or\n-     indirectly infringes any patent, then the rights granted to You by any and\n-     all Contributors for the Covered Software under Section 2.1 of this License\n-     shall terminate.\n-\n-5.3. In the event of termination under Sections 5.1 or 5.2 above, all end user\n-     license agreements (excluding distributors and resellers) which have been\n-     validly granted by You or Your distributors under this License prior to\n-     termination shall survive termination.\n-\n-6. Disclaimer of Warranty\n-\n-   Covered Software is provided under this License on an “as is” basis, without\n-   warranty of any kind, either expressed, implied, or statutory, including,\n-   without limitation, warranties that the Covered Software is free of defects,\n-   merchantable, fit for a particular purpose or non-infringing. The entire\n-   risk as to the quality and performance of the Covered Software is with You.\n-   Should any Covered Software prove defective in any respect, You (not any\n-   Contributor) assume the cost of any necessary servicing, repair, or\n-   correction. This disclaimer of warranty constitutes an essential part of this\n-   License. No use of  any Covered Software is authorized under this License\n-   except under this disclaimer.\n-\n-7. Limitation of Liability\n-\n-   Under no circumstances and under no legal theory, whether tort (including\n-   negligence), contract, or otherwise, shall any Contributor, or anyone who\n-   distributes Covered Software as permitted above, be liable to You for any\n-   direct, indirect, special, incidental, or consequential damages of any\n-   character including, without limitation, damages for lost profits, loss of\n-   goodwill, work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses, even if such party shall have been\n-   informed of the possibility of such damages. This limitation of liability\n-   shall not apply to liability for death or personal injury resulting from such\n-   party’s negligence to the extent applicable law prohibits such limitation.\n-   Some jurisdictions do not allow the exclusion or limitation of incidental or\n-   consequential damages, so this exclusion and limitation may not apply to You.\n-\n-8. Litigation\n-\n-   Any litigation relating to this License may be brought only in the courts of\n-   a jurisdiction where the defendant maintains its principal place of business\n-   and such litigation shall be governed by laws of that jurisdiction, without\n-   reference to its conflict-of-law provisions. Nothing in this Section shall\n-   prevent a party’s ability to bring cross-claims or counter-claims.\n-\n-9. Miscellaneous\n-\n-   This License represents the complete agreement concerning the subject matter\n-   hereof. If any provision of this License is held to be unenforceable, such\n-   provision shall be reformed only to the extent necessary to make it\n-   enforceable. Any law or regulation which provides that the language of a\n-   contract shall be construed against the drafter shall not be used to construe\n-   this License against a Contributor.\n-\n-\n-10. Versions of the License\n-\n-10.1. New Versions\n-\n-      Mozilla Foundation is the license steward. Except as provided in Section\n-      10.3, no one other than the license steward has the right to modify or\n-      publish new versions of this License. Each version will be given a\n-      distinguishing version number.\n-\n-10.2. Effect of New Versions\n-\n-      You may distribute the Covered Software under the terms of the version of\n-      the License under which You originally received the Covered Software, or\n-      under the terms of any subsequent version published by the license\n-      steward.\n-\n-10.3. Modified Versions\n-\n-      If you create software not governed by this License, and you want to\n-      create a new license for such software, you may create and use a modified\n-      version of this License if you rename the license and remove any\n-      references to the name of the license steward (except to note that such\n-      modified license differs from this License).\n-\n-10.4. Distributing Source Code Form that is Incompatible With Secondary Licenses\n-      If You choose to distribute Source Code Form that is Incompatible With\n-      Secondary Licenses under the terms of this version of the License, the\n-      notice described in Exhibit B of this License must be attached.\n-\n-Exhibit A - Source Code Form License Notice\n-\n-      This Source Code Form is subject to the\n-      terms of the Mozilla Public License, v.\n-      2.0. If a copy of the MPL was not\n-      distributed with this file, You can\n-      obtain one at\n-      http://mozilla.org/MPL/2.0/.\n-\n-If it is not possible or desirable to put the notice in a particular file, then\n-You may include the notice in a location (such as a LICENSE file in a relevant\n-directory) where a recipient would be likely to look for such a notice.\n-\n-You may add additional accurate notices of copyright ownership.\n-\n-Exhibit B - “Incompatible With Secondary Licenses” Notice\n-\n-      This Source Code Form is “Incompatible\n-      With Secondary Licenses”, as defined by\n-      the Mozilla Public License, v. 2.0.\n-"
    },
    {
      "sha": "49490eaeb65862c20995de6317d81580c3797961",
      "filename": "backend/vendor/github.com/hashicorp/logutils/README.md",
      "status": "removed",
      "additions": 0,
      "deletions": 36,
      "changes": 36,
      "blob_url": "https://github.com/umputun/remark/blob/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/hashicorp/logutils/README.md?ref=a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "patch": "@@ -1,36 +0,0 @@\n-# logutils\n-\n-logutils is a Go package that augments the standard library \"log\" package\n-to make logging a bit more modern, without fragmenting the Go ecosystem\n-with new logging packages.\n-\n-## The simplest thing that could possibly work\n-\n-Presumably your application already uses the default `log` package. To switch, you'll want your code to look like the following:\n-\n-```go\n-package main\n-\n-import (\n-\t\"log\"\n-\t\"os\"\n-\n-\t\"github.com/hashicorp/logutils\"\n-)\n-\n-func main() {\n-\tfilter := &logutils.LevelFilter{\n-\t\tLevels: []logutils.LogLevel{\"DEBUG\", \"WARN\", \"ERROR\"},\n-\t\tMinLevel: logutils.LogLevel(\"WARN\"),\n-\t\tWriter: os.Stderr,\n-\t}\n-\tlog.SetOutput(filter)\n-\n-\tlog.Print(\"[DEBUG] Debugging\") // this will not print\n-\tlog.Print(\"[WARN] Warning\") // this will\n-\tlog.Print(\"[ERROR] Erring\") // and so will this\n-\tlog.Print(\"Message I haven't updated\") // and so will this\n-}\n-```\n-\n-This logs to standard error exactly like go's standard logger. Any log messages you haven't converted to have a level will continue to print as before."
    },
    {
      "sha": "6381bf1629ab0233f6f6d439db81cd1571acdf0b",
      "filename": "backend/vendor/github.com/hashicorp/logutils/level.go",
      "status": "removed",
      "additions": 0,
      "deletions": 81,
      "changes": 81,
      "blob_url": "https://github.com/umputun/remark/blob/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/level.go",
      "raw_url": "https://github.com/umputun/remark/raw/a6df83e96023e0c569fd80ea4f0766a84f12e7a7/backend/vendor/github.com/hashicorp/logutils/level.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/hashicorp/logutils/level.go?ref=a6df83e96023e0c569fd80ea4f0766a84f12e7a7",
      "patch": "@@ -1,81 +0,0 @@\n-// Package logutils augments the standard log package with levels.\n-package logutils\n-\n-import (\n-\t\"bytes\"\n-\t\"io\"\n-\t\"sync\"\n-)\n-\n-type LogLevel string\n-\n-// LevelFilter is an io.Writer that can be used with a logger that\n-// will filter out log messages that aren't at least a certain level.\n-//\n-// Once the filter is in use somewhere, it is not safe to modify\n-// the structure.\n-type LevelFilter struct {\n-\t// Levels is the list of log levels, in increasing order of\n-\t// severity. Example might be: {\"DEBUG\", \"WARN\", \"ERROR\"}.\n-\tLevels []LogLevel\n-\n-\t// MinLevel is the minimum level allowed through\n-\tMinLevel LogLevel\n-\n-\t// The underlying io.Writer where log messages that pass the filter\n-\t// will be set.\n-\tWriter io.Writer\n-\n-\tbadLevels map[LogLevel]struct{}\n-\tonce      sync.Once\n-}\n-\n-// Check will check a given line if it would be included in the level\n-// filter.\n-func (f *LevelFilter) Check(line []byte) bool {\n-\tf.once.Do(f.init)\n-\n-\t// Check for a log level\n-\tvar level LogLevel\n-\tx := bytes.IndexByte(line, '[')\n-\tif x >= 0 {\n-\t\ty := bytes.IndexByte(line[x:], ']')\n-\t\tif y >= 0 {\n-\t\t\tlevel = LogLevel(line[x+1 : x+y])\n-\t\t}\n-\t}\n-\n-\t_, ok := f.badLevels[level]\n-\treturn !ok\n-}\n-\n-func (f *LevelFilter) Write(p []byte) (n int, err error) {\n-\t// Note in general that io.Writer can receive any byte sequence\n-\t// to write, but the \"log\" package always guarantees that we only\n-\t// get a single line. We use that as a slight optimization within\n-\t// this method, assuming we're dealing with a single, complete line\n-\t// of log data.\n-\n-\tif !f.Check(p) {\n-\t\treturn len(p), nil\n-\t}\n-\n-\treturn f.Writer.Write(p)\n-}\n-\n-// SetMinLevel is used to update the minimum log level\n-func (f *LevelFilter) SetMinLevel(min LogLevel) {\n-\tf.MinLevel = min\n-\tf.init()\n-}\n-\n-func (f *LevelFilter) init() {\n-\tbadLevels := make(map[LogLevel]struct{})\n-\tfor _, level := range f.Levels {\n-\t\tif level == f.MinLevel {\n-\t\t\tbreak\n-\t\t}\n-\t\tbadLevels[level] = struct{}{}\n-\t}\n-\tf.badLevels = badLevels\n-}"
    }
  ]
}
