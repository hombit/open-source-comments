{
  "sha": "b539411eee8af8451d14849bf8157d992f140830",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6YjUzOTQxMWVlZThhZjg0NTFkMTQ4NDliZjgxNTdkOTkyZjE0MDgzMA==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2018-12-30T08:43:34Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2018-12-30T08:43:34Z"
    },
    "message": "Edit readmes and comments.",
    "tree": {
      "sha": "a7f509d8bcd8412cbe654687864d64e0bb3d7250",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/a7f509d8bcd8412cbe654687864d64e0bb3d7250"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/b539411eee8af8451d14849bf8157d992f140830",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/b539411eee8af8451d14849bf8157d992f140830",
  "html_url": "https://github.com/debiki/talkyard/commit/b539411eee8af8451d14849bf8157d992f140830",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/b539411eee8af8451d14849bf8157d992f140830/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "e152deb2f6cb9cef354cca603e5f6b4dcf570386",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/e152deb2f6cb9cef354cca603e5f6b4dcf570386",
      "html_url": "https://github.com/debiki/talkyard/commit/e152deb2f6cb9cef354cca603e5f6b4dcf570386"
    }
  ],
  "stats": {
    "total": 50,
    "additions": 36,
    "deletions": 14
  },
  "files": [
    {
      "sha": "6fd35b257326f2fbee312c0af716f218d5ebaa3c",
      "filename": "README.md",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/b539411eee8af8451d14849bf8157d992f140830/README.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/b539411eee8af8451d14849bf8157d992f140830/README.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/README.md?ref=b539411eee8af8451d14849bf8157d992f140830",
      "patch": "@@ -370,6 +370,10 @@ This project looks like so:\n      +-public/         <-- Some images and libs, plus JS and CSS that Gulp\n      |                     has bundled and minified from the client/ dir above.\n      |\n+     +-to-talkyard/    <-- For converting e.g. phpBB or Disqus export files\n+     |                     to Talkyard's JSON format, so they can be imported\n+     |                     into Talkyard. This is a stand-alone Node.js app.\n+     |\n      +-images/\n      | +-web/          <-- For building the 'web' Docker image, runs Nginx\n      | | +-Dockerfile"
    },
    {
      "sha": "fcb07fbb784daf5fc64aa125c98c2fcf87cbfdf7",
      "filename": "client/app-slim/page/hacks.ts",
      "status": "modified",
      "additions": 26,
      "deletions": 14,
      "changes": 40,
      "blob_url": "https://github.com/debiki/talkyard/blob/b539411eee8af8451d14849bf8157d992f140830/client/app-slim/page/hacks.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/b539411eee8af8451d14849bf8157d992f140830/client/app-slim/page/hacks.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/hacks.ts?ref=b539411eee8af8451d14849bf8157d992f140830",
      "patch": "@@ -183,18 +183,25 @@ function makeMentionsInEmbeddedCommentsPointToTalkyardServer() {\n }\n \n \n-let iosBugFixCounter = 0;\n-\n /**\n  * Safari in iOS 12 hides, and doesn't show again, the contents in an iframe, if one scrolls.\n- * However, if some rendering setting changes, then Safari does repaint. Needs to be something\n- * that for real changes how things look, so cannot just do a no-op. Let's change the opacity\n- * — no human will notice this, but iOS will rerender.\n+ * However, if some rendering setting changes, then Safari does repaint so the iframe\n+ * becomes visible again. The setting needs to be something that for real changes\n+ * how things look, so cannot just do a no-op. Let's change the opacity — no human will\n+ * notice this, but iOS will rerender.\n+ *\n+ * If doing this only after scrolling (from client/app-slim/if-in-iframe.ts,\n+ * the 'iframeOffsetWinSize' event) then in some cases this bug workaround\n+ * won't work — the iframe contents becomes invisible in some other cases too,\n+ * e.g. if one clicks the Safari address bar. (At least in the SauceLabs emulator.)\n+ * So let's do once per second, always, instead.\n  *\n- * If doing this only after scrolling (from client/app-slim/if-in-iframe.ts, the 'iframeOffsetWinSize'\n- * event) then in some cases this bug workaround won't work — the iframe contents becomes\n- * invisible in some other cases too, e.g. if one clicks the Safari address bar.\n- * (At least in the SauceLabs emulator.) So let's do once per second, always, instead.\n+ * DO_AFTER 2019-06-01 see if Apple has fixed this iOS Safari bug; then add a do-after\n+ * comment to remove this workaround 3 months later (when most people have upgraded?).\n+ *\n+ * This happens only with iOS 12 not iOS 11, but let's do for all iOS versions,\n+ * for simplicity. (iOS 11 has a jump-to-scroll-bottom-if-opens-any-dialog\n+ * bug instead :-P  only iOS 11)\n  */\n export function maybeStartIosBugfix() {\n   if (eds.isIos && eds.isInIframe) {\n@@ -207,25 +214,30 @@ export function maybeStartIosBugfix() {\n   }\n }\n \n+let iosBugFixCounter = 0;\n+\n \n /**\n- * This is for debugging emulated browsers with Weinre, on localhost.\n- * E.g. iOS Safari, in a SauceLabs emulated iPhone, connected to localhost via a tunnel (see below).\n+ * This is for debugging emulated browsers with Weinre, on localhost. E.g. iOS Safari,\n+ * in a SauceLabs emulated iPhone, connected to localhost via a tunnel (see below).\n  * Assume Weinre runs on port 8090 on localhost because Node.js' http-server listens on 8080\n  * when testing embedded comments. 8080 is otherwise Weinre's default port.\n  * Start like so:  node_modules/.bin/weinre --boundHost -all-  --httpPort 8090\n  * Info about Weinre and how to install it:  http://people.apache.org/~pmuellr/weinre/\n- * And you also need to work around a Weinre bug, and maybe a SauceLabs tunnel, see:\n+ * And you also need to work around a Weinre bug, and maybe add a SauceLabs tunnel, see:\n  * docs/debugging-ios-safari-without-iphone.md\n  *\n- * Wrap in try-catch so any uninteresting bug here, just for enabling debug, won't break everything.\n+ * Wrap in try-catch so any uninteresting bug here, just for enabling debug,\n+ * won't break everything.\n  */\n try {\n   if (debiki2.getMainWin().location.hash.indexOf('&loadWeinre') >= 0) {  // [WEINRE]\n     console.info(\"Lazy loading Weinre [TyMWEINRE]\");\n     // 127.0.0.1 doesn't work in SauceLab's iPhone emulator — but 'localhost' works.\n     debiki2.Server.loadJs('http://localhost:8090/target/target-script-min.js#anonymous');\n-    // This might be needed for Android — then, 10.0.2.2 resolves to localhost, at least in the past.\n+    // This might be needed for Android — then, 10.0.2.2 resolves to localhost, at least\n+    // in the past. If needed, just load the Weinre script from both these locations\n+    // (above and below), one will fail, one will work.\n     //debiki2.Server.loadJs('http://10.0.2.2:8090/target/target-script-min.js#anonymous');\n   }\n }"
    },
    {
      "sha": "2f0544001ef58cf54b9a84facf66e5aec1736dad",
      "filename": "to-talkyard/README.md",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/debiki/talkyard/blob/b539411eee8af8451d14849bf8157d992f140830/to-talkyard/README.md",
      "raw_url": "https://github.com/debiki/talkyard/raw/b539411eee8af8451d14849bf8157d992f140830/to-talkyard/README.md",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/to-talkyard/README.md?ref=b539411eee8af8451d14849bf8157d992f140830",
      "patch": "@@ -3,3 +3,9 @@ If importing from MySQL / PgSQL etc, maybe: https://github.com/tgriesser/knex\n \n Initiallly cloned from: https://github.com/Microsoft/TypeScript-Node-Starter,\n and everything now deleted except for things like tslint and some package.json settings.\n+\n+\n+If later on there'll be many stand-alone packages like this, then consider\n+using  https://lernajs.io/  ?  Maybe the slim-bundle, more-bundle etc could\n+be their own Lerna packages, hmm.\n+"
    }
  ]
}
