{
  "sha": "1a3655b787658735154cd4bd8600d32e5f66c57b",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxYTM2NTViNzg3NjU4NzM1MTU0Y2Q0YmQ4NjAwZDMyZTVmNjZjNTdi",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2019-01-11T16:54:23Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-01-11T16:54:23Z"
    },
    "message": "DEV: s/Em/Ember (#6874)",
    "tree": {
      "sha": "478b1abc76835353a4f2bd215e03e4843be2a531",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/478b1abc76835353a4f2bd215e03e4843be2a531"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/1a3655b787658735154cd4bd8600d32e5f66c57b",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcOMo/CRBK7hj4Ov3rIwAAdHIIAEUhQUNqzA46HdrxoQ74UYId\nHxEqEgR/Px8qHwskgbwTqwnaE13Kw/5cnX5RJEEL/sspRquZwNGqIp4r0fGy2AqN\nJmjH1JRQYUGN3QeFDdSNErApXSXIsc65G6liLMNZCcoZGjabSm7TsPcOH6ZinpU3\naXxl0rfMKd5J1+sC+ea6OJ0JtAZt+sekG1nlo9VkvMa3LZZbdp/MpTiHC+SpaQqh\nLMbJrC+xaBBI0r75ZV3IWlz10zmSy8dQ929QL8iV9gsnalnY75Njjc7rV44V077P\nW5FOt2mEoh7NDVLn9C9COXuF2wmmka66xuNfU0lEhutTNP/LUC0lDKyZ6NrixT8=\n=x2M2\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 478b1abc76835353a4f2bd215e03e4843be2a531\nparent dbe42068a234a46cb398b47e4d984a448c283513\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1547225663 +0100\ncommitter GitHub <noreply@github.com> 1547225663 +0100\n\nDEV: s/Em/Ember (#6874)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/1a3655b787658735154cd4bd8600d32e5f66c57b",
  "html_url": "https://github.com/discourse/discourse/commit/1a3655b787658735154cd4bd8600d32e5f66c57b",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/1a3655b787658735154cd4bd8600d32e5f66c57b/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "dbe42068a234a46cb398b47e4d984a448c283513",
      "url": "https://api.github.com/repos/discourse/discourse/commits/dbe42068a234a46cb398b47e4d984a448c283513",
      "html_url": "https://github.com/discourse/discourse/commit/dbe42068a234a46cb398b47e4d984a448c283513"
    }
  ],
  "stats": {
    "total": 621,
    "additions": 315,
    "deletions": 306
  },
  "files": [
    {
      "sha": "148fa3b11a3e02c42f3c398cdf665c503a9a5df1",
      "filename": ".eslintrc",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/.eslintrc",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/.eslintrc",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/.eslintrc?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -28,7 +28,6 @@\n     \"currentURL\": true,\n     \"define\": true,\n     \"Discourse\": true,\n-    \"Em\": true,\n     \"Ember\": true,\n     \"exists\": true,\n     \"expandSelectKit\": true,"
    },
    {
      "sha": "288014366204de96958da52b254253cd544cf273",
      "filename": "app/assets/javascripts/admin/components/color-input.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/color-input.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/color-input.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/color-input.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -34,7 +34,7 @@ export default Ember.Component.extend({\n   didInsertElement() {\n     loadScript(\"/javascripts/spectrum.js\").then(() => {\n       loadCSS(\"/javascripts/spectrum.css\").then(() => {\n-        Em.run.schedule(\"afterRender\", () => {\n+        Ember.run.schedule(\"afterRender\", () => {\n           this.$(\".picker\")\n             .spectrum({ color: \"#\" + this.get(\"hexValue\") })\n             .on(\"change.spectrum\", (me, color) => {\n@@ -44,7 +44,7 @@ export default Ember.Component.extend({\n         });\n       });\n     });\n-    Em.run.schedule(\"afterRender\", () => {\n+    Ember.run.schedule(\"afterRender\", () => {\n       this.hexValueChanged();\n     });\n   }"
    },
    {
      "sha": "1ddb37faf7c329bc01ab5a81bddb64afb059281d",
      "filename": "app/assets/javascripts/admin/components/ip-lookup.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/ip-lookup.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/ip-lookup.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/ip-lookup.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -21,7 +21,7 @@ export default Ember.Component.extend({\n         ajax(\"/admin/users/ip-info\", {\n           data: { ip: this.get(\"ip\") }\n         }).then(function(location) {\n-          self.set(\"location\", Em.Object.create(location));\n+          self.set(\"location\", Ember.Object.create(location));\n         });\n       }\n "
    },
    {
      "sha": "c0c2f24b325ffca3ffa35e40d5b192f581725aff",
      "filename": "app/assets/javascripts/admin/components/permalink-form.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/permalink-form.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/permalink-form.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/permalink-form.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -34,7 +34,7 @@ export default Ember.Component.extend({\n             self.set(\"permalink_type_value\", \"\");\n             self.set(\"formSubmitted\", false);\n             self.action(Permalink.create(result.permalink));\n-            Em.run.schedule(\"afterRender\", function() {\n+            Ember.run.schedule(\"afterRender\", function() {\n               self.$(\".permalink-url\").focus();\n             });\n           },\n@@ -60,7 +60,7 @@ export default Ember.Component.extend({\n   didInsertElement: function() {\n     var self = this;\n     self._super();\n-    Em.run.schedule(\"afterRender\", function() {\n+    Ember.run.schedule(\"afterRender\", function() {\n       self.$(\".external-url\").keydown(function(e) {\n         if (e.keyCode === 13) {\n           // enter key"
    },
    {
      "sha": "e462d9e32c4f573c9bda80ecaa48708cfd89bb80",
      "filename": "app/assets/javascripts/admin/components/resumable-upload.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/resumable-upload.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/resumable-upload.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/resumable-upload.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -55,7 +55,7 @@ export default Ember.Component.extend(\n       if (this.get(\"isUploading\")) {\n         this.resumable.cancel();\n         var self = this;\n-        Em.run.later(function() {\n+        Ember.run.later(function() {\n           self._reset();\n         });\n         return false;\n@@ -83,20 +83,20 @@ export default Ember.Component.extend(\n         // automatically upload the selected file\n         self.resumable.upload();\n         // mark as uploading\n-        Em.run.later(function() {\n+        Ember.run.later(function() {\n           self.set(\"isUploading\", true);\n         });\n       });\n \n       this.resumable.on(\"fileProgress\", function(file) {\n         // update progress\n-        Em.run.later(function() {\n+        Ember.run.later(function() {\n           self.set(\"progress\", parseInt(file.progress() * 100, 10));\n         });\n       });\n \n       this.resumable.on(\"fileSuccess\", function(file) {\n-        Em.run.later(function() {\n+        Ember.run.later(function() {\n           // mark as not uploading anymore\n           self._reset();\n           // fire an event to allow the parent route to reload its model\n@@ -105,7 +105,7 @@ export default Ember.Component.extend(\n       });\n \n       this.resumable.on(\"fileError\", function(file, message) {\n-        Em.run.later(function() {\n+        Ember.run.later(function() {\n           // mark as not uploading anymore\n           self._reset();\n           // fire an event to allow the parent route to display the error message\n@@ -116,7 +116,7 @@ export default Ember.Component.extend(\n \n     _assignBrowse: function() {\n       var self = this;\n-      Em.run.schedule(\"afterRender\", function() {\n+      Ember.run.schedule(\"afterRender\", function() {\n         self.resumable.assignBrowse(self.$());\n       });\n     }.on(\"didInsertElement\"),"
    },
    {
      "sha": "1373792f24b73389ade18e7cdd5a055a21c995c8",
      "filename": "app/assets/javascripts/admin/components/tags-uploader.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/tags-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/tags-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/tags-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,9 +1,9 @@\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"csv\",\n   uploadUrl: \"/tags/upload\",\n-  addDisabled: Em.computed.alias(\"uploading\"),\n+  addDisabled: Ember.computed.alias(\"uploading\"),\n   elementId: \"tag-uploader\",\n \n   validateUploadedFilesOptions() {"
    },
    {
      "sha": "fad6702a3ce6d2cd3e6603331c62e79f6709462e",
      "filename": "app/assets/javascripts/admin/components/themes-list-item.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/themes-list-item.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/themes-list-item.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/themes-list-item.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -9,9 +9,9 @@ export default Ember.Component.extend({\n   childrenExpanded: false,\n   classNames: [\"themes-list-item\"],\n   classNameBindings: [\"theme.selected:selected\"],\n-  hasComponents: Em.computed.gt(\"children.length\", 0),\n-  displayComponents: Em.computed.and(\"hasComponents\", \"theme.isActive\"),\n-  displayHasMore: Em.computed.gt(\"theme.childThemes.length\", MAX_COMPONENTS),\n+  hasComponents: Ember.computed.gt(\"children.length\", 0),\n+  displayComponents: Ember.computed.and(\"hasComponents\", \"theme.isActive\"),\n+  displayHasMore: Ember.computed.gt(\"theme.childThemes.length\", MAX_COMPONENTS),\n \n   click(e) {\n     if (!$(e.target).hasClass(\"others-count\")) {"
    },
    {
      "sha": "abb03af476d019f63f82f3986f07574100203fb4",
      "filename": "app/assets/javascripts/admin/components/themes-list.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/themes-list.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/themes-list.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/themes-list.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -7,12 +7,12 @@ export default Ember.Component.extend({\n \n   classNames: [\"themes-list\"],\n \n-  hasThemes: Em.computed.gt(\"themesList.length\", 0),\n-  hasUserThemes: Em.computed.gt(\"userThemes.length\", 0),\n-  hasInactiveThemes: Em.computed.gt(\"inactiveThemes.length\", 0),\n+  hasThemes: Ember.computed.gt(\"themesList.length\", 0),\n+  hasUserThemes: Ember.computed.gt(\"userThemes.length\", 0),\n+  hasInactiveThemes: Ember.computed.gt(\"inactiveThemes.length\", 0),\n \n-  themesTabActive: Em.computed.equal(\"currentTab\", THEMES),\n-  componentsTabActive: Em.computed.equal(\"currentTab\", COMPONENTS),\n+  themesTabActive: Ember.computed.equal(\"currentTab\", THEMES),\n+  componentsTabActive: Ember.computed.equal(\"currentTab\", COMPONENTS),\n \n   @computed(\"themes\", \"components\", \"currentTab\")\n   themesList(themes, components) {\n@@ -79,7 +79,7 @@ export default Ember.Component.extend({\n       }\n     },\n     navigateToTheme(theme) {\n-      Em.getOwner(this)\n+      Ember.getOwner(this)\n         .lookup(\"router:main\")\n         .transitionTo(\"adminCustomizeThemes.show\", theme);\n     }"
    },
    {
      "sha": "5f047a2bc6ece1f3bdfa8de428bd18dc41809071",
      "filename": "app/assets/javascripts/admin/components/watched-word-uploader.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/watched-word-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/components/watched-word-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/components/watched-word-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,11 +1,11 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"csv\",\n   classNames: \"watched-words-uploader\",\n   uploadUrl: \"/admin/logs/watched_words/upload\",\n-  addDisabled: Em.computed.alias(\"uploading\"),\n+  addDisabled: Ember.computed.alias(\"uploading\"),\n \n   validateUploadedFilesOptions() {\n     return { csvOnly: true };"
    },
    {
      "sha": "ee2fd2f95d62488c911cee1264d933e9dd97e0de",
      "filename": "app/assets/javascripts/admin/controllers/admin-backups-logs.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-backups-logs.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-backups-logs.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-backups-logs.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,5 +1,5 @@\n export default Ember.Controller.extend({\n   logs: [],\n   adminBackups: Ember.inject.controller(),\n-  status: Em.computed.alias(\"adminBackups.model\")\n+  status: Ember.computed.alias(\"adminBackups.model\")\n });"
    },
    {
      "sha": "e49e87fc4b863e11f595ed80bfbc01aa0a01be45",
      "filename": "app/assets/javascripts/admin/controllers/admin-customize-colors-show.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-colors-show.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-colors-show.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-customize-colors-show.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -51,7 +51,7 @@ export default Ember.Controller.extend({\n     },\n \n     copy() {\n-      var newColorScheme = Em.copy(this.get(\"model\"), true);\n+      var newColorScheme = Ember.copy(this.get(\"model\"), true);\n       newColorScheme.set(\n         \"name\",\n         I18n.t(\"admin.customize.colors.copy_name_prefix\") +"
    },
    {
      "sha": "88ab2b8846de65d4c66b5e3e35bd88f0ca49f0c4",
      "filename": "app/assets/javascripts/admin/controllers/admin-customize-colors.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-colors.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-colors.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-customize-colors.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -10,7 +10,7 @@ export default Ember.Controller.extend({\n   }.property(\"model.@each.id\"),\n \n   baseColors: function() {\n-    var baseColorsHash = Em.Object.create({});\n+    var baseColorsHash = Ember.Object.create({});\n     this.get(\"baseColorScheme.colors\").forEach(color => {\n       baseColorsHash.set(color.get(\"name\"), color);\n     });\n@@ -23,7 +23,7 @@ export default Ember.Controller.extend({\n         \"base_scheme_id\",\n         baseKey\n       );\n-      const newColorScheme = Em.copy(base, true);\n+      const newColorScheme = Ember.copy(base, true);\n       newColorScheme.set(\"name\", I18n.t(\"admin.customize.colors.new_name\"));\n       newColorScheme.set(\"base_scheme_id\", base.get(\"base_scheme_id\"));\n       newColorScheme.save().then(() => {"
    },
    {
      "sha": "0b31a299bbe091fcbc9aff771a567a25e863fac6",
      "filename": "app/assets/javascripts/admin/controllers/admin-customize-themes-edit.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-themes-edit.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-themes-edit.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-customize-themes-edit.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -179,7 +179,7 @@ export default Ember.Controller.extend({\n \n     toggleMaximize: function() {\n       this.toggleProperty(\"maximized\");\n-      Em.run.next(() => {\n+      Ember.run.next(() => {\n         this.appEvents.trigger(\"ace:resize\");\n       });\n     }"
    },
    {
      "sha": "a5a703ceb95148e763c60ec2fc0bf5821ea69b8f",
      "filename": "app/assets/javascripts/admin/controllers/admin-customize-themes-show.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-themes-show.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-customize-themes-show.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-customize-themes-show.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -10,7 +10,7 @@ const THEME_UPLOAD_VAR = 2;\n export default Ember.Controller.extend({\n   downloadUrl: url(\"model.id\", \"/admin/themes/%@\"),\n   previewUrl: url(\"model.id\", \"/admin/themes/%@/preview\"),\n-  addButtonDisabled: Em.computed.empty(\"selectedChildThemeId\"),\n+  addButtonDisabled: Ember.computed.empty(\"selectedChildThemeId\"),\n   editRouteName: \"adminCustomizeThemes.edit\",\n \n   @computed(\"model\", \"allThemes\", \"model.component\")"
    },
    {
      "sha": "cbbd1563b093c46699c457e265cd56d1e4f9fc5f",
      "filename": "app/assets/javascripts/admin/controllers/admin-email-index.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-email-index.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-email-index.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-email-index.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -5,7 +5,7 @@ export default Ember.Controller.extend({\n \n     @property sendTestEmailDisabled\n   **/\n-  sendTestEmailDisabled: Em.computed.empty(\"testEmailAddress\"),\n+  sendTestEmailDisabled: Ember.computed.empty(\"testEmailAddress\"),\n \n   /**\n     Clears the 'sentTestEmail' property on successful send."
    },
    {
      "sha": "f92a8ebd94a67fbd36e3ea6c164bcf057794ece9",
      "filename": "app/assets/javascripts/admin/controllers/admin-user-fields.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-user-fields.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-user-fields.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-user-fields.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -4,7 +4,7 @@ const MAX_FIELDS = 20;\n \n export default Ember.Controller.extend({\n   fieldTypes: null,\n-  createDisabled: Em.computed.gte(\"model.length\", MAX_FIELDS),\n+  createDisabled: Ember.computed.gte(\"model.length\", MAX_FIELDS),\n \n   fieldSortOrder: [\"position\"],\n   sortedFields: Ember.computed.sort(\"model\", \"fieldSortOrder\"),"
    },
    {
      "sha": "16b148f951e2d48c5c85d53c087b24af6bd214fd",
      "filename": "app/assets/javascripts/admin/controllers/admin-users-list-show.js.es6",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-users-list-show.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-users-list-show.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-users-list-show.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -14,15 +14,15 @@ export default Ember.Controller.extend(CanCheckEmails, {\n   listFilter: null,\n   selectAll: false,\n \n-  queryNew: Em.computed.equal(\"query\", \"new\"),\n-  queryPending: Em.computed.equal(\"query\", \"pending\"),\n-  queryHasApproval: Em.computed.or(\"queryNew\", \"queryPending\"),\n-  showApproval: Em.computed.and(\n+  queryNew: Ember.computed.equal(\"query\", \"new\"),\n+  queryPending: Ember.computed.equal(\"query\", \"pending\"),\n+  queryHasApproval: Ember.computed.or(\"queryNew\", \"queryPending\"),\n+  showApproval: Ember.computed.and(\n     \"siteSettings.must_approve_users\",\n     \"queryHasApproval\"\n   ),\n   searchHint: i18n(\"search_hint\"),\n-  hasSelection: Em.computed.gt(\"selectedCount\", 0),\n+  hasSelection: Ember.computed.gt(\"selectedCount\", 0),\n \n   selectedCount: function() {\n     var model = this.get(\"model\");"
    },
    {
      "sha": "41a9e4a7556b9b8ff079e84b66c59da326499fe8",
      "filename": "app/assets/javascripts/admin/controllers/admin-watched-words-action.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-watched-words-action.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/admin-watched-words-action.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/admin-watched-words-action.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -43,7 +43,7 @@ export default Ember.Controller.extend({\n       if (a) {\n         a.words.unshiftObject(arg);\n         a.incrementProperty(\"count\");\n-        Em.run.schedule(\"afterRender\", () => {\n+        Ember.run.schedule(\"afterRender\", () => {\n           // remove from other actions lists\n           let match = null;\n           this.get(\"adminWatchedWords.model\").forEach(action => {"
    },
    {
      "sha": "24e00b50d43047a0da4361d82e18116c92808e18",
      "filename": "app/assets/javascripts/admin/controllers/modals/admin-add-upload.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/modals/admin-add-upload.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/modals/admin-add-upload.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/modals/admin-add-upload.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -63,8 +63,8 @@ export default Ember.Controller.extend(ModalFunctionality, {\n     this.set(\"fileSelected\", false);\n   },\n \n-  enabled: Em.computed.and(\"nameValid\", \"fileSelected\"),\n-  disabled: Em.computed.not(\"enabled\"),\n+  enabled: Ember.computed.and(\"nameValid\", \"fileSelected\"),\n+  disabled: Ember.computed.not(\"enabled\"),\n \n   @computed(\"name\", \"adminCustomizeThemesShow.model.theme_fields\")\n   errorMessage(name, themeFields) {\n@@ -105,7 +105,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n   actions: {\n     updateName() {\n       let name = this.get(\"name\");\n-      if (Em.isEmpty(name)) {\n+      if (Ember.isEmpty(name)) {\n         name = $(\"#file-input\")[0].files[0].name;\n         this.set(\"name\", name.split(\".\")[0]);\n       }"
    },
    {
      "sha": "1a195149b3633b38376e333e4211b491989b4925",
      "filename": "app/assets/javascripts/admin/controllers/modals/admin-edit-badge-groupings.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/modals/admin-edit-badge-groupings.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/controllers/modals/admin-edit-badge-groupings.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/controllers/modals/admin-edit-badge-groupings.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -4,7 +4,7 @@ import ModalFunctionality from \"discourse/mixins/modal-functionality\";\n export default Ember.Controller.extend(ModalFunctionality, {\n   modelChanged: function() {\n     const model = this.get(\"model\");\n-    const copy = Em.A();\n+    const copy = Ember.A();\n     const store = this.store;\n \n     if (model) {"
    },
    {
      "sha": "a0552766a5711a866ad9faa99f7f2f0a7143081e",
      "filename": "app/assets/javascripts/admin/mixins/setting-component.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/mixins/setting-component.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/mixins/setting-component.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/mixins/setting-component.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -100,7 +100,7 @@ export default Ember.Mixin.create({\n   }.on(\"willDestroyElement\"),\n \n   _save() {\n-    Em.warn(\"You should define a `_save` method\", {\n+    Ember.warn(\"You should define a `_save` method\", {\n       id: \"admin.mixins.setting-component\"\n     });\n     return Ember.RSVP.resolve();"
    },
    {
      "sha": "b9a8fc761819d84c889294d2f3993be4a2b24d4b",
      "filename": "app/assets/javascripts/admin/models/admin-user.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/admin-user.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/admin-user.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/models/admin-user.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -305,7 +305,7 @@ const AdminUser = Discourse.User.extend({\n     return this.get(\"trust_level\") < 4;\n   }.property(\"trust_level\"),\n \n-  canSuspend: Em.computed.not(\"staff\"),\n+  canSuspend: Ember.computed.not(\"staff\"),\n \n   suspendDuration: function() {\n     const suspended_at = moment(this.suspended_at),"
    },
    {
      "sha": "2eb856c3be769ffb303e38b4f4b16c2d2135e4a8",
      "filename": "app/assets/javascripts/admin/models/backup-status.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/backup-status.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/backup-status.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/models/backup-status.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,7 +1,7 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n \n export default Discourse.Model.extend({\n-  restoreDisabled: Em.computed.not(\"restoreEnabled\"),\n+  restoreDisabled: Ember.computed.not(\"restoreEnabled\"),\n \n   @computed(\"allowRestore\", \"isOperationRunning\")\n   restoreEnabled(allowRestore, isOperationRunning) {"
    },
    {
      "sha": "fc24331fb810eda012158abfe321b539c793c927",
      "filename": "app/assets/javascripts/admin/models/color-scheme.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/color-scheme.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/color-scheme.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/models/color-scheme.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -30,7 +30,7 @@ const ColorScheme = Discourse.Model.extend(Ember.Copyable, {\n     var newScheme = ColorScheme.create({\n       name: this.get(\"name\"),\n       can_edit: true,\n-      colors: Em.A()\n+      colors: Ember.A()\n     });\n     this.get(\"colors\").forEach(c => {\n       newScheme.colors.pushObject("
    },
    {
      "sha": "83f42d962e7af96ac46f0b5457a9617902c2ed19",
      "filename": "app/assets/javascripts/admin/models/theme.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/theme.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/models/theme.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/models/theme.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -10,9 +10,9 @@ const SETTINGS_TYPE_ID = 5;\n \n const Theme = RestModel.extend({\n   FIELDS_IDS: [0, 1],\n-  isActive: Em.computed.or(\"default\", \"user_selectable\"),\n-  isPendingUpdates: Em.computed.gt(\"remote_theme.commits_behind\", 0),\n-  hasEditedFields: Em.computed.gt(\"editedFields.length\", 0),\n+  isActive: Ember.computed.or(\"default\", \"user_selectable\"),\n+  isPendingUpdates: Ember.computed.gt(\"remote_theme.commits_behind\", 0),\n+  hasEditedFields: Ember.computed.gt(\"editedFields.length\", 0),\n \n   @computed(\"theme_fields\")\n   themeFields(fields) {\n@@ -50,7 +50,7 @@ const Theme = RestModel.extend({\n   @computed(\"theme_fields.[]\")\n   editedFields(fields) {\n     return fields.filter(\n-      field => !Em.isBlank(field.value) && field.type_id !== SETTINGS_TYPE_ID\n+      field => !Ember.isBlank(field.value) && field.type_id !== SETTINGS_TYPE_ID\n     );\n   },\n \n@@ -67,11 +67,11 @@ const Theme = RestModel.extend({\n \n   hasEdited(target, name) {\n     if (name) {\n-      return !Em.isEmpty(this.getField(target, name));\n+      return !Ember.isEmpty(this.getField(target, name));\n     } else {\n       let fields = this.get(\"theme_fields\") || [];\n       return fields.any(\n-        field => field.target === target && !Em.isEmpty(field.value)\n+        field => field.target === target && !Ember.isEmpty(field.value)\n       );\n     }\n   },"
    },
    {
      "sha": "a0febc3d1de97c19ed950d56eda388c29319fca2",
      "filename": "app/assets/javascripts/admin/routes/admin-backups-logs.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-backups-logs.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-backups-logs.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/routes/admin-backups-logs.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -15,7 +15,7 @@ export default Ember.Route.extend({\n             return log.message.length === 0 || log.message[0] === \"[\";\n           })\n           .map(function(log) {\n-            return Em.Object.create(log);\n+            return Ember.Object.create(log);\n           })\n           .value();\n         logs.pushObjects(newLogs);"
    },
    {
      "sha": "28ec187f22aa31fefda146b29bd9992871f030cf",
      "filename": "app/assets/javascripts/admin/routes/admin-backups.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-backups.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-backups.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/routes/admin-backups.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -41,7 +41,7 @@ export default Discourse.Route.extend({\n       } else {\n         this.controllerFor(\"adminBackupsLogs\")\n           .get(\"logs\")\n-          .pushObject(Em.Object.create(log));\n+          .pushObject(Ember.Object.create(log));\n       }\n     });\n   },"
    },
    {
      "sha": "7837d1b30de8abe4e732d828206b36edd65f2a44",
      "filename": "app/assets/javascripts/admin/routes/admin-badges-show.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-badges-show.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-badges-show.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/routes/admin-badges-show.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -4,7 +4,7 @@ import showModal from \"discourse/lib/show-modal\";\n \n export default Ember.Route.extend({\n   serialize(m) {\n-    return { badge_id: Em.get(m, \"id\") || \"new\" };\n+    return { badge_id: Ember.get(m, \"id\") || \"new\" };\n   },\n \n   model(params) {\n@@ -49,7 +49,7 @@ export default Ember.Route.extend({\n         })\n         .catch(function(error) {\n           badge.set(\"preview_loading\", false);\n-          Em.Logger.error(error);\n+          Ember.Logger.error(error);\n           bootbox.alert(\"Network error\");\n         });\n     }"
    },
    {
      "sha": "c25f750c25386126cf2f824d92a8967da5366987",
      "filename": "app/assets/javascripts/admin/routes/admin-user.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-user.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/admin/routes/admin-user.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/admin/routes/admin-user.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -9,7 +9,7 @@ export default Discourse.Route.extend({\n   },\n \n   model(params) {\n-    return AdminUser.find(Em.get(params, \"user_id\"));\n+    return AdminUser.find(Ember.get(params, \"user_id\"));\n   },\n \n   renderTemplate() {"
    },
    {
      "sha": "be55e6d83869cb91564d2712bb9d2c3bd926932a",
      "filename": "app/assets/javascripts/authentication-complete.js.no-module.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/authentication-complete.js.no-module.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/authentication-complete.js.no-module.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/authentication-complete.js.no-module.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -7,7 +7,7 @@\n   require(\"discourse/routes/application\").default.reopen({\n     actions: {\n       didTransition: function() {\n-        Em.run.next(function() {\n+        Ember.run.next(function() {\n           Discourse.authenticationComplete(authenticationData);\n         });\n         return this._super();"
    },
    {
      "sha": "5922fc55c81118710177a13f4582023894d43d6e",
      "filename": "app/assets/javascripts/discourse-common/lib/raw-handlebars.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse-common/lib/raw-handlebars.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse-common/lib/raw-handlebars.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse-common/lib/raw-handlebars.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -24,7 +24,7 @@ RawHandlebars.helpers[\"get\"] = function(context, options) {\n     context = context.slice(context.indexOf(\".\") + 1);\n   }\n \n-  return val === undefined ? Em.get(firstContext, context) : val;\n+  return val === undefined ? Ember.get(firstContext, context) : val;\n };\n \n // adds compatability so this works with stringParams\n@@ -45,7 +45,7 @@ RawHandlebars.registerHelper(\"each\", function(\n   contextName,\n   options\n ) {\n-  var list = Em.get(this, contextName);\n+  var list = Ember.get(this, contextName);\n   var output = [];\n   var innerContext = objectCreate(this);\n   for (var i = 0; i < list.length; i++) {"
    },
    {
      "sha": "5fe9aecec6171456135a62e4cfa9ea4367a20de6",
      "filename": "app/assets/javascripts/discourse/components/avatar-uploader.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/avatar-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/avatar-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/avatar-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,7 +1,7 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"avatar\",\n   tagName: \"span\",\n   imageIsNotASquare: false,"
    },
    {
      "sha": "04588987bef6fe84434841fb4773d730eda1d395",
      "filename": "app/assets/javascripts/discourse/components/backup-uploader.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/backup-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/backup-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/backup-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -2,7 +2,7 @@ import { ajax } from \"discourse/lib/ajax\";\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   tagName: \"span\",\n \n   @computed(\"uploading\", \"uploadProgress\")"
    },
    {
      "sha": "443bf28e09e425d1fbe59f9f610dc2108b42d239",
      "filename": "app/assets/javascripts/discourse/components/badge-button.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/badge-button.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/badge-button.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/badge-button.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -9,5 +9,5 @@ export default Ember.Component.extend({\n     return $(\"<div>\" + this.get(\"badge.description\") + \"</div>\").text();\n   }.property(\"badge.description\"),\n   attributeBindings: [\"data-badge-name\", \"title\"],\n-  \"data-badge-name\": Em.computed.alias(\"badge.name\")\n+  \"data-badge-name\": Ember.computed.alias(\"badge.name\")\n });"
    },
    {
      "sha": "ded546ec178b011c176ce4cbd1bc4b8448764bb1",
      "filename": "app/assets/javascripts/discourse/components/bread-crumbs.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/bread-crumbs.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/bread-crumbs.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/bread-crumbs.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -2,9 +2,9 @@\n export default Ember.Component.extend({\n   classNameBindings: [\"hidden:hidden\", \":category-breadcrumb\"],\n   tagName: \"ol\",\n-  parentCategory: Em.computed.alias(\"category.parentCategory\"),\n+  parentCategory: Ember.computed.alias(\"category.parentCategory\"),\n \n-  parentCategories: Em.computed.filter(\"categories\", function(c) {\n+  parentCategories: Ember.computed.filter(\"categories\", function(c) {\n     if (\n       c.id === this.site.get(\"uncategorized_category_id\") &&\n       !this.siteSettings.allow_uncategorized_topics"
    },
    {
      "sha": "ffe7302432f1f232dd13ca5e5a550581a1dffc9e",
      "filename": "app/assets/javascripts/discourse/components/choose-message.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/choose-message.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/choose-message.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/choose-message.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -29,7 +29,7 @@ export default Ember.Component.extend({\n   search: debounce(function(title) {\n     const currentTopicId = this.get(\"currentTopicId\");\n \n-    if (Em.isEmpty(title)) {\n+    if (Ember.isEmpty(title)) {\n       this.setProperties({ messages: null, loading: false });\n       return;\n     }\n@@ -53,7 +53,7 @@ export default Ember.Component.extend({\n \n   actions: {\n     chooseMessage(message) {\n-      const messageId = Em.get(message, \"id\");\n+      const messageId = Ember.get(message, \"id\");\n       this.set(\"selectedTopicId\", messageId);\n       Ember.run.next(() =>\n         $(`#choose-message-${messageId}`).prop(\"checked\", \"true\")"
    },
    {
      "sha": "4f35e90e2035ab0de71587e7eee8ad7e85e4ecf0",
      "filename": "app/assets/javascripts/discourse/components/choose-topic.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/choose-topic.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/choose-topic.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/choose-topic.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -27,7 +27,7 @@ export default Ember.Component.extend({\n     const self = this,\n       currentTopicId = this.get(\"currentTopicId\");\n \n-    if (Em.isEmpty(title)) {\n+    if (Ember.isEmpty(title)) {\n       self.setProperties({ topics: null, loading: false });\n       return;\n     }\n@@ -50,7 +50,7 @@ export default Ember.Component.extend({\n \n   actions: {\n     chooseTopic(topic) {\n-      const topicId = Em.get(topic, \"id\");\n+      const topicId = Ember.get(topic, \"id\");\n       this.set(\"selectedTopicId\", topicId);\n       Ember.run.next(() =>\n         $(\"#choose-topic-\" + topicId).prop(\"checked\", \"true\")"
    },
    {
      "sha": "341f038029550c6be0989c776a962e4c24ccd674",
      "filename": "app/assets/javascripts/discourse/components/composer-editor.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/composer-editor.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/composer-editor.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/composer-editor.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -583,7 +583,7 @@ export default Ember.Component.extend({\n         if (found.indexOf(name) === -1) {\n           // add a delay to allow for typing, so you don't open the warning right away\n           // previously we would warn after @bob even if you were about to mention @bob2\n-          Em.run.later(\n+          Ember.run.later(\n             this,\n             () => {\n               if ("
    },
    {
      "sha": "65b32b2227e51fc8d6ddbc8ba09803d9bdeb1d23",
      "filename": "app/assets/javascripts/discourse/components/composer-title.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/composer-title.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/composer-title.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/composer-title.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -79,7 +79,7 @@ export default Ember.Component.extend({\n     }\n \n     if (Ember.testing) {\n-      Em.run.next(() =>\n+      Ember.run.next(() =>\n         // not ideal but we don't want to run this in current\n         // runloop to avoid an error in console\n         this._checkForUrl()"
    },
    {
      "sha": "2799b736ec1696947218a0d383940a68cc66a766",
      "filename": "app/assets/javascripts/discourse/components/cook-text.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/cook-text.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/cook-text.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/cook-text.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -11,7 +11,7 @@ const CookText = Ember.Component.extend({\n       this.set(\"cooked\", cooked);\n       // no choice but to defer this cause\n       // pretty text may only be loaded now\n-      Em.run.next(() =>\n+      Ember.run.next(() =>\n         window\n           .requireModule(\"pretty-text/image-short-url\")\n           .resolveAllShortUrls(ajax)"
    },
    {
      "sha": "f080dcf75593b0874b65ad2c1322888423c74727",
      "filename": "app/assets/javascripts/discourse/components/csv-uploader.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/csv-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/csv-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/csv-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,7 +1,7 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"csv\",\n   tagName: \"span\",\n   uploadUrl: \"/invites/upload_csv\","
    },
    {
      "sha": "44792ecfc06ecacfdf48418d61a53a75946a3050",
      "filename": "app/assets/javascripts/discourse/components/d-modal.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/d-modal.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/d-modal.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/d-modal.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -23,7 +23,7 @@ export default Ember.Component.extend({\n   setUp() {\n     $(\"html\").on(\"keydown.discourse-modal\", e => {\n       if (e.which === 27 && this.get(\"dismissable\")) {\n-        Em.run.next(() => $(\".modal-header a.close\").click());\n+        Ember.run.next(() => $(\".modal-header a.close\").click());\n       }\n     });\n "
    },
    {
      "sha": "79f0d9c092defbb031e265a6ad6f0f7bad28e247",
      "filename": "app/assets/javascripts/discourse/components/edit-category-general.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-general.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-general.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/edit-category-general.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -6,7 +6,9 @@ import computed from \"ember-addons/ember-computed-decorators\";\n \n export default buildCategoryPanel(\"general\", {\n   foregroundColors: [\"FFFFFF\", \"000000\"],\n-  canSelectParentCategory: Em.computed.not(\"category.isUncategorizedCategory\"),\n+  canSelectParentCategory: Ember.computed.not(\n+    \"category.isUncategorizedCategory\"\n+  ),\n \n   // background colors are available as a pipe-separated string\n   @computed"
    },
    {
      "sha": "455418f13cfa88db72afd6c069b8064f30673ac1",
      "filename": "app/assets/javascripts/discourse/components/edit-category-settings.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-settings.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-settings.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/edit-category-settings.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -5,12 +5,12 @@ import computed from \"ember-addons/ember-computed-decorators\";\n export default buildCategoryPanel(\"settings\", {\n   emailInEnabled: setting(\"email_in\"),\n   showPositionInput: setting(\"fixed_category_positions\"),\n-  isParentCategory: Em.computed.empty(\"category.parent_category_id\"),\n-  showSubcategoryListStyle: Em.computed.and(\n+  isParentCategory: Ember.computed.empty(\"category.parent_category_id\"),\n+  showSubcategoryListStyle: Ember.computed.and(\n     \"category.show_subcategory_list\",\n     \"isParentCategory\"\n   ),\n-  isDefaultSortOrder: Em.computed.empty(\"category.sort_order\"),\n+  isDefaultSortOrder: Ember.computed.empty(\"category.sort_order\"),\n \n   @computed\n   availableSubcategoryListStyles() {"
    },
    {
      "sha": "f8b8d962adad57df6552dfe38ab773a14931236d",
      "filename": "app/assets/javascripts/discourse/components/edit-category-tab.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-tab.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/edit-category-tab.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/edit-category-tab.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,6 +1,6 @@\n import { propertyEqual } from \"discourse/lib/computed\";\n \n-export default Em.Component.extend({\n+export default Ember.Component.extend({\n   tagName: \"li\",\n   classNameBindings: [\"active\", \"tabClassName\"],\n "
    },
    {
      "sha": "f6ccab1c5ab05ef24e7741c26f855210d04fb194",
      "filename": "app/assets/javascripts/discourse/components/emoji-uploader.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/emoji-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/emoji-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/emoji-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,11 +1,11 @@\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"emoji\",\n   uploadUrl: \"/admin/customize/emojis\",\n \n-  hasName: Em.computed.notEmpty(\"name\"),\n-  addDisabled: Em.computed.not(\"hasName\"),\n+  hasName: Ember.computed.notEmpty(\"name\"),\n+  addDisabled: Ember.computed.not(\"hasName\"),\n \n   data: function() {\n     return Ember.isBlank(this.get(\"name\")) ? {} : { name: this.get(\"name\") };"
    },
    {
      "sha": "6a7a713d4e03fbcc3c8ec3d74cfe942db957c2d0",
      "filename": "app/assets/javascripts/discourse/components/flag-action-type.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/flag-action-type.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/flag-action-type.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/flag-action-type.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -23,9 +23,9 @@ export default Ember.Component.extend({\n     return flag === selectedFlag;\n   },\n \n-  showMessageInput: Em.computed.and(\"flag.is_custom_flag\", \"selected\"),\n-  showDescription: Em.computed.not(\"showMessageInput\"),\n-  isNotifyUser: Em.computed.equal(\"flag.name_key\", \"notify_user\"),\n+  showMessageInput: Ember.computed.and(\"flag.is_custom_flag\", \"selected\"),\n+  showDescription: Ember.computed.not(\"showMessageInput\"),\n+  isNotifyUser: Ember.computed.equal(\"flag.name_key\", \"notify_user\"),\n \n   @computed(\"flag.description\", \"flag.short_description\")\n   description(long_description, short_description) {"
    },
    {
      "sha": "637cfca41b366da77549dc260fad8aea61763e7e",
      "filename": "app/assets/javascripts/discourse/components/group-members-input.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/group-members-input.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/group-members-input.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/group-members-input.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -28,7 +28,7 @@ export default Ember.Component.extend({\n     return !usernames || !(usernames.length > 0);\n   },\n \n-  showingFirst: Em.computed.lte(\"currentPage\", 1),\n+  showingFirst: Ember.computed.lte(\"currentPage\", 1),\n   showingLast: propertyEqual(\"currentPage\", \"totalPages\"),\n \n   actions: {\n@@ -60,7 +60,7 @@ export default Ember.Component.extend({\n     },\n \n     addMembers() {\n-      if (Em.isEmpty(this.get(\"model.usernames\"))) {\n+      if (Ember.isEmpty(this.get(\"model.usernames\"))) {\n         return;\n       }\n       this.get(\"model\")"
    },
    {
      "sha": "db580fb71fb8e2cef5a8d0080765a69a66c64a40",
      "filename": "app/assets/javascripts/discourse/components/image-uploader.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/image-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/image-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/image-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,12 +1,12 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   classNames: [\"image-uploader\"],\n \n   @computed(\"imageUrl\")\n   backgroundStyle(imageUrl) {\n-    if (Em.isEmpty(imageUrl)) {\n+    if (Ember.isEmpty(imageUrl)) {\n       return \"\".htmlSafe();\n     }\n "
    },
    {
      "sha": "5fd63d0d01319481c4a516e8b097adce22e5697b",
      "filename": "app/assets/javascripts/discourse/components/images-uploader.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/images-uploader.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/images-uploader.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/images-uploader.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,7 +1,7 @@\n import computed from \"ember-addons/ember-computed-decorators\";\n import UploadMixin from \"discourse/mixins/upload\";\n \n-export default Em.Component.extend(UploadMixin, {\n+export default Ember.Component.extend(UploadMixin, {\n   type: \"avatar\",\n   tagName: \"span\",\n "
    },
    {
      "sha": "6c7688c09447ac0ece7fe3d2cf4cb28fe23c04b8",
      "filename": "app/assets/javascripts/discourse/components/input-tip.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/input-tip.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/input-tip.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/input-tip.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -6,8 +6,8 @@ export default Ember.Component.extend(\n     classNameBindings: [\":tip\", \"good\", \"bad\"],\n     rerenderTriggers: [\"validation\"],\n \n-    bad: Em.computed.alias(\"validation.failed\"),\n-    good: Em.computed.not(\"bad\"),\n+    bad: Ember.computed.alias(\"validation.failed\"),\n+    good: Ember.computed.not(\"bad\"),\n \n     buildBuffer(buffer) {\n       const reason = this.get(\"validation.reason\");"
    },
    {
      "sha": "3638eaca8f5eb0daf86c39e9317a53db8c840b1a",
      "filename": "app/assets/javascripts/discourse/components/mobile-nav.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/mobile-nav.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/mobile-nav.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/mobile-nav.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -20,7 +20,7 @@ export default Ember.Component.extend({\n   @observes(\"currentPath\")\n   currentPathChanged() {\n     this.set(\"expanded\", false);\n-    Em.run.next(() => this._updateSelectedHtml());\n+    Ember.run.next(() => this._updateSelectedHtml());\n   },\n \n   _updateSelectedHtml() {\n@@ -38,7 +38,7 @@ export default Ember.Component.extend({\n     toggleExpanded() {\n       this.toggleProperty(\"expanded\");\n \n-      Em.run.next(() => {\n+      Ember.run.next(() => {\n         if (this.get(\"expanded\")) {\n           $(window)\n             .off(\"click.mobile-nav\")"
    },
    {
      "sha": "674ad8f94315bd3d9aa83490495e748093b82e1b",
      "filename": "app/assets/javascripts/discourse/components/navigation-bar.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/navigation-bar.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/navigation-bar.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/navigation-bar.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -68,7 +68,7 @@ export default Ember.Component.extend({\n       if (this.get(\"expanded\")) {\n         DiscourseURL.appEvents.on(\"dom:clean\", this, this.ensureDropClosed);\n \n-        Em.run.next(() => {\n+        Ember.run.next(() => {\n           if (!this.get(\"expanded\")) {\n             return;\n           }"
    },
    {
      "sha": "6088f4a4a6bd887dc1b72e5930b07ab3ec34c231",
      "filename": "app/assets/javascripts/discourse/components/preference-checkbox.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/preference-checkbox.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/preference-checkbox.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/preference-checkbox.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,4 +1,4 @@\n-export default Em.Component.extend({\n+export default Ember.Component.extend({\n   classNames: [\"controls\"],\n \n   label: function() {"
    },
    {
      "sha": "8ae88ca19ff72472fbcebe2e1676e102cb52d020",
      "filename": "app/assets/javascripts/discourse/components/search-advanced-options.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/search-advanced-options.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/search-advanced-options.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/search-advanced-options.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -28,7 +28,7 @@ const REGEXP_POST_TIME_WHEN = /^(before|after)/gi;\n \n const IN_OPTIONS_MAPPING = { images: \"with\" };\n \n-export default Em.Component.extend({\n+export default Ember.Component.extend({\n   classNames: [\"search-advanced-options\"],\n \n   inOptionsForUsers: ["
    },
    {
      "sha": "dbbc7ad1d5b1d5a7ff514161ad64e72ccbe596b4",
      "filename": "app/assets/javascripts/discourse/components/signup-cta.js.es6",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/signup-cta.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/signup-cta.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/signup-cta.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -9,7 +9,10 @@ export default Ember.Component.extend({\n     hideForSession() {\n       this.session.set(\"hideSignupCta\", true);\n       this.keyValueStore.setItem(\"anon-cta-hidden\", new Date().getTime());\n-      Em.run.later(() => this.session.set(\"showSignupCta\", false), 20 * 1000);\n+      Ember.run.later(\n+        () => this.session.set(\"showSignupCta\", false),\n+        20 * 1000\n+      );\n     }\n   },\n "
    },
    {
      "sha": "da1ae4f00ab3e14d48e69bbbe4a857622518c59e",
      "filename": "app/assets/javascripts/discourse/components/suggested-topics.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/suggested-topics.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/suggested-topics.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/suggested-topics.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -32,7 +32,7 @@ export default Ember.Component.extend({\n \n     if (\n       category &&\n-      Em.get(category, \"id\") ===\n+      Ember.get(category, \"id\") ===\n         Discourse.Site.currentProp(\"uncategorized_category_id\")\n     ) {\n       category = null;"
    },
    {
      "sha": "b2cc39434451c57f3a09236370146213618b143e",
      "filename": "app/assets/javascripts/discourse/components/topic-list-item.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-list-item.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-list-item.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/topic-list-item.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -39,7 +39,7 @@ export default Ember.Component.extend(\n       \"topic.visited\"\n     ],\n     attributeBindings: [\"data-topic-id\"],\n-    \"data-topic-id\": Em.computed.alias(\"topic.id\"),\n+    \"data-topic-id\": Ember.computed.alias(\"topic.id\"),\n \n     @computed\n     newDotText() {"
    },
    {
      "sha": "e276e7a397275fd7bcb015db62c1391b8c122f44",
      "filename": "app/assets/javascripts/discourse/components/topic-timeline.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-timeline.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-timeline.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/topic-timeline.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -86,7 +86,7 @@ export default MountWidget.extend(Docking, {\n     this._super();\n \n     if (this.get(\"fullscreen\") && !this.get(\"addShowClass\")) {\n-      Em.run.next(() => {\n+      Ember.run.next(() => {\n         this.set(\"addShowClass\", true);\n         this.queueRerender();\n       });"
    },
    {
      "sha": "8fcb580dadd00f4c0c2ef2da385b2f068f919d9b",
      "filename": "app/assets/javascripts/discourse/components/topic-timer-info.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-timer-info.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/topic-timer-info.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/topic-timer-info.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -77,7 +77,7 @@ export default Ember.Component.extend(\n \n     willDestroyElement() {\n       if (this._delayedRerender) {\n-        Em.run.cancel(this._delayedRerender);\n+        Ember.run.cancel(this._delayedRerender);\n       }\n     },\n "
    },
    {
      "sha": "e507b3057075b8ae47337be0db83ea9cb0f381ed",
      "filename": "app/assets/javascripts/discourse/components/user-info.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-info.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-info.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/user-info.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -15,10 +15,10 @@ export default Ember.Component.extend({\n     return userPath(username);\n   },\n \n-  \"data-username\": Em.computed.alias(\"user.username\"),\n+  \"data-username\": Ember.computed.alias(\"user.username\"),\n \n   // TODO: In later ember releases `hasBlock` works without this\n-  hasBlock: Em.computed.alias(\"template\"),\n+  hasBlock: Ember.computed.alias(\"template\"),\n \n   @computed(\"user.name\", \"user.username\")\n   name(name, username) {"
    },
    {
      "sha": "cdd9aba2809fed185dc18c51e82073594c2e3d92",
      "filename": "app/assets/javascripts/discourse/components/user-selector.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-selector.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-selector.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/user-selector.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -114,7 +114,7 @@ export default TextField.extend({\n   @observes(\"usernames\")\n   _clearInput: function() {\n     if (arguments.length > 1) {\n-      if (Em.isEmpty(this.get(\"usernames\"))) {\n+      if (Ember.isEmpty(this.get(\"usernames\"))) {\n         this.$()\n           .parent()\n           .find(\"a\")"
    },
    {
      "sha": "59408144df46d78cd5e7a0cd5f33c2d285a6486b",
      "filename": "app/assets/javascripts/discourse/components/user-stream.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-stream.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/components/user-stream.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/user-stream.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -13,7 +13,7 @@ export default Ember.Component.extend(LoadMore, {\n   classNames: [\"user-stream\"],\n \n   _scrollTopOnModelChange: function() {\n-    Em.run.schedule(\"afterRender\", () => $(document).scrollTop(0));\n+    Ember.run.schedule(\"afterRender\", () => $(document).scrollTop(0));\n   }.observes(\"stream.user.id\"),\n \n   _inserted: function() {"
    },
    {
      "sha": "744e28a13a4f8b3ba1ab45c69130abc65008ac07",
      "filename": "app/assets/javascripts/discourse/controllers/bulk-notification-level.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/bulk-notification-level.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/bulk-notification-level.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/bulk-notification-level.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -17,7 +17,7 @@ export default Ember.Controller.extend({\n     });\n   },\n \n-  disabled: Em.computed.empty(\"notificationLevelId\"),\n+  disabled: Ember.computed.empty(\"notificationLevelId\"),\n \n   actions: {\n     changeNotificationLevel() {"
    },
    {
      "sha": "87df9f226a97b8f5450badeb2f0e74a6205b84a5",
      "filename": "app/assets/javascripts/discourse/controllers/change-timestamp.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/change-timestamp.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/change-timestamp.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/change-timestamp.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -47,7 +47,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n         .then(function() {\n           self.send(\"closeModal\");\n           self.setProperties({ date: \"\", time: \"\", saving: false });\n-          Em.run.next(() => {\n+          Ember.run.next(() => {\n             DiscourseURL.routeTo(topic.get(\"url\"));\n           });\n         })"
    },
    {
      "sha": "1ae4cfffd682a3fc7093b9681730917848f6300e",
      "filename": "app/assets/javascripts/discourse/controllers/composer.js.es6",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/composer.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -80,11 +80,11 @@ export default Ember.Controller.extend({\n   topicController: Ember.inject.controller(\"topic\"),\n   application: Ember.inject.controller(),\n \n-  replyAsNewTopicDraft: Em.computed.equal(\n+  replyAsNewTopicDraft: Ember.computed.equal(\n     \"model.draftKey\",\n     Composer.REPLY_AS_NEW_TOPIC_KEY\n   ),\n-  replyAsNewPrivateMessageDraft: Em.computed.equal(\n+  replyAsNewPrivateMessageDraft: Ember.computed.equal(\n     \"model.draftKey\",\n     Composer.REPLY_AS_NEW_PRIVATE_MESSAGE_KEY\n   ),\n@@ -155,7 +155,7 @@ export default Ember.Controller.extend({\n     return \"title\";\n   },\n \n-  showToolbar: Em.computed({\n+  showToolbar: Ember.computed({\n     get() {\n       const keyValueStore = getOwner(this).lookup(\"key-value-store:main\");\n       const storedVal = keyValueStore.get(\"toolbar-enabled\");\n@@ -198,7 +198,7 @@ export default Ember.Controller.extend({\n     return currentUser && currentUser.get(\"staff\");\n   },\n \n-  canUnlistTopic: Em.computed.and(\"model.creatingTopic\", \"isStaffUser\"),\n+  canUnlistTopic: Ember.computed.and(\"model.creatingTopic\", \"isStaffUser\"),\n \n   @computed(\"canWhisper\", \"model.post\")\n   showWhisperToggle(canWhisper, repliedToPost) {"
    },
    {
      "sha": "cb38b10d30c126726f6d23f0e6bdc66831daa7df",
      "filename": "app/assets/javascripts/discourse/controllers/create-account.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/create-account.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/create-account.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/create-account.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -24,14 +24,14 @@ export default Ember.Controller.extend(\n     accountPasswordConfirm: 0,\n     accountChallenge: 0,\n     formSubmitted: false,\n-    rejectedEmails: Em.A([]),\n+    rejectedEmails: Ember.A([]),\n     prefilledUsername: null,\n     userFields: null,\n     isDeveloper: false,\n \n-    hasAuthOptions: Em.computed.notEmpty(\"authOptions\"),\n+    hasAuthOptions: Ember.computed.notEmpty(\"authOptions\"),\n     canCreateLocal: setting(\"enable_local_logins\"),\n-    showCreateForm: Em.computed.or(\"hasAuthOptions\", \"canCreateLocal\"),\n+    showCreateForm: Ember.computed.or(\"hasAuthOptions\", \"canCreateLocal\"),\n \n     resetForm() {\n       // We wrap the fields in a structure so we can assign a value"
    },
    {
      "sha": "c19e0f7fb1b21ee021476fadc802d500fad57ced",
      "filename": "app/assets/javascripts/discourse/controllers/discovery.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/discovery.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/discovery.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/discovery.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -7,10 +7,10 @@ export default Ember.Controller.extend({\n \n   loading: false,\n \n-  category: Em.computed.alias(\"navigationCategory.category\"),\n-  noSubcategories: Em.computed.alias(\"navigationCategory.noSubcategories\"),\n+  category: Ember.computed.alias(\"navigationCategory.category\"),\n+  noSubcategories: Ember.computed.alias(\"navigationCategory.noSubcategories\"),\n \n-  loadedAllItems: Em.computed.not(\"discoveryTopics.model.canLoadMore\"),\n+  loadedAllItems: Ember.computed.not(\"discoveryTopics.model.canLoadMore\"),\n \n   _showFooter: function() {\n     this.set(\"application.showFooter\", this.get(\"loadedAllItems\"));"
    },
    {
      "sha": "aa522af0f1ef4f39702931c0fae6570468291c4b",
      "filename": "app/assets/javascripts/discourse/controllers/discovery/topics.js.es6",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/discovery/topics.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/discovery/topics.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/discovery/topics.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -115,16 +115,16 @@ const controllerOpts = {\n     );\n   }.property(\"model.filter\", \"model.topics.length\"),\n \n-  hasTopics: Em.computed.gt(\"model.topics.length\", 0),\n-  allLoaded: Em.computed.empty(\"model.more_topics_url\"),\n+  hasTopics: Ember.computed.gt(\"model.topics.length\", 0),\n+  allLoaded: Ember.computed.empty(\"model.more_topics_url\"),\n   latest: endWith(\"model.filter\", \"latest\"),\n   new: endWith(\"model.filter\", \"new\"),\n-  top: Em.computed.notEmpty(\"period\"),\n-  yearly: Em.computed.equal(\"period\", \"yearly\"),\n-  quarterly: Em.computed.equal(\"period\", \"quarterly\"),\n-  monthly: Em.computed.equal(\"period\", \"monthly\"),\n-  weekly: Em.computed.equal(\"period\", \"weekly\"),\n-  daily: Em.computed.equal(\"period\", \"daily\"),\n+  top: Ember.computed.notEmpty(\"period\"),\n+  yearly: Ember.computed.equal(\"period\", \"yearly\"),\n+  quarterly: Ember.computed.equal(\"period\", \"quarterly\"),\n+  monthly: Ember.computed.equal(\"period\", \"monthly\"),\n+  weekly: Ember.computed.equal(\"period\", \"weekly\"),\n+  daily: Ember.computed.equal(\"period\", \"daily\"),\n \n   footerMessage: function() {\n     if (!this.get(\"allLoaded\")) {"
    },
    {
      "sha": "331dc5e69478e607c94cf71a41bf16acbda4b18c",
      "filename": "app/assets/javascripts/discourse/controllers/exception.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/exception.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/exception.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/exception.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -33,10 +33,10 @@ export default Ember.Controller.extend({\n     return false;\n   }.property(),\n \n-  isNotFound: Em.computed.equal(\"thrown.status\", 404),\n-  isForbidden: Em.computed.equal(\"thrown.status\", 403),\n-  isServer: Em.computed.gte(\"thrown.status\", 500),\n-  isUnknown: Em.computed.none(\"isNetwork\", \"isServer\"),\n+  isNotFound: Ember.computed.equal(\"thrown.status\", 404),\n+  isForbidden: Ember.computed.equal(\"thrown.status\", 403),\n+  isServer: Ember.computed.gte(\"thrown.status\", 500),\n+  isUnknown: Ember.computed.none(\"isNetwork\", \"isServer\"),\n \n   // TODO\n   // make ajax requests to /srv/status with exponential backoff\n@@ -63,7 +63,7 @@ export default Ember.Controller.extend({\n     }\n   }.property(\"isNetwork\", \"isServer\", \"isUnknown\"),\n \n-  requestUrl: Em.computed.alias(\"thrown.requestedUrl\"),\n+  requestUrl: Ember.computed.alias(\"thrown.requestedUrl\"),\n \n   desc: function() {\n     if (this.get(\"networkFixed\")) {\n@@ -100,7 +100,7 @@ export default Ember.Controller.extend({\n     tryLoading: function() {\n       this.set(\"loading\", true);\n       var self = this;\n-      Em.run.schedule(\"afterRender\", function() {\n+      Ember.run.schedule(\"afterRender\", function() {\n         self.get(\"lastTransition\").retry();\n         self.set(\"loading\", false);\n       });"
    },
    {
      "sha": "a6fbef909e6b0b6ea81824d3331725a8e7ce04d6",
      "filename": "app/assets/javascripts/discourse/controllers/flag.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/flag.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/flag.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/flag.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -56,7 +56,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n       return flagsAvailable;\n     } else {\n       // flagging topic\n-      let lookup = Em.Object.create();\n+      let lookup = Ember.Object.create();\n       let model = this.get(\"model\");\n       model.get(\"actions_summary\").forEach(a => {\n         a.flagTopic = model;\n@@ -94,7 +94,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n     return true;\n   }.property(\"selected.is_custom_flag\", \"message.length\"),\n \n-  submitDisabled: Em.computed.not(\"submitEnabled\"),\n+  submitDisabled: Ember.computed.not(\"submitEnabled\"),\n \n   // Staff accounts can \"take action\"\n   @computed(\"flagTopic\", \"selected.is_custom_flag\")"
    },
    {
      "sha": "7822ad94b80231a8f6be91e4e6f3283e75feea0d",
      "filename": "app/assets/javascripts/discourse/controllers/full-page-search.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/full-page-search.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/full-page-search.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/full-page-search.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -50,7 +50,7 @@ export default Ember.Controller.extend({\n \n   @computed(\"q\")\n   hasAutofocus(q) {\n-    return Em.isEmpty(q);\n+    return Ember.isEmpty(q);\n   },\n \n   @computed(\"q\")"
    },
    {
      "sha": "6c46b360e3da3cd5250542ce75450b1e80645b58",
      "filename": "app/assets/javascripts/discourse/controllers/group-add-members.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/group-add-members.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/group-add-members.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/group-add-members.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -17,7 +17,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n \n       const model = this.get(\"model\");\n       const usernames = model.get(\"usernames\");\n-      if (Em.isEmpty(usernames)) {\n+      if (Ember.isEmpty(usernames)) {\n         return;\n       }\n       let promise;"
    },
    {
      "sha": "b42a99f1ddf48c46005cbe522464a4851c8846eb",
      "filename": "app/assets/javascripts/discourse/controllers/history.js.es6",
      "status": "modified",
      "additions": 7,
      "deletions": 5,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/history.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/history.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/history.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -31,10 +31,12 @@ export default Ember.Controller.extend(ModalFunctionality, {\n     }\n   },\n \n-  previousFeaturedLink: Em.computed.alias(\n+  previousFeaturedLink: Ember.computed.alias(\n     \"model.featured_link_changes.previous\"\n   ),\n-  currentFeaturedLink: Em.computed.alias(\"model.featured_link_changes.current\"),\n+  currentFeaturedLink: Ember.computed.alias(\n+    \"model.featured_link_changes.current\"\n+  ),\n \n   previousTagChanges: customTagArray(\"model.tags_changes.previous\"),\n   currentTagChanges: customTagArray(\"model.tags_changes.current\"),\n@@ -188,9 +190,9 @@ export default Ember.Controller.extend(ModalFunctionality, {\n     }\n   },\n \n-  displayingInline: Em.computed.equal(\"viewMode\", \"inline\"),\n-  displayingSideBySide: Em.computed.equal(\"viewMode\", \"side_by_side\"),\n-  displayingSideBySideMarkdown: Em.computed.equal(\n+  displayingInline: Ember.computed.equal(\"viewMode\", \"inline\"),\n+  displayingSideBySide: Ember.computed.equal(\"viewMode\", \"side_by_side\"),\n+  displayingSideBySideMarkdown: Ember.computed.equal(\n     \"viewMode\",\n     \"side_by_side_markdown\"\n   ),"
    },
    {
      "sha": "b6144dd7b0e72bead219377df2f224becc078853",
      "filename": "app/assets/javascripts/discourse/controllers/invite.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/invite.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/invite.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/invite.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -120,13 +120,13 @@ export default Ember.Controller.extend(ModalFunctionality, {\n   topicId: Ember.computed.alias(\"model.id\"),\n \n   // Is Private Topic? (i.e. visible only to specific group members)\n-  isPrivateTopic: Em.computed.and(\n+  isPrivateTopic: Ember.computed.and(\n     \"invitingToTopic\",\n     \"model.category.read_restricted\"\n   ),\n \n   // Is Private Message?\n-  isMessage: Em.computed.equal(\"model.archetype\", \"private_message\"),\n+  isMessage: Ember.computed.equal(\"model.archetype\", \"private_message\"),\n \n   // Allow Existing Members? (username autocomplete)\n   allowExistingMembers: Ember.computed.alias(\"invitingToTopic\"),"
    },
    {
      "sha": "34ca1434443bf64c919319e9a690a94778095468",
      "filename": "app/assets/javascripts/discourse/controllers/login.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/login.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/login.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/login.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -32,7 +32,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n \n   canLoginLocal: setting(\"enable_local_logins\"),\n   canLoginLocalWithEmail: setting(\"enable_local_logins_via_email\"),\n-  loginRequired: Em.computed.alias(\"application.loginRequired\"),\n+  loginRequired: Ember.computed.alias(\"application.loginRequired\"),\n   secondFactorMethod: SECOND_FACTOR_METHODS.TOTP,\n \n   resetForm() {\n@@ -67,7 +67,7 @@ export default Ember.Controller.extend(ModalFunctionality, {\n     return loggingIn ? \"login.logging_in\" : \"login.title\";\n   },\n \n-  loginDisabled: Em.computed.or(\"loggingIn\", \"loggedIn\"),\n+  loginDisabled: Ember.computed.or(\"loggingIn\", \"loggedIn\"),\n \n   @computed(\"loggingIn\", \"authenticate\", \"application.canSignUp\")\n   showSignupLink(loggingIn, authenticate, canSignUp) {"
    },
    {
      "sha": "a54af35e2acf7784d988326a8eb402b68679972e",
      "filename": "app/assets/javascripts/discourse/controllers/navigation/category.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/navigation/category.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/navigation/category.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/navigation/category.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -1,8 +1,8 @@\n import NavigationDefaultController from \"discourse/controllers/navigation/default\";\n \n export default NavigationDefaultController.extend({\n-  showingParentCategory: Em.computed.none(\"category.parentCategory\"),\n-  showingSubcategoryList: Em.computed.and(\n+  showingParentCategory: Ember.computed.none(\"category.parentCategory\"),\n+  showingSubcategoryList: Ember.computed.and(\n     \"category.show_subcategory_list\",\n     \"showingParentCategory\"\n   )"
    },
    {
      "sha": "293503978cb1a9ffd3ce30db7ffc416a30152855",
      "filename": "app/assets/javascripts/discourse/controllers/preferences/account.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/account.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/account.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/preferences/account.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -28,8 +28,8 @@ export default Ember.Controller.extend(\n \n     showAllAuthTokens: false,\n \n-    cannotDeleteAccount: Em.computed.not(\"currentUser.can_delete_account\"),\n-    deleteDisabled: Em.computed.or(\n+    cannotDeleteAccount: Ember.computed.not(\"currentUser.can_delete_account\"),\n+    deleteDisabled: Ember.computed.or(\n       \"model.isSaving\",\n       \"deleting\",\n       \"cannotDeleteAccount\""
    },
    {
      "sha": "90936b5284fd3474629820c12a5c656299d29981",
      "filename": "app/assets/javascripts/discourse/controllers/preferences/email.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/email.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/email.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/preferences/email.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -10,8 +10,8 @@ export default Ember.Controller.extend({\n   success: false,\n   newEmail: null,\n \n-  newEmailEmpty: Em.computed.empty(\"newEmail\"),\n-  saveDisabled: Em.computed.or(\n+  newEmailEmpty: Ember.computed.empty(\"newEmail\"),\n+  saveDisabled: Ember.computed.or(\n     \"saving\",\n     \"newEmailEmpty\",\n     \"taken\","
    },
    {
      "sha": "a6d1c99ad5b880584aba6307bbe345dc640c4f61",
      "filename": "app/assets/javascripts/discourse/controllers/preferences/username.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/username.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/preferences/username.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/preferences/username.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -15,8 +15,8 @@ export default Ember.Controller.extend({\n \n   maxLength: setting(\"max_username_length\"),\n   minLength: setting(\"min_username_length\"),\n-  newUsernameEmpty: Em.computed.empty(\"newUsername\"),\n-  saveDisabled: Em.computed.or(\n+  newUsernameEmpty: Ember.computed.empty(\"newUsername\"),\n+  saveDisabled: Ember.computed.or(\n     \"saving\",\n     \"newUsernameEmpty\",\n     \"taken\","
    },
    {
      "sha": "82fd514e16a36f8ab910e1933276d54685d5b0f1",
      "filename": "app/assets/javascripts/discourse/controllers/static.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/static.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/static.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/static.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -5,7 +5,7 @@ import { userPath } from \"discourse/lib/url\";\n export default Ember.Controller.extend({\n   application: Ember.inject.controller(),\n \n-  showLoginButton: Em.computed.equal(\"model.path\", \"login\"),\n+  showLoginButton: Ember.computed.equal(\"model.path\", \"login\"),\n \n   @computed(\"model.path\")\n   bodyClass: path => `static-${path}`,"
    },
    {
      "sha": "0b92cd9a485757ea8117396768845def2adbda07",
      "filename": "app/assets/javascripts/discourse/controllers/topic.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/topic.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/topic.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/topic.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -889,7 +889,7 @@ export default Ember.Controller.extend(bufferedProperty(\"model\"), {\n       composerController\n         .open(options)\n         .then(() => {\n-          return Em.isEmpty(quotedText) ? \"\" : quotedText;\n+          return Ember.isEmpty(quotedText) ? \"\" : quotedText;\n         })\n         .then(q => {\n           const postUrl = `${location.protocol}//${location.host}${post.get(\n@@ -1243,7 +1243,7 @@ export default Ember.Controller.extend(bufferedProperty(\"model\"), {\n             if (callback) {\n               callback(this, data);\n             } else {\n-              Em.Logger.warn(\"unknown topic bus message type\", data);\n+              Ember.Logger.warn(\"unknown topic bus message type\", data);\n             }\n           }\n         }"
    },
    {
      "sha": "9d6c3c4c4df2f3574c1f32a5682e28229f802385",
      "filename": "app/assets/javascripts/discourse/controllers/user-invited-show.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user-invited-show.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user-invited-show.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/user-invited-show.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -35,7 +35,7 @@ export default Ember.Controller.extend({\n     });\n   }, 250).observes(\"searchTerm\"),\n \n-  inviteRedeemed: Em.computed.equal(\"filter\", \"redeemed\"),\n+  inviteRedeemed: Ember.computed.equal(\"filter\", \"redeemed\"),\n \n   showBulkActionButtons: function() {\n     return ("
    },
    {
      "sha": "6091a569c06b7215e4e511dfe5702a9aca0afc36",
      "filename": "app/assets/javascripts/discourse/controllers/user-private-messages.js.es6",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user-private-messages.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user-private-messages.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/user-private-messages.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -7,11 +7,11 @@ export default Ember.Controller.extend({\n   user: Ember.inject.controller(),\n \n   pmView: false,\n-  viewingSelf: Em.computed.alias(\"user.viewingSelf\"),\n-  isGroup: Em.computed.equal(\"pmView\", \"groups\"),\n-  currentPath: Em.computed.alias(\"application.currentPath\"),\n-  selected: Em.computed.alias(\"userTopicsList.selected\"),\n-  bulkSelectEnabled: Em.computed.alias(\"userTopicsList.bulkSelectEnabled\"),\n+  viewingSelf: Ember.computed.alias(\"user.viewingSelf\"),\n+  isGroup: Ember.computed.equal(\"pmView\", \"groups\"),\n+  currentPath: Ember.computed.alias(\"application.currentPath\"),\n+  selected: Ember.computed.alias(\"userTopicsList.selected\"),\n+  bulkSelectEnabled: Ember.computed.alias(\"userTopicsList.bulkSelectEnabled\"),\n   showToggleBulkSelect: true,\n   pmTaggingEnabled: Ember.computed.alias(\"site.can_tag_pms\"),\n   tagId: null,"
    },
    {
      "sha": "e0b31bd17273f72c73a1e507312d70217d12270f",
      "filename": "app/assets/javascripts/discourse/controllers/user.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/controllers/user.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/user.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -53,7 +53,7 @@ export default Ember.Controller.extend(CanCheckEmails, {\n     return !suspended || isStaff;\n   },\n \n-  linkWebsite: Em.computed.not(\"model.isBasic\"),\n+  linkWebsite: Ember.computed.not(\"model.isBasic\"),\n \n   @computed(\"model.trust_level\")\n   removeNoFollow(trustLevel) {"
    },
    {
      "sha": "3b62c82170dfb605bc1bf13248345d2d7db54ab1",
      "filename": "app/assets/javascripts/discourse/helpers/category-link.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/helpers/category-link.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/helpers/category-link.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/helpers/category-link.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -2,7 +2,7 @@ import { registerUnbound } from \"discourse-common/lib/helpers\";\n import { isRTL } from \"discourse/lib/text-direction\";\n import { iconHTML } from \"discourse-common/lib/icon-library\";\n \n-var get = Em.get,\n+var get = Ember.get,\n   escapeExpression = Handlebars.Utils.escapeExpression;\n \n let _renderer = defaultCategoryLinkRenderer;"
    },
    {
      "sha": "ff09e4e2fcd6d594ba5e9d37bd2c925d9fa46f0d",
      "filename": "app/assets/javascripts/discourse/helpers/user-avatar.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/helpers/user-avatar.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/helpers/user-avatar.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/helpers/user-avatar.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -30,9 +30,9 @@ function renderAvatar(user, options) {\n   options = options || {};\n \n   if (user) {\n-    const name = Em.get(user, options.namePath || \"name\");\n-    const username = Em.get(user, options.usernamePath || \"username\");\n-    const avatarTemplate = Em.get(\n+    const name = Ember.get(user, options.namePath || \"name\");\n+    const username = Ember.get(user, options.usernamePath || \"username\");\n+    const avatarTemplate = Ember.get(\n       user,\n       options.avatarTemplatePath || \"avatar_template\"\n     );\n@@ -46,11 +46,11 @@ function renderAvatar(user, options) {\n     let title = options.title;\n     if (!title && !options.ignoreTitle) {\n       // first try to get a title\n-      title = Em.get(user, \"title\");\n+      title = Ember.get(user, \"title\");\n       // if there was no title provided\n       if (!title) {\n         // try to retrieve a description\n-        const description = Em.get(user, \"description\");\n+        const description = Ember.get(user, \"description\");\n         // if a description has been provided\n         if (description && description.length > 0) {\n           // preprend the username before the description\n@@ -61,7 +61,7 @@ function renderAvatar(user, options) {\n \n     return avatarImg({\n       size: options.imageSize,\n-      extraClasses: Em.get(user, \"extras\") || options.extraClasses,\n+      extraClasses: Ember.get(user, \"extras\") || options.extraClasses,\n       title: title || displayName,\n       avatarTemplate: avatarTemplate\n     });"
    },
    {
      "sha": "c8b422c93780715d7e1fdbf219e7fb0199a0868d",
      "filename": "app/assets/javascripts/discourse/initializers/banner.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/initializers/banner.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/initializers/banner.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/initializers/banner.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -5,7 +5,7 @@ export default {\n   after: \"message-bus\",\n \n   initialize(container) {\n-    const banner = Em.Object.create(PreloadStore.get(\"banner\")),\n+    const banner = Ember.Object.create(PreloadStore.get(\"banner\")),\n       site = container.lookup(\"site:main\");\n \n     site.set(\"banner\", banner);\n@@ -16,7 +16,7 @@ export default {\n     }\n \n     messageBus.subscribe(\"/site/banner\", function(ban) {\n-      site.set(\"banner\", Em.Object.create(ban));\n+      site.set(\"banner\", Ember.Object.create(ban));\n     });\n   }\n };"
    },
    {
      "sha": "651f23e130e87362068dfa9aaaed326dba70eb59",
      "filename": "app/assets/javascripts/discourse/initializers/subscribe-user-notifications.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/initializers/subscribe-user-notifications.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/initializers/subscribe-user-notifications.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/initializers/subscribe-user-notifications.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -82,7 +82,7 @@ export default {\n               }\n               oldNotifications.insertAt(\n                 insertPosition,\n-                Em.Object.create(lastNotification)\n+                Ember.Object.create(lastNotification)\n               );\n             }\n "
    },
    {
      "sha": "c70d80d51501a68c12b06f2470e5dc133038ebfc",
      "filename": "app/assets/javascripts/discourse/lib/computed.js.es6",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/computed.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/computed.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/lib/computed.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -8,7 +8,7 @@ import addonFmt from \"ember-addons/fmt\";\n   @return {Function} computedProperty function\n **/\n export function propertyEqual(p1, p2) {\n-  return Em.computed(function() {\n+  return Ember.computed(function() {\n     return this.get(p1) === this.get(p2);\n   }).property(p1, p2);\n }\n@@ -22,7 +22,7 @@ export function propertyEqual(p1, p2) {\n   @return {Function} computedProperty function\n **/\n export function propertyNotEqual(p1, p2) {\n-  return Em.computed(function() {\n+  return Ember.computed(function() {\n     return this.get(p1) !== this.get(p2);\n   }).property(p1, p2);\n }\n@@ -57,7 +57,7 @@ export function i18n(...args) {\n \n /**\n   Uses an Ember String `fmt` call to format a string. See:\n-  http://emberjs.com/api/classes/Em.String.html#method_fmt\n+  http://emberjs.com/api/classes/Ember.String.html#method_fmt\n \n   @method fmt\n   @params {String} properties* to format\n@@ -100,7 +100,7 @@ export function url(...args) {\n export function endWith() {\n   const args = Array.prototype.slice.call(arguments, 0);\n   const substring = args.pop();\n-  const computed = Em.computed(function() {\n+  const computed = Ember.computed(function() {\n     const self = this;\n     return _.all(\n       args.map(function(a) {\n@@ -124,7 +124,7 @@ export function endWith() {\n   @param {String} name of site setting\n **/\n export function setting(name) {\n-  return Em.computed(function() {\n+  return Ember.computed(function() {\n     return Discourse.SiteSettings[name];\n   }).property();\n }"
    },
    {
      "sha": "41b86bc30e2a582ac75e7c49e07ccfeac8de054b",
      "filename": "app/assets/javascripts/discourse/lib/desktop-notifications.js.es6",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/desktop-notifications.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/desktop-notifications.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/lib/desktop-notifications.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -26,14 +26,14 @@ function init(messageBus, appEvents) {\n   try {\n     keyValueStore.getItem(focusTrackerKey);\n   } catch (e) {\n-    Em.Logger.info(\n+    Ember.Logger.info(\n       \"Discourse desktop notifications are disabled - localStorage denied.\"\n     );\n     return;\n   }\n \n   if (!(\"Notification\" in window)) {\n-    Em.Logger.info(\n+    Ember.Logger.info(\n       \"Discourse desktop notifications are disabled - not supported by browser\"\n     );\n     return;\n@@ -47,7 +47,7 @@ function init(messageBus, appEvents) {\n       return;\n     }\n   } catch (e) {\n-    Em.Logger.warn(\n+    Ember.Logger.warn(\n       \"Unexpected error, Notification is defined on window but not a responding correctly \" +\n         e\n     );\n@@ -58,7 +58,7 @@ function init(messageBus, appEvents) {\n     // Preliminary checks passed, continue with setup\n     setupNotifications(appEvents);\n   } catch (e) {\n-    Em.Logger.error(e);\n+    Ember.Logger.error(e);\n   }\n }\n "
    },
    {
      "sha": "752776a93535610c27ba4ab9e2ab384311db3e41",
      "filename": "app/assets/javascripts/discourse/lib/search.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/search.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/search.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/lib/search.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -97,7 +97,7 @@ export function translateResults(results, opts) {\n     !results.categories.length\n   );\n \n-  return noResults ? null : Em.Object.create(results);\n+  return noResults ? null : Ember.Object.create(results);\n }\n \n export function searchForTerm(term, opts) {"
    },
    {
      "sha": "827ef44410fd29d266d490f2d143775bd5dbd1f6",
      "filename": "app/assets/javascripts/discourse/lib/url.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/url.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/lib/url.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/lib/url.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -176,7 +176,7 @@ const DiscourseURL = Ember.Object.extend({\n   routeTo(path, opts) {\n     opts = opts || {};\n \n-    if (Em.isEmpty(path)) {\n+    if (Ember.isEmpty(path)) {\n       return;\n     }\n "
    },
    {
      "sha": "671de5801b5e6f350269f2dfbc1661ccad566ae8",
      "filename": "app/assets/javascripts/discourse/mixins/badge-select-controller.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/badge-select-controller.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/badge-select-controller.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/mixins/badge-select-controller.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -10,7 +10,7 @@ export default Ember.Mixin.create({\n       return e.get(\"badge.name\");\n     });\n     items.unshiftObject(\n-      Em.Object.create({\n+      Ember.Object.create({\n         badge: Badge.create({ name: I18n.t(\"badges.none\") })\n       })\n     );\n@@ -36,5 +36,5 @@ export default Ember.Mixin.create({\n     return selectedUserBadge;\n   }.property(\"selectedUserBadgeId\"),\n \n-  disableSave: Em.computed.alias(\"saving\")\n+  disableSave: Ember.computed.alias(\"saving\")\n });"
    },
    {
      "sha": "8630c2970003587b2e5ac47dc09f2acda335558d",
      "filename": "app/assets/javascripts/discourse/mixins/buffered-content.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/buffered-content.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/buffered-content.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/mixins/buffered-content.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -2,7 +2,7 @@\n export function bufferedProperty(property) {\n   const mixin = {\n     buffered: function() {\n-      return Em.ObjectProxy.extend(BufferedProxy).create({\n+      return Ember.ObjectProxy.extend(BufferedProxy).create({\n         content: this.get(property)\n       });\n     }.property(property),"
    },
    {
      "sha": "8db10c5d22be14180317f0e7af22b3e445185b30",
      "filename": "app/assets/javascripts/discourse/mixins/bulk-topic-selection.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/bulk-topic-selection.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/bulk-topic-selection.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/mixins/bulk-topic-selection.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -4,7 +4,7 @@ export default Ember.Mixin.create({\n   bulkSelectEnabled: false,\n   selected: null,\n \n-  canBulkSelect: Em.computed.alias(\"currentUser.staff\"),\n+  canBulkSelect: Ember.computed.alias(\"currentUser.staff\"),\n \n   resetSelected: function() {\n     this.set(\"selected\", []);"
    },
    {
      "sha": "b9d1142fa20389607a770245006bb093ca58d0a2",
      "filename": "app/assets/javascripts/discourse/mixins/can-check-emails.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/can-check-emails.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/can-check-emails.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/mixins/can-check-emails.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -3,12 +3,12 @@ import { propertyEqual, setting } from \"discourse/lib/computed\";\n export default Ember.Mixin.create({\n   isCurrentUser: propertyEqual(\"model.id\", \"currentUser.id\"),\n   showEmailOnProfile: setting(\"show_email_on_profile\"),\n-  canStaffCheckEmails: Em.computed.and(\n+  canStaffCheckEmails: Ember.computed.and(\n     \"showEmailOnProfile\",\n     \"currentUser.staff\"\n   ),\n-  canAdminCheckEmails: Em.computed.alias(\"currentUser.admin\"),\n-  canCheckEmails: Em.computed.or(\n+  canAdminCheckEmails: Ember.computed.alias(\"currentUser.admin\"),\n+  canCheckEmails: Ember.computed.or(\n     \"isCurrentUser\",\n     \"canStaffCheckEmails\",\n     \"canAdminCheckEmails\""
    },
    {
      "sha": "cc485333151160cb2fc69d0582dfc57f05d21919",
      "filename": "app/assets/javascripts/discourse/mixins/upload.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/upload.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/mixins/upload.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/mixins/upload.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -4,12 +4,12 @@ import {\n } from \"discourse/lib/utilities\";\n import getUrl from \"discourse-common/lib/get-url\";\n \n-export default Em.Mixin.create({\n+export default Ember.Mixin.create({\n   uploading: false,\n   uploadProgress: 0,\n \n   uploadDone() {\n-    Em.warn(\"You should implement `uploadDone`\");\n+    Ember.warn(\"You should implement `uploadDone`\");\n   },\n \n   validateUploadedFilesOptions() {"
    },
    {
      "sha": "9ba6e6744b419d1a51730b402091940257ea0a8b",
      "filename": "app/assets/javascripts/discourse/models/archetype.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/archetype.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/archetype.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/archetype.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -2,7 +2,7 @@ import { propertyEqual } from \"discourse/lib/computed\";\n import RestModel from \"discourse/models/rest\";\n \n export default RestModel.extend({\n-  hasOptions: Em.computed.gt(\"options.length\", 0),\n+  hasOptions: Ember.computed.gt(\"options.length\", 0),\n   isDefault: propertyEqual(\"id\", \"site.default_archetype\"),\n-  notDefault: Em.computed.not(\"isDefault\")\n+  notDefault: Ember.computed.not(\"isDefault\")\n });"
    },
    {
      "sha": "0658bd631f664003a2fee86877b016843a42ef30",
      "filename": "app/assets/javascripts/discourse/models/badge.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/badge.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/badge.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/badge.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -3,7 +3,7 @@ import BadgeGrouping from \"discourse/models/badge-grouping\";\n import RestModel from \"discourse/models/rest\";\n \n const Badge = RestModel.extend({\n-  newBadge: Em.computed.none(\"id\"),\n+  newBadge: Ember.computed.none(\"id\"),\n \n   url: function() {\n     return Discourse.getURL(`/badges/${this.get(\"id\")}/${this.get(\"slug\")}`);"
    },
    {
      "sha": "c8531986d4050b83e4ce88b72e4151651e8c7f57",
      "filename": "app/assets/javascripts/discourse/models/category.js.es6",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/category.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/category.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/category.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -160,7 +160,7 @@ const Category = RestModel.extend({\n \n   @computed\n   permissions() {\n-    return Em.A([\n+    return Ember.A([\n       { group_name: \"everyone\", permission: PermissionType.create({ id: 1 }) },\n       { group_name: \"admins\", permission: PermissionType.create({ id: 2 }) },\n       { group_name: \"crap\", permission: PermissionType.create({ id: 3 }) }\n@@ -219,15 +219,15 @@ Category.reopenClass({\n   slugFor(category, separator = \"/\") {\n     if (!category) return \"\";\n \n-    const parentCategory = Em.get(category, \"parentCategory\");\n+    const parentCategory = Ember.get(category, \"parentCategory\");\n     let result = \"\";\n \n     if (parentCategory) {\n       result = Category.slugFor(parentCategory) + separator;\n     }\n \n-    const id = Em.get(category, \"id\"),\n-      slug = Em.get(category, \"slug\");\n+    const id = Ember.get(category, \"id\"),\n+      slug = Ember.get(category, \"slug\");\n \n     return !slug || slug.trim().length === 0\n       ? `${result}${id}-category`"
    },
    {
      "sha": "69a40d35f9e90d14f372b4afe05d0996c83ddb3d",
      "filename": "app/assets/javascripts/discourse/models/composer.js.es6",
      "status": "modified",
      "additions": 22,
      "deletions": 19,
      "changes": 41,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/composer.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -117,10 +117,10 @@ const Composer = RestModel.extend({\n       : null;\n   },\n \n-  creatingTopic: Em.computed.equal(\"action\", CREATE_TOPIC),\n-  creatingSharedDraft: Em.computed.equal(\"action\", CREATE_SHARED_DRAFT),\n-  creatingPrivateMessage: Em.computed.equal(\"action\", PRIVATE_MESSAGE),\n-  notCreatingPrivateMessage: Em.computed.not(\"creatingPrivateMessage\"),\n+  creatingTopic: Ember.computed.equal(\"action\", CREATE_TOPIC),\n+  creatingSharedDraft: Ember.computed.equal(\"action\", CREATE_SHARED_DRAFT),\n+  creatingPrivateMessage: Ember.computed.equal(\"action\", PRIVATE_MESSAGE),\n+  notCreatingPrivateMessage: Ember.computed.not(\"creatingPrivateMessage\"),\n \n   @computed(\"privateMessage\", \"archetype.hasOptions\")\n   showCategoryChooser(isPrivateMessage, hasOptions) {\n@@ -136,17 +136,17 @@ const Composer = RestModel.extend({\n     );\n   },\n \n-  topicFirstPost: Em.computed.or(\"creatingTopic\", \"editingFirstPost\"),\n+  topicFirstPost: Ember.computed.or(\"creatingTopic\", \"editingFirstPost\"),\n \n   @computed(\"action\")\n   editingPost: isEdit,\n \n-  replyingToTopic: Em.computed.equal(\"action\", REPLY),\n+  replyingToTopic: Ember.computed.equal(\"action\", REPLY),\n \n-  viewOpen: Em.computed.equal(\"composeState\", OPEN),\n-  viewDraft: Em.computed.equal(\"composeState\", DRAFT),\n-  viewFullscreen: Em.computed.equal(\"composeState\", FULLSCREEN),\n-  viewOpenOrFullscreen: Em.computed.or(\"viewOpen\", \"viewFullscreen\"),\n+  viewOpen: Ember.computed.equal(\"composeState\", OPEN),\n+  viewDraft: Ember.computed.equal(\"composeState\", DRAFT),\n+  viewFullscreen: Ember.computed.equal(\"composeState\", FULLSCREEN),\n+  viewOpenOrFullscreen: Ember.computed.or(\"viewOpen\", \"viewFullscreen\"),\n \n   composeStateChanged: function() {\n     let oldOpen = this.get(\"composerOpened\"),\n@@ -186,7 +186,7 @@ const Composer = RestModel.extend({\n   }.property(\"archetypeId\"),\n \n   archetypeChanged: function() {\n-    return this.set(\"metaData\", Em.Object.create());\n+    return this.set(\"metaData\", Ember.Object.create());\n   }.observes(\"archetype\"),\n \n   // view detected user is typing\n@@ -199,16 +199,19 @@ const Composer = RestModel.extend({\n     { leading: false, trailing: true }\n   ),\n \n-  editingFirstPost: Em.computed.and(\"editingPost\", \"post.firstPost\"),\n+  editingFirstPost: Ember.computed.and(\"editingPost\", \"post.firstPost\"),\n \n-  canEditTitle: Em.computed.or(\n+  canEditTitle: Ember.computed.or(\n     \"creatingTopic\",\n     \"creatingPrivateMessage\",\n     \"editingFirstPost\",\n     \"creatingSharedDraft\"\n   ),\n \n-  canCategorize: Em.computed.and(\"canEditTitle\", \"notCreatingPrivateMessage\"),\n+  canCategorize: Ember.computed.and(\n+    \"canEditTitle\",\n+    \"notCreatingPrivateMessage\"\n+  ),\n \n   @computed(\"canEditTitle\", \"creatingPrivateMessage\", \"categoryId\")\n   canEditTopicFeaturedLink(canEditTitle, creatingPrivateMessage, categoryId) {\n@@ -402,7 +405,7 @@ const Composer = RestModel.extend({\n \n   hasMetaData: function() {\n     const metaData = this.get(\"metaData\");\n-    return metaData ? Em.isEmpty(Em.keys(this.get(\"metaData\"))) : false;\n+    return metaData ? Ember.isEmpty(Ember.keys(this.get(\"metaData\"))) : false;\n   }.property(\"metaData\"),\n \n   /**\n@@ -601,7 +604,7 @@ const Composer = RestModel.extend({\n     if (!opts) opts = {};\n     this.set(\"loading\", false);\n \n-    const replyBlank = Em.isEmpty(this.get(\"reply\"));\n+    const replyBlank = Ember.isEmpty(this.get(\"reply\"));\n \n     const composer = this;\n     if (\n@@ -647,7 +650,7 @@ const Composer = RestModel.extend({\n \n     this.setProperties({\n       archetypeId: opts.archetypeId || this.site.get(\"default_archetype\"),\n-      metaData: opts.metaData ? Em.Object.create(opts.metaData) : null,\n+      metaData: opts.metaData ? Ember.Object.create(opts.metaData) : null,\n       reply: opts.reply || this.get(\"reply\") || \"\"\n     });\n \n@@ -990,7 +993,7 @@ const Composer = RestModel.extend({\n     });\n \n     if (this._clearingStatus) {\n-      Em.run.cancel(this._clearingStatus);\n+      Ember.run.cancel(this._clearingStatus);\n       this._clearingStatus = null;\n     }\n \n@@ -1041,7 +1044,7 @@ const Composer = RestModel.extend({\n     const self = this;\n \n     if (draftStatus && !this._clearingStatus) {\n-      this._clearingStatus = Em.run.later(\n+      this._clearingStatus = Ember.run.later(\n         this,\n         function() {\n           self.set(\"draftStatus\", null);"
    },
    {
      "sha": "c000b109a58d6ee97db2a9a78aacc0d57c9d0602",
      "filename": "app/assets/javascripts/discourse/models/group.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/group.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/group.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/group.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -20,7 +20,7 @@ const Group = RestModel.extend({\n \n   @computed(\"automatic_membership_email_domains\")\n   emailDomains(value) {\n-    return Em.isEmpty(value) ? \"\" : value;\n+    return Ember.isEmpty(value) ? \"\" : value;\n   },\n \n   @computed(\"automatic\")\n@@ -37,7 +37,7 @@ const Group = RestModel.extend({\n   },\n \n   findMembers(params) {\n-    if (Em.isEmpty(this.get(\"name\"))) {\n+    if (Ember.isEmpty(this.get(\"name\"))) {\n       return;\n     }\n \n@@ -257,7 +257,7 @@ const Group = RestModel.extend({\n           p.user = User.create(p.user);\n           p.topic = Topic.create(p.topic);\n           p.category = Category.findById(p.category_id);\n-          return Em.Object.create(p);\n+          return Ember.Object.create(p);\n         });\n       }\n     );"
    },
    {
      "sha": "6775f9d10ad4b8fe424cbf5dddf437273f652312",
      "filename": "app/assets/javascripts/discourse/models/invite.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/invite.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/invite.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/invite.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -35,14 +35,14 @@ Invite.reopenClass({\n \n   findInvitedBy(user, filter, search, offset) {\n     if (!user) {\n-      return Em.RSVP.resolve();\n+      return Ember.RSVP.resolve();\n     }\n \n     var data = {};\n-    if (!Em.isNone(filter)) {\n+    if (!Ember.isNone(filter)) {\n       data.filter = filter;\n     }\n-    if (!Em.isNone(search)) {\n+    if (!Ember.isNone(search)) {\n       data.search = search;\n     }\n     data.offset = offset || 0;\n@@ -54,17 +54,17 @@ Invite.reopenClass({\n         return Invite.create(i);\n       });\n \n-      return Em.Object.create(result);\n+      return Ember.Object.create(result);\n     });\n   },\n \n   findInvitedCount(user) {\n     if (!user) {\n-      return Em.RSVP.resolve();\n+      return Ember.RSVP.resolve();\n     }\n     return ajax(\n       userPath(user.get(\"username_lower\") + \"/invited_count.json\")\n-    ).then(result => Em.Object.create(result.counts));\n+    ).then(result => Ember.Object.create(result.counts));\n   },\n \n   reinviteAll() {"
    },
    {
      "sha": "fc83f6282a5617b5820eea1e937bb417132b8489",
      "filename": "app/assets/javascripts/discourse/models/post-action-type.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/post-action-type.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/post-action-type.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/post-action-type.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -3,5 +3,5 @@ import RestModel from \"discourse/models/rest\";\n export const MAX_MESSAGE_LENGTH = 500;\n \n export default RestModel.extend({\n-  notCustomFlag: Em.computed.not(\"is_custom_flag\")\n+  notCustomFlag: Ember.computed.not(\"is_custom_flag\")\n });"
    },
    {
      "sha": "8da229cfb273516a56b9cd6c5d8fbc431fb24713",
      "filename": "app/assets/javascripts/discourse/models/post.js.es6",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/post.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/post.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/post.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -28,13 +28,13 @@ const Post = RestModel.extend({\n     }\n   }.property(\"url\"),\n \n-  new_user: Em.computed.equal(\"trust_level\", 0),\n-  firstPost: Em.computed.equal(\"post_number\", 1),\n+  new_user: Ember.computed.equal(\"trust_level\", 0),\n+  firstPost: Ember.computed.equal(\"post_number\", 1),\n \n   // Posts can show up as deleted if the topic is deleted\n-  deletedViaTopic: Em.computed.and(\"firstPost\", \"topic.deleted_at\"),\n-  deleted: Em.computed.or(\"deleted_at\", \"deletedViaTopic\"),\n-  notDeleted: Em.computed.not(\"deleted\"),\n+  deletedViaTopic: Ember.computed.and(\"firstPost\", \"topic.deleted_at\"),\n+  deleted: Ember.computed.or(\"deleted_at\", \"deletedViaTopic\"),\n+  notDeleted: Ember.computed.not(\"deleted\"),\n \n   showName: function() {\n     const name = this.get(\"name\");\n@@ -226,7 +226,7 @@ const Post = RestModel.extend({\n       });\n     }\n \n-    return promise || Em.RSVP.Promise.resolve();\n+    return promise || Ember.RSVP.Promise.resolve();\n   },\n \n   /**\n@@ -280,7 +280,7 @@ const Post = RestModel.extend({\n         if (key === \"reply_to_user\" && value && oldValue) {\n           skip =\n             value.username === oldValue.username ||\n-            Em.get(value, \"username\") === Em.get(oldValue, \"username\");\n+            Ember.get(value, \"username\") === Ember.get(oldValue, \"username\");\n         }\n \n         if (!skip) {\n@@ -347,7 +347,7 @@ const Post = RestModel.extend({\n Post.reopenClass({\n   munge(json) {\n     if (json.actions_summary) {\n-      const lookup = Em.Object.create();\n+      const lookup = Ember.Object.create();\n \n       // this area should be optimized, it is creating way too many objects per post\n       json.actions_summary = json.actions_summary.map(function(a) {"
    },
    {
      "sha": "82733e89e6c23b00b4d810c5213be3965836cbb9",
      "filename": "app/assets/javascripts/discourse/models/site.js.es6",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/site.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/site.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/site.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -6,7 +6,7 @@ import RestModel from \"discourse/models/rest\";\n import PreloadStore from \"preload-store\";\n \n const Site = RestModel.extend({\n-  isReadOnly: Em.computed.alias(\"is_readonly\"),\n+  isReadOnly: Ember.computed.alias(\"is_readonly\"),\n \n   @computed(\"notification_types\")\n   notificationLookup(notificationTypes) {\n@@ -87,7 +87,7 @@ const Site = RestModel.extend({\n \n   updateCategory(newCategory) {\n     const categories = this.get(\"categories\");\n-    const categoryId = Em.get(newCategory, \"id\");\n+    const categoryId = Ember.get(newCategory, \"id\");\n     const existingCategory = categories.findBy(\"id\", categoryId);\n \n     // Don't update null permissions\n@@ -159,7 +159,7 @@ Site.reopenClass(Singleton, {\n     }\n \n     if (result.post_action_types) {\n-      result.postActionByIdLookup = Em.Object.create();\n+      result.postActionByIdLookup = Ember.Object.create();\n       result.post_action_types = result.post_action_types.map(p => {\n         const actionType = PostActionType.create(p);\n         result.postActionByIdLookup.set(\"action\" + p.id, actionType);\n@@ -168,7 +168,7 @@ Site.reopenClass(Singleton, {\n     }\n \n     if (result.topic_flag_types) {\n-      result.topicFlagByIdLookup = Em.Object.create();\n+      result.topicFlagByIdLookup = Ember.Object.create();\n       result.topic_flag_types = result.topic_flag_types.map(p => {\n         const actionType = PostActionType.create(p);\n         result.topicFlagByIdLookup.set(\"action\" + p.id, actionType);"
    },
    {
      "sha": "48964766ec21502e98a5515dc3a67876fbd42ead",
      "filename": "app/assets/javascripts/discourse/models/topic-list.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic-list.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic-list.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/topic-list.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -20,7 +20,7 @@ function displayCategoryInList(site, category) {\n }\n \n const TopicList = RestModel.extend({\n-  canLoadMore: Em.computed.notEmpty(\"more_topics_url\"),\n+  canLoadMore: Ember.computed.notEmpty(\"more_topics_url\"),\n \n   forEachNew(topics, callback) {\n     const topicIds = [];"
    },
    {
      "sha": "e2361e23d46c8b933c36ab2b16acb2dcaba7da6f",
      "filename": "app/assets/javascripts/discourse/models/topic-tracking-state.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic-tracking-state.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic-tracking-state.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/topic-tracking-state.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -218,7 +218,7 @@ const TopicTrackingState = Discourse.Model.extend({\n \n   // If we have a cached topic list, we can update it from our tracking information.\n   updateTopics(topics) {\n-    if (Em.isEmpty(topics)) {\n+    if (Ember.isEmpty(topics)) {\n       return;\n     }\n \n@@ -392,8 +392,8 @@ const TopicTrackingState = Discourse.Model.extend({\n       );\n     }\n \n-    let categoryId = category ? Em.get(category, \"id\") : null;\n-    let categoryName = category ? Em.get(category, \"name\") : null;\n+    let categoryId = category ? Ember.get(category, \"id\") : null;\n+    let categoryName = category ? Ember.get(category, \"name\") : null;\n \n     if (name === \"new\") {\n       return this.countNew(categoryId);"
    },
    {
      "sha": "18e1ede1c10cecf8cd9e0c1a482344736dddc6c4",
      "filename": "app/assets/javascripts/discourse/models/topic.js.es6",
      "status": "modified",
      "additions": 8,
      "deletions": 8,
      "changes": 16,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/topic.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/topic.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -163,8 +163,8 @@ const Topic = RestModel.extend({\n     });\n   }.property(),\n \n-  invisible: Em.computed.not(\"visible\"),\n-  deleted: Em.computed.notEmpty(\"deleted_at\"),\n+  invisible: Ember.computed.not(\"visible\"),\n+  deleted: Ember.computed.notEmpty(\"deleted_at\"),\n \n   searchContext: function() {\n     return { type: \"topic\", id: this.get(\"id\") };\n@@ -297,8 +297,8 @@ const Topic = RestModel.extend({\n     );\n   }.property(\"archetype\"),\n \n-  isPrivateMessage: Em.computed.equal(\"archetype\", \"private_message\"),\n-  isBanner: Em.computed.equal(\"archetype\", \"banner\"),\n+  isPrivateMessage: Ember.computed.equal(\"archetype\", \"private_message\"),\n+  isBanner: Ember.computed.equal(\"archetype\", \"banner\"),\n \n   toggleStatus(property) {\n     this.toggleProperty(property);\n@@ -344,7 +344,7 @@ const Topic = RestModel.extend({\n     this.set(\"bookmarking\", true);\n \n     const stream = this.get(\"postStream\");\n-    const posts = Em.get(stream, \"posts\");\n+    const posts = Ember.get(stream, \"posts\");\n     const firstPost =\n       posts && posts[0] && posts[0].get(\"post_number\") === 1 && posts[0];\n     const bookmark = !this.get(\"bookmarked\");\n@@ -512,15 +512,15 @@ const Topic = RestModel.extend({\n     return emojiUnescape(excerpt);\n   },\n \n-  hasExcerpt: Em.computed.notEmpty(\"excerpt\"),\n+  hasExcerpt: Ember.computed.notEmpty(\"excerpt\"),\n \n   excerptTruncated: function() {\n     const e = this.get(\"excerpt\");\n     return e && e.substr(e.length - 8, 8) === \"&hellip;\";\n   }.property(\"excerpt\"),\n \n   readLastPost: propertyEqual(\"last_read_post_number\", \"highest_post_number\"),\n-  canClearPin: Em.computed.and(\"pinned\", \"readLastPost\"),\n+  canClearPin: Ember.computed.and(\"pinned\", \"readLastPost\"),\n \n   archiveMessage() {\n     this.set(\"archiving\", true);\n@@ -598,7 +598,7 @@ Topic.reopenClass({\n \n   createActionSummary(result) {\n     if (result.actions_summary) {\n-      const lookup = Em.Object.create();\n+      const lookup = Ember.Object.create();\n       result.actions_summary = result.actions_summary.map(function(a) {\n         a.post = result;\n         a.actionType = Discourse.Site.current().postActionTypeById(a.id);"
    },
    {
      "sha": "4bb710d6630af410d91cef349d85b72236408647",
      "filename": "app/assets/javascripts/discourse/models/user-action.js.es6",
      "status": "modified",
      "additions": 10,
      "deletions": 10,
      "changes": 20,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-action.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-action.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/user-action.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -118,22 +118,22 @@ const UserAction = RestModel.extend({\n     );\n   },\n \n-  replyType: Em.computed.equal(\"action_type\", UserActionTypes.replies),\n-  postType: Em.computed.equal(\"action_type\", UserActionTypes.posts),\n-  topicType: Em.computed.equal(\"action_type\", UserActionTypes.topics),\n-  bookmarkType: Em.computed.equal(\"action_type\", UserActionTypes.bookmarks),\n-  messageSentType: Em.computed.equal(\n+  replyType: Ember.computed.equal(\"action_type\", UserActionTypes.replies),\n+  postType: Ember.computed.equal(\"action_type\", UserActionTypes.posts),\n+  topicType: Ember.computed.equal(\"action_type\", UserActionTypes.topics),\n+  bookmarkType: Ember.computed.equal(\"action_type\", UserActionTypes.bookmarks),\n+  messageSentType: Ember.computed.equal(\n     \"action_type\",\n     UserActionTypes.messages_sent\n   ),\n-  messageReceivedType: Em.computed.equal(\n+  messageReceivedType: Ember.computed.equal(\n     \"action_type\",\n     UserActionTypes.messages_received\n   ),\n-  mentionType: Em.computed.equal(\"action_type\", UserActionTypes.mentions),\n-  isPM: Em.computed.or(\"messageSentType\", \"messageReceivedType\"),\n-  postReplyType: Em.computed.or(\"postType\", \"replyType\"),\n-  removableBookmark: Em.computed.and(\"bookmarkType\", \"sameUser\"),\n+  mentionType: Ember.computed.equal(\"action_type\", UserActionTypes.mentions),\n+  isPM: Ember.computed.or(\"messageSentType\", \"messageReceivedType\"),\n+  postReplyType: Ember.computed.or(\"postType\", \"replyType\"),\n+  removableBookmark: Ember.computed.and(\"bookmarkType\", \"sameUser\"),\n \n   addChild(action) {\n     let groups = this.get(\"childGroups\");"
    },
    {
      "sha": "d746efc2b805914b49471761df1f2c91b4da1658",
      "filename": "app/assets/javascripts/discourse/models/user-badge.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-badge.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-badge.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/user-badge.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -94,7 +94,7 @@ UserBadge.reopenClass({\n   **/\n   findByUsername: function(username, options) {\n     if (!username) {\n-      return Em.RSVP.resolve([]);\n+      return Ember.RSVP.resolve([]);\n     }\n     var url = \"/user-badges/\" + username + \".json\";\n     if (options && options.grouped) {"
    },
    {
      "sha": "0b18349d578b38813d0f1682fc93c577fb5e62ac",
      "filename": "app/assets/javascripts/discourse/models/user-drafts-stream.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-drafts-stream.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-drafts-stream.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/user-drafts-stream.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -70,7 +70,7 @@ export default RestModel.extend({\n           this.set(\"noContentHelp\", result.no_results_help);\n         }\n         if (result && result.drafts) {\n-          const copy = Em.A();\n+          const copy = Ember.A();\n           result.drafts.forEach(draft => {\n             let draftData = JSON.parse(draft.data);\n             draft.post_number = draftData.postId || null;"
    },
    {
      "sha": "3f1650c30022f471d06a8fbc90668db0ed030ab7",
      "filename": "app/assets/javascripts/discourse/models/user-stream.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-stream.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user-stream.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/user-stream.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -93,7 +93,7 @@ export default RestModel.extend({\n           self.set(\"noContentHelp\", result.no_results_help);\n         }\n         if (result && result.user_actions) {\n-          const copy = Em.A();\n+          const copy = Ember.A();\n           result.user_actions.forEach(function(action) {\n             action.title = emojiUnescape(\n               Handlebars.Utils.escapeExpression(action.title)"
    },
    {
      "sha": "9b7d28e1ac425df6afda9a6318784f77ff73e536",
      "filename": "app/assets/javascripts/discourse/models/user.js.es6",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/models/user.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/user.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -26,9 +26,9 @@ export const SECOND_FACTOR_METHODS = { TOTP: 1, BACKUP_CODE: 2 };\n const isForever = dt => moment().diff(dt, \"years\") < -500;\n \n const User = RestModel.extend({\n-  hasPMs: Em.computed.gt(\"private_messages_stats.all\", 0),\n-  hasStartedPMs: Em.computed.gt(\"private_messages_stats.mine\", 0),\n-  hasUnreadPMs: Em.computed.gt(\"private_messages_stats.unread\", 0),\n+  hasPMs: Ember.computed.gt(\"private_messages_stats.all\", 0),\n+  hasStartedPMs: Ember.computed.gt(\"private_messages_stats.mine\", 0),\n+  hasUnreadPMs: Ember.computed.gt(\"private_messages_stats.unread\", 0),\n \n   redirected_to_top: {\n     reason: null\n@@ -54,7 +54,7 @@ const User = RestModel.extend({\n     return UserDraftsStream.create({ user: this });\n   },\n \n-  staff: Em.computed.or(\"admin\", \"moderator\"),\n+  staff: Ember.computed.or(\"admin\", \"moderator\"),\n \n   destroySession() {\n     return ajax(`/session/${this.get(\"username\")}`, { type: \"DELETE\" });\n@@ -80,7 +80,7 @@ const User = RestModel.extend({\n   @computed(\"profile_background\")\n   profileBackground(bgUrl) {\n     if (\n-      Em.isEmpty(bgUrl) ||\n+      Ember.isEmpty(bgUrl) ||\n       !Discourse.SiteSettings.allow_profile_backgrounds\n     ) {\n       return \"\".htmlSafe();\n@@ -103,7 +103,7 @@ const User = RestModel.extend({\n     const keys = this.get(\"user_api_keys\");\n     if (keys) {\n       return keys.map(raw => {\n-        let obj = Em.Object.create(raw);\n+        let obj = Ember.Object.create(raw);\n \n         obj.revoke = () => {\n           this.revokeApiKey(obj);\n@@ -190,10 +190,10 @@ const User = RestModel.extend({\n     );\n   },\n \n-  isBasic: Em.computed.equal(\"trust_level\", 0),\n-  isLeader: Em.computed.equal(\"trust_level\", 3),\n-  isElder: Em.computed.equal(\"trust_level\", 4),\n-  canManageTopic: Em.computed.or(\"staff\", \"isElder\"),\n+  isBasic: Ember.computed.equal(\"trust_level\", 0),\n+  isLeader: Ember.computed.equal(\"trust_level\", 3),\n+  isElder: Ember.computed.equal(\"trust_level\", 4),\n+  canManageTopic: Ember.computed.or(\"staff\", \"isElder\"),\n \n   @computed(\"previous_visit_at\")\n   previousVisitAt(previous_visit_at) {\n@@ -337,7 +337,7 @@ const User = RestModel.extend({\n     })\n       .then(result => {\n         this.set(\"bio_excerpt\", result.user.bio_excerpt);\n-        const userProps = Em.getProperties(\n+        const userProps = Ember.getProperties(\n           this.get(\"user_option\"),\n           \"enable_quoting\",\n           \"external_links_in_new_tab\",\n@@ -467,7 +467,7 @@ const User = RestModel.extend({\n     return PreloadStore.getAndRemove(`user_${user.get(\"username\")}`, () => {\n       return ajax(userPath(`${user.get(\"username\")}.json`), { data: options });\n     }).then(json => {\n-      if (!Em.isEmpty(json.user.stats)) {\n+      if (!Ember.isEmpty(json.user.stats)) {\n         json.user.stats = Discourse.User.groupStats(\n           json.user.stats.map(s => {\n             if (s.count) s.count = parseInt(s.count, 10);\n@@ -476,7 +476,7 @@ const User = RestModel.extend({\n         );\n       }\n \n-      if (!Em.isEmpty(json.user.groups)) {\n+      if (!Ember.isEmpty(json.user.groups)) {\n         const groups = [];\n \n         for (let i = 0; i < json.user.groups.length; i++) {\n@@ -492,7 +492,7 @@ const User = RestModel.extend({\n         json.user.invited_by = Discourse.User.create(json.user.invited_by);\n       }\n \n-      if (!Em.isEmpty(json.user.featured_user_badge_ids)) {\n+      if (!Ember.isEmpty(json.user.featured_user_badge_ids)) {\n         const userBadgesMap = {};\n         UserBadge.createFromJson(json).forEach(userBadge => {\n           userBadgesMap[userBadge.get(\"id\")] = userBadge;\n@@ -750,7 +750,7 @@ User.reopenClass(Singleton, {\n       responses.set(\"count\", responses.get(\"count\") + stat.get(\"count\"));\n     });\n \n-    const result = Em.A();\n+    const result = Ember.A();\n     result.pushObjects(stats.rejectBy(\"isResponse\"));\n \n     let insertAt = 0;"
    },
    {
      "sha": "451ceceec68f325547579096c07d5b95290a216a",
      "filename": "app/assets/javascripts/discourse/routes/application.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/application.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/application.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/routes/application.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -207,7 +207,7 @@ const ApplicationRoute = Discourse.Route.extend(OpenComposer, {\n \n   activate() {\n     this._super();\n-    Em.run.next(function() {\n+    Ember.run.next(function() {\n       // Support for callbacks once the application has activated\n       ApplicationRoute.trigger(\"activate\");\n     });"
    },
    {
      "sha": "7f2d10d24c7cf415958c98fa32779c9521925e63",
      "filename": "app/assets/javascripts/discourse/routes/build-category-route.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/build-category-route.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/build-category-route.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/routes/build-category-route.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -49,7 +49,7 @@ export default (filterArg, params) => {\n       }\n \n       this._setupNavigation(model.category);\n-      return Em.RSVP.all([\n+      return Ember.RSVP.all([\n         this._createSubcategoryList(model.category),\n         this._retrieveTopicList(model.category, transition)\n       ]);\n@@ -77,7 +77,7 @@ export default (filterArg, params) => {\n     _createSubcategoryList(category) {\n       this._categoryList = null;\n       if (\n-        Em.isNone(category.get(\"parentCategory\")) &&\n+        Ember.isNone(category.get(\"parentCategory\")) &&\n         category.get(\"show_subcategory_list\")\n       ) {\n         return CategoryList.listForParent(this.store, category).then(\n@@ -86,7 +86,7 @@ export default (filterArg, params) => {\n       }\n \n       // If we're not loading a subcategory list just resolve\n-      return Em.RSVP.resolve();\n+      return Ember.RSVP.resolve();\n     },\n \n     _retrieveTopicList(category, transition) {"
    },
    {
      "sha": "e1b36bfebaa16a124f629ef4bd6be7ac4612cc6d",
      "filename": "app/assets/javascripts/discourse/routes/topic.js.es6",
      "status": "modified",
      "additions": 7,
      "deletions": 7,
      "changes": 14,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/topic.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/topic.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/routes/topic.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -148,9 +148,9 @@ const TopicRoute = Discourse.Route.extend({\n           postUrl += \"/\" + currentPost;\n         }\n \n-        Em.run.cancel(scheduledReplace);\n+        Ember.run.cancel(scheduledReplace);\n         lastScrollPos = parseInt($(document).scrollTop(), 10);\n-        scheduledReplace = Em.run.later(\n+        scheduledReplace = Ember.run.later(\n           this,\n           \"_replaceUnlessScrolling\",\n           postUrl,\n@@ -166,7 +166,7 @@ const TopicRoute = Discourse.Route.extend({\n \n     willTransition() {\n       this._super();\n-      Em.run.cancel(scheduledReplace);\n+      Ember.run.cancel(scheduledReplace);\n       isTransitioning = true;\n       return true;\n     }\n@@ -181,7 +181,7 @@ const TopicRoute = Discourse.Route.extend({\n       return;\n     }\n     lastScrollPos = currentPos;\n-    scheduledReplace = Em.run.later(\n+    scheduledReplace = Ember.run.later(\n       this,\n       \"_replaceUnlessScrolling\",\n       url,\n@@ -191,13 +191,13 @@ const TopicRoute = Discourse.Route.extend({\n \n   setupParams(topic, params) {\n     const postStream = topic.get(\"postStream\");\n-    postStream.set(\"summary\", Em.get(params, \"filter\") === \"summary\");\n+    postStream.set(\"summary\", Ember.get(params, \"filter\") === \"summary\");\n \n-    const usernames = Em.get(params, \"username_filters\"),\n+    const usernames = Ember.get(params, \"username_filters\"),\n       userFilters = postStream.get(\"userFilters\");\n \n     userFilters.clear();\n-    if (!Em.isEmpty(usernames) && usernames !== \"undefined\") {\n+    if (!Ember.isEmpty(usernames) && usernames !== \"undefined\") {\n       userFilters.addObjects(usernames.split(\",\"));\n     }\n "
    },
    {
      "sha": "4757ccff070ee163b062acc06e43810f7dd22d98",
      "filename": "app/assets/javascripts/discourse/routes/user.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/user.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/discourse/routes/user.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/routes/user.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -59,7 +59,7 @@ export default Discourse.Route.extend({\n \n   serialize(model) {\n     if (!model) return {};\n-    return { username: (Em.get(model, \"username\") || \"\").toLowerCase() };\n+    return { username: (Ember.get(model, \"username\") || \"\").toLowerCase() };\n   },\n \n   setupController(controller, user) {"
    },
    {
      "sha": "74991a7561ebce395f294ad19be23dc214bdb289",
      "filename": "app/assets/javascripts/locales/i18n.js",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/locales/i18n.js",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/locales/i18n.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/locales/i18n.js?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -307,7 +307,7 @@ I18n.enableVerboseLocalization = function() {\n       if (!_.isEmpty(value)) {\n         message += \", parameters: \" + JSON.stringify(value);\n       }\n-      Em.Logger.info(message);\n+      Ember.Logger.info(message);\n     }\n     return t.apply(I18n, [scope, value]) + \" (#\" + current + \")\";\n   };"
    },
    {
      "sha": "b096afd4c10399194d9818cbf24d0deffc46e503",
      "filename": "app/assets/javascripts/preload-store.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/preload-store.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/app/assets/javascripts/preload-store.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/preload-store.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -19,7 +19,7 @@ export default {\n   **/\n   getAndRemove(key, finder) {\n     if (this.data[key]) {\n-      var promise = Em.RSVP.resolve(this.data[key]);\n+      var promise = Ember.RSVP.resolve(this.data[key]);\n       delete this.data[key];\n       return promise;\n     }"
    },
    {
      "sha": "edd99f16f9cb2204af426cdf0220fbe6d07624a0",
      "filename": "plugins/poll/assets/javascripts/initializers/extend-for-poll.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/plugins/poll/assets/javascripts/initializers/extend-for-poll.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/plugins/poll/assets/javascripts/initializers/extend-for-poll.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/poll/assets/javascripts/initializers/extend-for-poll.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -44,7 +44,7 @@ function initializePolls(api) {\n           if (existing) {\n             this._polls[p.name].setProperties(p);\n           } else {\n-            this._polls[p.name] = Em.Object.create(p);\n+            this._polls[p.name] = Ember.Object.create(p);\n           }\n         });\n         this.set(\"pollsObject\", this._polls);"
    },
    {
      "sha": "ed5044edf1102563248e874ed936486441b13d7b",
      "filename": "test/javascripts/controllers/preferences-account-test.js.es6",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/controllers/preferences-account-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/controllers/preferences-account-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/controllers/preferences-account-test.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -5,10 +5,10 @@ QUnit.test(\"updating of associated accounts\", function(assert) {\n     siteSettings: {\n       enable_google_oauth2_logins: true\n     },\n-    model: Em.Object.create({\n+    model: Ember.Object.create({\n       second_factor_enabled: true\n     }),\n-    site: Em.Object.create({\n+    site: Ember.Object.create({\n       isMobileDevice: false\n     })\n   });"
    },
    {
      "sha": "6b3b8811193b159f2f04ce6ab300ca1e8529c21b",
      "filename": "test/javascripts/lib/computed-test.js.es6",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/lib/computed-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/lib/computed-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/lib/computed-test.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -20,7 +20,7 @@ QUnit.module(\"lib:computed\", {\n });\n \n QUnit.test(\"setting\", assert => {\n-  var t = Em.Object.extend({\n+  var t = Ember.Object.extend({\n     vehicle: setting(\"vehicle\"),\n     missingProp: setting(\"madeUpThing\")\n   }).create();\n@@ -38,7 +38,7 @@ QUnit.test(\"setting\", assert => {\n });\n \n QUnit.test(\"propertyEqual\", assert => {\n-  var t = Em.Object.extend({\n+  var t = Ember.Object.extend({\n     same: propertyEqual(\"cookies\", \"biscuits\")\n   }).create({\n     cookies: 10,\n@@ -51,7 +51,7 @@ QUnit.test(\"propertyEqual\", assert => {\n });\n \n QUnit.test(\"propertyNotEqual\", assert => {\n-  var t = Em.Object.extend({\n+  var t = Ember.Object.extend({\n     diff: propertyNotEqual(\"cookies\", \"biscuits\")\n   }).create({\n     cookies: 10,\n@@ -64,7 +64,7 @@ QUnit.test(\"propertyNotEqual\", assert => {\n });\n \n QUnit.test(\"fmt\", assert => {\n-  var t = Em.Object.extend({\n+  var t = Ember.Object.extend({\n     exclaimyUsername: fmt(\"username\", \"!!! %@ !!!\"),\n     multiple: fmt(\"username\", \"mood\", \"%@ is %@\")\n   }).create({\n@@ -98,7 +98,7 @@ QUnit.test(\"fmt\", assert => {\n });\n \n QUnit.test(\"i18n\", assert => {\n-  var t = Em.Object.extend({\n+  var t = Ember.Object.extend({\n     exclaimyUsername: i18n(\"username\", \"!!! %@ !!!\"),\n     multiple: i18n(\"username\", \"mood\", \"%@ is %@\")\n   }).create({\n@@ -134,7 +134,7 @@ QUnit.test(\"i18n\", assert => {\n QUnit.test(\"url\", assert => {\n   var t, testClass;\n \n-  testClass = Em.Object.extend({\n+  testClass = Ember.Object.extend({\n     userUrl: url(\"username\", \"/u/%@\")\n   });\n "
    },
    {
      "sha": "ca6bd1f7b538a09dd19ab0b7cfad1aaeb815b290",
      "filename": "test/javascripts/models/topic-test.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/models/topic-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1a3655b787658735154cd4bd8600d32e5f66c57b/test/javascripts/models/topic-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/models/topic-test.js.es6?ref=1a3655b787658735154cd4bd8600d32e5f66c57b",
      "patch": "@@ -33,7 +33,7 @@ QUnit.test(\"visited\", assert => {\n });\n \n QUnit.test(\"lastUnreadUrl\", assert => {\n-  const category = Em.Object.create({\n+  const category = Ember.Object.create({\n     navigate_to_first_post_after_read: true\n   });\n "
    }
  ]
}
