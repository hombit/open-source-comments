{
  "sha": "177b71655dee5b4f05de89958f5d86aeb166fa24",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjE3N2I3MTY1NWRlZTViNGYwNWRlODk5NThmNWQ4NmFlYjE2NmZhMjQ=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-01-14T06:06:32Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-01-14T06:06:32Z"
    },
    "message": "update deps (lgr and mongo)",
    "tree": {
      "sha": "5fd57d42c3e70545753595f59026f8b29d4a6840",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/5fd57d42c3e70545753595f59026f8b29d4a6840"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/177b71655dee5b4f05de89958f5d86aeb166fa24",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/177b71655dee5b4f05de89958f5d86aeb166fa24",
  "html_url": "https://github.com/umputun/remark/commit/177b71655dee5b4f05de89958f5d86aeb166fa24",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/177b71655dee5b4f05de89958f5d86aeb166fa24/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "url": "https://api.github.com/repos/umputun/remark/commits/8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "html_url": "https://github.com/umputun/remark/commit/8c8f13fd731d79942f0f8eb254fdc6400e19b239"
    }
  ],
  "stats": {
    "total": 252,
    "additions": 76,
    "deletions": 176
  },
  "files": [
    {
      "sha": "d088decf48b5e3dc6f5477fe7fb44ed71bcd8fc3",
      "filename": "backend/Gopkg.lock",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/Gopkg.lock",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/Gopkg.lock",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/Gopkg.lock?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -126,20 +126,20 @@\n   version = \"v0.3.2\"\n \n [[projects]]\n-  digest = \"1:779380833dce298899504f0b78ce961339cd5b5facb43f41208d2120d22306f5\"\n+  digest = \"1:1933dabfb0e07548ed9684fdef857cc6f2413bbbb74ba838a7c1f77407b8fd90\"\n   name = \"github.com/go-pkgz/lgr\"\n   packages = [\".\"]\n   pruneopts = \"UT\"\n-  revision = \"dbe2f3c6c85e69d224b1dc5ea48d65521827ee8c\"\n-  version = \"v0.2.1\"\n+  revision = \"8f56fccc1a15dfe9c7f72e049fc87cc378205b97\"\n+  version = \"v0.2.2\"\n \n [[projects]]\n-  digest = \"1:1212e114344a5cdcc834ea69e19d456eef230f9784659080fee67e02ba2cb574\"\n+  digest = \"1:c509e3f646c48148f2239fa66d5cd62785dfd057b5d2b46972e45b60049c19ed\"\n   name = \"github.com/go-pkgz/mongo\"\n   packages = [\".\"]\n   pruneopts = \"UT\"\n-  revision = \"9a09a574c336c6ae2338a65bbebed2baab2a713c\"\n-  version = \"v1.0.0\"\n+  revision = \"ee1e9a167094f8cdbc27407907aa694fff350ec3\"\n+  version = \"v1.1.0\"\n \n [[projects]]\n   digest = \"1:0f24c72d7e9bcb682b907be0461ac552973cd4b3f1b60b04b725f6d74a3e59e7\""
    },
    {
      "sha": "875130db63b4c116122e2a9cc03ac1e0aafeb3d9",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/README.md",
      "status": "modified",
      "additions": 14,
      "deletions": 5,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/lgr/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/README.md?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -7,7 +7,7 @@\n ## usage\n \n ```go\n-    l := lgr.New(lgr.Debug, lgr.Caller) // allow debug and caller info\n+    l := lgr.New(lgr.Debug, lgr.CallerFile) // allow debug and caller file info\n     l.Logf(\"INFO some important err message, %v\", err)\n     l.Logf(\"DEBUG some less important err message, %v\", err)\n ```\n@@ -18,7 +18,7 @@ output looks like this:\n 2018/01/07 13:02:34.015 DEBUG {svc/handler.go:155 h.MyFunc2} some less important err message, file is too small`\n ```\n \n-_Without `lgr.Caller` it will drop `{caller}` part_\n+_Without `lgr.CallerFile` it will drop `{caller}` part_\n \n ## details\n \n@@ -33,7 +33,10 @@ _Without `lgr.Caller` it will drop `{caller}` part_\n `lgr.New` call accepts functional options:\n \n - `lgr.Debug` - turn debug mode on. This allows messages with \"DEBUG\" level (filtered overwise)\n-- `lgr.Caller` - adds the caller info each message\n+- `lgr.CallerFile` - adds the caller file info each message\n+- `lgr.CallerFunc` - adds the caller function info each message\n+- `lgr.LevelBraces` - wraps levels with \"[\" and \"]\"\n+- `lgr.Msec` - adds milliseconds to timestamp\n - `lgr.Out(io.Writer)` - sets the output writer, default `os.Stdout`\n - `lgr.Err(io.Writer)` - sets the error writer, default `os.Stderr`\n \n@@ -44,5 +47,11 @@ _Without `lgr.Caller` it will drop `{caller}` part_\n - `DEBUG` will be filtered unless `lgr.Debug` option defined\n - `INFO` and `WARN` don't have any special behavior attached\n - `ERROR` sends messages to both out and err writers\n-- \"PANIC\" and \"FATAL\" send messages to both out and err writers. In addition sends dump of callers and runtime info to err only, and call `os.Exit(1)`.\n-  \n\\ No newline at end of file\n+- `PANIC` and `FATAL` send messages to both out and err writers. In addition sends dump of callers and runtime info to err only, and call `os.Exit(1)`.\n+  \n+### global logger\n+\n+Users should avoid global logger and pass the concrete logger as a dependency. However, in some cases global logger may be needed, for example migration from stdlib `log` to `lgr`. For such cases `log \"github.com/go-pkgz/lgr\"` can be imported instead of `log` package.\n+\n+Global logger provides `lgr.Printf`, `lgr.Print` and `lgr.Fatalf` functions. User can customize the logger by calling `lgr.Setup(options ...)`. The instance of this logger can be retried with `lgr.Default()`\n+ \n\\ No newline at end of file"
    },
    {
      "sha": "5d1c6e5a8ccf5d54cfdd32c22b75349b52f25897",
      "filename": "backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/lgr/logger.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/lgr/logger.go?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -137,7 +137,7 @@ func (l *Logger) extractLevel(line string) (level, msg string) {\n \t\t\treturn lv, line[len(lv)+3:]\n \t\t}\n \t}\n-\treturn \"\", line\n+\treturn \"INFO\", line\n }\n \n // getDump reads runtime stack and returns as a string"
    },
    {
      "sha": "dd9db1c6cffa1183911170d207db62b325eecd3f",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.travis.yml",
      "status": "modified",
      "additions": 12,
      "deletions": 10,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/.travis.yml",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.travis.yml?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -1,23 +1,25 @@\n language: go\n \n go:\n-  - \"1.10.x\"\n+  - \"1.11.x\"\n+\n+install: true\n \n go_import_path: github.com/go-pkgz/mongo\n \n services: mongodb\n \n before_install:\n-  - cp -rf .vendor vendor\n+  - export TZ=America/Chicago\n+  - curl -L https://git.io/vp6lP | sh \n   - go get github.com/mattn/goveralls\n-  - go get gopkg.in/alecthomas/gometalinter.v2\n-  - $GOPATH/bin/gometalinter.v2 --install\n+  - export MONGO_TEST=mongodb://127.0.0.1:27017\n+  - export PATH=$(pwd)/bin:$PATH\n \n-before_script:\n-  - sleep 3\n \n script:\n-  - export MONGO_TEST=mongodb://127.0.0.1:27017\n-  - go test ./...\n-  - $GOPATH/bin/gometalinter.v2 --exclude=test --exclude=mock --exclude=vendor ./...\n-  - $GOPATH/bin/goveralls -service=travis-ci\n+  - GO111MODULE=on go get ./...\n+  - GO111MODULE=on go mod vendor\n+  - GO111MODULE=on go test  -v -mod=vendor -covermode=count -coverprofile=profile.cov ./... || travis_terminate 1;\n+  - ./bin/gometalinter --deadline=120s --exclude=test --exclude=mock --exclude=vendor --exclude=_example --disable-all --enable=errcheck --enable=vet --enable=vetshadow --enable=megacheck --enable=ineffassign --enable=varcheck --enable=unconvert --enable=deadcode --enable=interfacer --enable=gotype ./... || travis_terminate 1;\n+  - $GOPATH/bin/goveralls -coverprofile=profile.cov -service=travis-ci"
    },
    {
      "sha": "c836416192da3691281691dfb0d16e177dfd068b",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/davecgh/go-spew/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/davecgh/go-spew/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/davecgh/go-spew/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/davecgh/go-spew/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,15 +0,0 @@\n-ISC License\n-\n-Copyright (c) 2012-2016 Dave Collins <dave@davec.name>\n-\n-Permission to use, copy, modify, and distribute this software for any\n-purpose with or without fee is hereby granted, provided that the above\n-copyright notice and this permission notice appear in all copies.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n-WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n-ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n-OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."
    },
    {
      "sha": "770c7672b45d60108c346c7e979632841380eee3",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,25 +0,0 @@\n-mgo - MongoDB driver for Go\n-\n-Copyright (c) 2010-2013 - Gustavo Niemeyer <gustavo@niemeyer.net>\n-\n-All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met: \n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-   list of conditions and the following disclaimer. \n-2. Redistributions in binary form must reproduce the above copyright notice,\n-   this list of conditions and the following disclaimer in the documentation\n-   and/or other materials provided with the distribution. \n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n-ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
      "sha": "890326017b85cef1464487d35e9be9248022d196",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/bson/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 25,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/bson/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/bson/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/bson/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,25 +0,0 @@\n-BSON library for Go\n-\n-Copyright (c) 2010-2012 - Gustavo Niemeyer <gustavo@niemeyer.net>\n-\n-All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are met: \n-\n-1. Redistributions of source code must retain the above copyright notice, this\n-   list of conditions and the following disclaimer. \n-2. Redistributions in binary form must reproduce the above copyright notice,\n-   this list of conditions and the following disclaimer in the documentation\n-   and/or other materials provided with the distribution. \n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n-ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
      "sha": "74487567632c8f137ef3971b0f5912ca50bebcda",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/internal/json/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/internal/json/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/internal/json/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/globalsign/mgo/internal/json/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,27 +0,0 @@\n-Copyright (c) 2012 The Go Authors. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-   * Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-   * Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following disclaimer\n-in the documentation and/or other materials provided with the\n-distribution.\n-   * Neither the name of Google Inc. nor the names of its\n-contributors may be used to endorse or promote products derived from\n-this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
      "sha": "c67dad612a3dfca2b84599c640798d7be7d46728",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/pmezard/go-difflib/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 27,
      "changes": 27,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/pmezard/go-difflib/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/pmezard/go-difflib/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/pmezard/go-difflib/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,27 +0,0 @@\n-Copyright (c) 2013, Patrick Mezard\n-All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-    Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-    Redistributions in binary form must reproduce the above copyright\n-notice, this list of conditions and the following disclaimer in the\n-documentation and/or other materials provided with the distribution.\n-    The names of its contributors may not be used to endorse or promote\n-products derived from this software without specific prior written\n-permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n-IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n-TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n-PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n-TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    },
    {
      "sha": "473b670a7c6195561168a94337416f32a4db8e73",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/stretchr/testify/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 22,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/stretchr/testify/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/8c8f13fd731d79942f0f8eb254fdc6400e19b239/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/stretchr/testify/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/.vendor/github.com/stretchr/testify/LICENSE?ref=8c8f13fd731d79942f0f8eb254fdc6400e19b239",
      "patch": "@@ -1,22 +0,0 @@\n-Copyright (c) 2012 - 2013 Mat Ryer and Tyler Bunnell\n-\n-Please consider promoting this project if you find it useful.\n-\n-Permission is hereby granted, free of charge, to any person \n-obtaining a copy of this software and associated documentation \n-files (the \"Software\"), to deal in the Software without restriction, \n-including without limitation the rights to use, copy, modify, merge, \n-publish, distribute, sublicense, and/or sell copies of the Software, \n-and to permit persons to whom the Software is furnished to do so, \n-subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included\n-in all copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \n-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES \n-OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \n-IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \n-DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT \n-OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE \n-OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
    },
    {
      "sha": "eed80f3583f282e081211baf678eadff59a27430",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/go.mod",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/go.mod?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -0,0 +1,9 @@\n+module github.com/go-pkgz/mongo\n+\n+require (\n+\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n+\tgithub.com/globalsign/mgo v0.0.0-20180615134936-113d3961e731\n+\tgithub.com/go-pkgz/lgr v0.2.2\n+\tgithub.com/stretchr/objx v0.1.1 // indirect\n+\tgithub.com/stretchr/testify v1.3.0\n+)"
    },
    {
      "sha": "66ac0631f0626767a2f2f7b325242af3190656c5",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/go.sum",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/go.sum?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -0,0 +1,17 @@\n+github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/globalsign/mgo v0.0.0-20180615134936-113d3961e731 h1:y7wyeiA6T+TT+HGC9DYypvLkUeg99N4rqHMzn2MmjYk=\n+github.com/globalsign/mgo v0.0.0-20180615134936-113d3961e731/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\n+github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8 h1:DujepqpGd1hyOd7aW59XpK7Qymp8iy83xq74fLr21is=\n+github.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8/go.mod h1:xkRDCp4j0OGD1HRkm4kmhM+pmpv3AKq5SU7GMg4oO/Q=\n+github.com/go-pkgz/lgr v0.1.5 h1:oWj3VNlyYL2uUpdL6Gbi21BAH619Xb/8E78ozpyI2xo=\n+github.com/go-pkgz/lgr v0.1.5/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n+github.com/go-pkgz/lgr v0.2.2 h1:HSOqMVoetAfvA40Gpy/X/HGyV0UUafIMPgp+SdZends=\n+github.com/go-pkgz/lgr v0.2.2/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI="
    },
    {
      "sha": "7aed5c6e13ceb4ffc33d1a9884be39cafe84651a",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/server.go",
      "status": "modified",
      "additions": 15,
      "deletions": 11,
      "changes": 26,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/server.go?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -6,13 +6,12 @@ import (\n \t\"crypto/tls\"\n \t\"errors\"\n \t\"fmt\"\n-\t\"log\"\n \t\"net\"\n-\t\"os\"\n \t\"strings\"\n \t\"time\"\n \n \t\"github.com/globalsign/mgo\"\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // Server represents mongo instance and provides session accessor\n@@ -27,11 +26,11 @@ type ServerParams struct {\n \tConsistencyMode mgo.Mode\n \tDelay           int  // initial delay to give mongo server some time to start, in case if mongo part of the same compose\n \tDebug           bool // turn on mgo debug mode\n-\tSSL             bool\n+\tSSL             bool // enforce SSL connection\n }\n \n // NewServerWithURL makes mongo server from url like\n-// mongodb://remark42:password@127.0.0.1t:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\n+// mongodb://remark42:password@127.0.0.1:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin\n func NewServerWithURL(url string, timeout time.Duration) (res *Server, err error) {\n \tdial, params, err := parseURL(url, timeout)\n \tif err != nil {\n@@ -44,10 +43,8 @@ func NewServerWithURL(url string, timeout time.Duration) (res *Server, err error\n func NewServer(dial mgo.DialInfo, params ServerParams) (res *Server, err error) {\n \tresult := Server{dial: dial, params: params}\n \n-\tif params.Debug {\n-\t\tmgo.SetDebug(true)\n-\t\tmgo.SetLogger(log.New(os.Stdout, \"MGO \", log.Ldate|log.Ltime|log.Lmicroseconds))\n-\t}\n+\tmgo.SetDebug(true)\n+\tmgo.SetLogger(&mgdLogger{})\n \n \tif len(dial.Addrs) == 0 {\n \t\treturn nil, errors.New(\"missing mongo address\")\n@@ -89,11 +86,11 @@ func NewServer(dial mgo.DialInfo, params ServerParams) (res *Server, err error)\n }\n \n // SessionCopy returns copy of main session. Client should close it\n-func (m Server) SessionCopy() *mgo.Session {\n+func (m *Server) SessionCopy() *mgo.Session {\n \treturn m.sess.Copy()\n }\n \n-func (m Server) String() string {\n+func (m *Server) String() string {\n \treturn fmt.Sprintf(\"%v%s\", m.dial.Addrs, m.dial.Database)\n }\n \n@@ -110,8 +107,15 @@ func parseURL(mongoURL string, connectTimeout time.Duration) (mgo.DialInfo, Serv\n \n \tdial, err := mgo.ParseURL(mongoURL)\n \tif err != nil {\n-\t\treturn mgo.DialInfo{}, ServerParams{}, fmt.Errorf(\"failed to pars mongo url %s, %s\", mongoURL, err)\n+\t\treturn mgo.DialInfo{}, ServerParams{}, fmt.Errorf(\"failed to parse mongo url %s, %s\", mongoURL, err)\n \t}\n \tdial.Timeout = connectTimeout\n \treturn *dial, params, nil\n }\n+\n+type mgdLogger struct{}\n+\n+func (l *mgdLogger) Output(calldepth int, s string) error {\n+\tlog.Printf(\"[DEBUG] MGO %s\", s)\n+\treturn nil\n+}"
    },
    {
      "sha": "089a478ffe706bce762e2a5df7cc3a71e6c0f075",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/testing.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/testing.go",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/testing.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/testing.go?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -2,13 +2,13 @@ package mongo\n \n import (\n \t\"fmt\"\n-\t\"log\"\n \t\"os\"\n \t\"sync\"\n \t\"testing\"\n \t\"time\"\n \n \t\"github.com/globalsign/mgo\"\n+\tlog \"github.com/go-pkgz/lgr\"\n \n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\""
    },
    {
      "sha": "0469e08e7674492e8fd16e0f612030e69c9f9d2d",
      "filename": "backend/vendor/github.com/go-pkgz/mongo/writer.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/writer.go",
      "raw_url": "https://github.com/umputun/remark/raw/177b71655dee5b4f05de89958f5d86aeb166fa24/backend/vendor/github.com/go-pkgz/mongo/writer.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/mongo/writer.go?ref=177b71655dee5b4f05de89958f5d86aeb166fa24",
      "patch": "@@ -3,11 +3,11 @@ package mongo\n import (\n \t\"context\"\n \t\"fmt\"\n-\t\"log\"\n \t\"sync\"\n \t\"time\"\n \n \t\"github.com/globalsign/mgo\"\n+\tlog \"github.com/go-pkgz/lgr\"\n )\n \n // BufferedWriter defines interface for writes and flush"
    }
  ]
}
