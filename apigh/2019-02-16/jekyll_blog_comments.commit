{
  "sha": "6f3de0b0e16b7f2db1437828f917320f7f047007",
  "node_id": "MDY6Q29tbWl0MTI4NjgzMjc0OjZmM2RlMGIwZTE2YjdmMmRiMTQzNzgyOGY5MTczMjBmN2YwNDcwMDc=",
  "commit": {
    "author": {
      "name": "Damien Guard",
      "email": "damieng@gmail.com",
      "date": "2019-02-11T01:31:41Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-02-11T01:31:41Z"
    },
    "message": "Add preload ping function.",
    "tree": {
      "sha": "94810385e8451315583fc95b7b63cb733cc4170d",
      "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/git/trees/94810385e8451315583fc95b7b63cb733cc4170d"
    },
    "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/git/commits/6f3de0b0e16b7f2db1437828f917320f7f047007",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcYNB9CRBK7hj4Ov3rIwAAdHIIAChw+j6vzs2TKEtm3vWlI5ue\nvSbRPvTg+0Ph1cARLnpsJWIPq6hfvZPLanI+m6B9okBv2tIQO5etCdtT72HbEqYB\ngJoi/9D0oqBRjOI3tROsmVLcGkjWCtu0za4L+o4THrnzdz2xZCT0ZjrbW8bu6w3K\n8aD25i53CR8lo6OBicWOzeNNeLGdLe8cFUYBVVi2kF3PgbwO8m9Lr2pBjLpNhWNh\nR36pX5ei200m43rrJhmFMBcGZ9WfOvPHILJuElceRog6k+Pd/x3e3BdjcaaQ47Zs\n0gDAacaU5Ki6nmFCAh+cqqXudou+GkxX4GSqVXIOGcGLiXlT6eBfnUEUhBJfa34=\n=5Snd\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 94810385e8451315583fc95b7b63cb733cc4170d\nparent a39c1df72ced7c5528dbc81f590446f47efa46b2\nauthor Damien Guard <damieng@gmail.com> 1549848701 -0800\ncommitter GitHub <noreply@github.com> 1549848701 -0800\n\nAdd preload ping function."
    }
  },
  "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/6f3de0b0e16b7f2db1437828f917320f7f047007",
  "html_url": "https://github.com/Azure-Functions/jekyll-blog-comments/commit/6f3de0b0e16b7f2db1437828f917320f7f047007",
  "comments_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/6f3de0b0e16b7f2db1437828f917320f7f047007/comments",
  "author": {
    "login": "damieng",
    "id": 118951,
    "node_id": "MDQ6VXNlcjExODk1MQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/118951?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/damieng",
    "html_url": "https://github.com/damieng",
    "followers_url": "https://api.github.com/users/damieng/followers",
    "following_url": "https://api.github.com/users/damieng/following{/other_user}",
    "gists_url": "https://api.github.com/users/damieng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/damieng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/damieng/subscriptions",
    "organizations_url": "https://api.github.com/users/damieng/orgs",
    "repos_url": "https://api.github.com/users/damieng/repos",
    "events_url": "https://api.github.com/users/damieng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/damieng/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a39c1df72ced7c5528dbc81f590446f47efa46b2",
      "url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/commits/a39c1df72ced7c5528dbc81f590446f47efa46b2",
      "html_url": "https://github.com/Azure-Functions/jekyll-blog-comments/commit/a39c1df72ced7c5528dbc81f590446f47efa46b2"
    }
  ],
  "stats": {
    "total": 11,
    "additions": 9,
    "deletions": 2
  },
  "files": [
    {
      "sha": "b67d8c32c9a7bb3e84b278d0502254c1acd7dc2b",
      "filename": "JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/Azure-Functions/jekyll-blog-comments/blob/6f3de0b0e16b7f2db1437828f917320f7f047007/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "raw_url": "https://github.com/Azure-Functions/jekyll-blog-comments/raw/6f3de0b0e16b7f2db1437828f917320f7f047007/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs",
      "contents_url": "https://api.github.com/repos/Azure-Functions/jekyll-blog-comments/contents/JekyllBlogCommentsAzure/PostCommentToPullRequestFunction.cs?ref=6f3de0b0e16b7f2db1437828f917320f7f047007",
      "patch": "@@ -21,7 +21,7 @@ struct MissingRequiredValue { } // Placeholder for missing required form values\n         static readonly Regex validPathChars = new Regex(@\"[^a-zA-Z0-9-]\"); // Valid characters when mapping from the blog post slug to a file path\n         static readonly Regex validEmail = new Regex(@\"^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$\"); // Simplest form of email validation\n \n-        [FunctionName(\"PostComment\")]\n+        [FunctionName(\"PostComment\")] // Actual form post handler\n         public static async Task<HttpResponseMessage> Run([HttpTrigger(AuthorizationLevel.Anonymous, \"post\")] HttpRequestMessage request)\n         {\n             var form = await request.Content.ReadAsFormDataAsync();\n@@ -45,6 +45,13 @@ public static async Task<HttpResponseMessage> Run([HttpTrigger(AuthorizationLeve\n             response.Headers.Location = redirectUri;\n             return response;\n         }\n+        \n+        [FunctionName(\"Preload\")] // Ping this to preload the function and avoid cold starts.\n+        public static async Task<HttpResponseMessage> Preload([HttpTrigger(AuthorizationLevel.Anonymous, \"get\")] HttpRequestMessage request)\n+        {\n+            var response = request.CreateResponse(HttpStatusCode.OK);\n+            return response;\n+        }\n \n         private static bool AreSameSites(string commentSite, string postedCommentSite)\n         {\n@@ -77,7 +84,7 @@ private static async Task<PullRequest> CreateCommentAsPullRequest(Comment commen\n             // Create a pull request for the new branch and file\n             return await github.Repository.PullRequest.Create(repo.Id, new NewPullRequest(fileRequest.Message, newBranch.Ref, defaultBranch.Name)\n             {\n-                Body = $\"avatar: <img src=\\\"{comment.avatar}\\\" width=\\\"64\\\" height=\\\"64\\\" />\\n\\nScore:{comment.score}\\n\\n{comment.message}\"\n+                Body = $\"avatar: <img src=\\\"{comment.avatar}\\\" width=\\\"64\\\" height=\\\"64\\\" />\\n\\nScore: {comment.score}\\n\\n{comment.message}\"\n             });\n         }\n "
    }
  ]
}
