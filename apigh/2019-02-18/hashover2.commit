{
  "sha": "22c17a34b536c07f61acfbfedc562d0dedfb53fa",
  "node_id": "MDY6Q29tbWl0MTgwOTYzMjI6MjJjMTdhMzRiNTM2YzA3ZjYxYWNmYmZlZGM1NjJkMGRlZGZiNTNmYQ==",
  "commit": {
    "author": {
      "name": "jacobwb",
      "email": "jacobbarkdull@gmail.com",
      "date": "2019-02-13T21:51:27Z"
    },
    "committer": {
      "name": "jacobwb",
      "email": "jacobbarkdull@gmail.com",
      "date": "2019-02-13T21:51:27Z"
    },
    "message": "Pass frontend settings by individual URL queries\n\nSettings passed to HashOver during frontend instantiation are now passed via individual URL queries instead of one long settings query containing JSON data.\n\nJSON data is quite small, that is why it was used, however, because of the necessity of encoding the JSON data it is actually quite inefficient. For example, the default settings passed to HashOver from the admin moderation page results in a URL that is 79 characters shorter than before, a 30% reduction.\n\nWith this new approach, we can pass more settings before hitting the URL length limit, view each query in the browser console, and avoid unnecessary JSON decoding on the server-side.",
    "tree": {
      "sha": "65efbc5ead674d54b5edd423197c527b70c49577",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/git/trees/65efbc5ead674d54b5edd423197c527b70c49577"
    },
    "url": "https://api.github.com/repos/jacobwb/hashover-next/git/commits/22c17a34b536c07f61acfbfedc562d0dedfb53fa",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/22c17a34b536c07f61acfbfedc562d0dedfb53fa",
  "html_url": "https://github.com/jacobwb/hashover-next/commit/22c17a34b536c07f61acfbfedc562d0dedfb53fa",
  "comments_url": "https://api.github.com/repos/jacobwb/hashover-next/commits/22c17a34b536c07f61acfbfedc562d0dedfb53fa/comments",
  "author": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "97d60c33a35427f6bd06edc5883fbd86865c5b92",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/97d60c33a35427f6bd06edc5883fbd86865c5b92",
      "html_url": "https://github.com/jacobwb/hashover-next/commit/97d60c33a35427f6bd06edc5883fbd86865c5b92"
    }
  ],
  "stats": {
    "total": 126,
    "additions": 104,
    "deletions": 22
  },
  "files": [
    {
      "sha": "51b89615d78dcf420634b0a0dcc96938d9aac486",
      "filename": "backend/classes/settings.php",
      "status": "modified",
      "additions": 40,
      "deletions": 7,
      "changes": 47,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/classes/settings.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/classes/settings.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/settings.php?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -214,14 +214,14 @@ protected function overrideSettings (array $settings, $class = 'Settings')\n \t}\n \n \t// Overrides settings based on JSON data\n-\tprotected function loadJsonSettings ($json, $class = 'Settings')\n+\tprotected function loadJsonSettings ($json)\n \t{\n \t\t// Parse JSON data\n \t\t$settings = @json_decode ($json, true);\n \n \t\t// Load setting only if data is an array\n \t\tif (is_array ($settings)) {\n-\t\t\t$this->overrideSettings ($settings, $class);\n+\t\t\t$this->overrideSettings ($settings, 'Settings');\n \t\t}\n \t}\n \n@@ -237,15 +237,48 @@ protected function loadSettingsFile ()\n \t\t\t$json = @file_get_contents ($path);\n \n \t\t\t// And override settings\n-\t\t\t$this->loadJsonSettings ($json, 'Settings');\n+\t\t\t$this->loadJsonSettings ($json);\n \t\t}\n \t}\n \n-\t// Accepts JSON data from the frontend to override default settings\n-\tpublic function loadFrontendSettings ($json)\n+\t// Type juggle string values of an array\n+\tprotected function juggleStringArray (array $data)\n \t{\n-\t\t// Only override settings safe to expose to the frontend\n-\t\t$this->loadJsonSettings ($json, 'SafeSettings');\n+\t\t// Run through array\n+\t\tforeach ($data as &$value) {\n+\t\t\t// Cast boolean strings to actual booleans\n+\t\t\tif ($value === 'true' or $value === 'false') {\n+\t\t\t\t$value = ($value === 'true');\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\t// Cast numeric strings to floats\n+\t\t\tif (is_numeric ($value)) {\n+\t\t\t\t$value = (float)($value);\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\t// Type juggle nested arrays\n+\t\t\tif (is_array ($value)) {\n+\t\t\t\t$value = $this->juggleStringArray ($value);\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn $data;\n+\t}\n+\n+\t// Override default settings by with cfg URL queries\n+\tpublic function loadFrontendSettings ($settings)\n+\t{\n+\t\t// Override settings if cfg queries is an array\n+\t\tif (is_array ($settings)) {\n+\t\t\t// Type juggle cfg queries\n+\t\t\t$settings = $this->juggleStringArray ($settings);\n+\n+\t\t\t// Only override settings safe to expose to the frontend\n+\t\t\t$this->overrideSettings ($settings, 'SafeSettings');\n+\t\t}\n \t}\n \n \t// Returns a server-side absolute file path"
    },
    {
      "sha": "588332601ac860c99299b51cfd3ec14c34ad7551",
      "filename": "backend/classes/setup.php",
      "status": "modified",
      "additions": 11,
      "deletions": 5,
      "changes": 16,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/classes/setup.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/classes/setup.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/setup.php?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -297,13 +297,19 @@ public function getRequest ($key, $default = false)\n \n \t\t// Check if we got a value from POST or GET\n \t\tif (!empty ($request)) {\n-\t\t\t// If so, strip escape slashes if enabled\n-\t\t\tif (get_magic_quotes_gpc ()) {\n-\t\t\t\t$request = stripslashes ($request);\n+\t\t\t// Check if GET or POST data is type string\n+\t\t\tif (gettype ($request) === 'string') {\n+\t\t\t\t// If so, strip escape slashes if enabled\n+\t\t\t\tif (get_magic_quotes_gpc ()) {\n+\t\t\t\t\t$request = stripslashes ($request);\n+\t\t\t\t}\n+\n+\t\t\t\t// URL decode value\n+\t\t\t\t$request = urldecode ($request);\n \t\t\t}\n \n-\t\t\t// And return URL decoded value\n-\t\t\treturn urldecode ($request);\n+\t\t\t// And return POST or GET data\n+\t\t\treturn $request;\n \t\t}\n \n \t\t// Otherwise, return default"
    },
    {
      "sha": "0c8a4776239aead8744121e64775f41e2ff1ed43",
      "filename": "backend/comments-ajax.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/comments-ajax.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/backend/comments-ajax.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/comments-ajax.php?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -46,7 +46,7 @@\n \t$hashover->setup->setInstance ('request');\n \n \t// User settings passed during instantiation\n-\t$settings = $hashover->setup->getRequest ('settings');\n+\t$settings = $hashover->setup->getRequest ('cfg');\n \n \t// Load user settings\n \t$hashover->setup->loadFrontendSettings ($settings);"
    },
    {
      "sha": "e0aaa0a15342045f4846496e0b6fde1d0dcfa6ad",
      "filename": "comments.php",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/comments.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/comments.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/comments.php?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -28,7 +28,7 @@\n \t));\n \n \t// User settings passed during instantiation\n-\t$settings = $setup->getRequest ('settings');\n+\t$settings = $setup->getRequest ('cfg');\n \n \t// Load user settings\n \t$setup->loadFrontendSettings ($settings);\n@@ -57,6 +57,9 @@\n \t// Register page title getter method\n \t$javascript->registerFile ('gettitle.js');\n \n+\t// Register frontend settings URL queries converter method\n+\t$javascript->registerFile ('cfgqueries.js');\n+\n \t// Register backend URL queries getter method\n \t$javascript->registerFile ('getbackendqueries.js');\n "
    },
    {
      "sha": "0f839ffc136211d54584c39ebfe5a41d798642cc",
      "filename": "frontend/cfgqueries.js",
      "status": "added",
      "additions": 31,
      "deletions": 0,
      "changes": 31,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/cfgqueries.js",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/cfgqueries.js",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/frontend/cfgqueries.js?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -0,0 +1,31 @@\n+// Converts an object in a series of URL queries (cfgqueries.js)\n+HashOver.cfgQueries = function (value, name, queries)\n+{\n+\t// Current URL query matrix\n+\tname = name || [];\n+\n+\t// All settings URL queries to return\n+\tqueries = queries || [];\n+\n+\t// Check if value is an object\n+\tif (typeof (value) !== 'object') {\n+\t\t// If so, get query matrix as string\n+\t\tvar matrix = '['  + name.join ('][') + ']';\n+\n+\t\t// Encode current URL query value\n+\t\tvar value = encodeURIComponent (value);\n+\n+\t\t// Add current URL query to return array\n+\t\tqueries.push ('cfg' + matrix + '=' + value);\n+\n+\t\t// And do nothing else\n+\t\treturn;\n+\t}\n+\n+\t// Otherwise, descend in setting object\n+\tfor (var key in value) {\n+\t\tHashOver.cfgQueries (value[key], name.concat (key), queries);\n+\t}\n+\n+\treturn queries;\n+};"
    },
    {
      "sha": "c383ef88e949d1d10f1fbba8243f5d09fd07b616",
      "filename": "frontend/getbackendqueries.js",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/getbackendqueries.js",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/getbackendqueries.js",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/frontend/getbackendqueries.js?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -21,11 +21,6 @@ HashOver.getBackendQueries = function (options, instance)\n \t\t\t\toptions[key] = loaderOptions[key];\n \t\t\t}\n \t\t}\n-\n-\t\t// And add loader settings object to request if they exist\n-\t\tif (options.settings && options.settings.constructor === Object) {\n-\t\t\tdata.settings = JSON.stringify (loaderOptions.settings);\n-\t\t}\n \t}\n \n \t// Add instance number to data\n@@ -52,6 +47,15 @@ HashOver.getBackendQueries = function (options, instance)\n \t\t}\n \t}\n \n+\t// Add loader settings object to request if they exist\n+\tif (options.settings && options.settings.constructor === Object) {\n+\t\t// Get cfg URL queries array\n+\t\tvar cfgQueries = HashOver.cfgQueries (loaderOptions.settings);\n+\n+\t\t// And add cfg queries\n+\t\tqueries = queries.concat (cfgQueries);\n+\t}\n+\n \t// Set request backend information for the first instance\n \tif (HashOver.backendReady !== true) {\n \t\tqueries.push ('prepare=true');"
    },
    {
      "sha": "a89cdc259f46d2e10abeea8bb191645529eeae05",
      "filename": "frontend/loader-constructor.js",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/loader-constructor.js",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/frontend/loader-constructor.js",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/frontend/loader-constructor.js?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -68,9 +68,11 @@ function HashOver (id, options, instance)\n \tif (options && options.constructor === Object) {\n \t\t// If so, add settings object to request if they exist\n \t\tif (options.settings && options.settings.constructor === Object) {\n-\t\t\tpath += '?settings=' + encodeURIComponent (\n-\t\t\t\tJSON.stringify (options.settings)\n-\t\t\t);\n+\t\t\t// Get cfg URL queries array\n+\t\t\tvar cfgQueries = HashOver.cfgQueries (options.settings);\n+\n+\t\t\t// And add cfg queries to frontend script path\n+\t\t\tpath += '?' + cfgQueries.join ('&');\n \t\t}\n \n \t\t// And store the options"
    },
    {
      "sha": "915b98bc45a905d37cca91aae3bd500432605f03",
      "filename": "loader.php",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/22c17a34b536c07f61acfbfedc562d0dedfb53fa/loader.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/22c17a34b536c07f61acfbfedc562d0dedfb53fa/loader.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/loader.php?ref=22c17a34b536c07f61acfbfedc562d0dedfb53fa",
      "patch": "@@ -45,6 +45,9 @@\n \t// Register backend path setter\n \t$javascript->registerFile ('rootpath.js');\n \n+\t// Register frontend settings URL queries converter method\n+\t$javascript->registerFile ('cfgqueries.js');\n+\n \t// Register automatic instantiation code\n \t$javascript->registerFile ('instantiate.js', array (\n \t\t'include' => !isset ($_GET['nodefault'])"
    }
  ]
}
