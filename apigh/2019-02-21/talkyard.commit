{
  "sha": "d29dfe990bce98c45a8617b8756bd6cfc124a06a",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6ZDI5ZGZlOTkwYmNlOThjNDVhODYxN2I4NzU2YmQ2Y2ZjMTI0YTA2YQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-02-21T10:53:31Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-02-21T10:53:31Z"
    },
    "message": "Fix tests.",
    "tree": {
      "sha": "7b3533aa22642a26f5f1a2e68784e6915729f435",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/7b3533aa22642a26f5f1a2e68784e6915729f435"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/d29dfe990bce98c45a8617b8756bd6cfc124a06a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/d29dfe990bce98c45a8617b8756bd6cfc124a06a",
  "html_url": "https://github.com/debiki/talkyard/commit/d29dfe990bce98c45a8617b8756bd6cfc124a06a",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/d29dfe990bce98c45a8617b8756bd6cfc124a06a/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "faba687bf43bf8e921c78fabcc526464797fa05e",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/faba687bf43bf8e921c78fabcc526464797fa05e",
      "html_url": "https://github.com/debiki/talkyard/commit/faba687bf43bf8e921c78fabcc526464797fa05e"
    }
  ],
  "stats": {
    "total": 184,
    "additions": 98,
    "deletions": 86
  },
  "files": [
    {
      "sha": "cc2cef8416f038c1101dfe2f1f5c6eef1da97759",
      "filename": "app/debiki/dao/UserDao.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/app/debiki/dao/UserDao.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/app/debiki/dao/UserDao.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/dao/UserDao.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -1010,7 +1010,7 @@ trait UserDao {\n     */\n   def trackReadingProgressClearNotfsPerhapsPromote(\n         user: Participant, pageId: PageId, postIdsSeen: Set[PostId], newProgress: PageReadingProgress,\n-        anyTourTipsSeen: Option[TourTipsSeen]): ReadMoreResult = {\n+        anyTourTipsSeen: Option[TourTipsSeen] = None): ReadMoreResult = {\n     // Tracking guests' reading progress would take a bit much disk space, makes disk-space DoS\n     // attacks too simple. [8PLKW46]\n     require(user.isMember, \"EdE8KFUW2\")"
    },
    {
      "sha": "dd68ac94d719629396bbe15aa77d74df4eb00354",
      "filename": "modules/ed-core/src/test/scala/com/debiki/core/PageReadingProgressTest.scala",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/modules/ed-core/src/test/scala/com/debiki/core/PageReadingProgressTest.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/modules/ed-core/src/test/scala/com/debiki/core/PageReadingProgressTest.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/test/scala/com/debiki/core/PageReadingProgressTest.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -26,10 +26,10 @@ import java.{util => ju}\n class PageReadingProgressTest extends FreeSpec with MustMatchers {\n \n \n-  \"ReadingProgress can\" - {\n+  \"PageReadingProgress can\" - {\n \n     \"convert low-post-nrs-read to bits\" - {\n-      def bitsFor(postNrs: Set[PostNr]): Array[Byte] = ReadingProgress(\n+      def bitsFor(postNrs: Set[PostNr]): Array[Byte] = PageReadingProgress(\n         firstVisitedAt = When.fromMillis(0),\n         lastVisitedAt = When.fromMillis(0),\n         lastViewedPostNr = 1,\n@@ -39,7 +39,7 @@ class PageReadingProgressTest extends FreeSpec with MustMatchers {\n         secondsReading = 1234).lowPostNrsReadAsBitsetBytes\n \n       \"nothing read\" in {\n-        ReadingProgress(\n+        PageReadingProgress(\n           firstVisitedAt = When.fromMillis(0),\n           lastVisitedAt = When.fromMillis(0),\n           lastViewedPostNr = 1,"
    },
    {
      "sha": "c50d87e278ddbd119f01b51ea7cf0e86d5f413b1",
      "filename": "tests/app/debiki/dao/PromotionToFullMemberAppSpec.scala",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/debiki/dao/PromotionToFullMemberAppSpec.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/debiki/dao/PromotionToFullMemberAppSpec.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/app/debiki/dao/PromotionToFullMemberAppSpec.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -73,7 +73,7 @@ class PromotionToFullMemberAppSpec extends DaoAppSuite() {\n     }\n \n     \"a member reads a tiny bit, won't get promoted yet\" in {\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(1), Set.empty, ReadingProgress(\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(1), Set.empty, PageReadingProgress(\n         firstVisitedAt = startTime.minusSeconds(10),\n         lastVisitedAt = startTime,\n         lastViewedPostNr = 1,\n@@ -91,7 +91,7 @@ class PromotionToFullMemberAppSpec extends DaoAppSuite() {\n \n     \"a member reads a bit more, almost gets promoted\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(2), Set.empty, ReadingProgress(\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(2), Set.empty, PageReadingProgress(\n         firstVisitedAt = currentTime.minusSeconds(1),\n         lastVisitedAt = currentTime,\n         lastViewedPostNr = 1,\n@@ -101,7 +101,7 @@ class PromotionToFullMemberAppSpec extends DaoAppSuite() {\n         secondsReading = 6*60))\n \n       // Entering the 3rd topic, entering 4 = the limit\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(3), Set.empty, ReadingProgress(\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(3), Set.empty, PageReadingProgress(\n         firstVisitedAt = currentTime.minusSeconds(1),\n         lastVisitedAt = currentTime,\n         lastViewedPostNr = 1,\n@@ -122,7 +122,7 @@ class PromotionToFullMemberAppSpec extends DaoAppSuite() {\n \n     \"reads a tiny bit more, finally gets promoted to Basic\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(4), Set.empty, ReadingProgress(\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, pageIds(4), Set.empty, PageReadingProgress(\n         firstVisitedAt = currentTime.minusSeconds(1),\n         lastVisitedAt = currentTime,\n         lastViewedPostNr = 1,"
    },
    {
      "sha": "4e807cd2a83ce44232b5d1384927206162866b1b",
      "filename": "tests/app/debiki/dao/UserStatsAppSpec.scala",
      "status": "modified",
      "additions": 75,
      "deletions": 65,
      "changes": 140,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/debiki/dao/UserStatsAppSpec.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/debiki/dao/UserStatsAppSpec.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/app/debiki/dao/UserStatsAppSpec.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -111,6 +111,8 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     lazy val initialStats =\n       UserStats.forNewUser(member1.id, firstSeenAt = startTime, emailedAt = None)\n+        // [7AKBR24] change Null in db and None here, to empty array? Sow won't need to:\n+        .copy(tourTipsSeen = Some(Vector.empty)) // ... then Vector.empty instead of Some(Vector.empty)\n \n     \"a member starts with blank stats\" in {\n       val (mem, stats) = loadTheMemberAndStats(member1.id)(dao)\n@@ -192,29 +194,31 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     \"... looks at a discourse topic, but doesn't read it\" in {\n       playTimeMillis(1200)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, noRepliesTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now(),\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = PageParts.BodyNr,\n-        lastReadAt = None,\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set.empty,\n-        secondsReading = 0))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, noRepliesTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now(),\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = PageParts.BodyNr,\n+          lastReadAt = None,\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set.empty,\n+          secondsReading = 0))\n       val correctStats = currentStats.copy(lastSeenAt = currentTime, numDiscourseTopicsEntered = 1)\n       currentStats = loadUserStats(member1.id)(dao)\n       currentStats mustBe correctStats\n     }\n \n     \"... reads the orig post\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, noRepliesTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now(),\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = PageParts.BodyNr,\n-        lastReadAt = Some(globals.now()),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set(PageParts.BodyNr),\n-        secondsReading = 12))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, noRepliesTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now(),\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = PageParts.BodyNr,\n+          lastReadAt = Some(globals.now()),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set(PageParts.BodyNr),\n+          secondsReading = 12))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime,\n         numSecondsReading = 12)\n@@ -226,14 +230,15 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     \"... reads a discourse topic, with replies, now replies-read gets updated\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, withRepliesTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now() minusMillis 400,\n-        lastVisitedAt = globals.now() minusMillis 200,\n-        lastViewedPostNr = 3,\n-        lastReadAt = Some(globals.now() minusMillis 300),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set(3, 4, 17),\n-        secondsReading = 111))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, withRepliesTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now() minusMillis 400,\n+          lastVisitedAt = globals.now() minusMillis 200,\n+          lastViewedPostNr = 3,\n+          lastReadAt = Some(globals.now() minusMillis 300),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set(3, 4, 17),\n+          secondsReading = 111))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime minusMillis 200,\n         numSecondsReading = 123,  // 111 + 12\n@@ -246,14 +251,15 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     \"... views even more replies\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, withRepliesTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now() minusMillis 400,\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = 33,\n-        lastReadAt = Some(globals.now()),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set(PageParts.BodyNr, 24, 32, 33, 34),\n-        secondsReading = 1111))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, withRepliesTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now() minusMillis 400,\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = 33,\n+          lastReadAt = Some(globals.now()),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set(PageParts.BodyNr, 24, 32, 33, 34),\n+          secondsReading = 1111))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime,\n         numSecondsReading = 1234,  // 1111 + 111 + 12\n@@ -265,14 +271,15 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     \"... views a chat topic, low post nrs only, stats gets updated\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, withMessagesChatTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now() minusMillis 500,\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = 10,\n-        lastReadAt = Some(globals.now()),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set(1 to 10: _*),\n-        secondsReading = 4))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, withMessagesChatTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now() minusMillis 500,\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = 10,\n+          lastReadAt = Some(globals.now()),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set(1 to 10: _*),\n+          secondsReading = 4))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime,\n         numSecondsReading = 1238,  // 1234 + 4\n@@ -285,15 +292,16 @@ class UserStatsAppSpec extends DaoAppSuite() {\n \n     \"... reads a bit more in the same a chat topic, still low post nrs\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, withMessagesChatTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now() minusMillis 500,\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = 12055,\n-        lastReadAt = Some(globals.now()),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        // Posts 5..10 already read, won't be counted again.\n-        lowPostNrsRead = Set(5 to PageReadingProgress.MaxLowPostNr: _*),\n-        secondsReading = 1000))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, withMessagesChatTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now() minusMillis 500,\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = 12055,\n+          lastReadAt = Some(globals.now()),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          // Posts 5..10 already read, won't be counted again.\n+          lowPostNrsRead = Set(5 to PageReadingProgress.MaxLowPostNr: _*),\n+          secondsReading = 1000))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime,\n         numSecondsReading = 2238,  // 1238 + 1000\n@@ -308,28 +316,30 @@ class UserStatsAppSpec extends DaoAppSuite() {\n     \"... views a chat topic with 2 messages, cannot read more than 2\" in {\n       playTimeMillis(1000)\n       val exception = intercept[Exception] {\n-        dao.trackReadingProgressClearNotfsPerhapsPromote(member1, twoMessagesChatTopicId, Set.empty, ReadingProgress(\n-          firstVisitedAt = globals.now(),\n-          lastVisitedAt = globals.now(),\n-          lastViewedPostNr = 1,\n-          lastReadAt = Some(globals.now()),\n-          lastPostNrsReadRecentFirst = Vector.empty,\n-          lowPostNrsRead = Set(2, 3, 4),  // nr 4 doesn't exist\n-          secondsReading = 1))\n+        dao.trackReadingProgressClearNotfsPerhapsPromote(\n+          member1, twoMessagesChatTopicId, Set.empty, PageReadingProgress(\n+            firstVisitedAt = globals.now(),\n+            lastVisitedAt = globals.now(),\n+            lastViewedPostNr = 1,\n+            lastReadAt = Some(globals.now()),\n+            lastPostNrsReadRecentFirst = Vector.empty,\n+            lowPostNrsRead = Set(2, 3, 4),  // nr 4 doesn't exist\n+            secondsReading = 1))\n       }\n       exception.getMessage must include(\"EdE7UKW25_\")\n     }\n \n     \"... but can read 2\" in {\n       playTimeMillis(1000)\n-      dao.trackReadingProgressClearNotfsPerhapsPromote(member1, twoMessagesChatTopicId, Set.empty, ReadingProgress(\n-        firstVisitedAt = globals.now() minusMillis 500,\n-        lastVisitedAt = globals.now(),\n-        lastViewedPostNr = 1,\n-        lastReadAt = Some(globals.now()),\n-        lastPostNrsReadRecentFirst = Vector.empty,\n-        lowPostNrsRead = Set(1, 2, 3),  // nr 1 = the orig post, won't count, so +2 below (not +3)\n-        secondsReading = 200))\n+      dao.trackReadingProgressClearNotfsPerhapsPromote(\n+        member1, twoMessagesChatTopicId, Set.empty, PageReadingProgress(\n+          firstVisitedAt = globals.now() minusMillis 500,\n+          lastVisitedAt = globals.now(),\n+          lastViewedPostNr = 1,\n+          lastReadAt = Some(globals.now()),\n+          lastPostNrsReadRecentFirst = Vector.empty,\n+          lowPostNrsRead = Set(1, 2, 3),  // nr 1 = the orig post, won't count, so +2 below (not +3)\n+          secondsReading = 200))\n       val correctStats = currentStats.copy(\n         lastSeenAt = currentTime,\n         numSecondsReading = 2438,  // 2238 + 200"
    },
    {
      "sha": "572d3c2b7c9792a18ad0cacf6a0cf9121436e3d5",
      "filename": "tests/app/ed/server/dao/LoadWhomToSendSummariesToAppSpec.scala",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/dao/LoadWhomToSendSummariesToAppSpec.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/dao/LoadWhomToSendSummariesToAppSpec.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/app/ed/server/dao/LoadWhomToSendSummariesToAppSpec.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -68,7 +68,8 @@ class LoadWhomToSendSummariesToAppSpec extends DaoAppSuite {\n       lastSeenAt = when,\n       firstSeenAtOr0 = when minusDays 10,\n       topicsNewSince = when,\n-      nextSummaryEmailAt = Some(when plusMinutes minutes))\n+      nextSummaryEmailAt = Some(when plusMinutes minutes),\n+      tourTipsSeen = Some(Vector.empty))  // [7AKBR24] change Null in db and None here, to empty array?\n     dao.readWriteTransaction(_.upsertUserStats(stats))\n     stats\n   }"
    },
    {
      "sha": "4862ba5c35ab6df138793a12e4fc8627043628a4",
      "filename": "tests/app/ed/server/dao/SiteTransactionAppSpec.scala",
      "status": "modified",
      "additions": 11,
      "deletions": 10,
      "changes": 21,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/dao/SiteTransactionAppSpec.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/dao/SiteTransactionAppSpec.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/app/ed/server/dao/SiteTransactionAppSpec.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -195,7 +195,8 @@ class SiteTransactionAppSpec extends DaoAppSuite {\n         numChatTopicsRepliedIn = firstNumber + 33,\n         numChatTopicsCreated = firstNumber + 34,\n         numLikesGiven = firstNumber + 40,\n-        numLikesReceived = firstNumber + 41)\n+        numLikesReceived = firstNumber + 41,\n+        tourTipsSeen = Some(Vector()))   // [7AKBR24] change Null in db and None here, to empty array?\n     }\n \n \n@@ -244,14 +245,14 @@ class SiteTransactionAppSpec extends DaoAppSuite {\n     }\n \n \n-    \"load and save ReadingProgress\" - {\n+    \"load and save PageReadingProgress\" - {\n \n       var progressLowNrs: PageReadingProgress = null\n       var progressHighNrs: PageReadingProgress = null\n \n-      \"empty ReadingProgress\" in {\n+      \"empty PageReadingProgress\" in {\n         dao.readWriteTransaction { transaction =>\n-          val progress = ReadingProgress(\n+          val progress = PageReadingProgress(\n             firstVisitedAt = When.fromMinutes(1000),\n             lastVisitedAt = When.fromMinutes(1010),\n             lastViewedPostNr = 1020,\n@@ -268,9 +269,9 @@ class SiteTransactionAppSpec extends DaoAppSuite {\n         }\n       }\n \n-      \"ReadingProgress with low post nrs only\" in {\n+      \"PageReadingProgress with low post nrs only\" in {\n         dao.readWriteTransaction { transaction =>\n-          progressLowNrs = ReadingProgress(\n+          progressLowNrs = PageReadingProgress(\n             firstVisitedAt = When.fromMinutes(2000),\n             lastVisitedAt = When.fromMinutes(2010),\n             lastViewedPostNr = 2020,\n@@ -284,9 +285,9 @@ class SiteTransactionAppSpec extends DaoAppSuite {\n         }\n       }\n \n-      \"ReadingProgress with high post nr\" in {\n+      \"PageReadingProgress with high post nr\" in {\n         dao.readWriteTransaction { transaction =>\n-          progressHighNrs = ReadingProgress(\n+          progressHighNrs = PageReadingProgress(\n             firstVisitedAt = When.fromMinutes(3000),\n             lastVisitedAt = When.fromMinutes(3010),\n             lastViewedPostNr = 3020,\n@@ -300,9 +301,9 @@ class SiteTransactionAppSpec extends DaoAppSuite {\n         }\n       }\n \n-      \"overwrite ReadingProgress\" in {\n+      \"overwrite PageReadingProgress\" in {\n         dao.readWriteTransaction { transaction =>\n-          val progress = ReadingProgress(\n+          val progress = PageReadingProgress(\n             firstVisitedAt = When.fromMinutes(4000),\n             lastVisitedAt = When.fromMinutes(4040),\n             lastViewedPostNr = 4020,"
    },
    {
      "sha": "5da8c9feb4771ef33bcb5183d399342b82da7b3d",
      "filename": "tests/app/ed/server/summaryemails/SummaryEmailsAppSpec.scala",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/summaryemails/SummaryEmailsAppSpec.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/d29dfe990bce98c45a8617b8756bd6cfc124a06a/tests/app/ed/server/summaryemails/SummaryEmailsAppSpec.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/app/ed/server/summaryemails/SummaryEmailsAppSpec.scala?ref=d29dfe990bce98c45a8617b8756bd6cfc124a06a",
      "patch": "@@ -327,7 +327,7 @@ class SummaryEmailsAppSpec extends DaoAppSuite(\n       playTimeMillis(OneHourInMillis)\n       dao.readWriteTransaction { tx =>\n         // Mod reads the new page.\n-        tx.upsertReadProgress(mod.id, pageId = page3IdByMia, ReadingProgress(\n+        tx.upsertReadProgress(mod.id, pageId = page3IdByMia, PageReadingProgress(\n           firstVisitedAt = currentTime minusMinutes 10,\n           lastVisitedAt = currentTime,\n           lastViewedPostNr = PageParts.BodyNr,\n@@ -337,7 +337,7 @@ class SummaryEmailsAppSpec extends DaoAppSuite(\n           secondsReading = 60 * 10))\n \n         // Max reads another page.\n-        tx.upsertReadProgress(max.id, pageId = page1IdByAdm, ReadingProgress(\n+        tx.upsertReadProgress(max.id, pageId = page1IdByAdm, PageReadingProgress(\n           firstVisitedAt = currentTime minusMinutes 10,\n           lastVisitedAt = currentTime,\n           lastViewedPostNr = PageParts.BodyNr,"
    }
  ]
}
