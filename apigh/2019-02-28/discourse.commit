{
  "sha": "1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxY2Q2NGY2OGYxZWZmNjhiZmI4YzdkN2Y0NWE4MDg5MTZhYzk3OGIy",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2019-02-28T14:51:13Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-02-28T14:51:13Z"
    },
    "message": "FIX: staff/admin shouldn’t be able to create uncategorized topics (#7077)",
    "tree": {
      "sha": "3cde516fd979e6de50891c76f4cd71a504f259a5",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/3cde516fd979e6de50891c76f4cd71a504f259a5"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcd/VhCRBK7hj4Ov3rIwAAdHIIAKBsLu3Edx6T7qm22yptFb8K\n3ia/wKjpyto7FRfdf/ECOyk+uxGGHl0PoJD3s9HyE/zIpImGXKmlZ5K2IF+7QDZ0\nXBf9E53RhU4zvScwej2Fy0/opM8d8E9YJQ5wq03PmpRW1+DxoypPsPZY4l6Cbcoj\nY7zsDwGgd32QEulmLkC46OZ8LHfHawgUHVslR7XUic1L5dN72w+StvFJP8fod+gr\nN3jdHodjNdfCeTmKhk0Ok+kvnrA3claDdO1QQh4aQaWZ10RgwtlvKadee7TahwFN\nNXjnyfao8Hif/EtFF5Z1K6VDgPHC+ySW6ngFDGO7DKm2ZS8Vy9U0IHiGxGZXvrU=\n=4lIc\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 3cde516fd979e6de50891c76f4cd71a504f259a5\nparent 3517103398ccaedf2ff4960a7a0927e9bd9db708\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1551365473 +0100\ncommitter GitHub <noreply@github.com> 1551365473 +0100\n\nFIX: staff/admin shouldn’t be able to create uncategorized topics (#7077)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
  "html_url": "https://github.com/discourse/discourse/commit/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3517103398ccaedf2ff4960a7a0927e9bd9db708",
      "url": "https://api.github.com/repos/discourse/discourse/commits/3517103398ccaedf2ff4960a7a0927e9bd9db708",
      "html_url": "https://github.com/discourse/discourse/commit/3517103398ccaedf2ff4960a7a0927e9bd9db708"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 30,
    "deletions": 4
  },
  "files": [
    {
      "sha": "6d7df62c725a71a1fb66096a6fcb9a2002a6dbd4",
      "filename": "app/assets/javascripts/discourse/models/composer.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/app/assets/javascripts/discourse/models/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/app/assets/javascripts/discourse/models/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/composer.js.es6?ref=1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
      "patch": "@@ -369,8 +369,7 @@ const Composer = RestModel.extend({\n     return (\n       canCategorize &&\n       !categoryId &&\n-      !this.siteSettings.allow_uncategorized_topics &&\n-      !this.user.get(\"admin\")\n+      !this.siteSettings.allow_uncategorized_topics\n     );\n   },\n "
    },
    {
      "sha": "419a06357eec31067787ac19191028fc30783aa5",
      "filename": "app/models/topic.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/app/models/topic.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/app/models/topic.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/topic.rb?ref=1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
      "patch": "@@ -95,8 +95,7 @@ def recover!\n             if: Proc.new { |t|\n               (t.new_record? || t.category_id_changed?) &&\n               !SiteSetting.allow_uncategorized_topics &&\n-              (t.archetype.nil? || t.regular?) &&\n-              (!t.user_id || !t.user.staff?)\n+              (t.archetype.nil? || t.regular?)\n             }\n \n   validates :featured_link, allow_nil: true, url: true"
    },
    {
      "sha": "cbd62f5f3869a876e4f1025710cdf81b00f015aa",
      "filename": "spec/requests/posts_controller_spec.rb",
      "status": "modified",
      "additions": 28,
      "deletions": 0,
      "changes": 28,
      "blob_url": "https://github.com/discourse/discourse/blob/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/spec/requests/posts_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/1cd64f68f1eff68bfb8c7d7f45a808916ac978b2/spec/requests/posts_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/posts_controller_spec.rb?ref=1cd64f68f1eff68bfb8c7d7f45a808916ac978b2",
      "patch": "@@ -999,6 +999,34 @@\n \n           expect(JSON.parse(response.body)[\"errors\"]).to include(I18n.t(:spamming_host))\n         end\n+\n+        context \"allow_uncategorized_topics is false\" do\n+          before do\n+            SiteSetting.allow_uncategorized_topics = false\n+          end\n+\n+          it \"cant create an uncategorized post\" do\n+            post \"/posts.json\", params: {\n+              raw: \"a new post with no category\",\n+              title: \"a new post with no category\"\n+            }\n+            expect(response).not_to be_successful\n+          end\n+\n+          context \"as staff\" do\n+            before do\n+              sign_in(Fabricate(:admin))\n+            end\n+\n+            it \"cant create an uncategorized post\" do\n+              post \"/posts.json\", params: {\n+                raw: \"a new post with no category\",\n+                title: \"a new post with no category\"\n+              }\n+              expect(response).not_to be_successful\n+            end\n+          end\n+        end\n       end\n     end\n "
    }
  ]
}
