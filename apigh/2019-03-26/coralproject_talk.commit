{
  "sha": "c85a2703f9b6a9d5b1336d2ba03496acbf05c137",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6Yzg1YTI3MDNmOWI2YTlkNWIxMzM2ZDJiYTAzNDk2YWNiZjA1YzEzNw==",
  "commit": {
    "author": {
      "name": "Kim Gardner",
      "email": "kgardnr@gmail.com",
      "date": "2019-03-26T13:24:06Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-03-26T13:24:06Z"
    },
    "message": "Merge pull request #2241 from coralproject/CORL-290\n\nDOCS | CORL-290 | Documentation updates",
    "tree": {
      "sha": "082bcb9e58c0173f11ac0896094c2fef14fad2d4",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/082bcb9e58c0173f11ac0896094c2fef14fad2d4"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/c85a2703f9b6a9d5b1336d2ba03496acbf05c137",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcmif3CRBK7hj4Ov3rIwAAdHIIADFhEMzOCA0rogAnWrRmrwY2\nC22thyDLnXF21x6mEjL49TWjlEvrF50GE9JjMgpTAiU/6iN1MpZOKvvYnCAQnkbc\ntWn0iIVIstx+7aExPJc3Z79lQCbXENMJd9nPY3m0YFC8jdwri6iX0Uy32aI4IyOw\n7o4ZePrQ7jb5dcW3xed8N5Pjl308rz2uM2kFWxF62dYgEt91+Yi31EGtSA8or5ln\nB2Tcn4KoFN8f2zGESZr1Wjej9I5yL7XhePuUYYzKQNTDqVASzKYDcJhrAxsNIAVJ\nRkuTRc9L99m7TxyA/GSKVl6XWxyYIgBogNOe0WIbe5itm+RPJwz5KgntDvlvUls=\n=KziT\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 082bcb9e58c0173f11ac0896094c2fef14fad2d4\nparent b2ca9dba400e9bdb633091a58aaae2a7fbcd57f8\nparent 9aec6b026c44d7f50479b2ceee477f5cade8b526\nauthor Kim Gardner <kgardnr@gmail.com> 1553606646 +0000\ncommitter GitHub <noreply@github.com> 1553606646 +0000\n\nMerge pull request #2241 from coralproject/CORL-290\n\nDOCS | CORL-290 | Documentation updates"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/c85a2703f9b6a9d5b1336d2ba03496acbf05c137",
  "html_url": "https://github.com/coralproject/talk/commit/c85a2703f9b6a9d5b1336d2ba03496acbf05c137",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/c85a2703f9b6a9d5b1336d2ba03496acbf05c137/comments",
  "author": {
    "login": "kgardnr",
    "id": 1077300,
    "node_id": "MDQ6VXNlcjEwNzczMDA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1077300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kgardnr",
    "html_url": "https://github.com/kgardnr",
    "followers_url": "https://api.github.com/users/kgardnr/followers",
    "following_url": "https://api.github.com/users/kgardnr/following{/other_user}",
    "gists_url": "https://api.github.com/users/kgardnr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kgardnr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kgardnr/subscriptions",
    "organizations_url": "https://api.github.com/users/kgardnr/orgs",
    "repos_url": "https://api.github.com/users/kgardnr/repos",
    "events_url": "https://api.github.com/users/kgardnr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kgardnr/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b2ca9dba400e9bdb633091a58aaae2a7fbcd57f8",
      "url": "https://api.github.com/repos/coralproject/talk/commits/b2ca9dba400e9bdb633091a58aaae2a7fbcd57f8",
      "html_url": "https://github.com/coralproject/talk/commit/b2ca9dba400e9bdb633091a58aaae2a7fbcd57f8"
    },
    {
      "sha": "9aec6b026c44d7f50479b2ceee477f5cade8b526",
      "url": "https://api.github.com/repos/coralproject/talk/commits/9aec6b026c44d7f50479b2ceee477f5cade8b526",
      "html_url": "https://github.com/coralproject/talk/commit/9aec6b026c44d7f50479b2ceee477f5cade8b526"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 16,
    "deletions": 5
  },
  "files": [
    {
      "sha": "e3e881a078c3d3e5a3560b39a911ea75ad81e9d0",
      "filename": "docs/source/integrating/event-tracking-metrics.md",
      "status": "modified",
      "additions": 16,
      "deletions": 5,
      "changes": 21,
      "blob_url": "https://github.com/coralproject/talk/blob/c85a2703f9b6a9d5b1336d2ba03496acbf05c137/docs/source/integrating/event-tracking-metrics.md",
      "raw_url": "https://github.com/coralproject/talk/raw/c85a2703f9b6a9d5b1336d2ba03496acbf05c137/docs/source/integrating/event-tracking-metrics.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/integrating/event-tracking-metrics.md?ref=c85a2703f9b6a9d5b1336d2ba03496acbf05c137",
      "patch": "@@ -3,9 +3,19 @@ title: Tracking Talk Events and Metrics\n permalink: /integrating/event-tracking-metrics/\n ---\n \n-Talk supports event emitting via Redux, Apollo and GraphQL. This means that common actions taken within Talk, such as successfully posting a comment, posting a reaction, or changing a setting, are automatically emitted from Talk. To send these events to your analytics tool of choice, however, will require some integration on your part.\n+Talk supports event emitting. This means that common actions taken within Talk, such as successfully posting a comment, posting a reaction, or changing a setting, are automatically emitted from Talk. To send these events to your analytics tool of choice, you’ll need to configure your Talk embed to process them. \n \n-First, we want to uncomment the tracking code in `article.ejs` (https://github.com/coralproject/talk/blob/93bda87ad061a2dc5eb8dc5b65a579a20efb76f7/views/article.ejs#L34). This will enable events to be sent via the Talk embed that is on your article pages. This will start a stream of events to the browser console, so that you can see which events are available.\n+The following example demonstrates how the event emitter works on a sample article page generated by Talk. When you’re ready to capture and handle events from your actual site, add the events property along with your event handling functions to your Talk embed script. \n+\n+## Example Using Local Development Instance of Talk\n+If you have Talk running in a local development environment you can follow these steps to first view all of the events emitted by Talk, and then capture the `PostComment.success` event and send it to a third party analytics provider. \n+\n+\n+First, with Talk running, ensure that you can access the `/dev/assets` endpoint and create a random article (i.e.: `localhost:3000/dev/assets`).\n+\n+\n+Then in Talk, uncomment the events code in `/views/dev/article.njk` \n+(https://github.com/coralproject/talk/blob/master/views/dev/article.njk#L32). This will enable events to be sent via the Talk embed that is on the sample article page. This will start a stream of events to the browser console, so that you can see which events are available.\n \n ```\n     events: function(events) {\n@@ -16,7 +26,10 @@ First, we want to uncomment the tracking code in `article.ejs` (https://github.c\n    },\n ```\n \n-Now, we want to add our code that sends the events to our analytics system. In this case, we're sending the `PostComment.success` event. The particular way you send this will depend on what tool you're using. Refer to your tool's API and docs to determine this.\n+Save your changes to `article.njk`, restart Talk, and try refreshing your article in a browser with development console open. You should see the console log the list of Talk’s events.\n+\n+\n+Next, we want to add our code that sends the events to our analytics system. In this example, we're sending the `PostComment.success`  event. The particular way you send this will depend on what tool you're using. Refer to your tool's API and docs to determine this.\n \n ```\n     events: function(events) {\n@@ -29,5 +42,3 @@ Now, we want to add our code that sends the events to our analytics system. In t\n     },\n ```\n You can continue this process for any specific events you'd like to track. You can also remove the `console.log` to stop events being emitted to the browser and instead only send the events to your analytics tool.\n-\n-PR for Reference: https://github.com/coralproject/talk/pull/785"
    }
  ]
}
