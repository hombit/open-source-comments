{
  "sha": "ea34c936d095dce1848b2e2967cbe8a453c9d16a",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6ZWEzNGM5MzZkMDk1ZGNlMTg0OGIyZTI5NjdjYmU4YTQ1M2M5ZDE2YQ==",
  "commit": {
    "author": {
      "name": "immber",
      "email": "jessiekrushing@gmail.com",
      "date": "2019-04-01T22:23:22Z"
    },
    "committer": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-04-01T22:23:22Z"
    },
    "message": "DOCS || CORL-290 || Add Custom SSO Plugin Recipe (#2249)\n\n* updated auth strategies\r\n\r\n* added custom auth plugin recipe\r\n\r\n* fixed format on TALK_SMTP_FROM_ADDRESS\r\n\r\n* cleaned up formatting a bit\r\n\r\n* added CDN to checklist\r\n\r\n* Update docs/source/01-05-pre-launch-checklist.md\r\n\r\nCo-Authored-By: immber <jessiekrushing@gmail.com>\r\n\r\n* Update docs/source/integrating/authentication.md\r\n\r\nCo-Authored-By: immber <jessiekrushing@gmail.com>\r\n\r\n* added links to plugins",
    "tree": {
      "sha": "71a17b27621c7c933be1dc05b090e2c9ee003597",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/71a17b27621c7c933be1dc05b090e2c9ee003597"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/ea34c936d095dce1848b2e2967cbe8a453c9d16a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/ea34c936d095dce1848b2e2967cbe8a453c9d16a",
  "html_url": "https://github.com/coralproject/talk/commit/ea34c936d095dce1848b2e2967cbe8a453c9d16a",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/ea34c936d095dce1848b2e2967cbe8a453c9d16a/comments",
  "author": {
    "login": "immber",
    "id": 7496030,
    "node_id": "MDQ6VXNlcjc0OTYwMzA=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7496030?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/immber",
    "html_url": "https://github.com/immber",
    "followers_url": "https://api.github.com/users/immber/followers",
    "following_url": "https://api.github.com/users/immber/following{/other_user}",
    "gists_url": "https://api.github.com/users/immber/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/immber/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/immber/subscriptions",
    "organizations_url": "https://api.github.com/users/immber/orgs",
    "repos_url": "https://api.github.com/users/immber/repos",
    "events_url": "https://api.github.com/users/immber/events{/privacy}",
    "received_events_url": "https://api.github.com/users/immber/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ef1fd9c1594a5cac421c427b05932f4df4e44e51",
      "url": "https://api.github.com/repos/coralproject/talk/commits/ef1fd9c1594a5cac421c427b05932f4df4e44e51",
      "html_url": "https://github.com/coralproject/talk/commit/ef1fd9c1594a5cac421c427b05932f4df4e44e51"
    }
  ],
  "stats": {
    "total": 68,
    "additions": 42,
    "deletions": 26
  },
  "files": [
    {
      "sha": "73432bc02d68e06acc3373f30d367ff16f807a2b",
      "filename": "docs/source/01-05-pre-launch-checklist.md",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/01-05-pre-launch-checklist.md",
      "raw_url": "https://github.com/coralproject/talk/raw/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/01-05-pre-launch-checklist.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/01-05-pre-launch-checklist.md?ref=ea34c936d095dce1848b2e2967cbe8a453c9d16a",
      "patch": "@@ -13,6 +13,9 @@ permalink: /pre-launch-checklist/\n - [ ] Do you have a domain name for Talk?\n   - **Recommended**: You should host Talk on a subdomain on your main site (e.g. if your site is mysitefornews.org, you should serve Talk from a subdomain like talk.mysitefornews.org) to avoid issues with third-party cookie sharing.\n \n+\n+- [ ] Do you have a Content Delivery Network (CDN) to improve performance and reduce load on your Talk servers?\n+\n   \n - [ ] Do you have a MongoDB instance?\n   - A MongoDB [Docker instance](/talk/installation-from-docker/) hosted alongside Talk?\n@@ -28,9 +31,11 @@ permalink: /pre-launch-checklist/\n - [ ] Do you want to provide single sign-on (SSO) by integrating with an external auth system?\n   - See [Authenticating with Talk](/talk/integrating/authentication/)\n \n+\n - [ ] Do you want to integrate Talk with your CMS to automate embedding Talk Comment Stream into your site?\n   - See [CMS Integration](/talk/integrating/cms-integration/)\n \n+\n - [ ] Do you want to use Social sign-on?\n   - Facebook\n     - Install [talk-plugin-facebook-auth](/talk/plugin/talk-plugin-facebook-auth/)"
    },
    {
      "sha": "48552f51a28337e3cb802d59546644281117845b",
      "filename": "docs/source/02-02-advanced-configuration.md",
      "status": "modified",
      "additions": 9,
      "deletions": 3,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/02-02-advanced-configuration.md",
      "raw_url": "https://github.com/coralproject/talk/raw/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/02-02-advanced-configuration.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/02-02-advanced-configuration.md?ref=ea34c936d095dce1848b2e2967cbe8a453c9d16a",
      "patch": "@@ -416,13 +416,19 @@ cannot. You would use this option in the latter situation.\n \n ## TALK_SMTP_FROM_ADDRESS\n \n-The email address to send emails from using the SMTP provider in the format:\n+The email address to send emails from using the SMTP provider. You can include the name and email address or only provide the email. \n \n ```plain\n-TALK_SMTP_FROM_ADDRESS=\"The Coral Project\" <support@coralproject.net>\n+TALK_SMTP_FROM_ADDRESS=\"The Coral Project\" support@coralproject.net\n+\n+```\n+or \n+\n+```plain\n+TALK_SMTP_FROM_ADDRESS=support@coralproject.net\n+\n ```\n \n-Including the name and email address.\n \n ## TALK_SMTP_HOST\n "
    },
    {
      "sha": "09d21a257b6faebcda2927ada4ba1b4af7d59202",
      "filename": "docs/source/04-05-plugin-recipes.md",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/04-05-plugin-recipes.md",
      "raw_url": "https://github.com/coralproject/talk/raw/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/04-05-plugin-recipes.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/04-05-plugin-recipes.md?ref=ea34c936d095dce1848b2e2967cbe8a453c9d16a",
      "patch": "@@ -47,3 +47,9 @@ Source: [talk-recipes/tree/master/plugins/author-name](https://github.com/coralp\n Enables the ability to hover over a commenter’s name and add plugin\n functionality there. The Member Since plugin that is provided in this recipe is\n an example of this.\n+\n+## recipe-custom-auth\n+\n+Source: [talk-recipes/tree/master/plugins/custom-auth](https://github.com/coralproject/talk-recipes/tree/master/plugins/custom-auth)\n+\n+Example code for creating, and updating Users in Talk from JWT data provided by your custom SSO authentication service. "
    },
    {
      "sha": "ff38f761b04574949a712f4398f68ff30f587ea8",
      "filename": "docs/source/integrating/authentication.md",
      "status": "modified",
      "additions": 22,
      "deletions": 23,
      "changes": 45,
      "blob_url": "https://github.com/coralproject/talk/blob/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/integrating/authentication.md",
      "raw_url": "https://github.com/coralproject/talk/raw/ea34c936d095dce1848b2e2967cbe8a453c9d16a/docs/source/integrating/authentication.md",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/docs/source/integrating/authentication.md?ref=ea34c936d095dce1848b2e2967cbe8a453c9d16a",
      "patch": "@@ -3,41 +3,39 @@ title: Authenticating with Talk\n permalink: /integrating/authentication/\n ---\n \n-Out of the box Talk supports account registration with username and password, as well as features like forgot password. \n+### Authentication Strategies \n \n-You can also integrate Talk with any external authentication service that will enable\n-seamless single sign-on (SSO) for users within your organization. There are a few\n-methods of doing so:\n+Talk comes with built in user management features like account registration with username/email and password, as well as features like resetting a forgotten password. \n \n-1. Passport Middleware\n-2. Custom Token Integration\n+There are four strategies to choose from when it comes to user authentication:\n \n-Both methods work, but there are product decisions that will affect the overall\n-choice.\n+#### Talk Email Authentication\n+Best when you want Talk to manage all user registration, creation and authentication. Requires the least amount of setup and configuration. Users register by creating a Username (must be unique across users, no spaces or special chars), Email, and Password and are stored in Talk’s database. Optionally - you can require an email verification step at time of account creation. *Plugins required: [talk-plugin-local-auth](/talk/plugin/talk-plugin-local-auth), [talk-plugin-auth](/talk/plugin/talk-plugin-auth)*\n \n-## Passport Middleware\n+#### Social Sign-in (FaceBook or Google via Passport Middleware)\n \n-You would choose the **Passport Middleware** route when you are OK using an auth\n-that is triggered from inside Talk that is not connected to an external auth\n-state (you don't use the auth anywhere else now). \n-\n-Plugins are available for the following 3rd party authentication providers:\n+Allows users to use existing social media account to sign in to Talk. Requires you to setup API keys with social sign on provider, and configure your API keys in Talk. Users register and login via a *“Sign in with ….”*, but are not required to set user details such as password or email address. *Plugins required: [talk-plugin-auth](/talk/plugin/talk-plugin-auth), plus at least one of the following:*\n \n * [Facebook](/talk/plugin/talk-plugin-facebook-auth/)\n * [Google](/talk/plugin/talk-plugin-google-auth/) \n \n _FAQ: Can I create a Twitter auth plugin?_ \n This is currently not possible because Talk uses passport.js which does not support Twitter's oAuth2 requirements.\n \n-## Custom Token Integration \n+#### Social Sign-in with Email Association \n+This strategy is actually a combination of the first two. Talk’s built in Email Authentication is augmented by also allowing registration with a social account. Users with social accounts are prompted to associate an email address with their social profile to enable notifications. *Plugins required: [talk-plugin-auth](/talk/plugin/talk-plugin-auth), [talk-plugin-local-auth](/talk/plugin/talk-plugin-local-auth), [talk-plugin-facebook-auth](/talk/plugin/talk-plugin-facebook-auth/), and or [talk-plugin-google-auth](/talk/plugin/talk-plugin-google-auth/)*\n+\n+#### Custom SSO Token Integration\n+When you want users to authenticate via your existing identity system, and be automatically registered/logged into Talk. Users register, login, and manage their user details on your existing site, your user database maintains the source of truth for all user information. Users are created and updated in Talk via jwt tokens passed from your auth service to Talk. *Required Plugins: requires custom plugin development, as well as disabling talk-plugin-auth, and talk-plugin-local-auth*\n+\n+## Setting Up Custom SSO Token Integration\n \n You can integrate Talk with any authentication service to enable single sign-on\n for users. The steps to do that are:\n \n 1. Create a service that generates [JWT tokens](https://jwt.io/introduction/).\n-2. Push the token into the embed.\n-3. Implement the [`tokenUserNotFound`](#implement-tokenusernotfound) hook to\n-   process the token.\n+2. Include the JWT token in your Talk embed script\n+3. Create a custom plugin to generate and authenticate Talk users from the jwt token\n \n ### Create JWT Token\n \n@@ -67,7 +65,7 @@ The generated JWT must contain the following claims:\n ### Generate a key to sign the JWT\n Optionally you can use https://github.com/coralproject/coralcert to generate a key with which to sign the JWTs and specify the secret as an environment variable. \n \n-### Push token into embed\n+### Include token in embed\n \n We're assuming that your CMS is capable of authenticating a user account, or \n at least having the user's details available to send off to the token creation\n@@ -83,15 +81,17 @@ Coral.Talk.render(document.getElementById('coralStreamEmbed'), {\n });\n ```\n \n-Which will pass down the token to Talk and will fire the next steps\n+Which will pass down the token to Talk and will fire the \n `tokenUserNotFound` hook to complete the auth flow.\n \n-### Implement `tokenUserNotFound`\n+### Create a Custom Plugin to Generate Talk Users \n \n This is the only piece of code you'll have to write that lives inside Talk. \n The role of this code is to live as a plugin and provide Talk with a way of\n taking the token that you gave it, and turning into a user.\n \n+Your custom plugin will need to include a `tokenUserNotFound` function that will handle creating a user in Talk from the claims provided on the JWT, refer to [`tokenUserNotFound`](/talk/api/server/#tokenusernotfound) for reference.\n+\n Using the example application we were working with in the JWT issuing step\n above, we'll need to ensure that the configuration is consistent in-between both\n Talk and the JWT issuer. Namely, the following environment variables from our\n@@ -108,5 +108,4 @@ example issuer and Talk must match:\n reference, the basic takeaway is that the secret used to sign the tokens issued\n by the issuer must be able to be verified by Talk.\n \n-For an example of implementing the plugin, refer to [`tokenUserNotFound`](/talk/api/server/#tokenusernotfound)\n-reference.\n+For an example of implementing the plugin, check out our [SSO Custom Auth Recipe](https://github.com/coralproject/talk-recipes/tree/master/plugins/custom-auth)"
    }
  ]
}
