{
  "sha": "1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxYmNlOTdhNTk2ZjMyYjdkZmE1NDIzYWJjZWIxOGRkN2MyZTA4ZWIw",
  "commit": {
    "author": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-04-03T15:40:32Z"
    },
    "committer": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-04-03T15:40:46Z"
    },
    "message": "FIX: Allow queued posts from deleted users to be rejected",
    "tree": {
      "sha": "bd7b745b10aed57931ef5bc0f145f2acfeabb0a1",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/bd7b745b10aed57931ef5bc0f145f2acfeabb0a1"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
  "html_url": "https://github.com/discourse/discourse/commit/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0/comments",
  "author": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "bb2005d46618cae1752a77501409ae7fd6275287",
      "url": "https://api.github.com/repos/discourse/discourse/commits/bb2005d46618cae1752a77501409ae7fd6275287",
      "html_url": "https://github.com/discourse/discourse/commit/bb2005d46618cae1752a77501409ae7fd6275287"
    }
  ],
  "stats": {
    "total": 15,
    "additions": 13,
    "deletions": 2
  },
  "files": [
    {
      "sha": "5b047a17e9b78a01053458e3bdb615232d5e58dc",
      "filename": "app/services/staff_action_logger.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0/app/services/staff_action_logger.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0/app/services/staff_action_logger.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/services/staff_action_logger.rb?ref=1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
      "patch": "@@ -566,8 +566,8 @@ def log_post_rejected(reviewable, rejected_at, opts = {})\n \n     topic = reviewable.topic || Topic.with_deleted.find_by(id: reviewable.topic_id)\n     topic_title = topic&.title || I18n.t('staff_action_logs.not_found')\n-    username = reviewable.created_by.username || I18n.t('staff_action_logs.unknown')\n-    name = reviewable.created_by.name || I18n.t('staff_action_logs.unknown')\n+    username = reviewable.created_by&.username || I18n.t('staff_action_logs.unknown')\n+    name = reviewable.created_by&.name || I18n.t('staff_action_logs.unknown')\n \n     details = [\n       \"created_at: #{reviewable.created_at}\","
    },
    {
      "sha": "40c5106645aef38f61c7ed56554adc3fa1e021ee",
      "filename": "spec/services/staff_action_logger_spec.rb",
      "status": "modified",
      "additions": 11,
      "deletions": 0,
      "changes": 11,
      "blob_url": "https://github.com/discourse/discourse/blob/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0/spec/services/staff_action_logger_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/1bce97a596f32b7dfa5423abceb18dd7c2e08eb0/spec/services/staff_action_logger_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/services/staff_action_logger_spec.rb?ref=1bce97a596f32b7dfa5423abceb18dd7c2e08eb0",
      "patch": "@@ -505,5 +505,16 @@\n       expect(user_history.action).to eq(UserHistory.actions[:post_rejected])\n       expect(user_history.details).to include(reviewable.payload['raw'])\n     end\n+\n+    it \"works if the user was destroyed\" do\n+      reviewable.created_by.destroy\n+      reviewable.reload\n+\n+      expect { log_post_rejected }.to change { UserHistory.count }.by(1)\n+      user_history = UserHistory.last\n+      expect(user_history.action).to eq(UserHistory.actions[:post_rejected])\n+      expect(user_history.details).to include(reviewable.payload['raw'])\n+    end\n+\n   end\n end"
    }
  ]
}
