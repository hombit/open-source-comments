{
  "sha": "c9ddc6ce301d6addb5b63da2168f24a007097e2f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpjOWRkYzZjZTMwMWQ2YWRkYjViNjNkYTIxNjhmMjRhMDA3MDk3ZTJm",
  "commit": {
    "author": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-04-04T21:44:10Z"
    },
    "committer": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-04-04T21:44:10Z"
    },
    "message": "FIX: Make sure the site setting works and fix build",
    "tree": {
      "sha": "0e295a2658e83480a8dd917544cd1fc4367ec81f",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/0e295a2658e83480a8dd917544cd1fc4367ec81f"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/c9ddc6ce301d6addb5b63da2168f24a007097e2f",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/c9ddc6ce301d6addb5b63da2168f24a007097e2f",
  "html_url": "https://github.com/discourse/discourse/commit/c9ddc6ce301d6addb5b63da2168f24a007097e2f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/c9ddc6ce301d6addb5b63da2168f24a007097e2f/comments",
  "author": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "aa4a38b08a49f6e57c616fddd6c9473d7bea349f",
      "url": "https://api.github.com/repos/discourse/discourse/commits/aa4a38b08a49f6e57c616fddd6c9473d7bea349f",
      "html_url": "https://github.com/discourse/discourse/commit/aa4a38b08a49f6e57c616fddd6c9473d7bea349f"
    }
  ],
  "stats": {
    "total": 49,
    "additions": 35,
    "deletions": 14
  },
  "files": [
    {
      "sha": "ea1103d6f065cbb8f7ddb56e7a77f62c91290b62",
      "filename": "app/jobs/scheduled/ensure_post_uploads_existence.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/c9ddc6ce301d6addb5b63da2168f24a007097e2f/app/jobs/scheduled/ensure_post_uploads_existence.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/c9ddc6ce301d6addb5b63da2168f24a007097e2f/app/jobs/scheduled/ensure_post_uploads_existence.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/jobs/scheduled/ensure_post_uploads_existence.rb?ref=c9ddc6ce301d6addb5b63da2168f24a007097e2f",
      "patch": "@@ -8,7 +8,7 @@ class EnsurePostUploadsExistence < Jobs::Scheduled\n     MISSING_UPLOADS ||= \"missing_uploads\"\n \n     def execute(args)\n-      return unless SiteSetting.enable_missing_post_uploads_check\n+      return unless SiteSetting.enable_missing_post_uploads_check?\n \n       PostCustomField\n         .where(name: MISSING_UPLOADS)"
    },
    {
      "sha": "99d187a2ac5cf839b518366c77f2743b6e13c1f9",
      "filename": "spec/jobs/ensure_post_uploads_existence_spec.rb",
      "status": "modified",
      "additions": 34,
      "deletions": 13,
      "changes": 47,
      "blob_url": "https://github.com/discourse/discourse/blob/c9ddc6ce301d6addb5b63da2168f24a007097e2f/spec/jobs/ensure_post_uploads_existence_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/c9ddc6ce301d6addb5b63da2168f24a007097e2f/spec/jobs/ensure_post_uploads_existence_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/jobs/ensure_post_uploads_existence_spec.rb?ref=c9ddc6ce301d6addb5b63da2168f24a007097e2f",
      "patch": "@@ -6,21 +6,42 @@\n     let(:upload) { Fabricate(:upload) }\n     let(:optimized) { Fabricate(:optimized_image, url: '/uploads/default/optimized/1X/d1c2d40ab994e8410c_100x200.png') }\n \n-    it 'should create post custom field for missing upload' do\n-      post = Fabricate(:post, cooked: \"A sample post <img src='#{upload.url}'>\")\n-      upload.destroy!\n-      described_class.new.execute({})\n-      field = PostCustomField.last\n-      expect(field.name).to eq(Jobs::EnsurePostUploadsExistence::MISSING_UPLOADS)\n-      expect(field.value).to eq(upload.url)\n+    context \"when enabled\" do\n+      before do\n+        SiteSetting.enable_missing_post_uploads_check = true\n+      end\n+\n+      it 'should create post custom field for missing upload' do\n+        Fabricate(:post, cooked: \"A sample post <img src='#{upload.url}'>\")\n+        upload.destroy!\n+        described_class.new.execute({})\n+        field = PostCustomField.find_by(name: Jobs::EnsurePostUploadsExistence::MISSING_UPLOADS)\n+        expect(field).to be_present\n+        expect(field.value).to eq(upload.url)\n+      end\n+\n+      it 'should create post custom field with nil value' do\n+        Fabricate(:post, cooked: \"A sample post <a href='#{upload.url}'> <img src='#{optimized.url}'>\")\n+        described_class.new.execute({})\n+        field = PostCustomField.find_by(name: Jobs::EnsurePostUploadsExistence::MISSING_UPLOADS)\n+        expect(field).to be_present\n+        expect(field.value).to eq(nil)\n+      end\n     end\n \n-    it 'should create post custom field with nil value' do\n-      post = Fabricate(:post, cooked: \"A sample post <a href='#{upload.url}'> <img src='#{optimized.url}'>\")\n-      described_class.new.execute({})\n-      field = PostCustomField.last\n-      expect(field.name).to eq(Jobs::EnsurePostUploadsExistence::MISSING_UPLOADS)\n-      expect(field.value).to eq(nil)\n+    context \"when disabled\" do\n+      before do\n+        SiteSetting.enable_missing_post_uploads_check = false\n+      end\n+\n+      it \"does not execute\" do\n+        Fabricate(:post, cooked: \"A sample post <img src='#{upload.url}'>\")\n+        upload.destroy!\n+        described_class.new.execute({})\n+        field = PostCustomField.find_by(name: Jobs::EnsurePostUploadsExistence::MISSING_UPLOADS)\n+        expect(field).to be_blank\n+      end\n     end\n+\n   end\n end"
    }
  ]
}
