{
  "sha": "95ada3f190499d931eef661adf50115bf9fe1a49",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo5NWFkYTNmMTkwNDk5ZDkzMWVlZjY2MWFkZjUwMTE1YmY5ZmUxYTQ5",
  "commit": {
    "author": {
      "name": "Arpit Jalan",
      "email": "arpit@techapj.com",
      "date": "2019-04-13T07:34:25Z"
    },
    "committer": {
      "name": "Arpit Jalan",
      "email": "arpit@techapj.com",
      "date": "2019-04-13T07:34:25Z"
    },
    "message": "FIX: save registration IP address for invited users",
    "tree": {
      "sha": "965970a16dead822ae472a5a4ea8a8d19d312c4b",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/965970a16dead822ae472a5a4ea8a8d19d312c4b"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/95ada3f190499d931eef661adf50115bf9fe1a49",
    "comment_count": 1,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/95ada3f190499d931eef661adf50115bf9fe1a49",
  "html_url": "https://github.com/discourse/discourse/commit/95ada3f190499d931eef661adf50115bf9fe1a49",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/95ada3f190499d931eef661adf50115bf9fe1a49/comments",
  "author": {
    "login": "techAPJ",
    "id": 5732281,
    "node_id": "MDQ6VXNlcjU3MzIyODE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5732281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techAPJ",
    "html_url": "https://github.com/techAPJ",
    "followers_url": "https://api.github.com/users/techAPJ/followers",
    "following_url": "https://api.github.com/users/techAPJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/techAPJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techAPJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techAPJ/subscriptions",
    "organizations_url": "https://api.github.com/users/techAPJ/orgs",
    "repos_url": "https://api.github.com/users/techAPJ/repos",
    "events_url": "https://api.github.com/users/techAPJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techAPJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "techAPJ",
    "id": 5732281,
    "node_id": "MDQ6VXNlcjU3MzIyODE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5732281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techAPJ",
    "html_url": "https://github.com/techAPJ",
    "followers_url": "https://api.github.com/users/techAPJ/followers",
    "following_url": "https://api.github.com/users/techAPJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/techAPJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techAPJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techAPJ/subscriptions",
    "organizations_url": "https://api.github.com/users/techAPJ/orgs",
    "repos_url": "https://api.github.com/users/techAPJ/repos",
    "events_url": "https://api.github.com/users/techAPJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techAPJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b71f19d394885a5b1496f0ddb84b4ec9a2ccb682",
      "url": "https://api.github.com/repos/discourse/discourse/commits/b71f19d394885a5b1496f0ddb84b4ec9a2ccb682",
      "html_url": "https://github.com/discourse/discourse/commit/b71f19d394885a5b1496f0ddb84b4ec9a2ccb682"
    }
  ],
  "stats": {
    "total": 26,
    "additions": 17,
    "deletions": 9
  },
  "files": [
    {
      "sha": "1fcde9ec11f73b6420dd686b657f5862dfd6c296",
      "filename": "app/controllers/invites_controller.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/95ada3f190499d931eef661adf50115bf9fe1a49/app/controllers/invites_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/95ada3f190499d931eef661adf50115bf9fe1a49/app/controllers/invites_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/invites_controller.rb?ref=95ada3f190499d931eef661adf50115bf9fe1a49",
      "patch": "@@ -45,7 +45,7 @@ def perform_accept_invitation\n \n     if invite.present?\n       begin\n-        user = invite.redeem(username: params[:username], name: params[:name], password: params[:password], user_custom_fields: params[:user_custom_fields])\n+        user = invite.redeem(username: params[:username], name: params[:name], password: params[:password], user_custom_fields: params[:user_custom_fields], ip_address: request.remote_ip)\n         if user.present?\n           log_on_user(user) if user.active?\n           post_process_invite(user)"
    },
    {
      "sha": "837402633e7425a40c80285e02cb4a8a9d392b9f",
      "filename": "app/models/invite.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/95ada3f190499d931eef661adf50115bf9fe1a49/app/models/invite.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/95ada3f190499d931eef661adf50115bf9fe1a49/app/models/invite.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/invite.rb?ref=95ada3f190499d931eef661adf50115bf9fe1a49",
      "patch": "@@ -53,8 +53,8 @@ def link_valid?\n     invalidated_at.nil?\n   end\n \n-  def redeem(username: nil, name: nil, password: nil, user_custom_fields: nil)\n-    InviteRedeemer.new(self, username, name, password, user_custom_fields).redeem unless expired? || destroyed? || !link_valid?\n+  def redeem(username: nil, name: nil, password: nil, user_custom_fields: nil, ip_address: nil)\n+    InviteRedeemer.new(self, username, name, password, user_custom_fields, ip_address).redeem unless expired? || destroyed? || !link_valid?\n   end\n \n   def self.invite_by_email(email, invited_by, topic = nil, group_ids = nil, custom_message = nil)"
    },
    {
      "sha": "66d2352b92d082e0d9a12189ecce43122823aefa",
      "filename": "app/models/invite_redeemer.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 4,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/95ada3f190499d931eef661adf50115bf9fe1a49/app/models/invite_redeemer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/95ada3f190499d931eef661adf50115bf9fe1a49/app/models/invite_redeemer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/invite_redeemer.rb?ref=95ada3f190499d931eef661adf50115bf9fe1a49",
      "patch": "@@ -1,4 +1,4 @@\n-InviteRedeemer = Struct.new(:invite, :username, :name, :password, :user_custom_fields) do\n+InviteRedeemer = Struct.new(:invite, :username, :name, :password, :user_custom_fields, :ip_address) do\n \n   def redeem\n     Invite.transaction do\n@@ -12,7 +12,7 @@ def redeem\n   end\n \n   # extracted from User cause it is very specific to invites\n-  def self.create_user_from_invite(invite, username, name, password = nil, user_custom_fields = nil)\n+  def self.create_user_from_invite(invite, username, name, password = nil, user_custom_fields = nil, ip_address = nil)\n     if username && UsernameValidator.new(username).valid_format? && User.username_available?(username)\n       available_username = username\n     else\n@@ -25,7 +25,9 @@ def self.create_user_from_invite(invite, username, name, password = nil, user_cu\n       username: available_username,\n       name: available_name,\n       active: false,\n-      trust_level: SiteSetting.default_invitee_trust_level\n+      trust_level: SiteSetting.default_invitee_trust_level,\n+      ip_address: ip_address,\n+      registration_ip_address: ip_address\n     }\n \n     user = User.unstage(user_params)\n@@ -92,7 +94,7 @@ def mark_invite_redeemed\n \n   def get_invited_user\n     result = get_existing_user\n-    result ||= InviteRedeemer.create_user_from_invite(invite, username, name, password, user_custom_fields)\n+    result ||= InviteRedeemer.create_user_from_invite(invite, username, name, password, user_custom_fields, ip_address)\n     result.send_welcome_message = false\n     result\n   end"
    },
    {
      "sha": "45291b6937ceb12b8f9e8b28a0536e41be672000",
      "filename": "spec/models/invite_redeemer_spec.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/discourse/discourse/blob/95ada3f190499d931eef661adf50115bf9fe1a49/spec/models/invite_redeemer_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/95ada3f190499d931eef661adf50115bf9fe1a49/spec/models/invite_redeemer_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/invite_redeemer_spec.rb?ref=95ada3f190499d931eef661adf50115bf9fe1a49",
      "patch": "@@ -12,12 +12,15 @@\n       expect(user.approved).to eq(true)\n     end\n \n-    it \"can set the password too\" do\n+    it \"can set the password and ip_address\" do\n       password = 's3cure5tpasSw0rD'\n-      user = InviteRedeemer.create_user_from_invite(Fabricate(:invite, email: 'walter.white@email.com'), 'walter', 'Walter White', password)\n+      ip_address = '192.168.1.1'\n+      user = InviteRedeemer.create_user_from_invite(Fabricate(:invite, email: 'walter.white@email.com'), 'walter', 'Walter White', password, nil, ip_address)\n       expect(user).to have_password\n       expect(user.confirm_password?(password)).to eq(true)\n       expect(user.approved).to eq(true)\n+      expect(user.ip_address).to eq(ip_address)\n+      expect(user.registration_ip_address).to eq(ip_address)\n     end\n \n     it \"raises exception with record and errors\" do"
    },
    {
      "sha": "22e301edb5d3c3e9055f9d062da96f029a93c73d",
      "filename": "spec/requests/invites_controller_spec.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/95ada3f190499d931eef661adf50115bf9fe1a49/spec/requests/invites_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/95ada3f190499d931eef661adf50115bf9fe1a49/spec/requests/invites_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/invites_controller_spec.rb?ref=95ada3f190499d931eef661adf50115bf9fe1a49",
      "patch": "@@ -276,6 +276,9 @@\n             expect(response.status).to eq(200)\n             expect(session[:current_user_id]).to eq(invite.user_id)\n             expect(invite.redeemed?).to be_truthy\n+            user = User.find(invite.user_id)\n+            expect(user.ip_address).to be_present\n+            expect(user.registration_ip_address).to be_present\n           end\n \n           it 'redirects to the first topic the user was invited to' do"
    }
  ]
}
