{
  "sha": "af86cf46dc003f19ba52f71826f057884f1119ba",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODphZjg2Y2Y0NmRjMDAzZjE5YmE1MmY3MTgyNmYwNTc4ODRmMTExOWJh",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2019-04-15T16:34:34Z"
    },
    "committer": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2019-04-15T16:34:34Z"
    },
    "message": "FEATURE: Allow API requests to specify the `DISCOURSE_VISIBLE` header\n\nThis allows API consumers to automatically update the user's last_seen time. The default behaviour is unchanged.",
    "tree": {
      "sha": "91f2c42ef245ef17c9918e0b7c81f83178bc5267",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/91f2c42ef245ef17c9918e0b7c81f83178bc5267"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/af86cf46dc003f19ba52f71826f057884f1119ba",
    "comment_count": 1,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/af86cf46dc003f19ba52f71826f057884f1119ba",
  "html_url": "https://github.com/discourse/discourse/commit/af86cf46dc003f19ba52f71826f057884f1119ba",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/af86cf46dc003f19ba52f71826f057884f1119ba/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a37181ab304f1db14c965cb64bfedbff92653ce4",
      "url": "https://api.github.com/repos/discourse/discourse/commits/a37181ab304f1db14c965cb64bfedbff92653ce4",
      "html_url": "https://github.com/discourse/discourse/commit/a37181ab304f1db14c965cb64bfedbff92653ce4"
    }
  ],
  "stats": {
    "total": 38,
    "additions": 25,
    "deletions": 13
  },
  "files": [
    {
      "sha": "27fb47a3276a431c3e2b2b989bac0072dc548cd3",
      "filename": "lib/auth/default_current_user_provider.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/af86cf46dc003f19ba52f71826f057884f1119ba/lib/auth/default_current_user_provider.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/af86cf46dc003f19ba52f71826f057884f1119ba/lib/auth/default_current_user_provider.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/auth/default_current_user_provider.rb?ref=af86cf46dc003f19ba52f71826f057884f1119ba",
      "patch": "@@ -249,10 +249,10 @@ def has_auth_cookie?\n   def should_update_last_seen?\n     return false if Discourse.pg_readonly_mode?\n \n-    if @request.xhr?\n+    api = !!(@env[API_KEY_ENV]) || !!(@env[USER_API_KEY_ENV])\n+\n+    if @request.xhr? || api\n       @env[\"HTTP_DISCOURSE_VISIBLE\".freeze] == \"true\".freeze\n-    elsif !!(@env[API_KEY_ENV]) || !!(@env[USER_API_KEY_ENV])\n-      false\n     else\n       true\n     end"
    },
    {
      "sha": "bf68a08ebd7d5606997f624562738aca6be1d5fe",
      "filename": "spec/components/auth/default_current_user_provider_spec.rb",
      "status": "modified",
      "additions": 22,
      "deletions": 10,
      "changes": 32,
      "blob_url": "https://github.com/discourse/discourse/blob/af86cf46dc003f19ba52f71826f057884f1119ba/spec/components/auth/default_current_user_provider_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/af86cf46dc003f19ba52f71826f057884f1119ba/spec/components/auth/default_current_user_provider_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/auth/default_current_user_provider_spec.rb?ref=af86cf46dc003f19ba52f71826f057884f1119ba",
      "patch": "@@ -365,13 +365,6 @@ def provider(url, opts = nil)\n \n   end\n \n-  it \"should not update last seen for ajax calls without Discourse-Visible header\" do\n-    expect(provider(\"/topic/anything/goes\",\n-                    :method => \"POST\",\n-                    \"HTTP_X_REQUESTED_WITH\" => \"XMLHttpRequest\"\n-          ).should_update_last_seen?).to eq(false)\n-  end\n-\n   describe \"#current_user\" do\n     let(:user) { Fabricate(:user) }\n \n@@ -426,6 +419,11 @@ def provider(url, opts = nil)\n     end\n   end\n \n+  it \"should update last seen for non ajax\" do\n+    expect(provider(\"/topic/anything/goes\", method: \"POST\").should_update_last_seen?).to eq(true)\n+    expect(provider(\"/topic/anything/goes\", method: \"GET\").should_update_last_seen?).to eq(true)\n+  end\n+\n   it \"should update ajax reqs with discourse visible\" do\n     expect(provider(\"/topic/anything/goes\",\n                     :method => \"POST\",\n@@ -434,9 +432,23 @@ def provider(url, opts = nil)\n           ).should_update_last_seen?).to eq(true)\n   end\n \n-  it \"should update last seen for non ajax\" do\n-    expect(provider(\"/topic/anything/goes\", method: \"POST\").should_update_last_seen?).to eq(true)\n-    expect(provider(\"/topic/anything/goes\", method: \"GET\").should_update_last_seen?).to eq(true)\n+  it \"should not update last seen for ajax calls without Discourse-Visible header\" do\n+    expect(provider(\"/topic/anything/goes\",\n+                    :method => \"POST\",\n+                    \"HTTP_X_REQUESTED_WITH\" => \"XMLHttpRequest\"\n+          ).should_update_last_seen?).to eq(false)\n+  end\n+\n+  it \"should update last seen for API calls with Discourse-Visible header\" do\n+    user = Fabricate(:user)\n+    ApiKey.create!(key: \"hello\", user_id: user.id, created_by_id: -1)\n+    params = { :method => \"POST\",\n+               \"HTTP_X_REQUESTED_WITH\" => \"XMLHttpRequest\",\n+               \"HTTP_API_KEY\" => \"hello\"\n+              }\n+\n+    expect(provider(\"/topic/anything/goes\", params).should_update_last_seen?).to eq(false)\n+    expect(provider(\"/topic/anything/goes\", params.merge(\"HTTP_DISCOURSE_VISIBLE\" => \"true\")).should_update_last_seen?).to eq(true)\n   end\n \n   it \"correctly rotates tokens\" do"
    }
  ]
}
