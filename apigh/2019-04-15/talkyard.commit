{
  "sha": "5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6NTM1MWRmZTc0ZmZjMjczYWJjYjA1YjBjZDQ4ZGM4MWQzZDBiZDczMQ==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-15T02:30:22Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-15T03:53:10Z"
    },
    "message": "Add custom ToU and Privacy settings.",
    "tree": {
      "sha": "ff0a94ada67b8e40d21812e77a38eac22cc615f2",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/ff0a94ada67b8e40d21812e77a38eac22cc615f2"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
  "html_url": "https://github.com/debiki/talkyard/commit/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8bf220087d16f620454d6b92480ed82b5e9488f3",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/8bf220087d16f620454d6b92480ed82b5e9488f3",
      "html_url": "https://github.com/debiki/talkyard/commit/8bf220087d16f620454d6b92480ed82b5e9488f3"
    }
  ],
  "stats": {
    "total": 232,
    "additions": 181,
    "deletions": 51
  },
  "files": [
    {
      "sha": "db8c8198e55b52d4030e55caa69d0e72589ff4fe",
      "filename": "app/controllers/LegalController.scala",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/controllers/LegalController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/controllers/LegalController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/LegalController.scala?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -34,28 +34,28 @@ class LegalController @Inject()(cc: ControllerComponents, edContext: EdContext)\n     * of their accounts, also if things in the forum are only accessible to members. [7WKBAY02]\n     */\n   def viewTermsOfUsePage() = GetActionAllowAnyone { request =>\n-    /* Later:\n-    apiReq.siteSettings.termsOfUseUrl match {\n-      case None =>\n-        // Use default terms-of-use page.\n-        Ok(views.html.legal.termsOfUse)\n-      case Some(url) =>\n-        // This website has its own custom terms-of-use page, use it instead.\n-        Redirect(url)\n+    val customToU = request.siteSettings.termsOfUseUrl\n+    if (customToU.isEmpty) {\n+      // Use default terms-of-use page.\n+      Ok(views.html.legal.termsOfUse(SiteTpi(request)).body) as HTML\n+    }\n+    else {\n+      // This website has its own custom terms-of-use page, use it instead.\n+      TemporaryRedirect(customToU)\n     }\n-     */\n-\n-    // For now: (use hardcoded ToU page, no custimization)\n-    Ok(views.html.legal.termsOfUse(SiteTpi(request)).body) as HTML\n   }\n \n \n   /** Should be visible to anyone, so can read before joining. [7WKBAY02]\n     */\n   def viewPrivacyPolicyPage() = GetActionAllowAnyone { request =>\n-    // Later: allow overriding privacy policy, see comments in viewTermsOfUsePage() above.\n-    // For now:\n-    Ok(views.html.legal.privacyPolicy(SiteTpi(request)).body) as HTML\n+    val customPrivacy = request.siteSettings.privacyUrl\n+    if (customPrivacy.isEmpty) {\n+      Ok(views.html.legal.privacyPolicy(SiteTpi(request)).body) as HTML\n+    }\n+    else {\n+      TemporaryRedirect(customPrivacy)\n+    }\n   }\n \n }"
    },
    {
      "sha": "5ca86ab8b6b23151c43f68cc23afff7b8ae2ea9e",
      "filename": "app/debiki/ReactJson.scala",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/debiki/ReactJson.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/debiki/ReactJson.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/ReactJson.scala?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -1064,6 +1064,10 @@ object JsonMaker {\n       \"enableInstagramLogin\" -> settings.enableInstagramLogin)\n \n     val D = AllSettings.makeDefault(globals)\n+    if (settings.termsOfUseUrl != D.termsOfUseUrl)\n+      json += \"termsOfUseUrl\" -> JsString(settings.termsOfUseUrl)\n+    if (settings.privacyUrl != D.privacyUrl)\n+      json += \"privacyUrl\" -> JsString(settings.privacyUrl)\n     if (settings.languageCode != D.languageCode)\n       json += \"languageCode\" -> JsString(settings.languageCode)\n     if (settings.inviteOnly != D.inviteOnly)"
    },
    {
      "sha": "e67fcc7ab98358dbcf1f9585c6661eaae6a1acf0",
      "filename": "app/debiki/settings.scala",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/debiki/settings.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/app/debiki/settings.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/settings.scala?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -109,6 +109,11 @@ trait AllSettings {\n   def orgDomain: String\n   def orgFullName: String\n   def orgShortName: String\n+  def termsOfUseUrl: String\n+  def privacyUrl: String\n+  def rulesUrl: String\n+  def contactEmailAddr: String\n+  def contactUrl: String\n   def contribAgreement: ContribAgreement\n   def contentLicense: ContentLicense\n   def languageCode: String\n@@ -202,6 +207,11 @@ trait AllSettings {\n     orgDomain = Some(self.orgDomain),\n     orgFullName = Some(self.orgFullName),\n     orgShortName = Some(self.orgShortName),\n+    termsOfUseUrl = Some(self.termsOfUseUrl),\n+    privacyUrl = Some(self.privacyUrl),\n+    rulesUrl = Some(self.rulesUrl),\n+    contactEmailAddr = Some(self.contactEmailAddr),\n+    contactUrl = Some(self.contactUrl),\n     contribAgreement = Some(self.contribAgreement),\n     contentLicense = Some(self.contentLicense),\n     languageCode = Some(self.languageCode),\n@@ -299,6 +309,11 @@ object AllSettings {\n     val orgDomain = \"\"\n     val orgFullName = \"\"\n     val orgShortName = \"\"\n+    val termsOfUseUrl = \"\"\n+    val privacyUrl = \"\"\n+    val rulesUrl = \"\"\n+    val contactEmailAddr = \"\"\n+    val contactUrl = \"\"\n     val contribAgreement: ContribAgreement = ContribAgreement.CcBy3And4\n     val contentLicense: ContentLicense = ContentLicense.CcBySa4\n     val languageCode = \"en_US\"\n@@ -394,6 +409,11 @@ case class EffectiveSettings(\n   def orgDomain: String = firstInChain(_.orgDomain) getOrElse default.orgDomain\n   def orgFullName: String = firstInChain(_.orgFullName) getOrElse default.orgFullName\n   def orgShortName: String = firstInChain(_.orgShortName) getOrElse default.orgShortName\n+  def termsOfUseUrl: String = firstInChain(_.termsOfUseUrl) getOrElse default.termsOfUseUrl\n+  def privacyUrl: String = firstInChain(_.privacyUrl) getOrElse default.privacyUrl\n+  def rulesUrl: String = firstInChain(_.rulesUrl) getOrElse default.rulesUrl\n+  def contactEmailAddr: String = firstInChain(_.contactEmailAddr) getOrElse default.contactEmailAddr\n+  def contactUrl: String = firstInChain(_.contactUrl) getOrElse default.contactUrl\n   def contribAgreement: ContribAgreement = firstInChain(_.contribAgreement) getOrElse default.contribAgreement\n   def contentLicense: ContentLicense = firstInChain(_.contentLicense) getOrElse default.contentLicense\n   def languageCode: String = firstInChain(_.languageCode) getOrElse default.languageCode\n@@ -587,6 +607,11 @@ object Settings2 {\n       \"companyDomain\" -> JsStringOrNull(s.orgDomain),\n       \"companyFullName\" -> JsStringOrNull(s.orgFullName),\n       \"companyShortName\" -> JsStringOrNull(s.orgShortName),\n+      \"termsOfUseUrl\" -> JsStringOrNull(s.termsOfUseUrl),\n+      \"privacyUrl\" -> JsStringOrNull(s.privacyUrl),\n+      \"rulesUrl\" -> JsStringOrNull(s.rulesUrl),\n+      \"contactEmailAddr\" -> JsStringOrNull(s.contactEmailAddr),\n+      \"contactUrl\" -> JsStringOrNull(s.contactUrl),\n       \"contribAgreement\" -> JsNumberOrNull(s.contribAgreement.map(_.toInt)),\n       \"contentLicense\" -> JsNumberOrNull(s.contentLicense.map(_.toInt)),\n       \"languageCode\" -> JsStringOrNull(s.languageCode),\n@@ -668,6 +693,11 @@ object Settings2 {\n     orgDomain = anyString(json, \"companyDomain\", d.orgDomain),\n     orgFullName = anyString(json, \"companyFullName\", d.orgFullName),\n     orgShortName = anyString(json, \"companyShortName\", d.orgShortName),\n+    termsOfUseUrl = anyString(json, \"termsOfUseUrl\", d.termsOfUseUrl),\n+    privacyUrl = anyString(json, \"privacyUrl\", d.privacyUrl),\n+    rulesUrl = anyString(json, \"rulesUrl\", d.rulesUrl),\n+    contactEmailAddr = anyString(json, \"contactEmailAddr\", d.contactEmailAddr),\n+    contactUrl = anyString(json, \"contactUrl\", d.contactUrl),\n     contribAgreement = anyInt(json, \"contribAgreement\", d.contribAgreement.toInt).map(_.map(\n       ContribAgreement.fromInt(_) getOrElse throwBadRequest(\n         \"EsE5YK28\", \"Invalid contributors agreement\"))),"
    },
    {
      "sha": "b5f7757df6c91eb5fe962f41ee53797a625c8219",
      "filename": "client/app-more/login/create-user-dialog.more.ts",
      "status": "modified",
      "additions": 20,
      "deletions": 13,
      "changes": 33,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-more/login/create-user-dialog.more.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-more/login/create-user-dialog.more.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-more/login/create-user-dialog.more.ts?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -391,18 +391,19 @@ const AcceptTermsDialog = createComponent({\n     }\n   },\n   render: function () {\n-    const isOwner = this.state.isOwner;\n-    const accepts = this.state.accepts;\n-    const store = this.state.store;\n-    const termsUrl = isOwner ?\n-        store.siteOwnerTermsUrl || '/-/terms-for-site-owners': '/-/terms-of-use';\n-    const privacyUrl = isOwner ?\n-        store.siteOwnerPrivacyUrl || '/-/privacy-for-site-owners' : '/-/privacy-policy';\n-    return (\n-      // Don't set onHide — shouldn't be closeable by clicking outside, only by choosing Yes.\n-      Modal({ show: this.state.isOpen },\n-        ModalHeader({}, ModalTitle({}, t.terms.TermsAndPrivacy)),\n-        ModalBody({},\n+    let modalBody;\n+    if (this.state.isOpen) {\n+      const isOwner = this.state.isOwner;\n+      const accepts = this.state.accepts;\n+      const store: Store = this.state.store;\n+      const settings: SettingsVisibleClientSide = store.settings;\n+      const termsUrl = isOwner\n+          ? store.siteOwnerTermsUrl || '/-/terms-of-use'\n+          : settings.termsOfUseUrl || '/-/terms-of-use';\n+      const privacyUrl = isOwner\n+          ? store.siteOwnerPrivacyUrl || '/-/privacy-policy'\n+          : settings.privacyUrl || '/-/privacy-policy';\n+      modalBody = ModalBody({},\n           // Use a <form>, so Enter key clicks the Continue button.\n           r.form({ className: 'clearfix' },\n             r.p({},\n@@ -422,7 +423,13 @@ const AcceptTermsDialog = createComponent({\n \n             // Keep inside the <form>, so Enter works. (Don't add a ModalFooter)\n             Button({ onClick: this.close, className: 's_TermsD_B' + (accepts ? ' btn-primary' : '') },\n-              accepts ? t.Continue : t.Cancel)))));\n+              accepts ? t.Continue : t.Cancel)));\n+    }\n+    return (\n+      // Don't set onHide — shouldn't be closeable by clicking outside, only by choosing Yes.\n+      Modal({ show: this.state.isOpen },\n+        ModalHeader({}, ModalTitle({}, t.terms.TermsAndPrivacy)),\n+        modalBody));\n   }\n });\n "
    },
    {
      "sha": "10deec60147a4421b7053d45f31ff93438a0cd9b",
      "filename": "client/app-slim/model.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-slim/model.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-slim/model.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/model.ts?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -922,6 +922,8 @@ interface Store extends Origins {\n \n // Default settings: [8L4KWU02]\n interface SettingsVisibleClientSide {\n+  termsOfUseUrl?: string;               // default: undefined —> built-in\n+  privacyUrl?: string;                  // default: undefined —> built-in\n   languageCode?: string;                // default: 'en_US'\n   inviteOnly?: boolean;                 // default: false\n   allowSignup?: boolean;                // default: true\n@@ -1531,6 +1533,8 @@ interface Settings {\n   companyDomain: string;\n   companyFullName: string;\n   companyShortName: string;\n+  termsOfUseUrl: string;\n+  privacyUrl: string;\n   contribAgreement: ContribAgreement;\n   contentLicense: ContentLicense;\n "
    },
    {
      "sha": "3b41bbba08c18e02747469affdd900017e488fce",
      "filename": "client/app-staff/admin/admin-app.staff.ts",
      "status": "modified",
      "additions": 26,
      "deletions": 2,
      "changes": 28,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-staff/admin/admin-app.staff.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/client/app-staff/admin/admin-app.staff.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-staff/admin/admin-app.staff.ts?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -1881,6 +1881,8 @@ const LegalSettings = createFactory({\n     const userContentTermsLink = r.a({ href: '/-/terms-of-use#3', target: '_blank' },\n       \"section about user contributions on your Terms of Use\");\n \n+    const hasCustomToU = valueOf(s => s.termsOfUseUrl).length;\n+\n     return (\n       r.div({},\n         Setting2(props, { type: 'text', label: \"Organization name\", id: 'e2eAA_Ss_OrgNameTI',\n@@ -1905,6 +1907,26 @@ const LegalSettings = createFactory({\n           }\n         }),\n \n+        Setting2(props, { type: 'text', label: \"Custom Terms of Use URL\",\n+          id: 'e_ToUUrl',\n+          help: r.span({}, \"A URL to any Terms of Use page of yours that you want to use \" +\n+            \"instead of the built-in default.\"),\n+          getter: (s: Settings) => s.termsOfUseUrl,\n+          update: (newSettings: Settings, target) => {\n+            newSettings.termsOfUseUrl = target.value;\n+          }\n+        }),\n+\n+        Setting2(props, { type: 'text', label: \"Custom Privacy Policy URL\",\n+          id: 'e_PrivacyUrl',\n+          help: r.span({}, \"A URL to any Privacy Policy page of yours that you want to use \" +\n+            \"instead of the built-in default.\"),\n+          getter: (s: Settings) => s.privacyUrl,\n+          update: (newSettings: Settings, target) => {\n+            newSettings.privacyUrl = target.value;\n+          }\n+        }),\n+\n         /* This setting isn't needed? Remove?  [3PU85J7]\n         Setting2(props, { type: 'text', label: \"company_domain\",\n           help: r.span({}, \"The domain name owned by the company \" +\n@@ -1915,7 +1937,8 @@ const LegalSettings = createFactory({\n           }\n         }), */\n \n-        Setting2(props, { type: 'select', label: \"Contributors agreement\",\n+        hasCustomToU ? null : Setting2(props, {\n+          type: 'select', label: \"Contributors agreement\",\n           help: r.span({}, \"Which rights should people grant to you on material they create \" +\n               \"and post to this community? (This setting affects your \", userContentTermsLink,\n             \" page.)\"),\n@@ -1936,7 +1959,8 @@ const LegalSettings = createFactory({\n             \"Dual license under CC-BY 3.0 and 4.0\"),\n         ]),\n \n-        Setting2(props, { type: 'select', label: \"Content license\",\n+        hasCustomToU ? null : Setting2(props, {\n+          type: 'select', label: \"Content license\",\n           help: r.span({},\n             \"Under which \",\n             r.a({ href: 'https://creativecommons.org/licenses/', target: '_blank' },"
    },
    {
      "sha": "759418fedc6a27fe6d9acf37f14c8012b28e636e",
      "filename": "conf/app-dev.conf",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/conf/app-dev.conf",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/conf/app-dev.conf",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/conf/app-dev.conf?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -7,6 +7,10 @@ talkyard.createSiteHostname=${?CREATE_SITE_HOSTNAME}\n \n talkyard.becomeOwnerEmailAddress=${?BECOME_OWNER_EMAIL_ADDRESS}\n \n+# For e2e tests. [5ADS24]\n+talkyard.siteOwnerTermsUrl=\"/e2e-test-siteOwnerTermsUrl\"\n+talkyard.siteOwnerPrivacyUrl=\"/e2e-test-siteOwnerPrivacyUrl\"\n+\n \n # Security\n # ---------------------"
    },
    {
      "sha": "23dee832578b2e8148760040a67beef4d285f302",
      "filename": "conf/routes",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/conf/routes",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/conf/routes",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/conf/routes?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -83,12 +83,8 @@ POST  /-/save-site-settings     controllers.SettingsController.saveSiteSettings\n POST  /-/change-hostname        controllers.SettingsController.changeHostname\n POST  /-/update-extra-hostnames controllers.SettingsController.updateExtraHostnames\n \n-# LEGAL: SHOULD create /-/terms-of-use-for-owners, and /-/privacy-policy-for-owners.\n-# But for now, these are OK: (and says we can change them — the main change, would be to *remove* terms)\n GET   /-/terms-of-use            controllers.LegalController.viewTermsOfUsePage\n-GET   /-/terms-for-site-owners   controllers.LegalController.viewTermsOfUsePage\n GET   /-/privacy-policy          controllers.LegalController.viewPrivacyPolicyPage\n-GET   /-/privacy-for-site-owners controllers.LegalController.viewPrivacyPolicyPage\n \n GET   /-/load-special-content   controllers.SpecialContentController.loadContent(rootPageId, contentId)\n POST  /-/save-special-content   controllers.SpecialContentController.saveContent"
    },
    {
      "sha": "0356ce03ce3af5a4034f42d6f6dd2eb6945bc216",
      "filename": "modules/ed-core/src/main/scala/com/debiki/core/EditedSettings.scala",
      "status": "modified",
      "additions": 15,
      "deletions": 0,
      "changes": 15,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ed-core/src/main/scala/com/debiki/core/EditedSettings.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ed-core/src/main/scala/com/debiki/core/EditedSettings.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/main/scala/com/debiki/core/EditedSettings.scala?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -112,6 +112,11 @@ case class EditedSettings(\n   orgDomain: Option[String],\n   orgFullName: Option[String],\n   orgShortName: Option[String],\n+  termsOfUseUrl: Option[String],\n+  privacyUrl: Option[String],\n+  rulesUrl: Option[String],\n+  contactEmailAddr: Option[String],\n+  contactUrl: Option[String],\n   contribAgreement: Option[ContribAgreement],\n   contentLicense: Option[ContentLicense],\n   languageCode: Option[String],\n@@ -211,6 +216,11 @@ object EditedSettings {\n     orgDomain = None,\n     orgFullName = None,\n     orgShortName = None,\n+    termsOfUseUrl = None,\n+    privacyUrl = None,\n+    rulesUrl = None,\n+    contactEmailAddr = None,\n+    contactUrl = None,\n     contribAgreement = None,\n     contentLicense = None,\n     languageCode = None,\n@@ -297,6 +307,11 @@ case class SettingsToSave(\n   orgDomain: Option[Option[String]] = None,\n   orgFullName: Option[Option[String]] = None,\n   orgShortName: Option[Option[String]] = None,\n+  termsOfUseUrl: Option[Option[String]] = None,\n+  privacyUrl: Option[Option[String]] = None,\n+  rulesUrl: Option[Option[String]] = None,\n+  contactEmailAddr: Option[Option[String]] = None,\n+  contactUrl: Option[Option[String]] = None,\n   contribAgreement: Option[Option[ContribAgreement]] = None,\n   contentLicense: Option[Option[ContentLicense]] = None,\n   languageCode: Option[Option[String]] = None,"
    },
    {
      "sha": "208f9970a0bff08f5c168b8b70875d8528241810",
      "filename": "modules/ty-dao-rdb/src/main/resources/db/migration/y2019/v379__tos_privacy_settings.sql",
      "status": "added",
      "additions": 23,
      "deletions": 0,
      "changes": 23,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ty-dao-rdb/src/main/resources/db/migration/y2019/v379__tos_privacy_settings.sql",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ty-dao-rdb/src/main/resources/db/migration/y2019/v379__tos_privacy_settings.sql",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/resources/db/migration/y2019/v379__tos_privacy_settings.sql?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -0,0 +1,23 @@\n+\n+alter table settings3 add column terms_of_use_url varchar;\n+alter table settings3 add column privacy_url varchar;\n+alter table settings3 add column rules_url varchar;\n+alter table settings3 add column contact_email_addr varchar;\n+alter table settings3 add column contact_url varchar;\n+\n+\n+alter table settings3 add constraint settings_c_termsofuseurl_len check (\n+  length(terms_of_use_url) between 1 and 200);\n+\n+alter table settings3 add constraint settings_c_privacyurl_len check (\n+  length(privacy_url) between 1 and 200);\n+\n+alter table settings3 add constraint settings_c_rulesurl_len check (\n+  length(rules_url) between 1 and 200);\n+\n+alter table settings3 add constraint settings_c_contactemailaddr_len check (\n+  length(contact_email_addr) between 1 and 200);\n+\n+alter table settings3 add constraint settings_c_contacturl_len check (\n+  length(contact_url) between 1 and 200);\n+"
    },
    {
      "sha": "16257fffa366ab59b2d5eff5a74191152416a6f8",
      "filename": "modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/SettingsSiteDaoMixin.scala",
      "status": "modified",
      "additions": 35,
      "deletions": 15,
      "changes": 50,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/SettingsSiteDaoMixin.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/SettingsSiteDaoMixin.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/SettingsSiteDaoMixin.scala?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -111,6 +111,11 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n         org_domain,\n         org_full_name,\n         org_short_name,\n+        terms_of_use_url,\n+        privacy_url,\n+        rules_url,\n+        contact_email_addr,\n+        contact_url,\n         contrib_agreement,\n         content_license,\n         language_code,\n@@ -128,7 +133,7 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n         html_tag_css_classes)\n       values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,\n           ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,\n-          ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n+          ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n       \"\"\"\n     val values = List(\n       siteId.asAnyRef,\n@@ -186,6 +191,11 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n       editedSettings2.orgDomain.getOrElse(None).trimOrNullVarchar,\n       editedSettings2.orgFullName.getOrElse(None).trimOrNullVarchar,\n       editedSettings2.orgShortName.getOrElse(None).trimOrNullVarchar,\n+      editedSettings2.termsOfUseUrl.getOrElse(None).trimOrNullVarchar,\n+      editedSettings2.privacyUrl.getOrElse(None).trimOrNullVarchar,\n+      editedSettings2.rulesUrl.getOrElse(None).trimOrNullVarchar,\n+      editedSettings2.contactEmailAddr.getOrElse(None).trimOrNullVarchar,\n+      editedSettings2.contactUrl.getOrElse(None).trimOrNullVarchar,\n       editedSettings2.contribAgreement.getOrElse(None).map(_.toInt).orNullInt,\n       editedSettings2.contentLicense.getOrElse(None).map(_.toInt).orNullInt,\n       editedSettings2.languageCode.getOrElse(None).trimOrNullVarchar,\n@@ -274,6 +284,11 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n     maybeSet(\"org_domain\", s.orgDomain.map(_.trimOrNullVarchar))\n     maybeSet(\"org_full_name\", s.orgFullName.map(_.trimOrNullVarchar))\n     maybeSet(\"org_short_name\", s.orgShortName.map(_.trimOrNullVarchar))\n+    maybeSet(\"terms_of_use_url\", s.termsOfUseUrl.map(_.trimOrNullVarchar))\n+    maybeSet(\"privacy_url\", s.privacyUrl.map(_.trimOrNullVarchar))\n+    maybeSet(\"rules_url\", s.rulesUrl.map(_.trimOrNullVarchar))\n+    maybeSet(\"contact_email_addr\", s.contactEmailAddr.map(_.trimOrNullVarchar))\n+    maybeSet(\"contact_url\", s.contactUrl.map(_.trimOrNullVarchar))\n     maybeSet(\"contrib_agreement\", s.contribAgreement.map(_.map(_.toInt).orNullInt))\n     maybeSet(\"content_license\", s.contentLicense.map(_.map(_.toInt).orNullInt))\n     maybeSet(\"language_code\", s.languageCode.map(_.trimOrNullVarchar))\n@@ -350,22 +365,27 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n       numFirstPostsToReview = getOptionalInt(rs, \"num_first_posts_to_review\"),\n       numFirstPostsToApprove = getOptionalInt(rs, \"num_first_posts_to_approve\"),\n       numFirstPostsToAllow = getOptionalInt(rs, \"num_first_posts_to_allow\"),\n-      faviconUrl = Option(rs.getString(\"favicon_url\")),\n-      headStylesHtml = Option(rs.getString(\"head_styles_html\")),\n-      headScriptsHtml = Option(rs.getString(\"head_scripts_html\")),\n-      endOfBodyHtml = Option(rs.getString(\"end_of_body_html\")),\n-      headerHtml = Option(rs.getString(\"header_html\")),\n-      footerHtml = Option(rs.getString(\"footer_html\")),\n+      faviconUrl = getOptString(rs, \"favicon_url\"),\n+      headStylesHtml = getOptString(rs, \"head_styles_html\"),\n+      headScriptsHtml = getOptString(rs, \"head_scripts_html\"),\n+      endOfBodyHtml = getOptString(rs, \"end_of_body_html\"),\n+      headerHtml = getOptString(rs, \"header_html\"),\n+      footerHtml = getOptString(rs, \"footer_html\"),\n       horizontalComments = getOptBoolean(rs, \"horizontal_comments\"),\n-      socialLinksHtml = Option(rs.getString(\"social_links_html\")),\n-      logoUrlOrHtml = Option(rs.getString(\"logo_url_or_html\")),\n-      orgDomain = Option(rs.getString(\"org_domain\")),\n-      orgFullName = Option(rs.getString(\"org_full_name\")),\n-      orgShortName = Option(rs.getString(\"org_short_name\")),\n+      socialLinksHtml = getOptString(rs, \"social_links_html\"),\n+      logoUrlOrHtml = getOptString(rs, \"logo_url_or_html\"),\n+      orgDomain = getOptString(rs, \"org_domain\"),\n+      orgFullName = getOptString(rs, \"org_full_name\"),\n+      orgShortName = getOptString(rs, \"org_short_name\"),\n+      termsOfUseUrl = getOptString(rs, \"terms_of_use_url\"),\n+      privacyUrl = getOptString(rs, \"privacy_url\"),\n+      rulesUrl = getOptString(rs, \"rules_url\"),\n+      contactEmailAddr = getOptString(rs, \"contact_email_addr\"),\n+      contactUrl = getOptString(rs, \"contact_url\"),\n       contribAgreement = ContribAgreement.fromInt(rs.getInt(\"contrib_agreement\")), // 0 -> None, ok\n       contentLicense = ContentLicense.fromInt(rs.getInt(\"content_license\")), // 0 -> None, ok\n-      languageCode = Option(rs.getString(\"language_code\")),\n-      googleUniversalAnalyticsTrackingId = Option(rs.getString(\"google_analytics_id\")),\n+      languageCode = getOptString(rs, \"language_code\"),\n+      googleUniversalAnalyticsTrackingId = getOptString(rs, \"google_analytics_id\"),\n       enableForum = getOptBool(rs, \"enable_forum\"),\n       enableApi = getOptBool(rs, \"enable_api\"),\n       enableTags = getOptBool(rs, \"enable_tags\"),\n@@ -376,7 +396,7 @@ trait SettingsSiteDaoMixin extends SiteTransaction {\n       featureFlags = getOptString(rs, \"feature_flags\"),\n       allowEmbeddingFrom = getOptString(rs, \"allow_embedding_from\"),\n       embeddedCommentsCategoryId = getOptInt(rs, \"embedded_comments_category_id\"),\n-      htmlTagCssClasses = Option(rs.getString(\"html_tag_css_classes\")),\n+      htmlTagCssClasses = getOptString(rs, \"html_tag_css_classes\"),\n       numFlagsToHidePost = getOptInt(rs, \"num_flags_to_hide_post\"),\n       cooldownMinutesAfterFlaggedHidden = getOptInt(rs, \"cooldown_minutes_after_flagged_hidden\"),\n       numFlagsToBlockNewUser = getOptInt(rs, \"num_flags_to_block_new_user\"),"
    },
    {
      "sha": "d17452159998fa6192cc23650f911c3e427898dc",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/debiki/talkyard/blob/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/5351dfe74ffc273abcb05b0cd48dc81d3d0bd731/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=5351dfe74ffc273abcb05b0cd48dc81d3d0bd731",
      "patch": "@@ -2196,8 +2196,11 @@ function pagesFor(browser) {\n         const termsLinkHtml = browser.getHTML('#e_TermsL');\n         const privacyLinkHtml = browser.getHTML('#e_PrivacyL');\n         if (isForSiteOwner) {\n-          assert(termsLinkHtml.indexOf('/-/terms-for-site-owners') >= 0);\n-          assert(privacyLinkHtml.indexOf('/-/privacy-for-site-owners') >= 0);\n+          // In dev-test, the below dummy urls are defined [5ADS24], but not in prod.\n+          if (!settings.prod) {\n+            assert(termsLinkHtml.indexOf('href=\"/e2e-test-siteOwnerTermsUrl\"') >= 0);\n+            assert(privacyLinkHtml.indexOf('href=\"/e2e-test-siteOwnerPrivacyUrl\"') >= 0);\n+          }\n         }\n         else if (isForSiteOwner === false) {\n           assert(termsLinkHtml.indexOf('/-/terms-of-use') >= 0);"
    }
  ]
}
