{
  "sha": "a19d89364f64ca2222a7930c1b3cbbd58150bac7",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODphMTlkODkzNjRmNjRjYTIyMjJhNzkzMGMxYjNjYmJkNTgxNTBiYWM3",
  "commit": {
    "author": {
      "name": "Penar Musaraj",
      "email": "pmusaraj@gmail.com",
      "date": "2019-04-18T16:58:39Z"
    },
    "committer": {
      "name": "Penar Musaraj",
      "email": "pmusaraj@gmail.com",
      "date": "2019-04-18T16:58:39Z"
    },
    "message": "DEV: fix and skip upload_controller test\n\nThis test of `prevent_anons_from_downloading_files` was testing an image instead of an attachment and it was testing the wrong upload URL. I fixed the test, but with `config.public_file_server.enabled = true` on the test environment, this will always fail, as preventing anonymous file downloads depends on nginx. So, I marked the test as skipped, for now.",
    "tree": {
      "sha": "b4dff009b50787b5cf56ce150cbae24c37fb5e70",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/b4dff009b50787b5cf56ce150cbae24c37fb5e70"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/a19d89364f64ca2222a7930c1b3cbbd58150bac7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/a19d89364f64ca2222a7930c1b3cbbd58150bac7",
  "html_url": "https://github.com/discourse/discourse/commit/a19d89364f64ca2222a7930c1b3cbbd58150bac7",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/a19d89364f64ca2222a7930c1b3cbbd58150bac7/comments",
  "author": {
    "login": "pmusaraj",
    "id": 368961,
    "node_id": "MDQ6VXNlcjM2ODk2MQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/368961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pmusaraj",
    "html_url": "https://github.com/pmusaraj",
    "followers_url": "https://api.github.com/users/pmusaraj/followers",
    "following_url": "https://api.github.com/users/pmusaraj/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmusaraj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pmusaraj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmusaraj/subscriptions",
    "organizations_url": "https://api.github.com/users/pmusaraj/orgs",
    "repos_url": "https://api.github.com/users/pmusaraj/repos",
    "events_url": "https://api.github.com/users/pmusaraj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pmusaraj/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "pmusaraj",
    "id": 368961,
    "node_id": "MDQ6VXNlcjM2ODk2MQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/368961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pmusaraj",
    "html_url": "https://github.com/pmusaraj",
    "followers_url": "https://api.github.com/users/pmusaraj/followers",
    "following_url": "https://api.github.com/users/pmusaraj/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmusaraj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pmusaraj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmusaraj/subscriptions",
    "organizations_url": "https://api.github.com/users/pmusaraj/orgs",
    "repos_url": "https://api.github.com/users/pmusaraj/repos",
    "events_url": "https://api.github.com/users/pmusaraj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pmusaraj/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7826acc4a77974c241522c5b5ebbaa0a08812654",
      "url": "https://api.github.com/repos/discourse/discourse/commits/7826acc4a77974c241522c5b5ebbaa0a08812654",
      "html_url": "https://github.com/discourse/discourse/commit/7826acc4a77974c241522c5b5ebbaa0a08812654"
    }
  ],
  "stats": {
    "total": 9,
    "additions": 5,
    "deletions": 4
  },
  "files": [
    {
      "sha": "9106ea11ed07ea011ced87594d5036af48bff40e",
      "filename": "spec/requests/uploads_controller_spec.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/a19d89364f64ca2222a7930c1b3cbbd58150bac7/spec/requests/uploads_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/a19d89364f64ca2222a7930c1b3cbbd58150bac7/spec/requests/uploads_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/uploads_controller_spec.rb?ref=a19d89364f64ca2222a7930c1b3cbbd58150bac7",
      "patch": "@@ -198,8 +198,8 @@\n     let(:sha) { Digest::SHA1.hexdigest(\"discourse\") }\n     let(:user) { Fabricate(:user) }\n \n-    def upload_file(file)\n-      fake_logo = Rack::Test::UploadedFile.new(file_from_fixtures(file))\n+    def upload_file(file, folder = \"images\")\n+      fake_logo = Rack::Test::UploadedFile.new(file_from_fixtures(file, folder))\n       SiteSetting.authorized_extensions = \"*\"\n       sign_in(user)\n \n@@ -261,11 +261,12 @@ def upload_file(file)\n \n     context \"prevent anons from downloading files\" do\n       it \"returns 404 when an anonymous user tries to download a file\" do\n-        upload = upload_file(\"logo.png\")\n+        skip(\"this only works when nginx/apache is asset server\") if Discourse::Application.config.public_file_server.enabled\n+        upload = upload_file(\"small.pdf\", \"pdf\")\n         delete \"/session/#{user.username}.json\" # upload a file, then sign out\n \n         SiteSetting.prevent_anons_from_downloading_files = true\n-        get \"/uploads/#{site}/#{upload.sha1}.#{upload.extension}\"\n+        get upload.url\n         expect(response.status).to eq(404)\n       end\n     end"
    }
  ]
}
