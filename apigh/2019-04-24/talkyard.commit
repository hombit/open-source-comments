{
  "sha": "162a3d2d8eca013d3bc33f761e2416015f82ef02",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6MTYyYTNkMmQ4ZWNhMDEzZDNiYzMzZjc2MWUyNDE2MDE1ZjgyZWYwMg==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-19T11:29:52Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-20T04:53:03Z"
    },
    "message": "Revert to ThreadedDiscussion topic layout, prepare for other layouts.",
    "tree": {
      "sha": "8a305aae0d168eb1819b447516dce9bfd127ace7",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/8a305aae0d168eb1819b447516dce9bfd127ace7"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/162a3d2d8eca013d3bc33f761e2416015f82ef02",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/162a3d2d8eca013d3bc33f761e2416015f82ef02",
  "html_url": "https://github.com/debiki/talkyard/commit/162a3d2d8eca013d3bc33f761e2416015f82ef02",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/162a3d2d8eca013d3bc33f761e2416015f82ef02/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a44c5e328248d329cdc664e29472ebc9d2aa5e49",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/a44c5e328248d329cdc664e29472ebc9d2aa5e49",
      "html_url": "https://github.com/debiki/talkyard/commit/a44c5e328248d329cdc664e29472ebc9d2aa5e49"
    }
  ],
  "stats": {
    "total": 338,
    "additions": 283,
    "deletions": 55
  },
  "files": [
    {
      "sha": "65d751a75d2923e5e5db403ad6cee0d3ab31a45b",
      "filename": "app/controllers/ForumController.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/controllers/ForumController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/controllers/ForumController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/ForumController.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -55,7 +55,7 @@ class ForumController @Inject()(cc: ControllerComponents, edContext: EdContext)\n \n     val topicListStyleInt = (body \\ \"topicListStyle\").as[Int]\n     val topicListStyle = TopicListLayout.fromInt(topicListStyleInt) getOrElse throwBadRequest(\n-      \"TyE5JKSEW2\", \"Bad topic list style number\")\n+      \"TyE5JKSEW2\", \"Bad topic list layout number\")\n \n     val options = CreateForumOptions(\n       isForEmbeddedComments = false,"
    },
    {
      "sha": "9cdbeff67266e0640b0bfbf2ba255493010e9eec",
      "filename": "app/controllers/PageTitleSettingsController.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/controllers/PageTitleSettingsController.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/controllers/PageTitleSettingsController.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/controllers/PageTitleSettingsController.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -51,7 +51,7 @@ class PageTitleSettingsController @Inject()(cc: ControllerComponents, edContext:\n     }\n     val anySlug = (request.body \\ \"slug\").asOptStringNoneIfBlank\n     val anyShowId = (request.body \\ \"showId\").asOpt[Boolean]\n-    val anyLayout = (request.body \\ \"pageLayout\").asOpt[Int].flatMap(TopicListLayout.fromInt)\n+    val anyLayout = (request.body \\ \"pageLayout\").asOpt[Int].flatMap(PageLayout.fromInt)\n     val anyHtmlTagCssClasses = (request.body \\ \"htmlTagCssClasses\").asOptStringNoneIfBlank\n     val anyHtmlHeadTitle = (request.body \\ \"htmlHeadTitle\").asOptStringNoneIfBlank\n     val anyHtmlHeadDescription = (request.body \\ \"htmlHeadDescription\").asOptStringNoneIfBlank"
    },
    {
      "sha": "a03217f8e1061dc71003405b3efd9037b776ded9",
      "filename": "app/debiki/Globals.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/Globals.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/Globals.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/Globals.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -206,7 +206,7 @@ class Globals(\n     scala.io.Source.fromFile(\"/opt/talkyard/app/version.txt\")(scala.io.Codec.UTF8).mkString.trim\n \n   // Could rename to \"rendererVersion\".\n-  val applicationVersion = \"0.00.61\"  // later, read from some build config file\n+  val applicationVersion = \"0.00.63\"  // later, read from some build config file\n \n   def applicationSecret: String = _appSecret\n "
    },
    {
      "sha": "93720ff4fb699821ba5bcaad45ddb867cbfdb088",
      "filename": "app/debiki/PageTpi.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/PageTpi.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/PageTpi.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/PageTpi.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -110,7 +110,7 @@ class SiteTpi protected (\n   def anySafeMetaTags: String = anyCustomMetaTags.allTags  // only admin can edit right now [2GKW0M]\n \n   def anyCurrentPageRole: Option[PageType] = None\n-  def anyCurrentPageLayout: Option[TopicListLayout] = None\n+  def anyCurrentPageLayout: Option[PageLayout] = None\n   def anyCurrentPageMeta: Option[PageMeta] = None\n \n   def anyAltPageId: Option[AltPageId] = None"
    },
    {
      "sha": "30caf6181b3ebfe7e572ecbf03f11ce927e1d366",
      "filename": "app/debiki/dao/PagesDao.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/dao/PagesDao.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/debiki/dao/PagesDao.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/debiki/dao/PagesDao.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -131,7 +131,7 @@ trait PagesDao {\n       pinOrder: Option[Int], pinWhere: Option[PinPageWhere],\n       byWho: Who, spamRelReqStuff: Option[SpamRelReqStuff],\n       tx: SiteTransaction, hidePageBody: Boolean = false,\n-      layout: Option[TopicListLayout] = None,\n+      layout: Option[PageLayout] = None,\n       bodyPostType: PostType = PostType.Normal,\n       altPageId: Option[AltPageId] = None,\n       embeddingUrl: Option[String] = None,"
    },
    {
      "sha": "43569122d76957500bf3661b7e0f421772b90a40",
      "filename": "app/talkyard/server/backup/SiteBackupReader.scala",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/talkyard/server/backup/SiteBackupReader.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/app/talkyard/server/backup/SiteBackupReader.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/app/talkyard/server/backup/SiteBackupReader.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -318,9 +318,9 @@ case class SiteBackupReader(context: EdContext) {\n           return Bad(s\"On page id $id, invalid frequentPosterIds: \" + ex.getMessage)\n       }\n \n-    val layout: TopicListLayout =\n-      TopicListLayout.fromInt(readInt(jsObj, \"layout\", default = Some(TopicListLayout.Default.toInt)))\n-        .getOrElse(TopicListLayout.Default)\n+    val layout: PageLayout =\n+      PageLayout.fromInt(readInt(jsObj, \"layout\", default = Some(PageLayout.Default.toInt)))\n+        .getOrElse(PageLayout.Default)\n \n     try {\n       Good(PageMeta("
    },
    {
      "sha": "d0ea2eda968deba0041b0a83e6e9dfdda62f3165",
      "filename": "client/app-slim/model.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 3,
      "changes": 19,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/model.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/model.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/model.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -599,6 +599,11 @@ const enum IncludeInSummaries {\n }\n \n \n+/** Either a TopicListLayout enum value, or a CategoriesLayout, or a TopicLayout.\n+  */\n+type PageLayout = number;\n+\n+\n const enum TopicListLayout {\n   Default = 0,\n   TitleOnly = 1,\n@@ -615,6 +620,14 @@ const enum CategoriesLayout {\n }\n \n \n+const enum TopicLayout {\n+  Default = 0,  // then, depends on topic type. E.g. question-answers —> threaded discussion.\n+  ThreadedDiscussion = 1001,\n+  FlatProgress = 1002,\n+  SplitDiscussionProgress = 1003,\n+}\n+\n+\n const enum ShowAuthorHow {\n   UsernameOnly = 1,\n   UsernameThenFullName = 2,\n@@ -755,7 +768,7 @@ interface Page {\n   categoryId?: number;\n   pageRole: PageRole;\n   pagePath: PagePath;\n-  pageLayout?: TopicListLayout;\n+  pageLayout?: PageLayout;\n   pageHtmlTagCssClasses?: string;\n   pageHtmlHeadTitle?: string;\n   pageHtmlHeadDescription?: string;\n@@ -825,7 +838,7 @@ interface PageMeta {\n   embeddingPageUrl?: string;\n   authorId: UserId;\n   frequentPosterIds: number[];\n-  layout: number; // e.g. TopicListLayout\n+  layout: PageLayout;\n   pinOrder?: number;\n   pinWhere?: PinPageWhere;\n   numLikes: number;\n@@ -1630,7 +1643,7 @@ interface EditPageRequestData {\n     folder?: string;\n     slug?: string;\n     showId?: boolean;\n-    pageLayout?: TopicListLayout;\n+    pageLayout?: PageLayout;\n     htmlTagCssClasses?: string;\n     htmlHeadTitle?: string;\n     htmlHeadDescription?: string;"
    },
    {
      "sha": "72bb210e34438b27758aa0e0b0bef6f93a2977e1",
      "filename": "client/app-slim/oop-methods.ts",
      "status": "modified",
      "additions": 22,
      "deletions": 4,
      "changes": 26,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/oop-methods.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/oop-methods.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/oop-methods.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -682,19 +682,37 @@ export function page_isAlwaysFlatDiscourse(page: Page): boolean {\n }\n \n \n-export function page_isUsuallyFlatDiscourse(page: Page): boolean {\n+export function page_isFlatProgress(page: Page): boolean {\n+  if (page_isAlwaysFlatDiscourse(page))\n+    return true;\n+  if (page.pageLayout === TopicLayout.FlatProgress)\n+    return true;\n+  /* Later, could:\n   const pageRole = page.pageRole;\n-  return page_isAlwaysFlatDiscourse(page) || (\n-      pageRole === PageRole.Idea\n+  return (pageRole === PageRole.Idea\n       || pageRole === PageRole.Problem\n       || pageRole === PageRole.ToDo);\n+  */\n+  // However, for now: (backw compat, so as not to upset people)\n+  return false;\n }\n \n \n-export function page_isUsuallyThreadedOnly(page: Page): boolean {\n+export function page_isThreadedDiscussion(page: Page): boolean {\n+  if (page_isAlwaysFlatDiscourse(page))\n+    return false;\n+  if (page.pageLayout === TopicLayout.ThreadedDiscussion)\n+    return true;\n+  if (page.pageLayout === TopicLayout.SplitDiscussionProgress ||\n+      page.pageLayout === TopicLayout.FlatProgress)\n+    return false;\n+  /* Later, could:\n   const pageRole = page.pageRole;\n   return pageRole === PageRole.Question || pageRole === PageRole.Discussion ||\n       pageRole === PageRole.EmbeddedComments;\n+  */\n+  // However, for now: (backw compat, to not upset people)\n+  return true;\n }\n \n "
    },
    {
      "sha": "3f8abc1e8872732a902683414e05105f79254590",
      "filename": "client/app-slim/page/discussion.ts",
      "status": "modified",
      "additions": 100,
      "deletions": 13,
      "changes": 113,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/discussion.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/discussion.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/discussion.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -612,6 +612,12 @@ const RootPostAndComments = createComponent({\n       postBodyClass += ' dw-ar-p-bd';\n     }\n \n+    const isThreadedDiscussion = page_isThreadedDiscussion(page);\n+    const isFlatProgress = page_isFlatProgress(page);\n+    // @ifdef DEBUG\n+    dieIf(isThreadedDiscussion && isFlatProgress, 'TyE5AK40');\n+    // @endif\n+\n     const notYetApprovedMaybeDeletedInfo = rootPost.isApproved ? false :\n         r.div({ className: 'esPendingApproval' },\n           '(' + (page.pageDeletedAtMs ? t.d.PageDeld : t.d.TextPendingApproval) + ')');\n@@ -763,6 +769,52 @@ const RootPostAndComments = createComponent({\n       }\n     })}\n \n+    /*\n+\n+    Depending on if the layout is ThreadedDiscussion or FlatProgress,\n+    or split threaded-flat, the orig post Reply button does different things,\n+    and there are, or aren't, dividers above the threaded and flat page sections,\n+    and there're different bottom reply buttons. Here's a table:\n+\n+    dsc  = threaded discussion layout (like Reddit, HackerNews, Disqus)\n+    prg  = flat progress layout (like phpBB, Discourse, Flarum)\n+    re-o = replies only\n+    sct  = section\n+    re   = reply (button title)\n+    ap   = the button appends comment to progress section\n+    id   = the button inserts comment into discussion section\n+    n    = no / none, don't show\n+    y    = yes / show\n+    nd   = show, no divider\n+    wd   = show, with a divider\n+    btm  = bottom\n+\n+            always prg       disc layout               prg layout      split dsc-prg\n+                      dsc-re-o  prg-re-o both   dsc-re-o  prg-re-o both\n+\n+    top re\n+    btn:       ap         id      id      id       ap       ap      ap    id —> ap *\n+\n+    dsc sct:   n          nd      nd      nd       wd       n       wd       wd\n+\n+    prg sct:   nd         n       wd      wd       wd       n       wd       wd\n+\n+    btm dsc\n+    re btn:    n          y       y       y        n        n       n      y —> n *\n+\n+    btm prg\n+    re btn:    y          y**     y**     y**      y        y       y     y** —> y  *\n+\n+\n+    *id —> ap, etc: The page starts in discussion mode, and then changes to progress\n+    mode, when the discussion phase has ended. Currently, that's when one changes\n+    the doingState to Started. [SPLDSCPRG]\n+\n+    **y: The bottom appned-progress-reply button here has the title\n+         \"Add progress note\", and is shown just after a Reply button that\n+         inserts into the threaded discussion section. [ADPRGNT]\n+\n+    */\n \n     // ----- Discussion section divider  [DSCPRG]\n \n@@ -773,11 +825,15 @@ const RootPostAndComments = createComponent({\n       // Never any Discussion section on these types of pages. (E.g. direct messages)\n       showDiscussionSectionDivider = false;\n     }\n-    if (!page_isUsuallyFlatDiscourse(page)) {\n-      // Usually *no* Progress section on these pages (e.g. Question-Answers or Discussion\n-      // topic). Then, need not show any Discussion section title.\n+    if (isThreadedDiscussion) {\n+      // There's no Progress section discussion on these pages (e.g. Question-Answers\n+      // or Discussion topic). Then, need not show any Discussion section title.\n       showDiscussionSectionDivider = false;\n     }\n+    if (isFlatProgress && !discussionReplies.length) {\n+      // People don't expect a Discussion section on these pages, and there are\n+      // no Discussion replies, so don't show any Discussion divider.\n+    }\n     if (page.pageRole === PageRole.About) {\n       // These pages are only for editing category descriptions.\n       showDiscussionSectionDivider = false;\n@@ -795,7 +851,7 @@ const RootPostAndComments = createComponent({\n           r.div({ className: 's_PgSct_Ttl' }, \"Discussion\"),\n           r.div({ className: 's_PgSct_Dtl' }, expl)),\n         r.li({},\n-          r.a({ className: 's_OpReB-Dsc icon-reply',\n+          r.a({ className: 's_OpReB s_OpReB-Dsc icon-reply',\n             onClick: (event) => this.onAfterPageReplyClick(event, PostType.Normal) },\n           r.b({}, t.ReplyV), r.span({}, \" (insert)\"))));   // I18N\n     }\n@@ -811,11 +867,17 @@ const RootPostAndComments = createComponent({\n       // So show neither Discussion section nor Progress section dividers.\n       showProgressSectionDivider = false;\n     }\n-    if (page_isUsuallyThreadedOnly(page) && !progressPosts.length) {\n+    if (isThreadedDiscussion && !progressPosts.length) {\n       // People shouldn't expect any Progress section on these pages (e.g. a Question-Answers\n       // topic or a Discussion), and there are no Progress posts, so, skip the divider.\n       showProgressSectionDivider = false;\n     }\n+    if (isFlatProgress && !discussionReplies.length) {\n+      // People shouldn't expect any Discussion section on this page, and there are no\n+      // Discussion replies, so skip the divider. (People in this community should excpect\n+      // only flat progress replies.)\n+      showProgressSectionDivider = false;\n+    }\n     if (page.pageRole === PageRole.About) {\n       showProgressSectionDivider = false;\n     }\n@@ -839,7 +901,8 @@ const RootPostAndComments = createComponent({\n     const postActions = post_shallRenderAsHidden(rootPost) ? null :\n          PostActions({ store, post: rootPost });\n \n-    const isFormalMessage = page.pageRole === PageRole.FormalMessage;\n+\n+    // ----- After page actions\n \n     const skipBottomReplyAppendBtn =\n         // Skip the \"Reply (apppend)\" button on embedded comments pages — this far,\n@@ -849,16 +912,28 @@ const RootPostAndComments = createComponent({\n         // People are supposed to think before adding new nodes, e.g. think about where to place them.\n         pageRole === PageRole.MindMap;\n \n+    const makeOnClick = (postType: PostType) => {\n+      return (event) => {\n+        this.onAfterPageReplyClick(event, postType);\n+      };\n+    }\n+\n     const afterPageActions = skipBottomReplyAppendBtn ? null :\n       r.div({ className: 's_APAs'},\n-        r.a({ className: 's_APAs_ACBB s_OpReB-Prg icon-reply',\n-            onClick: (event) => {\n-              this.onAfterPageReplyClick(event, PostType.BottomComment);\n+        !isThreadedDiscussion ? null :\n+          r.a({ className: 's_OpReB s_OpReB-Dsc icon-reply',\n+                onClick: makeOnClick(PostType.Normal) },\n+              r.b({}, t.ReplyV),\n+              // If there are progress posts above, clarify that the reply will\n+              // appear in the discussion section (not in the progress section).\n+              progressPosts.length ? r.span({}, \" (discussion)\") : null),  // I18N\n+        r.a({ className: 's_OpReB s_OpReB-Prg icon-reply',\n+            onClick: makeOnClick(PostType.BottomComment) },\n               /* This no longer needed? [DSCPRG] Keep for a while if want to add back\n                  some tips abou what a Progress reply is.\n               const doReply = () => this.onAfterPageReplyClick(event, PostType.BottomComment);\n               // Comments always added at the bottom on formal messages; no explanation needed.\n-              if (isFormalMessage) {\n+              if (isFlatProgress) {\n                 doReply();\n               }\n               else {\n@@ -870,11 +945,23 @@ const RootPostAndComments = createComponent({\n                   doAfter: doReply\n                 });\n               } */\n-            } },\n-          r.b({}, t.ReplyV), isFormalMessage ? null : r.span({}, \" (append)\")));   // I18N\n+          isThreadedDiscussion\n+              ? r.span({}, \"Add progress note\") // [ADPRGNT] I18N\n+              : rFragment({},\n+                  r.b({}, t.ReplyV),\n+                  // If isn't a FlatProgress topic (with only Progress posts), then,\n+                  // clarify that this button adds the reply in the progress section.\n+                  isFlatProgress ? null : r.span({}, \" (progress)\")))); // I18N\n+\n+\n+    // ----- The reslut\n+\n+    const layoutClass =\n+        isThreadedDiscussion ? ' s_ThrDsc' : (\n+            isFlatProgress ? ' s_FltPrg' : '');\n \n     return (\n-      r.div({ className: threadClass },\n+      r.div({ className: threadClass + layoutClass },\n         notYetApprovedMaybeDeletedInfo,\n         deletedCross,\n         body,"
    },
    {
      "sha": "5a3fc893abd14a91f1c33ba32a5160c800f47f6f",
      "filename": "client/app-slim/page/post-actions.styl",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/post-actions.styl",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/post-actions.styl",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/post-actions.styl?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -257,8 +257,7 @@ html:not(.mouse) .dw-t > .dw-p-as .dw-a\n       padding-right: 12px; // ... so reduce padding-right instead\n \n // Avoid float drop (the reply button is to the very left)\n-.s_OpReB-Dsc,\n-.s_APAs_ACBB,\n+.s_OpReB,\n .DW.DW .dw-p-as .dw-a-reply\n   padding: 9px 12px 9px 8px;\n   margin-left: 6px;\n@@ -267,12 +266,23 @@ html:not(.mouse) .dw-t > .dw-p-as .dw-a\n   &:before\n     opacity: 0.6; // or icon too not-opaque\n \n-.s_OpReB-Dsc,\n-.s_OpReB-Prg\n+.s_OpReB\n   display: inline-block;\n   margin: 0 0 40px 0;\n+  &::before\n+    margin-right: 6px;  // between the reply icon and the button text\n   b\n-    margin: 0 2px 0 3px;\n+    margin-right: 2px;  // after the \"Reply\" text and any \" (discussion)\" clarification\n+\n+// In threaded discussion topics, make the add-progress-post button less prominent;\n+// most people aren't supposed to use it. [ADPRGNT]\n+.s_ThrDsc .s_OpReB-Prg\n+  background: none;\n+  color: hsl(0, 0%, 35%);\n+  margin-left: 20px;\n+  font-weight: normal;\n+  padding-left: 0;\n+  padding-right: 5px;\n \n // Highlight the heart and other vote symbols if the user has voted Like or whatever.\n .dw-my-vote:before,\n@@ -389,7 +399,7 @@ html:not(.mouse) .dw-t > .dw-p-as .dw-a\n   a:first-child\n     margin-left: 0;\n \n-.s_APAs_ACBB   // append comment at the bottom button\n+.s_OpReB\n   margin: 0;\n   float: left\n   &:hover"
    },
    {
      "sha": "7169cbed5f23bb1a098391641dde46f802d4c531",
      "filename": "client/app-slim/page/post-actions.ts",
      "status": "modified",
      "additions": 33,
      "deletions": 13,
      "changes": 46,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/post-actions.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/client/app-slim/page/post-actions.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/client/app-slim/page/post-actions.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -108,10 +108,10 @@ function makeReplyBtnTitle(store: Store, post: Post) {\n     default:\n       return rFragment({},\n         r.b({}, t.ReplyV),\n-        // On not-always, but *usually*-flat-progress-topics, this Reply button *appends* [DEFPRGRES]\n-        // the replies, so show \"append\" here, to clarify.\n-        !page_isAlwaysFlatDiscourse(page) &&\n-          page_isUsuallyFlatDiscourse(page) ? r.span({}, \" (append)\") : null); // I18N\n+          page.pageLayout !== TopicLayout.SplitDiscussionProgress ? null : r.span({},\n+            // This page has both a discussion and a progress section, so clarify\n+            // in which section the reply gets addded.  [SPLDSCPRG]\n+            page.doingStatus >= PageDoingStatus.Started ? \" (progress)\" : \" (discussion)\"));  // I18N\n       // t.pa.ReplyToOp <— I18N REMOVE\n   }\n }\n@@ -141,15 +141,35 @@ export const PostActions = createComponent({\n     const page: Page = store.currentPage;\n     const post: Post = this.props.post;\n \n-    const newPostType =\n-        page_isAlwaysFlatDiscourse(page) || (\n-              // On usually-flat-progress-topics, by default, append replies. [DEFPRGRES]\n-              page_isUsuallyFlatDiscourse(page) && post.nr === BodyNr)\n-          ? PostType.BottomComment\n-              // Otherwise, the same type as the post we're replying to.\n-          : ((post.postType === PostType.Flat || post.postType === PostType.BottomComment)\n-              ? post.postType\n-              : PostType.Normal);\n+    let newPostType: PostType;\n+    if (page_isAlwaysFlatDiscourse(page)) {\n+      newPostType = PostType.BottomComment;\n+    }\n+    else if (post.nr === BodyNr) {\n+      // This orig post reply button does different things (inserts the reply, or appends\n+      // the reply), depending on if the page layout is threaded or flat.\n+      if (page_isThreadedDiscussion(page)) {\n+        newPostType = PostType.Normal;\n+      }\n+      else if (page_isFlatProgress(page)) {\n+        newPostType = PostType.BottomComment;\n+      }\n+      else {\n+        // If the page has both a discussion and a progress section, and\n+        // the page (idea/problem) has been started, then, append replies to\n+        // the flat progress section. Otherwise, insert into the discussion section.\n+        newPostType = page.pageLayout === TopicLayout.SplitDiscussionProgress &&\n+                      page.doingStatus >= PageDoingStatus.Started  // [SPLDSCPRG]\n+            ? PostType.BottomComment  // progress reply\n+            : PostType.Normal;        // discussion reply\n+      }\n+    }\n+    else {\n+      // Use the same type as the post we're replying to.\n+      newPostType = (post.postType === PostType.Flat || post.postType === PostType.BottomComment)\n+          ? post.postType\n+          : PostType.Normal;\n+    }\n \n     const loginToWhat = page.pageRole === PageRole.EmbeddedComments ?\n         LoginReason.PostEmbeddedComment : 'LoginToComment';"
    },
    {
      "sha": "b15966db3a1587278cf14425d0a6af10cd922123",
      "filename": "modules/ed-core/src/main/scala/com/debiki/core/Page.scala",
      "status": "modified",
      "additions": 85,
      "deletions": 5,
      "changes": 90,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/modules/ed-core/src/main/scala/com/debiki/core/Page.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/modules/ed-core/src/main/scala/com/debiki/core/Page.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-core/src/main/scala/com/debiki/core/Page.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -95,7 +95,7 @@ object PageMeta {\n         authorId: UserId,\n         creationDati: ju.Date,  // RENAME to createdAt\n         numPostsTotal: Int,\n-        layout: Option[TopicListLayout] = None,\n+        layout: Option[PageLayout] = None,\n         plannedAt: Option[ju.Date] = None,\n         deletedAt: Option[When] = None,\n         pinOrder: Option[Int] = None,\n@@ -116,7 +116,7 @@ object PageMeta {\n       categoryId = categoryId,\n       embeddingPageUrl = embeddingUrl,\n       authorId = authorId,\n-      layout = layout getOrElse TopicListLayout.Default,\n+      layout = layout getOrElse PageLayout.Default,\n       pinOrder = pinOrder,\n       pinWhere = pinWhere,\n       numLikes = 0,\n@@ -189,7 +189,7 @@ case class PageMeta( // [exp] ok use. Missing, fine: num_replies_to_review  incl\n   embeddingPageUrl: Option[String],\n   authorId: UserId,\n   frequentPosterIds: Seq[UserId] = Seq.empty,\n-  layout: TopicListLayout = TopicListLayout.Default,\n+  layout: PageLayout = PageLayout.Default,\n   pinOrder: Option[Int] = None,\n   pinWhere: Option[PinPageWhere] = None,\n   numLikes: Int = 0,\n@@ -547,7 +547,31 @@ object PageType {\n }\n \n \n-sealed abstract class CategoriesLayout(val IntVal: Int) { def toInt: Int = IntVal }\n+trait PageLayout { def toInt: Int }\n+object PageLayout {\n+  object Default extends PageLayout { val toInt = 0 }\n+\n+  def fromInt(value: Int): Option[PageLayout] = {\n+    if (TopicListLayout.MinIntVal <= value && value <= TopicListLayout.MaxIntVal) {\n+      TopicListLayout.fromInt(value)\n+    }\n+    else if (TopicLayout.MinIntVal <= value && value <= TopicLayout.MaxIntVal) {\n+      TopicLayout.fromInt(value)\n+    }\n+    else if (value == Default.toInt) {\n+      Some(PageLayout.Default)\n+    }\n+    else {\n+      None\n+    }\n+  }\n+}\n+\n+\n+sealed abstract class CategoriesLayout(val IntVal: Int) extends PageLayout {\n+  def toInt: Int = IntVal\n+}\n+\n object CategoriesLayout {\n   val Default: CategoriesLayout = new CategoriesLayout(0) {}\n \n@@ -558,16 +582,23 @@ object CategoriesLayout {\n }\n \n \n-sealed abstract class TopicListLayout(val IntVal: Int) { def toInt: Int = IntVal }\n+sealed abstract class TopicListLayout(val IntVal: Int) extends PageLayout {\n+  def toInt: Int = IntVal\n+}\n+\n object TopicListLayout {\n   object Default extends TopicListLayout(0)\n+\n+  val MinIntVal = 1\n   object TitleOnly extends TopicListLayout(1)\n   object TitleExcerptSameLine extends TopicListLayout(2)\n   object ExcerptBelowTitle extends TopicListLayout(3)\n   object ThumbnailLeft extends TopicListLayout(4)\n   object ThumbnailsBelowTitle extends TopicListLayout(5)\n   object NewsFeed extends TopicListLayout(6)\n \n+  val MaxIntVal = 100\n+\n   def fromInt(value: Int): Option[TopicListLayout] = Some(value match {\n     case Default.IntVal => Default\n     case TitleOnly.IntVal => TitleOnly\n@@ -581,6 +612,55 @@ object TopicListLayout {\n }\n \n \n+sealed abstract class TopicLayout(val IntVal: Int) extends PageLayout {\n+  def toInt: Int = IntVal\n+}\n+\n+object TopicLayout {\n+  object Default extends TopicLayout(0)\n+\n+  val MinIntVal = 1001\n+\n+  /** Threaded layout. Reddit, Hacker News, Disqus use this. */\n+  object ThreadedDiscussion extends TopicLayout(1001)\n+\n+  /** Flat layout. Discourse, phpBB and other forum software use this. */\n+  object FlatProgress extends TopicLayout(1002)\n+\n+  /** I (KajMagnus) like this, and no one has tried this before?  */\n+  object SplitDiscussionProgress extends TopicLayout(1003)\n+\n+  /* Maybe later:\n+\n+  /** Top level replies sorted by time, and each such reply has its own threaded\n+    * sub discussion. Nice for posting and discussing status updates — each\n+    * status update, becomes its own sub discussion. I can use for the dev diary.\n+    * (If separate *topics* for each status update (like, a blog), is too heavy weight.)  */\n+  object ProgressWithThreadedReplies extends TopicLayout(1004)\n+\n+  /** Like the above, but replies are flat, just one level nesting. Facebook uses this. */\n+  object ProgressWithFlatReplies extends TopicLayout(1005)\n+\n+  /** Like the above, but best replies first (instead of by time). Facebook uses this. */\n+  object DiscussionWithFlatReplies extends TopicLayout(1006)\n+  */\n+\n+  // Maybe not.\n+  //object SplitDiscussionWithFlatRepliesAndProgressBelow extends TopicLayout(...)\n+\n+  val MaxIntVal = 1100\n+\n+  def fromInt(value: Int): Option[TopicLayout] = Some(value match {\n+    case Default.IntVal => Default\n+    case ThreadedDiscussion.IntVal => ThreadedDiscussion\n+    case FlatProgress.IntVal => FlatProgress\n+    case SplitDiscussionProgress.IntVal => SplitDiscussionProgress\n+    case _ => return None\n+  })\n+}\n+\n+\n+\n /**\n  * The page status, see debiki-for-developers.txt #9vG5I.\n  */"
    },
    {
      "sha": "530f30dbcd65a3084775e5dbe6f1769a99efcb62",
      "filename": "modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/RdbUtil.scala",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/RdbUtil.scala",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/RdbUtil.scala",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ty-dao-rdb/src/main/scala/com/debiki/dao/rdb/RdbUtil.scala?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -622,7 +622,7 @@ object RdbUtil {\n       lastApprovedReplyById = getOptionalInt(resultSet, \"last_reply_by_id\"),\n       authorId = resultSet.getInt(\"AUTHOR_ID\"),\n       frequentPosterIds = frequentPosterIds,\n-      layout = TopicListLayout.fromInt(resultSet.getInt(\"layout\")) getOrElse TopicListLayout.Default,\n+      layout = PageLayout.fromInt(resultSet.getInt(\"layout\")) getOrElse PageLayout.Default,\n       pinOrder = getOptionalIntNoneNot0(resultSet, \"PIN_ORDER\"),\n       pinWhere = getOptionalIntNoneNot0(resultSet, \"PIN_WHERE\").map(int =>\n         PinPageWhere.fromInt(int).getOrElse(PinPageWhere.InCategory)),"
    },
    {
      "sha": "031762707c89db68b851483fd384a82d599d51ad",
      "filename": "tests/e2e/specs/page-type-idea-statuses-comments.test.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/tests/e2e/specs/page-type-idea-statuses-comments.test.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/tests/e2e/specs/page-type-idea-statuses-comments.test.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/specs/page-type-idea-statuses-comments.test.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -119,7 +119,7 @@ describe(\"Page statuses and bottom comments\", () => {\n   });\n \n   it(\"Posts an Discussion reply\", () => {\n-    mariasBrowser.complex.replyToOrigPost(mariasOpReply, 'DiscussionSection'); // #post-7\n+    mariasBrowser.complex.replyToOrigPost(mariasOpReply);    // #post-7\n   });\n \n   it(\"... and a reply to the reply\", () => {                 // #post-8"
    },
    {
      "sha": "1c8fc6b4eb60b7e8f86500f6ef5d56323041724c",
      "filename": "tests/e2e/utils/pages-for.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/162a3d2d8eca013d3bc33f761e2416015f82ef02/tests/e2e/utils/pages-for.ts",
      "raw_url": "https://github.com/debiki/talkyard/raw/162a3d2d8eca013d3bc33f761e2416015f82ef02/tests/e2e/utils/pages-for.ts",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/tests/e2e/utils/pages-for.ts?ref=162a3d2d8eca013d3bc33f761e2416015f82ef02",
      "patch": "@@ -2892,7 +2892,7 @@ function pagesFor(browser) {\n       allRepliesTextSelector: '.dw-depth-0 > .dw-single-and-multireplies > .dw-res',\n       anyCommentSelector: '.dw-p',\n       anyReplyButtonSelector: '.dw-a-reply',\n-      addProgressReplySelector: '.s_APAs_ACBB',\n+      addProgressReplySelector: '.s_OpReB-Prg',\n \n       waitForReplyButtonAssertCommentsVisible: function() {\n         api.waitForVisible(api.topic.anyReplyButtonSelector);"
    }
  ]
}
