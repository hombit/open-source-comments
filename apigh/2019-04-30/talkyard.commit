{
  "sha": "579ae6110245d851444205cec19202cebf4d50d2",
  "node_id": "MDY6Q29tbWl0MTA1NjMzMjI6NTc5YWU2MTEwMjQ1ZDg1MTQ0NDIwNWNlYzE5MjAyY2ViZjRkNTBkMg==",
  "commit": {
    "author": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-30T06:34:10Z"
    },
    "committer": {
      "name": "Kaj Magnus Lindberg",
      "email": "kajmagnus3@gmail.com",
      "date": "2019-04-30T06:37:13Z"
    },
    "message": "Bump version. Add --skip-build/e2e-tests build script options.",
    "tree": {
      "sha": "20d51676dee238e4e512d93447f66cde8e6852a0",
      "url": "https://api.github.com/repos/debiki/talkyard/git/trees/20d51676dee238e4e512d93447f66cde8e6852a0"
    },
    "url": "https://api.github.com/repos/debiki/talkyard/git/commits/579ae6110245d851444205cec19202cebf4d50d2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/debiki/talkyard/commits/579ae6110245d851444205cec19202cebf4d50d2",
  "html_url": "https://github.com/debiki/talkyard/commit/579ae6110245d851444205cec19202cebf4d50d2",
  "comments_url": "https://api.github.com/repos/debiki/talkyard/commits/579ae6110245d851444205cec19202cebf4d50d2/comments",
  "author": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kajmagnus",
    "id": 7477359,
    "node_id": "MDQ6VXNlcjc0NzczNTk=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/7477359?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kajmagnus",
    "html_url": "https://github.com/kajmagnus",
    "followers_url": "https://api.github.com/users/kajmagnus/followers",
    "following_url": "https://api.github.com/users/kajmagnus/following{/other_user}",
    "gists_url": "https://api.github.com/users/kajmagnus/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kajmagnus/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kajmagnus/subscriptions",
    "organizations_url": "https://api.github.com/users/kajmagnus/orgs",
    "repos_url": "https://api.github.com/users/kajmagnus/repos",
    "events_url": "https://api.github.com/users/kajmagnus/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kajmagnus/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "84748d55d040e421a944c9fbe8d13036b3bb9ccd",
      "url": "https://api.github.com/repos/debiki/talkyard/commits/84748d55d040e421a944c9fbe8d13036b3bb9ccd",
      "html_url": "https://github.com/debiki/talkyard/commit/84748d55d040e421a944c9fbe8d13036b3bb9ccd"
    }
  ],
  "stats": {
    "total": 156,
    "additions": 98,
    "deletions": 58
  },
  "files": [
    {
      "sha": "4cefff7abf1fd5c0dabb5db8cf72723754b5f728",
      "filename": "Makefile",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/debiki/talkyard/blob/579ae6110245d851444205cec19202cebf4d50d2/Makefile",
      "raw_url": "https://github.com/debiki/talkyard/raw/579ae6110245d851444205cec19202cebf4d50d2/Makefile",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/Makefile?ref=579ae6110245d851444205cec19202cebf4d50d2",
      "patch": "@@ -294,8 +294,13 @@ visible-e2e-tests: selenium-server\n dev-images: minified-asset-bundles\n \tsudo docker-compose build\n \n+# Any old lingering prod build project, causes netw pool ip addr overlap error.\n+_kill_old_prod_build_project:\n+\ts/d -pedt kill web app search cache rdb ;\\\n+\ts/d -pedt down\n \n prod-images: \\\n+\t\t\t_kill_old_prod_build_project \\\n \t\t\tinvisible-selenium-server\n \t@# This builds minified-asset-bundles.\n \ts/build-prod-images.sh"
    },
    {
      "sha": "aca8a41569d1d5c55c1db1085790790e82a578c6",
      "filename": "modules/ed-versions",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/modules/ed-versions?ref=579ae6110245d851444205cec19202cebf4d50d2",
      "patch": "@@ -1 +1 @@\n-Subproject commit 0a18505f81dd3d139830e19851165cb81cccb55c\n+Subproject commit aca8a41569d1d5c55c1db1085790790e82a578c6"
    },
    {
      "sha": "648640b067823f53e4a037ff26161619ae0392a6",
      "filename": "s/impl/build-prod-images.sh",
      "status": "modified",
      "additions": 91,
      "deletions": 56,
      "changes": 147,
      "blob_url": "https://github.com/debiki/talkyard/blob/579ae6110245d851444205cec19202cebf4d50d2/s/impl/build-prod-images.sh",
      "raw_url": "https://github.com/debiki/talkyard/raw/579ae6110245d851444205cec19202cebf4d50d2/s/impl/build-prod-images.sh",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/s/impl/build-prod-images.sh?ref=579ae6110245d851444205cec19202cebf4d50d2",
      "patch": "@@ -39,9 +39,43 @@ function die_if_in_script {\n }\n \n \n-# Check everything is OK\n+# Options?\n # ----------------------\n \n+all_orig_options=\"$@\"\n+\n+skip_e2e_tests=''\n+skip_build=''\n+\n+for arg in \"$@\"; do\n+  case $arg in\n+    #-x=*|--something=*)\n+    #STH=\"${i#*=}\"\n+    #hift # past argument=value\n+    #;\n+    --skip-e2e-tests)\n+    echo \"Will skip E2E tests, because of --skip-e2e-tests.\"\n+    skip_e2e_tests=yes\n+    shift\n+    ;;\n+    --skip-build)\n+    echo \"Will skip build, because of --skip-build.\"\n+    skip_build=yes\n+    shift\n+    ;;\n+    *)\n+    # Unknown option, ignore. Maybe it's for wdio.conf?\n+    ;;\n+  esac\n+done\n+\n+\n+# Ensure no other containers running\n+# ----------------------\n+\n+s/d -pedt kill web app search cache rdb\n+s/d -pedt down\n+\n s/d kill web app\n s/d down\n \n@@ -63,74 +97,78 @@ if [ -n \"`containers_running_test`\" ]; then\n fi\n \n \n-\n # Build Docker images\n # ----------------------\n \n-# Build minified script bundles; will be included in the web and app images.\n-s/d-gulp release\n-\n-# Build images (except for the app server prod image). This will Dockerfile COPY\n-# js and css generated by 'gulp release' above.\n-s/d build\n-\n-# Build the app server prod image.\n-# First run tests though. Do this one at a time, or out-of-memory.\n-s/d-cli clean compile\n-s/d-cli test dist\n-s/d kill web app\n-s/d down\n-# This will use the prod package built with 'dist' above.\n-s/impl/build-prod-app-image.sh\n-\n+if [ -z \"$skip_build\" ]; then\n+  # Build minified script bundles; will be included in the web and app images.\n+  s/d-gulp release\n+\n+  # Build images (except for the app server prod image). This will Dockerfile COPY\n+  # js and css generated by 'gulp release' above.\n+  s/d build\n+\n+  # Build the app server prod image.\n+  # First run tests though. Do this one at a time, or out-of-memory.\n+  s/d-cli clean compile\n+  s/d-cli test dist\n+  s/d kill web app\n+  s/d down\n+  # This will use the prod package built with 'dist' above.\n+  s/impl/build-prod-app-image.sh\n+fi\n \n \n # Run End-to-End tests\n # ----------------------\n \n-s/d-gulp build-e2e\n-\n-# If there's a development Docker network, there'll be an IP address space clash\n-# when creating a prodution test network later below. Delete any dev network.\n-set +e\n-docker network rm tyd_internal_net\n-set -e\n+if [ -z \"$skip_e2e_tests\" ]; then\n+  s/d-gulp build-e2e\n+\n+  # If there's a development Docker network, there'll be an IP address space clash\n+  # when creating a prodution test network later below. Delete any dev network.\n+  set +e\n+  docker network rm tyd_internal_net\n+  set -e\n+\n+  # Run the 'latest' tag — it's for the images we just built above.\n+  # '-p edt' = EffectiveDiscussions Test project.\n+  # Use the -no-limits.yml file, because we'll run performance tests.\n+  export VERSION_TAG=latest\n+  export POSTGRES_PASSWORD=public\n+  export DOCKER_REPOSITORY=debiki\n+  test_containers='docker-compose -p edt -f modules/ed-prod-one-test/docker-compose.yml -f modules/ed-prod-one-test/debug.yml -f modules/ed-prod-one-test-override.yml -f docker-compose-no-limits.yml'\n+  $test_containers down\n+  rm -fr modules/ed-prod-one-test/data\n+  $test_containers up -d\n+\n+  if [ -n \"`jobs`\" ]; then\n+    echo 'Other jobs running:'\n+    jobs\n+    echo 'Please stop them.'\n+    die_if_in_script\n+  fi\n \n-# Run the 'latest' tag — it's for the images we just built above.\n-# '-p edt' = EffectiveDiscussions Test project.\n-# Use the -no-limits.yml file, because we'll run performance tests.\n-export VERSION_TAG=latest\n-export POSTGRES_PASSWORD=public\n-export DOCKER_REPOSITORY=debiki\n-test_containers='docker-compose -p edt -f modules/ed-prod-one-test/docker-compose.yml -f modules/ed-prod-one-test/debug.yml -f modules/ed-prod-one-test-override.yml -f docker-compose-no-limits.yml'\n-$test_containers down\n-rm -fr modules/ed-prod-one-test/data\n-$test_containers up -d\n-\n-if [ -n \"`jobs`\" ]; then\n-  echo 'Other jobs running:'\n-  jobs\n-  echo 'Please stop them.'\n-  die_if_in_script\n-fi\n \n+  # Run e2e tests, but not as root.\n+  # To stop these e2e tests, you need to 'sudo -i' in another shell, then 'ps aux | grep e2e'\n+  # and then kill the right stuff.\n+  su $my_username -c \"s/run-e2e-tests.sh --is-root --prod $all_orig_options ; echo \\$? > ./target/e2e-tests-exit-code\"\n \n-# Run e2e tests, but not as root.\n-# To stop these e2e tests, you need to 'sudo -i' in another shell, then 'ps aux | grep e2e'\n-# and then kill the right stuff.\n-su $my_username -c \"s/run-e2e-tests.sh --is-root --prod $@ ; echo \\$? > ./target/e2e-tests-exit-code\"\n+  e2e_tests_exit_code=`cat ./target/e2e-tests-exit-code`\n \n-e2e_tests_exit_code=`cat ./target/e2e-tests-exit-code`\n+  if [ \"$e2e_tests_exit_code\" != '0' ]; then\n+    echo\n+    echo E2E tests failed. Aborting.\n+    echo\n+    die_if_in_script\n+  fi\n \n-if [ \"$e2e_tests_exit_code\" != '0' ]; then\n-  echo\n-  echo E2E tests failed. Aborting.\n-  echo\n-  die_if_in_script\n+  $test_containers kill web app\n+  $test_containers down\n fi\n \n \n-\n # # Test performance\n # # -----------------\n # \n@@ -164,9 +202,6 @@ fi\n # All done\n # ----------------------\n \n-$test_containers kill web app\n-$test_containers down\n-\n # If any Docker container is running now, something is amiss.\n if [ -n \"`containers_running_test`\" ]; then\n   echo"
    },
    {
      "sha": "45b0832936bf2b71502030573f04a5aff0435854",
      "filename": "version.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/debiki/talkyard/blob/579ae6110245d851444205cec19202cebf4d50d2/version.txt",
      "raw_url": "https://github.com/debiki/talkyard/raw/579ae6110245d851444205cec19202cebf4d50d2/version.txt",
      "contents_url": "https://api.github.com/repos/debiki/talkyard/contents/version.txt?ref=579ae6110245d851444205cec19202cebf4d50d2",
      "patch": "@@ -1 +1 @@\n-v0.6.33-WIP-1\n+v0.6.34-WIP-1"
    }
  ]
}
