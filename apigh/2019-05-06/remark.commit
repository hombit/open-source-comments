{
  "sha": "1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjE2MTZmNDNmMGM4NWMyMzFiYzI4Y2IxYzhkNjRmNmEzYzgzNGM5ZjQ=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-05-04T17:39:24Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-05-04T17:39:24Z"
    },
    "message": "clean empty staging directory",
    "tree": {
      "sha": "b1623cfc75f1058594ab8b1d16a8cbb9d7d941d3",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/b1623cfc75f1058594ab8b1d16a8cbb9d7d941d3"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
  "html_url": "https://github.com/umputun/remark/commit/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "cc49ee0946e9efc8801dfc55f3779eed0800add9",
      "url": "https://api.github.com/repos/umputun/remark/commits/cc49ee0946e9efc8801dfc55f3779eed0800add9",
      "html_url": "https://github.com/umputun/remark/commit/cc49ee0946e9efc8801dfc55f3779eed0800add9"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 9,
    "deletions": 3
  },
  "files": [
    {
      "sha": "c1a9d12feabfc9205ebd9e64979f520184120386",
      "filename": "backend/app/store/image/fs_store.go",
      "status": "modified",
      "additions": 5,
      "deletions": 3,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/app/store/image/fs_store.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/app/store/image/fs_store.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/image/fs_store.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -122,7 +122,7 @@ func (f *FileSystem) Cleanup(ctx context.Context, ttl time.Duration) error {\n \t\treturn nil\n \t}\n \n-\terr := filepath.Walk(f.Staging, func(path string, info os.FileInfo, err error) error {\n+\terr := filepath.Walk(f.Staging, func(fpath string, info os.FileInfo, err error) error {\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}\n@@ -131,8 +131,10 @@ func (f *FileSystem) Cleanup(ctx context.Context, ttl time.Duration) error {\n \t\t}\n \t\tage := time.Since(info.ModTime())\n \t\tif age > ttl {\n-\t\t\tlog.Printf(\"[INFO] remove staging image %s, age %v\", path, age)\n-\t\t\treturn os.Remove(path)\n+\t\t\tlog.Printf(\"[INFO] remove staging image %s, age %v\", fpath, age)\n+\t\t\trmErr := os.Remove(fpath)\n+\t\t\t_ = os.Remove(path.Dir(fpath)) // try to remove directory\n+\t\t\treturn rmErr\n \t\t}\n \t\treturn nil\n \t})"
    },
    {
      "sha": "a340af52d68d6f815b13207f6b9a0d8c255206e7",
      "filename": "backend/app/store/image/fs_store_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/app/store/image/fs_store_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/app/store/image/fs_store_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/image/fs_store_test.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -7,6 +7,7 @@ import (\n \t\"io/ioutil\"\n \t\"math/rand\"\n \t\"os\"\n+\t\"path\"\n \t\"strconv\"\n \t\"strings\"\n \t\"testing\"\n@@ -268,6 +269,9 @@ func TestFsStore_Cleanup(t *testing.T) {\n \n \t_, err = os.Stat(img1)\n \tassert.NotNil(t, err, \"no file on staging anymore\")\n+\t_, err = os.Stat(path.Dir(img1))\n+\tassert.NotNil(t, err, \"no dir %s on staging anymore\", path.Dir(img1))\n+\n \t_, err = os.Stat(img2)\n \tassert.NoError(t, err, \"file on staging\")\n \t_, err = os.Stat(img3)"
    }
  ]
}
