{
  "sha": "4adbca22b27a88054a507fb7875874731387a8b7",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjRhZGJjYTIyYjI3YTg4MDU0YTUwN2ZiNzg3NTg3NDczMTM4N2E4Yjc=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-05-07T06:54:19Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-05-07T06:54:19Z"
    },
    "message": "Refactor rest (#320)\n\n* fresh vendor\r\n\r\n* enforce vendor flag with env\r\n\r\n* move tree to service package\r\n\r\n* move controllers routing to rest.go, remove separate subrouters\r\n\r\n* cleanup/formatting\r\n\r\n* missing vendor packages\r\n\r\n* move rss, img proxy, robots and getstarted to top-level routes\r\n\r\n* simplify logger middleware usage\r\n\r\n* randomize server test ports\r\n\r\n* check for non-admin in admin tests\r\n\r\n* lint: minor warns\r\n\r\n* admin test to jwt admin",
    "tree": {
      "sha": "db910003e33bd208a489b42f6af842c913cb1645",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/db910003e33bd208a489b42f6af842c913cb1645"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/4adbca22b27a88054a507fb7875874731387a8b7",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc0SubCRBK7hj4Ov3rIwAAdHIIACBRvEyb1gqbbY7Jw+oMSFgy\nkPb8KF7IgPXcbLv7pjNr0L0OUCADtpm3sIGh/TciJW/MEXh4mGwMpKPaxzPJHT0Q\ne9C50zHiX+aQqdiaCDxZgMHFqfoFxXlxzp8pMctN3OBAW17SajvOAmmlJLcuFeM3\njDnbkThilaIL8moSzlmFc4lbaZjeVbBlJauPvHhtPnyTpYgbyMvTPodFs2MHDSot\nZX3PPiVK57EekC0I2zSz7N7xn6WGg+3SgLQ0sFITBjcSfSY0uxXsUK/pgAcMRm1V\nwcpUGFXs2zbQiGlbjKjiTRq6Ih2/rZIIO24LL5joahGYRxWnCI87Nu9usMil/5E=\n=dbBR\n-----END PGP SIGNATURE-----\n",
      "payload": "tree db910003e33bd208a489b42f6af842c913cb1645\nparent 1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4\nauthor Umputun <umputun@gmail.com> 1557212059 -0500\ncommitter GitHub <noreply@github.com> 1557212059 -0500\n\nRefactor rest (#320)\n\n* fresh vendor\r\n\r\n* enforce vendor flag with env\r\n\r\n* move tree to service package\r\n\r\n* move controllers routing to rest.go, remove separate subrouters\r\n\r\n* cleanup/formatting\r\n\r\n* missing vendor packages\r\n\r\n* move rss, img proxy, robots and getstarted to top-level routes\r\n\r\n* simplify logger middleware usage\r\n\r\n* randomize server test ports\r\n\r\n* check for non-admin in admin tests\r\n\r\n* lint: minor warns\r\n\r\n* admin test to jwt admin\r\n"
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/4adbca22b27a88054a507fb7875874731387a8b7",
  "html_url": "https://github.com/umputun/remark/commit/4adbca22b27a88054a507fb7875874731387a8b7",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/4adbca22b27a88054a507fb7875874731387a8b7/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "url": "https://api.github.com/repos/umputun/remark/commits/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "html_url": "https://github.com/umputun/remark/commit/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4"
    }
  ],
  "stats": {
    "total": 71108,
    "additions": 66023,
    "deletions": 5085
  },
  "files": [
    {
      "sha": "6724f223751bc4a796d8ed5ca66d95db0f85fab1",
      "filename": "Dockerfile",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/Dockerfile",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/Dockerfile",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/Dockerfile?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -25,12 +25,14 @@ ADD backend /build/backend\n ADD .git /build/.git\n WORKDIR /build/backend\n \n+ENV GOFLAGS=\"-mod=vendor\"\n+\n # run tests\n RUN \\\n     if [ -f .mongo ] ; then export MONGO_TEST=$(cat .mongo) ; fi && \\\n     cd app && \\\n     if [ -z \"$SKIP_BACKEND_TEST\" ] ; then \\\n-        go test -mod=vendor -covermode=count -coverprofile=/profile.cov_tmp ./... && \\\n+        go test -covermode=count -coverprofile=/profile.cov_tmp ./... && \\\n         cat /profile.cov_tmp | grep -v \"_mock.go\" > /profile.cov ; \\\n     else echo \"skip backend test\" ; fi\n \n@@ -55,7 +57,7 @@ RUN \\\n     if [ -z \"$DRONE\" ] ; then echo \"runs outside of drone\" && version=\"local\"; \\\n     else version=${DRONE_TAG}${DRONE_BRANCH}${DRONE_PULL_REQUEST}-${DRONE_COMMIT:0:7}-$(date +%Y%m%d-%H:%M:%S); fi && \\\n     echo \"version=$version\" && \\\n-    go build -mod=vendor -o remark42 -ldflags \"-X main.revision=${version} -s -w\" ./app\n+    go build -o remark42 -ldflags \"-X main.revision=${version} -s -w\" ./app\n \n \n FROM node:10.11-alpine as build-frontend-deps"
    },
    {
      "sha": "5cbdae650da8318fe821ab4bb01e42f38780a884",
      "filename": "backend/app/cmd/cleanup.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/cmd/cleanup.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/cmd/cleanup.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/cleanup.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -131,7 +131,7 @@ func (cc *CleanupCommand) postsInRange(fromS, toS string) ([]store.PostInfo, err\n // get all posts via GET /list?site=siteID&limit=50&skip=10\n func (cc *CleanupCommand) listPosts() ([]store.PostInfo, error) {\n \tlistURL := fmt.Sprintf(\"%s/api/v1/list?site=%s&limit=10000\", cc.RemarkURL, cc.Site)\n-\tr, err := http.Get(listURL) //nolint\n+\tr, err := http.Get(listURL) // nolint\n \tif err != nil {\n \t\treturn nil, errors.Wrapf(err, \"get request failed for list of posts, site %s\", cc.Site)\n \t}\n@@ -158,7 +158,7 @@ func (cc *CleanupCommand) listComments(postURL string) ([]store.Comment, error)\n \n \t// handle 429 error from limiter\n \tfor {\n-\t\tr, err = http.Get(commentsURL) //nolint\n+\t\tr, err = http.Get(commentsURL) // nolint\n \t\tif err != nil {\n \t\t\treturn nil, errors.Wrapf(err, \"get request failed for comments, %s\", postURL)\n \t\t}"
    },
    {
      "sha": "3f0a60c54b5f9b34527365a4607072d0725cd486",
      "filename": "backend/app/cmd/server_test.go",
      "status": "modified",
      "additions": 24,
      "deletions": 17,
      "changes": 41,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/cmd/server_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/cmd/server_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -5,35 +5,37 @@ import (\n \t\"crypto/tls\"\n \t\"fmt\"\n \t\"io/ioutil\"\n+\t\"math/rand\"\n \t\"net/http\"\n \t\"os\"\n \t\"strings\"\n \t\"syscall\"\n \t\"testing\"\n \t\"time\"\n \n-\tjwt \"github.com/dgrijalva/jwt-go\"\n+\t\"github.com/dgrijalva/jwt-go\"\n \t\"github.com/globalsign/mgo\"\n \t\"github.com/go-pkgz/auth/token\"\n \tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/mongo\"\n-\tflags \"github.com/jessevdk/go-flags\"\n+\t\"github.com/jessevdk/go-flags\"\n \n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n )\n \n func TestServerApp(t *testing.T) {\n+\tport := rand.Intn(40000) + 10000\n \tapp, ctx := prepServerApp(t, 1500*time.Millisecond, func(o ServerCommand) ServerCommand {\n-\t\to.Port = 18080\n+\t\to.Port = port\n \t\treturn o\n \t})\n \n \tgo func() { _ = app.run(ctx) }()\n \ttime.Sleep(100 * time.Millisecond) // let server start\n \n \t// send ping\n-\tresp, err := http.Get(\"http://localhost:18080/api/v1/ping\")\n+\tresp, err := http.Get(fmt.Sprintf(\"http://localhost:%d/api/v1/ping\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 200, resp.StatusCode)\n@@ -43,7 +45,7 @@ func TestServerApp(t *testing.T) {\n \n \t// add comment\n \tclient := http.Client{Timeout: 5 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", \"http://localhost:18080/api/v1/comment\",\n+\treq, err := http.NewRequest(\"POST\", fmt.Sprintf(\"http://localhost:%d/api/v1/comment\", port),\n \t\tstrings.NewReader(`{\"text\": \"test 123\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"remark\"}}`))\n \treq.SetBasicAuth(\"admin\", \"password\")\n \trequire.Nil(t, err)\n@@ -59,8 +61,9 @@ func TestServerApp(t *testing.T) {\n }\n \n func TestServerApp_DevMode(t *testing.T) {\n+\tport := rand.Intn(40000) + 10000\n \tapp, ctx := prepServerApp(t, 500*time.Millisecond, func(o ServerCommand) ServerCommand {\n-\t\to.Port = 18085\n+\t\to.Port = port\n \t\to.AdminPasswd = \"password\"\n \t\to.Auth.Dev = true\n \t\treturn o\n@@ -72,7 +75,7 @@ func TestServerApp_DevMode(t *testing.T) {\n \tassert.Equal(t, 4+1, len(app.restSrv.Authenticator.Providers()), \"extra auth provider\")\n \tassert.Equal(t, \"dev\", app.restSrv.Authenticator.Providers()[4].Name(), \"dev auth provider\")\n \t// send ping\n-\tresp, err := http.Get(\"http://localhost:18085/api/v1/ping\")\n+\tresp, err := http.Get(fmt.Sprintf(\"http://localhost:%d/api/v1/ping\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 200, resp.StatusCode)\n@@ -84,8 +87,9 @@ func TestServerApp_DevMode(t *testing.T) {\n }\n \n func TestServerApp_AnonMode(t *testing.T) {\n+\tport := rand.Intn(40000) + 10000\n \tapp, ctx := prepServerApp(t, 500*time.Millisecond, func(o ServerCommand) ServerCommand {\n-\t\to.Port = 18085\n+\t\to.Port = port\n \t\to.Auth.Anonymous = true\n \t\treturn o\n \t})\n@@ -97,7 +101,7 @@ func TestServerApp_AnonMode(t *testing.T) {\n \tassert.Equal(t, \"anonymous\", app.restSrv.Authenticator.Providers()[4].Name(), \"anon auth provider\")\n \n \t// send ping\n-\tresp, err := http.Get(\"http://localhost:18085/api/v1/ping\")\n+\tresp, err := http.Get(fmt.Sprintf(\"http://localhost:%d/api/v1/ping\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 200, resp.StatusCode)\n@@ -106,19 +110,19 @@ func TestServerApp_AnonMode(t *testing.T) {\n \tassert.Equal(t, \"pong\", string(body))\n \n \t// try to login with good name\n-\tresp, err = http.Get(\"http://localhost:18085/auth/anonymous/login?user=blah123&aud=remark42\")\n+\tresp, err = http.Get(fmt.Sprintf(\"http://localhost:%d/auth/anonymous/login?user=blah123&aud=remark42\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 200, resp.StatusCode)\n \n \t// try to login with bad name\n-\tresp, err = http.Get(\"http://localhost:18085/auth/anonymous/login?user=**blah123&aud=remark42\")\n+\tresp, err = http.Get(fmt.Sprintf(\"http://localhost:%d/auth/anonymous/login?user=**blah123&aud=remark42\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 403, resp.StatusCode)\n \n \t// try to login with short name\n-\tresp, err = http.Get(`http://localhost:18085/auth/anonymous/login?user=bl%20%20&aud=remark42`)\n+\tresp, err = http.Get(fmt.Sprintf(\"http://localhost:%d/auth/anonymous/login?user=bl%20%20&aud=remark42\", port))\n \trequire.Nil(t, err)\n \tdefer resp.Body.Close()\n \tassert.Equal(t, 403, resp.StatusCode)\n@@ -284,7 +288,7 @@ func TestServerApp_Failed(t *testing.T) {\n \n func TestServerApp_Shutdown(t *testing.T) {\n \tapp, ctx := prepServerApp(t, 500*time.Millisecond, func(o ServerCommand) ServerCommand {\n-\t\to.Port = 18090\n+\t\to.Port = rand.Intn(40000) + 10000\n \t\treturn o\n \t})\n \tst := time.Now()\n@@ -360,8 +364,9 @@ func Test_ACMEEmail(t *testing.T) {\n }\n \n func TestServerAuthHooks(t *testing.T) {\n+\tport := rand.Intn(40000) + 10000\n \tapp, ctx := prepServerApp(t, 5*time.Second, func(o ServerCommand) ServerCommand {\n-\t\to.Port = 18080\n+\t\to.Port = port\n \t\treturn o\n \t})\n \n@@ -390,7 +395,7 @@ func TestServerAuthHooks(t *testing.T) {\n \n \t// add comment\n \tclient := http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", \"http://localhost:18080/api/v1/comment\",\n+\treq, err := http.NewRequest(\"POST\", fmt.Sprintf(\"http://localhost:%d/api/v1/comment\", port),\n \t\tstrings.NewReader(`{\"text\": \"test 123\", \"locator\":{\"url\": \"https://radio-t.com/p/2018/12/29/podcast-630/\", \"site\": \"remark\"}}`))\n \treq.Header.Set(\"X-JWT\", tk)\n \trequire.Nil(t, err)\n@@ -400,7 +405,8 @@ func TestServerAuthHooks(t *testing.T) {\n \tassert.Equal(t, http.StatusCreated, resp.StatusCode, \"non-blocked user able to post\")\n \n \t// block user dev as admin\n-\treq, e := http.NewRequest(http.MethodPut, \"http://localhost:18080/api/v1/admin/user/dev?site=remark&block=1&ttl=10d\", nil)\n+\treq, e := http.NewRequest(http.MethodPut,\n+\t\tfmt.Sprintf(\"http://localhost:%d/api/v1/admin/user/dev?site=remark&block=1&ttl=10d\", port), nil)\n \tassert.Nil(t, e)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tresp, e = client.Do(req)\n@@ -414,7 +420,7 @@ func TestServerAuthHooks(t *testing.T) {\n \ttime.Sleep(2 * time.Second) // make sure token expired and refresh happened\n \n \t// try add a comment with blocked user\n-\treq, err = http.NewRequest(\"POST\", \"http://localhost:18080/api/v1/comment\",\n+\treq, err = http.NewRequest(\"POST\", fmt.Sprintf(\"http://localhost:%d/api/v1/comment\", port),\n \t\tstrings.NewReader(`{\"text\": \"test 123 blah\", \"locator\":{\"url\": \"https://radio-t.com/blah1\", \"site\": \"remark\"}}`))\n \treq.Header.Set(\"X-JWT\", tk)\n \trequire.Nil(t, err)\n@@ -459,5 +465,6 @@ func prepServerApp(t *testing.T, duration time.Duration, fn func(o ServerCommand\n \t\tlog.Print(\"[TEST] terminate app\")\n \t\tcancel()\n \t}()\n+\trand.Seed(time.Now().UnixNano())\n \treturn app, ctx\n }"
    },
    {
      "sha": "dcac34f91558d630b90c1600554a504688ec12c9",
      "filename": "backend/app/main.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/main.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/main.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/main.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -8,7 +8,7 @@ import (\n \t\"syscall\"\n \n \tlog \"github.com/go-pkgz/lgr\"\n-\tflags \"github.com/jessevdk/go-flags\"\n+\t\"github.com/jessevdk/go-flags\"\n \n \t\"github.com/umputun/remark/backend/app/cmd\"\n )"
    },
    {
      "sha": "e9d64e9e1bb0bb903481d3d6b13e55b326cb3f55",
      "filename": "backend/app/migrator/wordpress_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/migrator/wordpress_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/migrator/wordpress_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/migrator/wordpress_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"testing\"\n \t\"time\"\n \n-\t\"github.com/coreos/bbolt\"\n+\tbolt \"github.com/coreos/bbolt\"\n \t\"github.com/stretchr/testify/assert\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "20f9bee39029c92b1f3b5b430848d9834ae88dee",
      "filename": "backend/app/notify/telegram.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/notify/telegram.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/notify/telegram.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/telegram.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -113,10 +113,10 @@ func (t *Telegram) Send(ctx context.Context, req request) error {\n \t}\n \n \tr, err := http.NewRequest(\"POST\", u, bytes.NewReader(b))\n-\tr.Header.Set(\"Content-Type\", \"application/json; charset=utf-8\")\n \tif err != nil {\n \t\treturn errors.Wrap(err, \"failed to make telegram request\")\n \t}\n+\tr.Header.Set(\"Content-Type\", \"application/json; charset=utf-8\")\n \n \tr = r.WithContext(ctx)\n \tresp, err := client.Do(r)"
    },
    {
      "sha": "2bd96113d5329e3081e75ccee38a0647787eda90",
      "filename": "backend/app/rest/api/admin.go",
      "status": "modified",
      "additions": 0,
      "deletions": 19,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/admin.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/admin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/admin.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -27,25 +27,6 @@ type admin struct {\n \tmigrator      *Migrator\n }\n \n-func (a *admin) routes(middlewares ...func(http.Handler) http.Handler) chi.Router {\n-\trouter := chi.NewRouter()\n-\trouter.Use(middlewares...)\n-\trouter.Delete(\"/comment/{id}\", a.deleteCommentCtrl)\n-\trouter.Put(\"/user/{userid}\", a.setBlockCtrl)\n-\trouter.Delete(\"/user/{userid}\", a.deleteUserCtrl)\n-\trouter.Get(\"/user/{userid}\", a.getUserInfoCtrl)\n-\trouter.Get(\"/deleteme\", a.deleteMeRequestCtrl)\n-\trouter.Put(\"/verify/{userid}\", a.setVerifyCtrl)\n-\trouter.Put(\"/pin/{id}\", a.setPinCtrl)\n-\trouter.Get(\"/blocked\", a.blockedUsersCtrl)\n-\trouter.Put(\"/readonly\", a.setReadOnlyCtrl)\n-\trouter.Put(\"/title/{id}\", a.setTitleCtrl)\n-\n-\ta.migrator.withRoutes(router) // set migrator routes, i.e. /export and /import\n-\n-\treturn router\n-}\n-\n // DELETE /comment/{id}?site=siteID&url=post-url - removes comment\n func (a *admin) deleteCommentCtrl(w http.ResponseWriter, r *http.Request) {\n "
    },
    {
      "sha": "d5295de1edbb41468e45514323c7f1f85bbcbe26",
      "filename": "backend/app/rest/api/admin_test.go",
      "status": "modified",
      "additions": 74,
      "deletions": 89,
      "changes": 163,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/admin_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/admin_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/admin_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -58,12 +58,11 @@ func TestAdmin_Delete(t *testing.T) {\n \t\t{URL: \"https://radio-t.com/blah2\", Count: 0}}), j)\n \n \t// delete a comment\n-\tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodDelete,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/comment/%s?site=radio-t&url=https://radio-t.com/blah\", ts.URL, id1), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err = client.Do(req)\n+\trequireAdminOnly(t, req)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n \tassert.Nil(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \n@@ -134,13 +133,12 @@ func TestAdmin_Title(t *testing.T) {\n \tid1 := addComment(t, c1, ts)\n \taddComment(t, c2, ts)\n \n-\tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/title/%s?site=radio-t&url=%s/post1\", ts.URL, id1, tss.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \n \tbody, code := get(t, fmt.Sprintf(\"%s/api/v1/id/%s?site=radio-t&url=%s/post1\", ts.URL, id1, tss.URL))\n@@ -170,38 +168,37 @@ func TestAdmin_DeleteUser(t *testing.T) {\n \t_, err = srv.DataService.Create(c3)\n \tassert.NoError(t, err)\n \n-\tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodDelete, fmt.Sprintf(\"%s/api/v1/admin/user/%s?site=radio-t\", ts.URL, \"id2\"), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n \tassert.Nil(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \n \t// all 3 comments here, but for id2 they deleted\n \tres, code := get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah&sort=+time\")\n \tassert.Equal(t, 200, code)\n-\tcommentsWithInfo := commentsWithInfo{}\n-\terr = json.Unmarshal([]byte(res), &commentsWithInfo)\n+\tcmntWithInfo := commentsWithInfo{}\n+\terr = json.Unmarshal([]byte(res), &cmntWithInfo)\n \tassert.Nil(t, err)\n-\tassert.Equal(t, 3, len(commentsWithInfo.Comments), \"should have 3 comment\")\n+\tassert.Equal(t, 3, len(cmntWithInfo.Comments), \"should have 3 comment\")\n \n \t// id1 comment untouched\n-\tassert.Equal(t, id1, commentsWithInfo.Comments[0].ID)\n-\tassert.Equal(t, \"o test test #1\", commentsWithInfo.Comments[0].Orig)\n-\tassert.False(t, commentsWithInfo.Comments[0].Deleted)\n-\tt.Logf(\"%+v\", commentsWithInfo.Comments[0].User)\n+\tassert.Equal(t, id1, cmntWithInfo.Comments[0].ID)\n+\tassert.Equal(t, \"o test test #1\", cmntWithInfo.Comments[0].Orig)\n+\tassert.False(t, cmntWithInfo.Comments[0].Deleted)\n+\tt.Logf(\"%+v\", cmntWithInfo.Comments[0].User)\n \n \t// id2 comments fully deleted\n-\tassert.Equal(t, \"\", commentsWithInfo.Comments[1].Text)\n-\tassert.Equal(t, \"\", commentsWithInfo.Comments[1].Orig)\n-\tassert.Equal(t, store.User{Name: \"deleted\", ID: \"deleted\", Picture: \"\", Admin: false, Blocked: false, IP: \"\"}, commentsWithInfo.Comments[1].User)\n-\tassert.True(t, commentsWithInfo.Comments[1].Deleted)\n-\n-\tassert.Equal(t, \"\", commentsWithInfo.Comments[2].Text)\n-\tassert.Equal(t, \"\", commentsWithInfo.Comments[2].Orig)\n-\tassert.Equal(t, store.User{Name: \"deleted\", ID: \"deleted\", Picture: \"\", Admin: false, Blocked: false, IP: \"\"}, commentsWithInfo.Comments[1].User)\n-\tassert.True(t, commentsWithInfo.Comments[2].Deleted)\n+\tassert.Equal(t, \"\", cmntWithInfo.Comments[1].Text)\n+\tassert.Equal(t, \"\", cmntWithInfo.Comments[1].Orig)\n+\tassert.Equal(t, store.User{Name: \"deleted\", ID: \"deleted\", Picture: \"\", Admin: false, Blocked: false, IP: \"\"}, cmntWithInfo.Comments[1].User)\n+\tassert.True(t, cmntWithInfo.Comments[1].Deleted)\n+\n+\tassert.Equal(t, \"\", cmntWithInfo.Comments[2].Text)\n+\tassert.Equal(t, \"\", cmntWithInfo.Comments[2].Orig)\n+\tassert.Equal(t, store.User{Name: \"deleted\", ID: \"deleted\", Picture: \"\", Admin: false, Blocked: false, IP: \"\"}, cmntWithInfo.Comments[1].User)\n+\tassert.True(t, cmntWithInfo.Comments[2].Deleted)\n }\n \n func TestAdmin_Pin(t *testing.T) {\n@@ -221,6 +218,7 @@ func TestAdmin_Pin(t *testing.T) {\n \t\treq, err := http.NewRequest(http.MethodPut,\n \t\t\tfmt.Sprintf(\"%s/api/v1/admin/pin/%s?site=radio-t&url=https://radio-t.com/blah&pin=%d\", ts.URL, id1, val), nil)\n \t\tassert.Nil(t, err)\n+\t\trequireAdminOnly(t, req)\n \t\treq.SetBasicAuth(\"admin\", \"password\")\n \t\tresp, err := client.Do(req)\n \t\tassert.Nil(t, err)\n@@ -262,15 +260,14 @@ func TestAdmin_Block(t *testing.T) {\n \tassert.Nil(t, err)\n \n \tblock := func(val int, ttl string) (code int, body []byte) {\n-\t\tclient := http.Client{}\n \t\turl := fmt.Sprintf(\"%s/api/v1/admin/user/%s?site=radio-t&block=%d\", ts.URL, \"user1\", val)\n \t\tif ttl != \"\" {\n \t\t\turl = url + \"&ttl=\" + ttl\n \t\t}\n \t\treq, e := http.NewRequest(http.MethodPut, url, nil)\n \t\tassert.Nil(t, e)\n-\t\treq.SetBasicAuth(\"admin\", \"password\")\n-\t\tresp, e := client.Do(req)\n+\t\trequireAdminOnly(t, req)\n+\t\tresp, e := sendReq(t, req, adminUmputunToken)\n \t\trequire.Nil(t, e)\n \t\tbody, e = ioutil.ReadAll(resp.Body)\n \t\tassert.Nil(t, e)\n@@ -332,29 +329,26 @@ func TestAdmin_BlockedList(t *testing.T) {\n \tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n-\tclient := http.Client{}\n-\n \t// block user1\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/user/%s?site=radio-t&block=%d\", ts.URL, \"user1\", 1), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\t_, err = client.Do(req)\n-\trequire.Nil(t, err)\n+\tres, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 200, res.StatusCode)\n \n \t// block user2\n \treq, err = http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/user/%s?site=radio-t&block=%d&ttl=50ms\", ts.URL, \"user2\", 1), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\t_, err = client.Do(req)\n-\trequire.Nil(t, err)\n+\tres, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 200, res.StatusCode)\n \n \treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/blocked?site=radio-t\", nil)\n-\trequire.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tres, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequire.NoError(t, err)\n+\tres, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \trequire.Equal(t, 200, res.StatusCode)\n \tusers := []store.BlockedUser{}\n \terr = json.NewDecoder(res.Body).Decode(&users)\n@@ -366,10 +360,9 @@ func TestAdmin_BlockedList(t *testing.T) {\n \ttime.Sleep(50 * time.Millisecond)\n \n \treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/blocked?site=radio-t\", nil)\n-\trequire.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tres, err = client.Do(req)\n-\trequire.Nil(t, err)\n+\trequire.NoError(t, err)\n+\tres, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \trequire.Equal(t, 200, res.StatusCode)\n \tusers = []store.BlockedUser{}\n \terr = json.NewDecoder(res.Body).Decode(&users)\n@@ -396,15 +389,15 @@ func TestAdmin_ReadOnly(t *testing.T) {\n \tassert.Nil(t, err)\n \tassert.False(t, info.ReadOnly)\n \n-\tclient := http.Client{}\n-\n \t// set post to read-only\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/readonly?site=radio-t&url=https://radio-t.com/blah&ro=1\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\tresp, err := sendReq(t, req, \"\") // non-admin user\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 401, resp.StatusCode)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \tinfo, err = srv.DataService.Info(store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}, 0)\n \tassert.Nil(t, err)\n@@ -416,20 +409,18 @@ func TestAdmin_ReadOnly(t *testing.T) {\n \tb, err := json.Marshal(c)\n \tassert.Nil(t, err, \"can't marshal comment %+v\", c)\n \treq, err = http.NewRequest(\"POST\", ts.URL+\"/api/v1/comment\", bytes.NewBuffer(b))\n-\tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err = client.Do(req)\n-\tassert.Nil(t, err)\n+\trequire.NoError(t, err)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, http.StatusForbidden, resp.StatusCode)\n \n \t// reset post's read-only\n \treq, err = http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/readonly?site=radio-t&url=https://radio-t.com/blah&ro=0\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err = client.Do(req)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n-\trequire.Nil(t, err)\n \tinfo, err = srv.DataService.Info(store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}, 0)\n \tassert.Nil(t, err)\n \tassert.False(t, info.ReadOnly)\n@@ -440,26 +431,23 @@ func TestAdmin_ReadOnly(t *testing.T) {\n \tb, err = json.Marshal(c)\n \tassert.Nil(t, err, \"can't marshal comment %+v\", c)\n \treq, err = http.NewRequest(\"POST\", ts.URL+\"/api/v1/comment\", bytes.NewBuffer(b))\n-\tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err = client.Do(req)\n-\tassert.Nil(t, err)\n+\trequire.NoError(t, err)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, http.StatusCreated, resp.StatusCode)\n }\n \n func TestAdmin_ReadOnlyNoComments(t *testing.T) {\n \tts, srv, teardown := startupT(t)\n \tdefer teardown()\n \n-\tclient := http.Client{}\n-\n \t// set post to read-only\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/readonly?site=radio-t&url=https://radio-t.com/blah&ro=1\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \t_, err = srv.DataService.Info(store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}, 0)\n \tassert.NotNil(t, err)\n@@ -488,30 +476,27 @@ func TestAdmin_ReadOnlyWithAge(t *testing.T) {\n \tassert.Nil(t, err)\n \tassert.True(t, info.ReadOnly, \"ro by age\")\n \n-\tclient := http.Client{}\n-\n \t// set post to read-only\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/readonly?site=radio-t&url=https://radio-t.com/blah&ro=1\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \tinfo, err = srv.DataService.Info(store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}, 0)\n-\tassert.Nil(t, err)\n+\tassert.NoError(t, err)\n \tassert.True(t, info.ReadOnly)\n \n \t// reset post's read-only\n \treq, err = http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/readonly?site=radio-t&url=https://radio-t.com/blah&ro=0\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err = client.Do(req)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 403, resp.StatusCode)\n-\trequire.Nil(t, err)\n \tinfo, err = srv.DataService.Info(store.Locator{SiteID: \"radio-t\", URL: \"https://radio-t.com/blah\"}, 0)\n-\tassert.Nil(t, err)\n+\tassert.NoError(t, err)\n \tassert.True(t, info.ReadOnly)\n \n }\n@@ -532,13 +517,13 @@ func TestAdmin_Verify(t *testing.T) {\n \tverified := srv.DataService.IsVerified(\"radio-t\", \"user1\")\n \tassert.False(t, verified)\n \n-\tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/verify/user1?site=radio-t&verified=1\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\t_, err = client.Do(req)\n-\trequire.Nil(t, err)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 200, resp.StatusCode)\n \tverified = srv.DataService.IsVerified(\"radio-t\", \"user1\")\n \tassert.True(t, verified)\n \n@@ -554,9 +539,9 @@ func TestAdmin_Verify(t *testing.T) {\n \treq, err = http.NewRequest(http.MethodPut,\n \t\tfmt.Sprintf(\"%s/api/v1/admin/verify/user1?site=radio-t&verified=0\", ts.URL), nil)\n \tassert.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\t_, err = client.Do(req)\n-\trequire.Nil(t, err)\n+\tresp, err = sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 200, resp.StatusCode)\n \tverified = srv.DataService.IsVerified(\"radio-t\", \"user1\")\n \tassert.False(t, verified)\n \n@@ -601,12 +586,11 @@ func TestAdmin_ExportFile(t *testing.T) {\n \taddComment(t, c1, ts)\n \taddComment(t, c2, ts)\n \n-\tclient := &http.Client{Timeout: 5 * time.Second}\n \treq, err := http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/export?site=radio-t&mode=file\", nil)\n-\trequire.Nil(t, err)\n-\treq.SetBasicAuth(\"admin\", \"password\")\n-\tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequire.NoError(t, err)\n+\trequireAdminOnly(t, req)\n+\tresp, err := sendReq(t, req, adminUmputunToken)\n+\trequire.NoError(t, err)\n \n \tassert.Equal(t, 200, resp.StatusCode)\n \tassert.Equal(t, \"application/gzip\", resp.Header.Get(\"Content-Type\"))\n@@ -665,9 +649,10 @@ func TestAdmin_DeleteMeRequest(t *testing.T) {\n \tclient := http.Client{}\n \treq, err := http.NewRequest(http.MethodGet, fmt.Sprintf(\"%s/api/v1/admin/deleteme?token=%s\", ts.URL, tkn), nil)\n \tassert.Nil(t, err)\n+\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tresp, err := client.Do(req)\n-\trequire.Nil(t, err)\n+\trequire.NoError(t, err)\n \tassert.Equal(t, 200, resp.StatusCode)\n \n \t_, err = srv.DataService.User(\"radio-t\", \"user1\", 0, 0)"
    },
    {
      "sha": "075a3f6c3e29df4b030c98b33a4fbc9500fd9394",
      "filename": "backend/app/rest/api/migrator.go",
      "status": "modified",
      "additions": 0,
      "deletions": 10,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/migrator.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/migrator.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/migrator.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -11,7 +11,6 @@ import (\n \t\"sync\"\n \t\"time\"\n \n-\t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n \tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n@@ -40,15 +39,6 @@ type KeyStore interface {\n \tKey() (key string, err error)\n }\n \n-func (m *Migrator) withRoutes(router chi.Router) chi.Router {\n-\trouter.Get(\"/export\", m.exportCtrl)\n-\n-\trouter.Post(\"/import\", m.importCtrl)\n-\trouter.Post(\"/import/form\", m.importFormCtrl)\n-\trouter.Get(\"/import/wait\", m.importWaitCtrl)\n-\treturn router\n-}\n-\n // POST /import?secret=key&site=site-id&provider=disqus|remark|wordpress\n // imports comments from post body.\n func (m *Migrator) importCtrl(w http.ResponseWriter, r *http.Request) {"
    },
    {
      "sha": "a40413662abb514179e808c0f3730dc34a5035fc",
      "filename": "backend/app/rest/api/migrator_test.go",
      "status": "modified",
      "additions": 20,
      "deletions": 64,
      "changes": 84,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/migrator_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/migrator_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/migrator_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,38 +6,26 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n-\t\"math/rand\"\n \t\"mime/multipart\"\n \t\"net/http\"\n \t\"net/http/httptest\"\n-\t\"os\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n \n-\t\"github.com/coreos/bbolt\"\n-\t\"github.com/go-chi/chi\"\n-\t\"github.com/go-pkgz/auth\"\n-\t\"github.com/go-pkgz/auth/token\"\n-\t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n-\n-\t\"github.com/umputun/remark/backend/app/migrator\"\n-\tadminstore \"github.com/umputun/remark/backend/app/store/admin\"\n-\t\"github.com/umputun/remark/backend/app/store/engine\"\n-\t\"github.com/umputun/remark/backend/app/store/service\"\n )\n \n func TestMigrator_Import(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \tr := strings.NewReader(`{\"version\":1} {\"id\":\"2aa0478c-df1b-46b1-b561-03d507cf482c\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}\n \t{\"id\":\"83fd97fd-ff64-48d1-9fb7-ca7769c77037\",\"pid\":\"p1\",\"text\":\"<p>test test #2</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah2\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.861387771-05:00\"}`)\n \n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native\", r)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tassert.Nil(t, err)\n \tresp, err := client.Do(req)\n@@ -52,7 +40,7 @@ func TestMigrator_Import(t *testing.T) {\n }\n \n func TestMigrator_ImportForm(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \tr := strings.NewReader(`{\"version\":1} {\"id\":\"2aa0478c-df1b-46b1-b561-03d507cf482c\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}\n@@ -68,7 +56,7 @@ func TestMigrator_ImportForm(t *testing.T) {\n \trequire.NoError(t, bodyWriter.Close())\n \n \tauthts := strings.Replace(ts.URL, \"http://\", \"http://admin:password@\", 1)\n-\tresp, err := http.Post(authts+\"/import/form?site=radio-t&provider=native\", contentType, bodyBuf)\n+\tresp, err := http.Post(authts+\"/api/v1/admin/import/form?site=radio-t&provider=native\", contentType, bodyBuf)\n \tassert.Nil(t, err)\n \tassert.Equal(t, http.StatusAccepted, resp.StatusCode)\n \n@@ -80,13 +68,13 @@ func TestMigrator_ImportForm(t *testing.T) {\n }\n \n func TestMigrator_ImportFromWP(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \tr := strings.NewReader(strings.Replace(xmlTestWP, \"'\", \"`\", -1))\n \n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=wordpress\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=wordpress\", r)\n \tassert.Nil(t, err)\n \treq.Header.Add(\"Content-Type\", \"application/xml; charset=utf-8\")\n \treq.SetBasicAuth(\"admin\", \"password\")\n@@ -102,22 +90,22 @@ func TestMigrator_ImportFromWP(t *testing.T) {\n }\n \n func TestMigrator_ImportRejected(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \tr := strings.NewReader(`{\"version\":1} {\"id\":\"2aa0478c-df1b-46b1-b561-03d507cf482c\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}\n \t{\"id\":\"83fd97fd-ff64-48d1-9fb7-ca7769c77037\",\"pid\":\"p1\",\"text\":\"<p>test test #2</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah2\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.861387771-05:00\"}`)\n \n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native&secret=XYZ\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native&secret=XYZ\", r)\n \tassert.Nil(t, err)\n \tresp, err := client.Do(req)\n \tassert.Nil(t, err)\n \tassert.Equal(t, http.StatusUnauthorized, resp.StatusCode)\n }\n \n func TestMigrator_ImportDouble(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \ttmpl := `{\"id\":\"%d\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}`\n@@ -127,15 +115,15 @@ func TestMigrator_ImportDouble(t *testing.T) {\n \t}\n \tr := strings.NewReader(`{\"version\":1}` + strings.Join(recs, \"\\n\")) // reader with 10k records\n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native\", r)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tassert.Nil(t, err)\n \tresp, err := client.Do(req)\n \tassert.Nil(t, err)\n \tassert.Equal(t, http.StatusAccepted, resp.StatusCode)\n \n \tclient = &http.Client{Timeout: 1 * time.Second}\n-\treq, err = http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native\", r)\n+\treq, err = http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native\", r)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tassert.Nil(t, err)\n \tresp, err = client.Do(req)\n@@ -145,7 +133,7 @@ func TestMigrator_ImportDouble(t *testing.T) {\n }\n \n func TestMigrator_ImportWaitExpired(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \ttmpl := `{\"id\":\"%d\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}`\n@@ -155,15 +143,15 @@ func TestMigrator_ImportWaitExpired(t *testing.T) {\n \t}\n \tr := strings.NewReader(`{\"version\":1}` + strings.Join(recs, \"\\n\")) // reader with 10k records\n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native\", r)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \trequire.Nil(t, err)\n \tresp, err := client.Do(req)\n \tassert.Nil(t, err)\n \tassert.Equal(t, http.StatusAccepted, resp.StatusCode)\n \n \tclient = &http.Client{Timeout: 10 * time.Second}\n-\treq, err = http.NewRequest(\"GET\", ts.URL+\"/import/wait?site=radio-t&timeout=100ms\", nil)\n+\treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/import/wait?site=radio-t&timeout=100ms\", nil)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tassert.NoError(t, err)\n \tresp, err = client.Do(req)\n@@ -174,15 +162,15 @@ func TestMigrator_ImportWaitExpired(t *testing.T) {\n }\n \n func TestMigrator_Export(t *testing.T) {\n-\tts, teardown := prepImportSrv(t)\n+\tts, _, teardown := startupT(t)\n \tdefer teardown()\n \n \tr := strings.NewReader(`{\"version\":1} {\"id\":\"2aa0478c-df1b-46b1-b561-03d507cf482c\",\"pid\":\"\",\"text\":\"<p>test test #1</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah1\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.849053725-05:00\"}\n \t{\"id\":\"83fd97fd-ff64-48d1-9fb7-ca7769c77037\",\"pid\":\"p1\",\"text\":\"<p>test test #2</p>\",\"user\":{\"name\":\"developer one\",\"id\":\"dev\",\"picture\":\"/api/v1/avatar/remark.image\",\"profile\":\"https://remark42.com\",\"admin\":true,\"ip\":\"ae12fe3b5f129b5cc4cdd2b136b7b7947c4d2741\"},\"locator\":{\"site\":\"radio-t\",\"url\":\"https://radio-t.com/blah2\"},\"score\":0,\"votes\":{},\"time\":\"2018-04-30T01:37:00.861387771-05:00\"}`)\n \n \t// import comments first\n \tclient := &http.Client{Timeout: 1 * time.Second}\n-\treq, err := http.NewRequest(\"POST\", ts.URL+\"/import?site=radio-t&provider=native\", r)\n+\treq, err := http.NewRequest(\"POST\", ts.URL+\"/api/v1/admin/import?site=radio-t&provider=native\", r)\n \trequire.Nil(t, err)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tresp, err := client.Do(req)\n@@ -191,7 +179,7 @@ func TestMigrator_Export(t *testing.T) {\n \twaitForImportCompletion(t, ts)\n \n \t// check file mode\n-\treq, err = http.NewRequest(\"GET\", ts.URL+\"/export?mode=file&site=radio-t\", nil)\n+\treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/export?mode=file&site=radio-t\", nil)\n \trequire.Nil(t, err)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tresp, err = client.Do(req)\n@@ -208,7 +196,7 @@ func TestMigrator_Export(t *testing.T) {\n \tt.Logf(\"%s\", string(ungzBody))\n \n \t// check stream mode\n-\treq, err = http.NewRequest(\"GET\", ts.URL+\"/export?mode=stream&site=radio-t\", nil)\n+\treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/export?mode=stream&site=radio-t\", nil)\n \trequire.Nil(t, err)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tresp, err = client.Do(req)\n@@ -222,7 +210,7 @@ func TestMigrator_Export(t *testing.T) {\n \tassert.Equal(t, 2, strings.Count(string(body), \"\\\"text\\\"\"))\n \tt.Logf(\"%s\", string(body))\n \n-\treq, err = http.NewRequest(\"GET\", ts.URL+\"/export?site=radio-t\", nil)\n+\treq, err = http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/export?site=radio-t\", nil)\n \trequire.Nil(t, err)\n \tresp, err = client.Do(req)\n \trequire.Nil(t, err)\n@@ -231,7 +219,7 @@ func TestMigrator_Export(t *testing.T) {\n \n func waitForImportCompletion(t *testing.T, ts *httptest.Server) {\n \tclient := &http.Client{Timeout: 10 * time.Second}\n-\treq, err := http.NewRequest(\"GET\", ts.URL+\"/import/wait?site=radio-t\", nil)\n+\treq, err := http.NewRequest(\"GET\", ts.URL+\"/api/v1/admin/import/wait?site=radio-t\", nil)\n \treq.SetBasicAuth(\"admin\", \"password\")\n \tassert.NoError(t, err)\n \tresp, err := client.Do(req)\n@@ -243,38 +231,6 @@ func waitForImportCompletion(t *testing.T, ts *httptest.Server) {\n \tassert.Equal(t, \"{\\\"site_id\\\":\\\"radio-t\\\",\\\"status\\\":\\\"completed\\\"}\\n\", string(b))\n }\n \n-func prepImportSrv(t *testing.T) (ts *httptest.Server, teardown func()) {\n-\ttestDb := fmt.Sprintf(\"/tmp/test-remark-import-%d.db\", rand.Int31())\n-\tb, err := engine.NewBoltDB(bolt.Options{}, engine.BoltSite{FileName: testDb, SiteID: \"radio-t\"})\n-\trequire.Nil(t, err)\n-\tadminStore := adminstore.NewStaticStore(\"123456\", []string{\"a1\", \"a2\"}, \"admin@remark-42.com\")\n-\tdataStore := &service.DataStore{Interface: b, AdminStore: adminStore}\n-\tsvc := &Migrator{\n-\t\tDisqusImporter:    &migrator.Disqus{DataStore: dataStore},\n-\t\tWordPressImporter: &migrator.WordPress{DataStore: dataStore},\n-\t\tNativeImporter:    &migrator.Native{DataStore: dataStore},\n-\t\tNativeExporter:    &migrator.Native{DataStore: dataStore},\n-\t\tCache:             &cache.Nop{},\n-\t\tKeyStore:          adminStore,\n-\t}\n-\n-\ta := auth.NewService(auth.Opts{\n-\t\tAdminPasswd:  \"password\",\n-\t\tSecretReader: token.SecretFunc(func() (string, error) { return \"123456\", nil }),\n-\t\tIssuer:       \"test\",\n-\t})\n-\n-\tam := a.Middleware()\n-\troutes := svc.withRoutes(chi.NewRouter().With(am.Auth).With(am.AdminOnly))\n-\tts = httptest.NewServer(routes)\n-\tteardown = func() {\n-\t\tts.Close()\n-\t\trequire.NoError(t, b.Close())\n-\t\t_ = os.Remove(testDb)\n-\t}\n-\treturn ts, teardown\n-}\n-\n var xmlTestWP = `\n <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n <rss version=\"2.0\""
    },
    {
      "sha": "946cb6bdcabe470f856cc0e4912d511e0e60c01e",
      "filename": "backend/app/rest/api/rest.go",
      "status": "modified",
      "additions": 55,
      "deletions": 55,
      "changes": 110,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -5,9 +5,7 @@ import (\n \t\"context\"\n \t\"encoding/json\"\n \t\"fmt\"\n-\t\"io/ioutil\"\n \t\"net/http\"\n-\t\"path\"\n \t\"strings\"\n \t\"sync\"\n \t\"time\"\n@@ -17,7 +15,6 @@ import (\n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/chi/middleware\"\n \t\"github.com/go-chi/cors\"\n-\t\"github.com/go-chi/render\"\n \t\"github.com/go-pkgz/auth\"\n \tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n@@ -189,12 +186,12 @@ func (s *Rest) routes() chi.Router {\n \trouter.Use(corsMiddleware.Handler)\n \n \tipFn := func(ip string) string { return store.HashValue(ip, s.SharedSecret)[:12] } // logger uses it for anonymization\n+\tlogInfoWithBody := logger.New(logger.Log(log.Default()), logger.WithBody, logger.IPfn(ipFn), logger.Prefix(\"[INFO]\")).Handler\n \n \tauthHandler, avatarHandler := s.Authenticator.Handlers()\n \n \trouter.Group(func(r chi.Router) {\n-\t\tl := logger.New(logger.Log(log.Default()), logger.WithBody, logger.IPfn(ipFn), logger.Prefix(\"[INFO]\"))\n-\t\tr.Use(l.Handler, tollbooth_chi.LimitHandler(tollbooth.NewLimiter(5, nil)), middleware.NoCache)\n+\t\tr.Use(logInfoWithBody, tollbooth_chi.LimitHandler(tollbooth.NewLimiter(5, nil)), middleware.NoCache)\n \t\tr.Mount(\"/auth\", authHandler)\n \t})\n \n@@ -217,10 +214,7 @@ func (s *Rest) routes() chi.Router {\n \t\t// open routes\n \t\trapi.Group(func(ropen chi.Router) {\n \t\t\tropen.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(10, nil)))\n-\t\t\tropen.Use(authMiddleware.Trace)\n-\t\t\tropen.Use(middleware.NoCache)\n-\t\t\tropen.Use(logger.New(logger.Log(log.Default()), logger.WithBody,\n-\t\t\t\tlogger.Prefix(\"[INFO]\"), logger.IPfn(ipFn)).Handler)\n+\t\t\tropen.Use(authMiddleware.Trace, middleware.NoCache, logInfoWithBody)\n \t\t\tropen.Get(\"/find\", s.findCommentsCtrl)\n \t\t\tropen.Get(\"/id/{id}\", s.commentByIDCtrl)\n \t\t\tropen.Get(\"/comments\", s.findUserCommentsCtrl)\n@@ -231,44 +225,60 @@ func (s *Rest) routes() chi.Router {\n \t\t\tropen.Get(\"/config\", s.configCtrl)\n \t\t\tropen.Post(\"/preview\", s.previewCommentCtrl)\n \t\t\tropen.Get(\"/info\", s.infoCtrl)\n-\t\t\tropen.Mount(\"/img\", s.ImageProxy.Routes())\n-\t\t\tropen.Mount(\"/rss\", s.rssRoutes())\n+\t\t\tropen.Get(\"/img\", s.ImageProxy.Handler)\n+\n+\t\t\tropen.Route(\"/rss\", func(rrss chi.Router) {\n+\t\t\t\trrss.Get(\"/post\", s.rssPostCommentsCtrl)\n+\t\t\t\trrss.Get(\"/site\", s.rssSiteCommentsCtrl)\n+\t\t\t\trrss.Get(\"/reply\", s.rssRepliesCtrl)\n+\t\t\t})\n \t\t})\n \n \t\t// open routes, cached\n \t\trapi.Group(func(ropen chi.Router) {\n \t\t\tropen.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(10, nil)))\n-\t\t\tropen.Use(authMiddleware.Trace)\n-\t\t\tropen.Use(logger.New(logger.Log(log.Default()), logger.WithBody,\n-\t\t\t\tlogger.Prefix(\"[INFO]\"), logger.IPfn(ipFn)).Handler)\n+\t\t\tropen.Use(authMiddleware.Trace, logInfoWithBody)\n \t\t\tropen.Get(\"/picture/{user}/{id}\", s.loadPictureCtrl)\n \t\t})\n \n \t\t// protected routes, require auth\n \t\trapi.Group(func(rauth chi.Router) {\n \t\t\trauth.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(10, nil)))\n-\t\t\trauth.Use(authMiddleware.Auth)\n-\t\t\trauth.Use(middleware.NoCache)\n-\t\t\trauth.Use(logger.New(logger.Log(log.Default()), logger.WithBody,\n-\t\t\t\tlogger.Prefix(\"[INFO]\"), logger.IPfn(ipFn)).Handler)\n+\t\t\trauth.Use(authMiddleware.Auth, middleware.NoCache, logInfoWithBody)\n \t\t\trauth.Get(\"/user\", s.userInfoCtrl)\n \t\t\trauth.Get(\"/userdata\", s.userAllDataCtrl)\n+\t\t})\n \n-\t\t\t// admin routes, admin users only\n-\t\t\trauth.Mount(\"/admin\", s.adminService.routes(authMiddleware.AdminOnly))\n+\t\t// admin routes, require auth and admin users only\n+\t\trapi.Route(\"/admin\", func(radmin chi.Router) {\n+\t\t\tradmin.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(10, nil)))\n+\t\t\tradmin.Use(authMiddleware.Auth, authMiddleware.AdminOnly)\n+\t\t\tradmin.Use(middleware.NoCache, logInfoWithBody)\n+\n+\t\t\tradmin.Delete(\"/comment/{id}\", s.adminService.deleteCommentCtrl)\n+\t\t\tradmin.Put(\"/user/{userid}\", s.adminService.setBlockCtrl)\n+\t\t\tradmin.Delete(\"/user/{userid}\", s.adminService.deleteUserCtrl)\n+\t\t\tradmin.Get(\"/user/{userid}\", s.adminService.getUserInfoCtrl)\n+\t\t\tradmin.Get(\"/deleteme\", s.adminService.deleteMeRequestCtrl)\n+\t\t\tradmin.Put(\"/verify/{userid}\", s.adminService.setVerifyCtrl)\n+\t\t\tradmin.Put(\"/pin/{id}\", s.adminService.setPinCtrl)\n+\t\t\tradmin.Get(\"/blocked\", s.adminService.blockedUsersCtrl)\n+\t\t\tradmin.Put(\"/readonly\", s.adminService.setReadOnlyCtrl)\n+\t\t\tradmin.Put(\"/title/{id}\", s.adminService.setTitleCtrl)\n+\n+\t\t\t// migrator\n+\t\t\tradmin.Get(\"/export\", s.adminService.migrator.exportCtrl)\n+\t\t\tradmin.Post(\"/import\", s.adminService.migrator.importCtrl)\n+\t\t\tradmin.Post(\"/import/form\", s.adminService.migrator.importFormCtrl)\n+\t\t\tradmin.Get(\"/import/wait\", s.adminService.migrator.importWaitCtrl)\n \t\t})\n \n \t\t// protected routes, throttled to 10/s by default, controlled by external UpdateLimiter param\n \t\trapi.Group(func(rauth chi.Router) {\n-\t\t\tlmt := 10.0\n-\t\t\tif s.UpdateLimiter > 0 {\n-\t\t\t\tlmt = s.UpdateLimiter\n-\t\t\t}\n-\t\t\trauth.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(lmt, nil)))\n+\t\t\trauth.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(s.updateLimiter(), nil)))\n \t\t\trauth.Use(authMiddleware.Auth)\n \t\t\trauth.Use(middleware.NoCache)\n-\t\t\trauth.Use(logger.New(logger.Log(log.Default()), logger.WithBody,\n-\t\t\t\tlogger.Prefix(\"[DEBUG]\"), logger.IPfn(ipFn)).Handler)\n+\t\t\trauth.Use(logger.New(logger.Log(log.Default()), logger.WithBody, logger.Prefix(\"[DEBUG]\"), logger.IPfn(ipFn)).Handler)\n \n \t\t\trauth.Put(\"/comment/{id}\", s.updateCommentCtrl)\n \t\t\trauth.Post(\"/comment\", s.createCommentCtrl)\n@@ -277,39 +287,20 @@ func (s *Rest) routes() chi.Router {\n \t\t})\n \n \t\trapi.Group(func(rauth chi.Router) {\n-\t\t\tlmt := 10.0\n-\t\t\tif s.UpdateLimiter > 0 {\n-\t\t\t\tlmt = s.UpdateLimiter\n-\t\t\t}\n-\t\t\trauth.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(lmt, nil)))\n-\t\t\trauth.Use(authMiddleware.Auth)\n+\t\t\trauth.Use(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(s.updateLimiter(), nil)))\n+\t\t\trauth.Use(authMiddleware.Auth, rejectAnonUser)\n \t\t\trauth.Use(logger.New(logger.Log(log.Default()), logger.Prefix(\"[DEBUG]\"), logger.IPfn(ipFn)).Handler)\n-\t\t\trauth.With(rejectAnonUser).Post(\"/picture\", s.savePictureCtrl)\n+\t\t\trauth.Post(\"/picture\", s.savePictureCtrl)\n \t\t})\n \n \t})\n \n-\t// respond to /robots.txt with the list of allowed paths\n-\trouter.With(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(50, nil))).\n-\t\tGet(\"/robots.txt\", func(w http.ResponseWriter, r *http.Request) {\n-\t\t\tallowed := []string{\"/find\", \"/last\", \"/id\", \"/count\", \"/counts\", \"/list\", \"/config\",\n-\t\t\t\t\"/img\", \"/avatar\", \"/picture\"}\n-\t\t\tfor i := range allowed {\n-\t\t\t\tallowed[i] = \"Allow: /api/v1\" + allowed[i]\n-\t\t\t}\n-\t\t\trender.PlainText(w, r, \"User-agent: *\\nDisallow: /auth/\\nDisallow: /api/\\n\"+strings.Join(allowed, \"\\n\")+\"\\n\")\n-\t\t})\n-\n-\t// respond to /index.html with the content of getstarted.html under /web root\n-\trouter.With(tollbooth_chi.LimitHandler(tollbooth.NewLimiter(50, nil))).\n-\t\tGet(\"/index.html\", func(w http.ResponseWriter, r *http.Request) {\n-\t\t\tdata, err := ioutil.ReadFile(path.Join(s.WebRoot, \"getstarted.html\"))\n-\t\t\tif err != nil {\n-\t\t\t\tw.WriteHeader(http.StatusNotFound)\n-\t\t\t\treturn\n-\t\t\t}\n-\t\t\trender.HTML(w, r, string(data))\n-\t\t})\n+\t// open routes on root level\n+\trouter.Group(func(rroot chi.Router) {\n+\t\ttollbooth_chi.LimitHandler(tollbooth.NewLimiter(50, nil))\n+\t\trroot.Get(\"/index.html\", s.getStartedCtrl)\n+\t\trroot.Get(\"/robots.txt\", s.getRobotsCtrl)\n+\t})\n \n \t// file server for static content from /web\n \taddFileServer(router, \"/web\", http.Dir(s.WebRoot))\n@@ -351,6 +342,15 @@ func (s *Rest) alterComments(comments []store.Comment, r *http.Request) (res []s\n \treturn res\n }\n \n+// updateLimiter returns UpdateLimiter if set, or 10 if not\n+func (s *Rest) updateLimiter() float64 {\n+\tlmt := 10.0\n+\tif s.UpdateLimiter > 0 {\n+\t\tlmt = s.UpdateLimiter\n+\t}\n+\treturn lmt\n+}\n+\n // serves static files from /web or embedded by statik\n func addFileServer(r chi.Router, path string, root http.FileSystem) {\n "
    },
    {
      "sha": "787ffbd512ecdb37271911d1311fc410a0a2b906",
      "filename": "backend/app/rest/api/rest_private.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_private.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_private.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_private.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -9,14 +9,14 @@ import (\n \t\"strings\"\n \t\"time\"\n \n-\tjwt \"github.com/dgrijalva/jwt-go\"\n+\t\"github.com/dgrijalva/jwt-go\"\n \t\"github.com/go-chi/chi\"\n \t\"github.com/go-chi/render\"\n \t\"github.com/go-pkgz/auth/token\"\n \tlog \"github.com/go-pkgz/lgr\"\n \tR \"github.com/go-pkgz/rest\"\n \t\"github.com/go-pkgz/rest/cache\"\n-\tmultierror \"github.com/hashicorp/go-multierror\"\n+\t\"github.com/hashicorp/go-multierror\"\n \n \t\"github.com/umputun/remark/backend/app/rest\"\n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "42ba116d388ec6dd5416a2588e3eb78f93fa1ed0",
      "filename": "backend/app/rest/api/rest_public.go",
      "status": "modified",
      "additions": 31,
      "deletions": 4,
      "changes": 35,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_public.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_public.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_public.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -4,7 +4,9 @@ import (\n \t\"crypto/sha1\" // nolint\n \t\"encoding/base64\"\n \t\"io\"\n+\t\"io/ioutil\"\n \t\"net/http\"\n+\t\"path\"\n \t\"strconv\"\n \t\"strings\"\n \n@@ -16,6 +18,7 @@ import (\n \n \t\"github.com/umputun/remark/backend/app/rest\"\n \t\"github.com/umputun/remark/backend/app/store\"\n+\t\"github.com/umputun/remark/backend/app/store/service\"\n )\n \n // GET /find?site=siteID&url=post-url&format=[tree|plain]&sort=[+/-time|+/-score|+/-controversy ]\n@@ -38,9 +41,9 @@ func (s *Rest) findCommentsCtrl(w http.ResponseWriter, r *http.Request) {\n \t\tvar b []byte\n \t\tswitch r.URL.Query().Get(\"format\") {\n \t\tcase \"tree\":\n-\t\t\ttree := rest.MakeTree(maskedComments, sort, s.ReadOnlyAge)\n+\t\t\ttree := service.MakeTree(maskedComments, sort, s.ReadOnlyAge)\n \t\t\tif tree.Nodes == nil { // eliminate json nil serialization\n-\t\t\t\ttree.Nodes = []*rest.Node{}\n+\t\t\t\ttree.Nodes = []*service.Node{}\n \t\t\t}\n \t\t\tif s.DataService.IsReadOnly(locator) {\n \t\t\t\ttree.Info.ReadOnly = true\n@@ -277,7 +280,7 @@ func (s *Rest) countMultiCtrl(w http.ResponseWriter, r *http.Request) {\n \n \t// key could be long for multiple posts, make it sha1\n \tk := URLKey(r) + strings.Join(posts, \",\")\n-\th := sha1.Sum([]byte(k)) //nolint\n+\th := sha1.Sum([]byte(k)) // nolint\n \tsha := base64.URLEncoding.EncodeToString(h[:])\n \n \tkey := cache.NewKey(siteID).ID(sha).Scopes(siteID)\n@@ -364,7 +367,11 @@ func (s *Rest) loadPictureCtrl(w http.ResponseWriter, r *http.Request) {\n \t\t}\n \t}\n \n-\tdefer imgRdr.Close()\n+\tdefer func() {\n+\t\tif e := imgRdr.Close(); e != nil {\n+\t\t\tlog.Printf(\"[WARN] failed to close reader for picture %s, %v\", id, e)\n+\t\t}\n+\t}()\n \n \tw.Header().Set(\"Content-Type\", imgContentType(id))\n \tw.Header().Set(\"Content-Length\", strconv.Itoa(int(size)))\n@@ -373,3 +380,23 @@ func (s *Rest) loadPictureCtrl(w http.ResponseWriter, r *http.Request) {\n \t\tlog.Printf(\"[WARN] can't send response to %s, %s\", r.RemoteAddr, err)\n \t}\n }\n+\n+// GET /index.html - respond to /index.html with the content of getstarted.html under /web root\n+func (s *Rest) getStartedCtrl(w http.ResponseWriter, r *http.Request) {\n+\tdata, err := ioutil.ReadFile(path.Join(s.WebRoot, \"getstarted.html\"))\n+\tif err != nil {\n+\t\tw.WriteHeader(http.StatusNotFound)\n+\t\treturn\n+\t}\n+\trender.HTML(w, r, string(data))\n+}\n+\n+// GET /robots.txt\n+func (s *Rest) getRobotsCtrl(w http.ResponseWriter, r *http.Request) {\n+\tallowed := []string{\"/find\", \"/last\", \"/id\", \"/count\", \"/counts\", \"/list\", \"/config\",\n+\t\t\"/img\", \"/avatar\", \"/picture\"}\n+\tfor i := range allowed {\n+\t\tallowed[i] = \"Allow: /api/v1\" + allowed[i]\n+\t}\n+\trender.PlainText(w, r, \"User-agent: *\\nDisallow: /auth/\\nDisallow: /api/\\n\"+strings.Join(allowed, \"\\n\")+\"\\n\")\n+}"
    },
    {
      "sha": "0e9b6444560eb2d01129be0f4c0f544d899f7e83",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_public_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_public_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,8 +14,8 @@ import (\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n \n-\t\"github.com/umputun/remark/backend/app/rest\"\n \t\"github.com/umputun/remark/backend/app/store\"\n+\t\"github.com/umputun/remark/backend/app/store/service\"\n )\n \n func TestRest_Ping(t *testing.T) {\n@@ -111,7 +111,7 @@ func TestRest_Find(t *testing.T) {\n \tassert.Equal(t, id2, comments.Comments[0].ID)\n \n \t// get in tree mode\n-\ttree := rest.Tree{}\n+\ttree := service.Tree{}\n \tres, code = get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah1&format=tree\")\n \tassert.Equal(t, 200, code)\n \terr = json.Unmarshal([]byte(res), &tree)\n@@ -137,7 +137,7 @@ func TestRest_FindAge(t *testing.T) {\n \t_, err = srv.DataService.Create(c2)\n \trequire.Nil(t, err)\n \n-\ttree := rest.Tree{}\n+\ttree := service.Tree{}\n \n \tres, code := get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah1&format=tree\")\n \tassert.Equal(t, 200, code)\n@@ -178,15 +178,15 @@ func TestRest_FindReadOnly(t *testing.T) {\n \t_, err = client.Do(req)\n \trequire.Nil(t, err)\n \n-\ttree := rest.Tree{}\n+\ttree := service.Tree{}\n \tres, code := get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah1&format=tree\")\n \tassert.Equal(t, 200, code)\n \terr = json.Unmarshal([]byte(res), &tree)\n \trequire.Nil(t, err)\n \tassert.Equal(t, \"https://radio-t.com/blah1\", tree.Info.URL)\n \tassert.True(t, tree.Info.ReadOnly, \"post is ro\")\n \n-\ttree = rest.Tree{}\n+\ttree = service.Tree{}\n \tres, code = get(t, ts.URL+\"/api/v1/find?site=radio-t&url=https://radio-t.com/blah2&format=tree\")\n \tassert.Equal(t, 200, code)\n \terr = json.Unmarshal([]byte(res), &tree)"
    },
    {
      "sha": "a4a432ffd20538064494b5a48bcfade3823fb420",
      "filename": "backend/app/rest/api/rest_test.go",
      "status": "modified",
      "additions": 11,
      "deletions": 1,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rest_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -39,7 +39,7 @@ var getStartedHTML = \"/tmp/getstarted.html\"\n \n var devToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJyZW1hcms0MiIsImV4cCI6Mzc4OTE5MTgyMiwianRpIjoicmFuZG9tIGlkIiwiaXNzIjoicmVtYXJrNDIiLCJuYmYiOjE1MjE4ODQyMjIsInVzZXIiOnsibmFtZSI6ImRldmVsb3BlciBvbmUiLCJpZCI6ImRldiIsInBpY3R1cmUiOiJodHRwOi8vZXhhbXBsZS5jb20vcGljLnBuZyIsImlwIjoiMTI3LjAuMC4xIiwiZW1haWwiOiJtZUBleGFtcGxlLmNvbSJ9fQ.aKUAXiZxXypgV7m1wEOgUcyPOvUDXHDi3A06YWKbcLg\"\n \n-var adminUmputunToken = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJyYWRpb3QiLCJleHAiOjE5NTQ1OTc5ODAsImp0aSI6Ijk3YTJlMGFjNGRjN2Q1ZjY5MjZkNWU4NjIwYWNlZjlhNDBjMCIsImlhdCI6MTQ1NDU5NzY4MCwiaXNzIjoicmVtYXJrNDIiLCJ1c2VyIjp7Im5hbWUiOiJVbXB1dHVuIiwiaWQiOiJnaXRodWJfZWYwZjcwNmE3IiwicGljdHVyZSI6Imh0dHBzOi8vcmVtYXJrNDIucmFkaW8tdC5jb20vYXBpL3YxL2F2YXRhci9jYjQyZmY0OTNhZGU2OTZkODhhM2E1OTBmMTM2YWU5ZTM0ZGU3YzFiLmltYWdlIiwiYXR0cnMiOnsiYWRtaW4iOnRydWUsImJsb2NrZWQiOmZhbHNlfX19.I5a8EHbUJy8mApuYCPDRThbC-1jP0sbPh1qwNyY1V4E\"\n+var adminUmputunToken = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJyYWRpb3QiLCJleHAiOjE5NTQ1OTc5ODAsImp0aSI6Ijk3YTJlMGFjNGRjN2Q1ZjY5MjZkNWU4NjIwYWNlZjlhNDBjMCIsImlhdCI6MTQ1NDU5NzY4MCwiaXNzIjoicmVtYXJrNDIiLCJ1c2VyIjp7Im5hbWUiOiJVbXB1dHVuIiwiaWQiOiJnaXRodWJfZWYwZjcwNmE3IiwicGljdHVyZSI6Imh0dHBzOi8vcmVtYXJrNDIucmFkaW8tdC5jb20vYXBpL3YxL2F2YXRhci9jYjQyZmY0OTNhZGU2OTZkODhhM2E1OTBmMTM2YWU5ZTM0ZGU3YzFiLmltYWdlIiwiYXR0cnMiOnsiYWRtaW4iOnRydWUsImJsb2NrZWQiOmZhbHNlfX19.gAR_sZT7hTx7CNHByyrJQWMB5tAtoiISAiG8kes1IjA\"\n \n func TestRest_FileServer(t *testing.T) {\n \tts, _, teardown := startupT(t)\n@@ -409,3 +409,13 @@ func addComment(t *testing.T, c store.Comment, ts *httptest.Server) string {\n \ttime.Sleep(time.Nanosecond * 10)\n \treturn crResp[\"id\"].(string)\n }\n+\n+func requireAdminOnly(t *testing.T, req *http.Request) {\n+\tresp, err := sendReq(t, req, \"\") // no-auth user\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 401, resp.StatusCode)\n+\n+\tresp, err = sendReq(t, req, devToken) // non-admin user\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 403, resp.StatusCode)\n+}"
    },
    {
      "sha": "ce70a6421c65e94bfeb0ee1b2d7077fd506b75f4",
      "filename": "backend/app/rest/api/rss.go",
      "status": "modified",
      "additions": 0,
      "deletions": 9,
      "changes": 9,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rss.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/api/rss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rss.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -5,7 +5,6 @@ import (\n \t\"net/http\"\n \t\"time\"\n \n-\t\"github.com/go-chi/chi\"\n \tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/rest/cache\"\n \t\"github.com/gorilla/feeds\"\n@@ -22,14 +21,6 @@ const maxReplyDuration = 31 * 24 * time.Hour\n // ui uses links like <post-url>#remark42__comment-<comment-id>\n const uiNav = \"#remark42__comment-\"\n \n-func (s *Rest) rssRoutes() chi.Router {\n-\trouter := chi.NewRouter()\n-\trouter.Get(\"/post\", s.rssPostCommentsCtrl)\n-\trouter.Get(\"/site\", s.rssSiteCommentsCtrl)\n-\trouter.Get(\"/reply\", s.rssRepliesCtrl)\n-\treturn router\n-}\n-\n // GET /rss/post?site=siteID&url=post-url\n func (s *Rest) rssPostCommentsCtrl(w http.ResponseWriter, r *http.Request) {\n \tlocator := store.Locator{SiteID: r.URL.Query().Get(\"site\"), URL: r.URL.Query().Get(\"url\")}"
    },
    {
      "sha": "cab9dfcca95d36a4bd1e089bdc1c5dbd3e0c3967",
      "filename": "backend/app/rest/proxy/image.go",
      "status": "modified",
      "additions": 58,
      "deletions": 60,
      "changes": 118,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/proxy/image.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/proxy/image.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/proxy/image.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -9,7 +9,6 @@ import (\n \t\"time\"\n \n \t\"github.com/PuerkitoBio/goquery\"\n-\t\"github.com/go-chi/chi\"\n \tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/go-pkgz/repeater\"\n \t\"github.com/pkg/errors\"\n@@ -40,76 +39,75 @@ func (p Image) Convert(commentHTML string) string {\n \treturn p.replace(commentHTML, imgs)\n }\n \n-// Routes returns router group to respond to proxied request\n-func (p Image) Routes() chi.Router {\n-\trouter := chi.NewRouter()\n+// Handler returns http handler respond to proxied request\n+func (p Image) Handler(w http.ResponseWriter, r *http.Request) {\n+\n \tif !p.Enabled {\n-\t\treturn router\n+\t\thttp.Error(w, \"proxy disabled\", http.StatusNotImplemented)\n+\t\treturn\n \t}\n-\trouter.Get(\"/\", func(w http.ResponseWriter, r *http.Request) {\n-\t\tsrc, err := base64.URLEncoding.DecodeString(r.URL.Query().Get(\"src\"))\n-\t\tif err != nil {\n-\t\t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"can't decode image url\", rest.ErrDecode)\n-\t\t\treturn\n-\t\t}\n \n-\t\ttimeout := 60 * time.Second // default\n-\t\tif p.Timeout > 0 {\n-\t\t\ttimeout = p.Timeout\n-\t\t}\n+\tsrc, err := base64.URLEncoding.DecodeString(r.URL.Query().Get(\"src\"))\n+\tif err != nil {\n+\t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"can't decode image url\", rest.ErrDecode)\n+\t\treturn\n+\t}\n \n-\t\tctx, cancel := context.WithTimeout(context.Background(), timeout)\n-\t\tdefer cancel()\n+\ttimeout := 60 * time.Second // default\n+\tif p.Timeout > 0 {\n+\t\ttimeout = p.Timeout\n+\t}\n \n-\t\tclient := http.Client{Timeout: 30 * time.Second}\n-\t\tvar resp *http.Response\n-\t\terr = repeater.NewDefault(5, time.Second).Do(ctx, func() error {\n-\t\t\tvar e error\n-\t\t\treq, e := http.NewRequest(\"GET\", string(src), nil)\n-\t\t\tif e != nil {\n-\t\t\t\treturn errors.Wrapf(e, \"failed to make request for %s\", r.URL.Query().Get(\"src\"))\n-\t\t\t}\n-\t\t\tresp, e = client.Do(req.WithContext(ctx))\n-\t\t\treturn e\n-\t\t})\n-\t\tif err != nil {\n-\t\t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"can't get image \"+string(src), rest.ErrAssetNotFound)\n-\t\t\treturn\n-\t\t}\n-\t\tdefer func() {\n-\t\t\tif e := resp.Body.Close(); e != nil {\n-\t\t\t\tlog.Printf(\"[WARN] can't close body, %s\", e)\n-\t\t\t}\n-\t\t}()\n+\tctx, cancel := context.WithTimeout(context.Background(), timeout)\n+\tdefer cancel()\n \n-\t\tif resp.StatusCode != http.StatusOK {\n-\t\t\tw.WriteHeader(resp.StatusCode)\n-\t\t\treturn\n+\tclient := http.Client{Timeout: 30 * time.Second}\n+\tvar resp *http.Response\n+\terr = repeater.NewDefault(5, time.Second).Do(ctx, func() error {\n+\t\tvar e error\n+\t\treq, e := http.NewRequest(\"GET\", string(src), nil)\n+\t\tif e != nil {\n+\t\t\treturn errors.Wrapf(e, \"failed to make request for %s\", r.URL.Query().Get(\"src\"))\n+\t\t}\n+\t\tresp, e = client.Do(req.WithContext(ctx))\n+\t\treturn e\n+\t})\n+\tif err != nil {\n+\t\trest.SendErrorJSON(w, r, http.StatusBadRequest, err, \"can't get image \"+string(src), rest.ErrAssetNotFound)\n+\t\treturn\n+\t}\n+\tdefer func() {\n+\t\tif e := resp.Body.Close(); e != nil {\n+\t\t\tlog.Printf(\"[WARN] can't close body, %s\", e)\n \t\t}\n+\t}()\n \n-\t\tfor k, v := range resp.Header {\n-\t\t\tif strings.EqualFold(k, \"Content-Type\") {\n-\t\t\t\tw.Header().Set(k, v[0])\n-\t\t\t}\n-\t\t\tif strings.EqualFold(k, \"Content-Length\") {\n-\t\t\t\tw.Header().Set(k, v[0])\n-\t\t\t}\n+\tif resp.StatusCode != http.StatusOK {\n+\t\tw.WriteHeader(resp.StatusCode)\n+\t\treturn\n+\t}\n+\n+\tfor k, v := range resp.Header {\n+\t\tif strings.EqualFold(k, \"Content-Type\") {\n+\t\t\tw.Header().Set(k, v[0])\n \t\t}\n-\t\t// enforce client-side caching\n-\t\tetag := `\"` + r.URL.Query().Get(\"src\") + `\"`\n-\t\tw.Header().Set(\"Etag\", etag)\n-\t\tw.Header().Set(\"Cache-Control\", \"max-age=2592000\") // 30 days\n-\t\tif match := r.Header.Get(\"If-None-Match\"); match != \"\" {\n-\t\t\tif strings.Contains(match, etag) {\n-\t\t\t\tw.WriteHeader(http.StatusNotModified)\n-\t\t\t\treturn\n-\t\t\t}\n+\t\tif strings.EqualFold(k, \"Content-Length\") {\n+\t\t\tw.Header().Set(k, v[0])\n \t\t}\n-\t\tif _, e := io.Copy(w, resp.Body); e != nil {\n-\t\t\tlog.Printf(\"[WARN] can't copy image stream, %s\", e)\n+\t}\n+\t// enforce client-side caching\n+\tetag := `\"` + r.URL.Query().Get(\"src\") + `\"`\n+\tw.Header().Set(\"Etag\", etag)\n+\tw.Header().Set(\"Cache-Control\", \"max-age=2592000\") // 30 days\n+\tif match := r.Header.Get(\"If-None-Match\"); match != \"\" {\n+\t\tif strings.Contains(match, etag) {\n+\t\t\tw.WriteHeader(http.StatusNotModified)\n+\t\t\treturn\n \t\t}\n-\t})\n-\treturn router\n+\t}\n+\tif _, e := io.Copy(w, resp.Body); e != nil {\n+\t\tlog.Printf(\"[WARN] can't copy image stream, %s\", e)\n+\t}\n }\n \n // extract gets all non-https images and return list of src"
    },
    {
      "sha": "f4537644c706b5a83cab9efbb97cb9b841f1e2ba",
      "filename": "backend/app/rest/proxy/image_test.go",
      "status": "modified",
      "additions": 10,
      "deletions": 9,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/proxy/image_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/rest/proxy/image_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/proxy/image_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,6 +6,7 @@ import (\n \t\"io/ioutil\"\n \t\"net/http\"\n \t\"net/http/httptest\"\n+\t\"strconv\"\n \t\"strings\"\n \t\"testing\"\n \t\"time\"\n@@ -48,9 +49,11 @@ func TestPicture_Extract(t *testing.T) {\n \timg := Image{Enabled: true}\n \n \tfor i, tt := range tbl {\n-\t\tres, err := img.extract(tt.inp)\n-\t\tassert.Nil(t, err, \"err in #%d\", i)\n-\t\tassert.Equal(t, tt.res, res, \"mismatch in #%d\", i)\n+\t\tt.Run(strconv.Itoa(i), func(t *testing.T) {\n+\t\t\tres, err := img.extract(tt.inp)\n+\t\t\tassert.Nil(t, err)\n+\t\t\tassert.Equal(t, tt.res, res)\n+\t\t})\n \t}\n }\n \n@@ -63,12 +66,11 @@ func TestPicture_Replace(t *testing.T) {\n \n func TestImage_Routes(t *testing.T) {\n \timg := Image{Enabled: true, RemarkURL: \"https://demo.remark42.com\", RoutePath: \"/api/v1/proxy\"}\n-\trouter := img.Routes()\n \n+\tts := httptest.NewServer(http.HandlerFunc(img.Handler))\n+\tdefer ts.Close()\n \thttpSrv := imgHTTPServer(t)\n \tdefer httpSrv.Close()\n-\tts := httptest.NewServer(router)\n-\tdefer ts.Close()\n \n \tencodedImgURL := base64.URLEncoding.EncodeToString([]byte(httpSrv.URL + \"/image/img1.png\"))\n \n@@ -92,12 +94,11 @@ func TestImage_Routes(t *testing.T) {\n \n func TestImage_RoutesTimedOut(t *testing.T) {\n \timg := Image{Enabled: true, RemarkURL: \"https://demo.remark42.com\", RoutePath: \"/api/v1/proxy\", Timeout: 50 * time.Millisecond}\n-\trouter := img.Routes()\n \n+\tts := httptest.NewServer(http.HandlerFunc(img.Handler))\n+\tdefer ts.Close()\n \thttpSrv := imgHTTPServer(t)\n \tdefer httpSrv.Close()\n-\tts := httptest.NewServer(router)\n-\tdefer ts.Close()\n \n \tencodedImgURL := base64.URLEncoding.EncodeToString([]byte(httpSrv.URL + \"/image/img-slow.png\"))\n \tresp, err := http.Get(ts.URL + \"/?src=\" + encodedImgURL)"
    },
    {
      "sha": "862ab0e302394055fa702b206631c9ef83568e40",
      "filename": "backend/app/store/engine/bolt_accessor.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/bolt_accessor.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/bolt_accessor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/bolt_accessor.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -8,7 +8,7 @@ import (\n \n \tbolt \"github.com/coreos/bbolt\"\n \tlog \"github.com/go-pkgz/lgr\"\n-\tmultierror \"github.com/hashicorp/go-multierror\"\n+\t\"github.com/hashicorp/go-multierror\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\""
    },
    {
      "sha": "fe5995e74ad941b2e77cd13d5aecbfeed7d93e69",
      "filename": "backend/app/store/engine/bolt_accessor_test.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/bolt_accessor_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/bolt_accessor_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/bolt_accessor_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"testing\"\n \t\"time\"\n \n-\t\"github.com/coreos/bbolt\"\n+\tbolt \"github.com/coreos/bbolt\"\n \t\"github.com/stretchr/testify/assert\"\n \t\"github.com/stretchr/testify/require\"\n "
    },
    {
      "sha": "13e0a12b3b192b5934346f81ac917652f818863e",
      "filename": "backend/app/store/engine/mongo.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/mongo.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/engine/mongo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/engine/mongo.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,7 +6,7 @@ import (\n \t\"github.com/globalsign/mgo\"\n \t\"github.com/globalsign/mgo/bson\"\n \t\"github.com/go-pkgz/mongo\"\n-\tmultierror \"github.com/hashicorp/go-multierror\"\n+\t\"github.com/hashicorp/go-multierror\"\n \t\"github.com/pkg/errors\"\n \n \t\"github.com/umputun/remark/backend/app/store\"\n@@ -39,7 +39,7 @@ type metaUser struct {\n }\n \n // NewMongo makes mongo engine. bufferSize denies how many records will be buffered, 0 turns buffering off.\n-// flushDuration triggers automatic flus (write from buffer), 0 disables it and will flush as buffer size reached.\n+// flushDuration triggers automatic flush (write from buffer), 0 disables it and will flush as buffer size reached.\n // important! don't use flushDuration=0 for production use as it can leave records in-fly state for long or even unlimited time.\n func NewMongo(conn *mongo.Connection, bufferSize int, flushDuration time.Duration) (*Mongo, error) {\n \twriter := mongo.NewBufferedWriter(bufferSize, conn).WithCollection(mongoPosts).WithAutoFlush(flushDuration)"
    },
    {
      "sha": "36ad92e7b39b553c7885246f5a4ff2553712fbbd",
      "filename": "backend/app/store/service/service.go",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/service.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/service.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -9,14 +9,14 @@ import (\n \n \tlog \"github.com/go-pkgz/lgr\"\n \t\"github.com/google/uuid\"\n-\tmultierror \"github.com/hashicorp/go-multierror\"\n-\tcache \"github.com/patrickmn/go-cache\"\n+\t\"github.com/hashicorp/go-multierror\"\n+\t\"github.com/patrickmn/go-cache\"\n \t\"github.com/pkg/errors\"\n-\t\"github.com/umputun/remark/backend/app/store/image\"\n \n \t\"github.com/umputun/remark/backend/app/store\"\n \t\"github.com/umputun/remark/backend/app/store/admin\"\n \t\"github.com/umputun/remark/backend/app/store/engine\"\n+\t\"github.com/umputun/remark/backend/app/store/image\"\n )\n \n // DataStore wraps store.Interface with additional methods\n@@ -207,8 +207,8 @@ func (s *DataStore) Vote(locator store.Locator, commentID string, userID string,\n \t}\n \n \tcomment.Vote = 0\n-\tif v, ok := comment.Votes[userID]; ok {\n-\t\tif v {\n+\tif vv, ok := comment.Votes[userID]; ok {\n+\t\tif vv {\n \t\t\tcomment.Vote = 1\n \t\t} else {\n \t\t\tcomment.Vote = -1"
    },
    {
      "sha": "b06eb1d29915bfe765a5acf4cfb68754f5b2b922",
      "filename": "backend/app/store/service/testdata/tree.json",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree.json",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree.json",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/testdata/tree.json?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "previous_filename": "backend/app/rest/testdata/tree.json"
    },
    {
      "sha": "b270396f6fad6d9c3e2b7f8e2b95a101abbf5669",
      "filename": "backend/app/store/service/testdata/tree_bench.json",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree_bench.json",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree_bench.json",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/testdata/tree_bench.json?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "previous_filename": "backend/app/rest/testdata/tree_bench.json"
    },
    {
      "sha": "e8a2ce9190dfbbcdd46d7faa507a5cec5e183e58",
      "filename": "backend/app/store/service/testdata/tree_del.json",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree_del.json",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/testdata/tree_del.json",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/testdata/tree_del.json?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "previous_filename": "backend/app/rest/testdata/tree_del.json"
    },
    {
      "sha": "12f5bfbbeee36f4991f87d9f8e3a200a90378407",
      "filename": "backend/app/store/service/title.go",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/title.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/title.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/title.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -44,7 +44,11 @@ func (t *TitleExtractor) Get(url string) (string, error) {\n \t\tif err != nil {\n \t\t\treturn nil, errors.Wrapf(err, \"failed to load page %s\", url)\n \t\t}\n-\t\tdefer resp.Body.Close() //nolint\n+\t\tdefer func() {\n+\t\t\tif err = resp.Body.Close(); err != nil {\n+\t\t\t\tlog.Printf(\"[WARN] failed to close title extractor body, %v\", err)\n+\t\t\t}\n+\t\t}()\n \t\tif resp.StatusCode != 200 {\n \t\t\treturn nil, errors.Errorf(\"can't load page %s, code %d\", url, resp.StatusCode)\n \t\t}"
    },
    {
      "sha": "29faaf5736ef22f7a2d987b9731efa0f7b1a2d3b",
      "filename": "backend/app/store/service/tree.go",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/tree.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/tree.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/tree.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package rest\n+package service\n \n import (\n \t\"sort\"",
      "previous_filename": "backend/app/rest/tree.go"
    },
    {
      "sha": "32504b76407ccc36e6195d01912d04dee0ccd801",
      "filename": "backend/app/store/service/tree_test.go",
      "status": "renamed",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/tree_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/service/tree_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/tree_test.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package rest\n+package service\n \n import (\n \t\"encoding/json\"",
      "previous_filename": "backend/app/rest/tree_test.go"
    },
    {
      "sha": "c997389e2ff6892d8d9e7108bf42a847a26c9c56",
      "filename": "backend/app/store/user.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/user.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/app/store/user.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/user.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -2,7 +2,7 @@ package store\n \n import (\n \t\"crypto/hmac\"\n-\t\"crypto/sha1\" //nolint\n+\t\"crypto/sha1\" // nolint\n \t\"encoding/hex\"\n \t\"fmt\"\n \t\"hash\"\n@@ -41,7 +41,7 @@ func HashValue(val string, secret string) string {\n // EncodeID hashes id to sha1. The function intentionally left outside of User struct because in some cases\n // we need hashing for parts of id, in some others hashing for non-User values.\n func EncodeID(id string) string {\n-\treturn hashWithFallback(sha1.New(), id) //nolint\n+\treturn hashWithFallback(sha1.New(), id) // nolint\n }\n \n // hashWithFallback tries to has val with hash.Hash and fallback to crc if needed"
    },
    {
      "sha": "fb1a1bfeda329494fb4e9ce885737cf36de1b7b1",
      "filename": "backend/go.mod",
      "status": "modified",
      "additions": 15,
      "deletions": 7,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/go.mod?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -3,39 +3,47 @@ module github.com/umputun/remark/backend\n go 1.12\n \n require (\n+\tcloud.google.com/go v0.38.0 // indirect\n \tgithub.com/PuerkitoBio/goquery v1.4.0\n \tgithub.com/andybalholm/cascadia v1.0.0 // indirect\n-\tgithub.com/coreos/bbolt v1.3.0\n+\tgithub.com/coreos/bbolt v1.3.2\n \tgithub.com/dgrijalva/jwt-go v3.2.0+incompatible\n \tgithub.com/didip/tollbooth v4.0.0+incompatible\n \tgithub.com/didip/tollbooth_chi v0.0.0-20170928041846-6ab5f3083f3d\n \tgithub.com/globalsign/mgo v0.0.0-20181015135952-eeefdecb41b8\n \tgithub.com/go-chi/chi v4.0.2+incompatible\n \tgithub.com/go-chi/cors v1.0.0\n \tgithub.com/go-chi/render v1.0.0\n-\tgithub.com/go-pkgz/auth v0.5.0\n+\tgithub.com/go-pkgz/auth v0.5.1\n \tgithub.com/go-pkgz/lcw v0.2.0\n \tgithub.com/go-pkgz/lgr v0.6.2\n \tgithub.com/go-pkgz/mongo v1.1.2\n \tgithub.com/go-pkgz/repeater v1.1.1\n-\tgithub.com/go-pkgz/rest v1.4.0\n+\tgithub.com/go-pkgz/rest v1.4.1\n \tgithub.com/go-pkgz/syncs v1.1.0\n-\tgithub.com/golang/mock v1.2.0\n+\tgithub.com/golang/protobuf v1.3.1 // indirect\n \tgithub.com/google/uuid v0.0.0-20161128191214-064e2069ce9c\n \tgithub.com/gorilla/feeds v1.1.0\n \tgithub.com/hashicorp/errwrap v1.0.0 // indirect\n \tgithub.com/hashicorp/go-multierror v0.0.0-20171204182908-b7773ae21874\n+\tgithub.com/hashicorp/golang-lru v0.5.1 // indirect\n \tgithub.com/jessevdk/go-flags v0.0.0-20180331124232-1c38ed7ad0cc\n \tgithub.com/microcosm-cc/bluemonday v0.0.0-20171222152607-542fd4642604\n \tgithub.com/patrickmn/go-cache v2.1.0+incompatible\n \tgithub.com/pkg/errors v0.8.1\n \tgithub.com/rakyll/statik v0.1.3\n \tgithub.com/rs/xid v1.2.1\n \tgithub.com/shurcooL/sanitized_anchor_name v1.0.0 // indirect\n+\tgithub.com/stretchr/objx v0.2.0 // indirect\n \tgithub.com/stretchr/testify v1.3.0\n-\tgolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2\n-\tgolang.org/x/image v0.0.0-20181116024801-cd38e8056d9b\n-\tgolang.org/x/net v0.0.0-20190415214537-1da14a5a36f2\n+\tgo.etcd.io/bbolt v1.3.2 // indirect\n+\tgolang.org/x/crypto v0.0.0-20190426145343-a29dc8fdc734\n+\tgolang.org/x/image v0.0.0-20190501045829-6d32002ffd75\n+\tgolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c\n+\tgolang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a // indirect\n+\tgolang.org/x/sys v0.0.0-20190502175342-a43fa875dd82 // indirect\n+\tgolang.org/x/text v0.3.2 // indirect\n \tgolang.org/x/time v0.0.0-20190308202827-9d24e82272b4 // indirect\n+\tgoogle.golang.org/appengine v1.5.0 // indirect\n \tgopkg.in/russross/blackfriday.v2 v2.0.0\n )"
    },
    {
      "sha": "94ebf749c4b898a34984893faf46b9e80a1aa6c3",
      "filename": "backend/go.sum",
      "status": "modified",
      "additions": 73,
      "deletions": 7,
      "changes": 80,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/go.sum?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,13 +1,20 @@\n+cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n cloud.google.com/go v0.34.0 h1:eOI3/cP2VTU6uZLDYAoic+eyzzB9YyGmJ7eIjl8rOPg=\n cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n+cloud.google.com/go v0.38.0 h1:ROfEUZz+Gh5pa62DJWXSaonyu3StP6EA6lPEXPI6mCo=\n+cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\n+github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\n github.com/PuerkitoBio/goquery v1.4.0 h1:13fV4AYmaSopdNp8KWDUlLyU5INklBkYk0tsTfxRO2U=\n github.com/PuerkitoBio/goquery v1.4.0/go.mod h1:T9ezsOHcCrDCgA8aF1Cqr3sSYbO/xgdy8/R/XiIMAhA=\n github.com/andybalholm/cascadia v1.0.0 h1:hOCXnnZ5A+3eVDX8pvgl4kofXv2ELss0bKcqRySc45o=\n github.com/andybalholm/cascadia v1.0.0/go.mod h1:GsXiBklL0woXo1j/WYWtSYYC4ouU9PqHO0sqidkEA4Y=\n github.com/boltdb/bolt v1.3.1 h1:JQmyP4ZBrce+ZQu0dY660FMfatumYDLun9hBCUVIkF4=\n github.com/boltdb/bolt v1.3.1/go.mod h1:clJnj/oiGkjum5o1McbSZDSLxVThjynRyGBgiAx27Ps=\n+github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\n github.com/coreos/bbolt v1.3.0 h1:HIgH5xUWXT914HCI671AxuTTqjj64UOFr7pHn48LUTI=\n github.com/coreos/bbolt v1.3.0/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\n+github.com/coreos/bbolt v1.3.2 h1:wZwiHHUieZCquLkDL0B8UhzreNWsPHooDAG3q34zk0s=\n+github.com/coreos/bbolt v1.3.2/go.mod h1:iRUV2dpdMOn7Bo10OQBFzIJO9kkE559Wcmn+qkEiiKk=\n github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n@@ -26,8 +33,8 @@ github.com/go-chi/cors v1.0.0 h1:e6x8k7uWbUwYs+aXDoiUzeQFT6l0cygBYyNhD7/1Tg0=\n github.com/go-chi/cors v1.0.0/go.mod h1:K2Yje0VW/SJzxiyMYu6iPQYa7hMjQX2i/F491VChg1I=\n github.com/go-chi/render v1.0.0 h1:cLJlkaTB4xfx5rWhtoB0BSXsXVJKWFqv08Y3cR1bZKA=\n github.com/go-chi/render v1.0.0/go.mod h1:pq4Rr7HbnsdaeHagklXub+p6Wd16Af5l9koip1OvJns=\n-github.com/go-pkgz/auth v0.5.0 h1:+wqppq35x83PchZNZ7SHHYLI/e8WeETFouujDLsklac=\n-github.com/go-pkgz/auth v0.5.0/go.mod h1:CWtB8dHmOv+TfF3MUzKwk/YwTLepC2TaDL05A+pFVBM=\n+github.com/go-pkgz/auth v0.5.1 h1:wE7lziIh0JI0bTpfOMM+xmSIxZ98tinOoWw86a7o2uE=\n+github.com/go-pkgz/auth v0.5.1/go.mod h1:CWtB8dHmOv+TfF3MUzKwk/YwTLepC2TaDL05A+pFVBM=\n github.com/go-pkgz/lcw v0.2.0 h1:aFoKUG8q0YybId+ThVRQpDMjjuSG4hkLL1EA2xUtruc=\n github.com/go-pkgz/lcw v0.2.0/go.mod h1:k+PY1CkCMTLXILtFoJOyK65Qqi9rkoTYunFH1vE/C0I=\n github.com/go-pkgz/lgr v0.2.2/go.mod h1:hBM1NM/SoYdlrykgdgJWGrZ/TM/XaZIjRbJfx7NkMm8=\n@@ -39,16 +46,25 @@ github.com/go-pkgz/mongo v1.1.2/go.mod h1:0NkWnzpiUxoL5fYZuttCtJrpC67oNDidfYxcdP\n github.com/go-pkgz/repeater v1.1.1 h1:9HVgXFJGjUQznPmaeuVDTPhgflzVlUyjCx2gmBYXeGI=\n github.com/go-pkgz/repeater v1.1.1/go.mod h1:QfNR/a+xqjs+f9wSxWqOQlw9aQhmKlUaSwXCiZ+Ko2w=\n github.com/go-pkgz/rest v1.2.0/go.mod h1:COazNj35u3RXAgQNBr6neR599tYP3URiOpsu9p0rOtk=\n-github.com/go-pkgz/rest v1.4.0 h1:xNkdMjEL2rNZSHouWjFTH22ncaZ77fopm34RN+eXAwk=\n-github.com/go-pkgz/rest v1.4.0/go.mod h1:COazNj35u3RXAgQNBr6neR599tYP3URiOpsu9p0rOtk=\n+github.com/go-pkgz/rest v1.4.1 h1:DmaVLPH2O7yLehrWOW0uz01d2mVHz9fBR/iuTiPRzaw=\n+github.com/go-pkgz/rest v1.4.1/go.mod h1:COazNj35u3RXAgQNBr6neR599tYP3URiOpsu9p0rOtk=\n github.com/go-pkgz/syncs v1.1.0 h1:k+dTyUZs1JHsYzo2tuUNrnW0OCwuGuS6ozfXHVspjSY=\n github.com/go-pkgz/syncs v1.1.0/go.mod h1:bt9lxWRRJ9vOCMGc8Big8ttjYHLKP88ofj1y38UlaHE=\n+github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\n+github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\n github.com/golang/mock v1.2.0 h1:28o5sBqPkBsMGnC6b4MvE2TzSr5/AT4c/1fLqVGIwlk=\n github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\n github.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\n github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n+github.com/golang/protobuf v1.3.1 h1:YF8+flBXS5eO826T4nzqPrxfhQThhXl0YzfuUPu4SBg=\n+github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n+github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\n+github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\n+github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\n+github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\n github.com/google/uuid v0.0.0-20161128191214-064e2069ce9c h1:jWtZjFEUE/Bz0IeIhqCnyZ3HG6KRXSntXe4SjtuTH7c=\n github.com/google/uuid v0.0.0-20161128191214-064e2069ce9c/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\n+github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\n github.com/gorilla/feeds v1.1.0 h1:pcgLJhbdYgaUESnj3AmXPcB7cS3vy63+jC/TI14AGXk=\n github.com/gorilla/feeds v1.1.0/go.mod h1:Nk0jZrvPFZX1OBe5NPiddPw7CfwF6Q9eqzaBbaightA=\n github.com/hashicorp/errwrap v1.0.0 h1:hLrqtEDnRye3+sgx6z4qVLNuviH3MR5aQ0ykNJa/UYA=\n@@ -57,8 +73,11 @@ github.com/hashicorp/go-multierror v0.0.0-20171204182908-b7773ae21874 h1:em+tTnz\n github.com/hashicorp/go-multierror v0.0.0-20171204182908-b7773ae21874/go.mod h1:JMRHfdO9jKNzS/+BTlxCjKNQHg/jZAft8U7LloJvN7I=\n github.com/hashicorp/golang-lru v0.5.0 h1:CL2msUPvZTLb5O648aiLNJw3hnBxN2+1Jq8rCOH9wdo=\n github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n+github.com/hashicorp/golang-lru v0.5.1 h1:0hERBMJE1eitiLkihrMvRVBYAkpHzc/J3QdDN+dAcgU=\n+github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\n github.com/jessevdk/go-flags v0.0.0-20180331124232-1c38ed7ad0cc h1:0L2sGkaj6MWuV1BfXsrLJ/+XA8RzKKVsYlLVXNkK1Lw=\n github.com/jessevdk/go-flags v0.0.0-20180331124232-1c38ed7ad0cc/go.mod h1:4FA24M0QyGHXBuZZK/XkWh8h0e1EYbRYJSGM75WSRxI=\n+github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\n github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=\n github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\n github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\n@@ -84,34 +103,81 @@ github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeV\n github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n github.com/stretchr/objx v0.1.1 h1:2vfRuCMp5sSVIDSqO8oNnWJq7mPa6KVP3iPIwFBuy8A=\n github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/objx v0.2.0 h1:Hbg2NidpLE8veEBkEZTL3CvlkUIVzuU9jDplZO54c48=\n+github.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=\n github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\n-github.com/umputun/remark v1.2.0 h1:RoKBgzjow7+t4Z1XbhCIOiLcZNuE6LGuvj+Gxh4mopI=\n+github.com/umputun/remark v1.3.0 h1:QvTM5ZhsKJnHdO6o7cDoZS5EFU410NCzaMa8fVfOK8g=\n+go.etcd.io/bbolt v1.3.2 h1:Z/90sZLPOeCy2PwprqkFa25PdkusRzaj9P8zm/KNyvk=\n+go.etcd.io/bbolt v1.3.2/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=\n+go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2 h1:VklqNMn3ovrHsnt90PveolxSbWFaJdECFbxSq0Mqo2M=\n golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\n+golang.org/x/crypto v0.0.0-20190426145343-a29dc8fdc734 h1:p/H982KKEjUnLJkM3tt/LemDnOc1GiZL5FCVlORJ5zo=\n+golang.org/x/crypto v0.0.0-20190426145343-a29dc8fdc734/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\n+golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\n golang.org/x/image v0.0.0-20181116024801-cd38e8056d9b h1:VHyIDlv3XkfCa5/a81uzaoDkHH4rr81Z62g+xlnO8uM=\n golang.org/x/image v0.0.0-20181116024801-cd38e8056d9b/go.mod h1:ux5Hcp/YLpHSI86hEcLt0YII63i6oz57MZXIpbrjZUs=\n+golang.org/x/image v0.0.0-20190501045829-6d32002ffd75 h1:TbGuee8sSq15Iguxu4deQ7+Bqq/d2rsQejGcEtADAMQ=\n+golang.org/x/image v0.0.0-20190501045829-6d32002ffd75/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\n+golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n+golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\n+golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\n golang.org/x/net v0.0.0-20180218175443-cbe0f9307d01/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n+golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n golang.org/x/net v0.0.0-20190107210223-45ffb0cd1ba0 h1:1DW40AJQ7AP4nY6ORUGUdkpXyEC9W2GAXcOPaMZK0K8=\n golang.org/x/net v0.0.0-20190107210223-45ffb0cd1ba0/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n-golang.org/x/net v0.0.0-20190415214537-1da14a5a36f2 h1:iC0Y6EDq+rhnAePxGvJs2kzUAYcwESqdcGRPzEUfzTU=\n-golang.org/x/net v0.0.0-20190415214537-1da14a5a36f2/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n+golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n+golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n+golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n+golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n+golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c h1:uOCk1iQW6Vc18bnC13MfzScl+wdKBmM9Y9kU7Z83/lw=\n+golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\n+golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n golang.org/x/oauth2 v0.0.0-20181203162652-d668ce993890 h1:uESlIz09WIHT2I+pasSXcpLYqYK8wHcdCetU3VuMBJE=\n golang.org/x/oauth2 v0.0.0-20181203162652-d668ce993890/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\n+golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n+golang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a h1:tImsplftrFpALCYumobsd0K86vlAs/eXGFms2txfJfA=\n+golang.org/x/oauth2 v0.0.0-20190402181905-9f3314589c9a/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\n+golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4 h1:YUO/7uOKsKeq9UokNS62b8FYywz3ker1l1vDZRCRefw=\n golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190109145017-48ac38b7c8cb h1:1w588/yEchbPNpa9sEvOcMZYbWHedwJjg4VOAdDHWHk=\n golang.org/x/sys v0.0.0-20190109145017-48ac38b7c8cb/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a h1:1BGLXjeY4akVXGgbC9HugT3Jv3hCI0z56oJR5vAMgBU=\n golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\n+golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n+golang.org/x/sys v0.0.0-20190502175342-a43fa875dd82 h1:vsphBvatvfbhlb4PO1BYSr9dzugGxJ/SQHoNufZJq1w=\n+golang.org/x/sys v0.0.0-20190502175342-a43fa875dd82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n golang.org/x/text v0.3.0 h1:g61tztE5qeGQ89tm6NTjjM9VPIm088od1l6aSorWRWg=\n golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+golang.org/x/text v0.3.2 h1:tW2bmiBqwgJj/UpqtC8EpXEZVYOwU0yG4iWbprSVAcs=\n+golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\n+golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n golang.org/x/time v0.0.0-20190308202827-9d24e82272b4 h1:SvFZT6jyqRaOeXpc5h/JSfZenJ2O330aBsf7JfSUXmQ=\n golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\n+golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n+golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\n+golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\n+golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\n+google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\n+google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\n google.golang.org/appengine v1.4.0 h1:/wp5JvzpHIxhs/dumFmF7BXTf3Z+dd4uXta4kVyO508=\n google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\n+google.golang.org/appengine v1.5.0 h1:KxkO13IPW4Lslp2bz+KHP2E3gtFlrIGNThxkZQ3g+4c=\n+google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\n+google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\n+google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n+google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\n+google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=\n gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\n gopkg.in/russross/blackfriday.v2 v2.0.0 h1:+FlnIV8DSQnT7NZ43hcVKcdJdzZoeCmJj4Ql8gq5keA=\n gopkg.in/russross/blackfriday.v2 v2.0.0/go.mod h1:6sSBNz/GtOm/pJTuh5UmBK2ZHfmnxGbl2NZg1UliSOI=\n+honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\n+honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4="
    },
    {
      "sha": "c364af1da0953639e0614778e565876eb0b29e04",
      "filename": "backend/vendor/cloud.google.com/go/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/cloud.google.com/go/AUTHORS",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/cloud.google.com/go/AUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/cloud.google.com/go/AUTHORS?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,15 +0,0 @@\n-# This is the official list of cloud authors for copyright purposes.\n-# This file is distinct from the CONTRIBUTORS files.\n-# See the latter for an explanation.\n-\n-# Names should be added to this file as:\n-# Name or Organization <email address>\n-# The email address is not required for organizations.\n-\n-Filippo Valsorda <hi@filippo.io>\n-Google Inc.\n-Ingo Oeser <nightlyone@googlemail.com>\n-Palm Stone Games, Inc.\n-Paweł Knap <pawelknap88@gmail.com>\n-Péter Szilágyi <peterke@gmail.com>\n-Tyler Treat <ttreat31@gmail.com>"
    },
    {
      "sha": "3b3cbed98e9a9e0ab3052b98359d43a82a9c1c8c",
      "filename": "backend/vendor/cloud.google.com/go/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 40,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/cloud.google.com/go/CONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/cloud.google.com/go/CONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/cloud.google.com/go/CONTRIBUTORS?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,40 +0,0 @@\n-# People who have agreed to one of the CLAs and can contribute patches.\n-# The AUTHORS file lists the copyright holders; this file\n-# lists people.  For example, Google employees are listed here\n-# but not in AUTHORS, because Google holds the copyright.\n-#\n-# https://developers.google.com/open-source/cla/individual\n-# https://developers.google.com/open-source/cla/corporate\n-#\n-# Names should be added to this file as:\n-#     Name <email address>\n-\n-# Keep the list alphabetically sorted.\n-\n-Alexis Hunt <lexer@google.com>\n-Andreas Litt <andreas.litt@gmail.com>\n-Andrew Gerrand <adg@golang.org>\n-Brad Fitzpatrick <bradfitz@golang.org>\n-Burcu Dogan <jbd@google.com>\n-Dave Day <djd@golang.org>\n-David Sansome <me@davidsansome.com>\n-David Symonds <dsymonds@golang.org>\n-Filippo Valsorda <hi@filippo.io>\n-Glenn Lewis <gmlewis@google.com>\n-Ingo Oeser <nightlyone@googlemail.com>\n-James Hall <james.hall@shopify.com>\n-Johan Euphrosine <proppy@google.com>\n-Jonathan Amsterdam <jba@google.com>\n-Kunpei Sakai <namusyaka@gmail.com>\n-Luna Duclos <luna.duclos@palmstonegames.com>\n-Magnus Hiie <magnus.hiie@gmail.com>\n-Mario Castro <mariocaster@gmail.com>\n-Michael McGreevy <mcgreevy@golang.org>\n-Omar Jarjur <ojarjur@google.com>\n-Paweł Knap <pawelknap88@gmail.com>\n-Péter Szilágyi <peterke@gmail.com>\n-Sarah Adams <shadams@google.com>\n-Thanatat Tamtan <acoshift@gmail.com>\n-Toby Burress <kurin@google.com>\n-Tuo Shan <shantuo@google.com>\n-Tyler Treat <ttreat31@gmail.com>"
    },
    {
      "sha": "125b7033c96b969cb00efcd11aa37ea85493556b",
      "filename": "backend/vendor/cloud.google.com/go/compute/metadata/metadata.go",
      "status": "modified",
      "additions": 18,
      "deletions": 6,
      "changes": 24,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/cloud.google.com/go/compute/metadata/metadata.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/cloud.google.com/go/compute/metadata/metadata.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/cloud.google.com/go/compute/metadata/metadata.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -137,7 +137,7 @@ func testOnGCE() bool {\n \tresc := make(chan bool, 2)\n \n \t// Try two strategies in parallel.\n-\t// See https://github.com/GoogleCloudPlatform/google-cloud-go/issues/194\n+\t// See https://github.com/googleapis/google-cloud-go/issues/194\n \tgo func() {\n \t\treq, _ := http.NewRequest(\"GET\", \"http://\"+metadataIP, nil)\n \t\treq.Header.Set(\"User-Agent\", userAgent)\n@@ -300,8 +300,8 @@ func (c *Client) getETag(suffix string) (value, etag string, err error) {\n \t\t// being stable anyway.\n \t\thost = metadataIP\n \t}\n-\turl := \"http://\" + host + \"/computeMetadata/v1/\" + suffix\n-\treq, _ := http.NewRequest(\"GET\", url, nil)\n+\tu := \"http://\" + host + \"/computeMetadata/v1/\" + suffix\n+\treq, _ := http.NewRequest(\"GET\", u, nil)\n \treq.Header.Set(\"Metadata-Flavor\", \"Google\")\n \treq.Header.Set(\"User-Agent\", userAgent)\n \tres, err := c.hc.Do(req)\n@@ -312,13 +312,13 @@ func (c *Client) getETag(suffix string) (value, etag string, err error) {\n \tif res.StatusCode == http.StatusNotFound {\n \t\treturn \"\", \"\", NotDefinedError(suffix)\n \t}\n-\tif res.StatusCode != 200 {\n-\t\treturn \"\", \"\", fmt.Errorf(\"status code %d trying to fetch %s\", res.StatusCode, url)\n-\t}\n \tall, err := ioutil.ReadAll(res.Body)\n \tif err != nil {\n \t\treturn \"\", \"\", err\n \t}\n+\tif res.StatusCode != 200 {\n+\t\treturn \"\", \"\", &Error{Code: res.StatusCode, Message: string(all)}\n+\t}\n \treturn string(all), res.Header.Get(\"Etag\"), nil\n }\n \n@@ -499,3 +499,15 @@ func (c *Client) Subscribe(suffix string, fn func(v string, ok bool) error) erro\n \t\t}\n \t}\n }\n+\n+// Error contains an error response from the server.\n+type Error struct {\n+\t// Code is the HTTP response status code.\n+\tCode int\n+\t// Message is the server response message.\n+\tMessage string\n+}\n+\n+func (e *Error) Error() string {\n+\treturn fmt.Sprintf(\"compute: Received %d `%s`\", e.Code, e.Message)\n+}"
    },
    {
      "sha": "3bcd8cbaf02ddad1a17453f990ab591f2f623c7c",
      "filename": "backend/vendor/github.com/coreos/bbolt/.gitignore",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/.gitignore",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/.gitignore",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/.gitignore?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -2,3 +2,4 @@\n *.test\n *.swp\n /bin/\n+cover.out"
    },
    {
      "sha": "a60300c5588b9c62e96dec4c8db8981d9fd3cc71",
      "filename": "backend/vendor/github.com/coreos/bbolt/.travis.yml",
      "status": "added",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/.travis.yml",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/.travis.yml?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,17 @@\n+language: go\n+go_import_path: go.etcd.io/bbolt\n+\n+sudo: false\n+\n+go:\n+- 1.11\n+\n+before_install:\n+- go get -v honnef.co/go/tools/...\n+- go get -v github.com/kisielk/errcheck\n+\n+script:\n+- make fmt\n+- make test\n+- make race\n+# - make errcheck"
    },
    {
      "sha": "2968aaa61dd3d0d08ecd953cbfe8b2ee152c76eb",
      "filename": "backend/vendor/github.com/coreos/bbolt/Makefile",
      "status": "modified",
      "additions": 26,
      "deletions": 6,
      "changes": 32,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/Makefile",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/Makefile",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/Makefile?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -5,14 +5,34 @@ GOLDFLAGS=\"-X main.branch $(BRANCH) -X main.commit $(COMMIT)\"\n default: build\n \n race:\n-\t@go test -v -race -test.run=\"TestSimulate_(100op|1000op)\"\n+\t@TEST_FREELIST_TYPE=hashmap go test -v -race -test.run=\"TestSimulate_(100op|1000op)\"\n+\t@echo \"array freelist test\"\n+\t@TEST_FREELIST_TYPE=array go test -v -race -test.run=\"TestSimulate_(100op|1000op)\"\n+\n+fmt:\n+\t!(gofmt -l -s -d $(shell find . -name \\*.go) | grep '[a-z]')\n+\n+# go get honnef.co/go/tools/simple\n+gosimple:\n+\tgosimple ./...\n+\n+# go get honnef.co/go/tools/unused\n+unused:\n+\tunused ./...\n \n # go get github.com/kisielk/errcheck\n errcheck:\n-\t@errcheck -ignorepkg=bytes -ignore=os:Remove github.com/boltdb/bolt\n+\t@errcheck -ignorepkg=bytes -ignore=os:Remove go.etcd.io/bbolt\n+\n+test:\n+\tTEST_FREELIST_TYPE=hashmap go test -timeout 20m -v -coverprofile cover.out -covermode atomic\n+\t# Note: gets \"program not an importable package\" in out of path builds\n+\tTEST_FREELIST_TYPE=hashmap go test -v ./cmd/bbolt\n+\n+\t@echo \"array freelist test\"\n \n-test: \n-\t@go test -v -cover .\n-\t@go test -v ./cmd/bolt\n+\t@TEST_FREELIST_TYPE=array go test -timeout 20m -v -coverprofile cover.out -covermode atomic\n+\t# Note: gets \"program not an importable package\" in out of path builds\n+\t@TEST_FREELIST_TYPE=array go test -v ./cmd/bbolt\n \n-.PHONY: fmt test\n+.PHONY: race fmt errcheck test gosimple unused"
    },
    {
      "sha": "e9989efc50741d5c48a497ea13fe1f1c253cf200",
      "filename": "backend/vendor/github.com/coreos/bbolt/README.md",
      "status": "modified",
      "additions": 174,
      "deletions": 72,
      "changes": 246,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/README.md?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,5 +1,18 @@\n-Bolt [![Coverage Status](https://coveralls.io/repos/boltdb/bolt/badge.svg?branch=master)](https://coveralls.io/r/boltdb/bolt?branch=master) [![GoDoc](https://godoc.org/github.com/boltdb/bolt?status.svg)](https://godoc.org/github.com/boltdb/bolt) ![Version](https://img.shields.io/badge/version-1.2.1-green.svg)\n-====\n+bbolt\n+=====\n+\n+[![Go Report Card](https://goreportcard.com/badge/github.com/etcd-io/bbolt?style=flat-square)](https://goreportcard.com/report/github.com/etcd-io/bbolt)\n+[![Coverage](https://codecov.io/gh/etcd-io/bbolt/branch/master/graph/badge.svg)](https://codecov.io/gh/etcd-io/bbolt)\n+[![Build Status Travis](https://img.shields.io/travis/etcd-io/bboltlabs.svg?style=flat-square&&branch=master)](https://travis-ci.com/etcd-io/bbolt)\n+[![Godoc](http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square)](https://godoc.org/github.com/etcd-io/bbolt)\n+[![Releases](https://img.shields.io/github/release/etcd-io/bbolt/all.svg?style=flat-square)](https://github.com/etcd-io/bbolt/releases)\n+[![LICENSE](https://img.shields.io/github/license/etcd-io/bbolt.svg?style=flat-square)](https://github.com/etcd-io/bbolt/blob/master/LICENSE)\n+\n+bbolt is a fork of [Ben Johnson's][gh_ben] [Bolt][bolt] key/value\n+store. The purpose of this fork is to provide the Go community with an active\n+maintenance and development target for Bolt; the goal is improved reliability\n+and stability. bbolt includes bug fixes, performance enhancements, and features\n+not found in Bolt while preserving backwards compatibility with the Bolt API.\n \n Bolt is a pure Go key/value store inspired by [Howard Chu's][hyc_symas]\n [LMDB project][lmdb]. The goal of the project is to provide a simple,\n@@ -10,47 +23,55 @@ Since Bolt is meant to be used as such a low-level piece of functionality,\n simplicity is key. The API will be small and only focus on getting values\n and setting values. That's it.\n \n+[gh_ben]: https://github.com/benbjohnson\n+[bolt]: https://github.com/boltdb/bolt\n [hyc_symas]: https://twitter.com/hyc_symas\n [lmdb]: http://symas.com/mdb/\n \n ## Project Status\n \n-Bolt is stable and the API is fixed. Full unit test coverage and randomized\n-black box testing are used to ensure database consistency and thread safety.\n-Bolt is currently in high-load production environments serving databases as\n-large as 1TB. Many companies such as Shopify and Heroku use Bolt-backed\n-services every day.\n+Bolt is stable, the API is fixed, and the file format is fixed. Full unit\n+test coverage and randomized black box testing are used to ensure database\n+consistency and thread safety. Bolt is currently used in high-load production\n+environments serving databases as large as 1TB. Many companies such as\n+Shopify and Heroku use Bolt-backed services every day.\n+\n+## Project versioning\n+\n+bbolt uses [semantic versioning](http://semver.org).\n+API should not change between patch and minor releases.\n+New minor versions may add additional features to the API.\n \n ## Table of Contents\n \n-- [Getting Started](#getting-started)\n-  - [Installing](#installing)\n-  - [Opening a database](#opening-a-database)\n-  - [Transactions](#transactions)\n-    - [Read-write transactions](#read-write-transactions)\n-    - [Read-only transactions](#read-only-transactions)\n-    - [Batch read-write transactions](#batch-read-write-transactions)\n-    - [Managing transactions manually](#managing-transactions-manually)\n-  - [Using buckets](#using-buckets)\n-  - [Using key/value pairs](#using-keyvalue-pairs)\n-  - [Autoincrementing integer for the bucket](#autoincrementing-integer-for-the-bucket)\n-  - [Iterating over keys](#iterating-over-keys)\n-    - [Prefix scans](#prefix-scans)\n-    - [Range scans](#range-scans)\n-    - [ForEach()](#foreach)\n-  - [Nested buckets](#nested-buckets)\n-  - [Database backups](#database-backups)\n-  - [Statistics](#statistics)\n-  - [Read-Only Mode](#read-only-mode)\n-  - [Mobile Use (iOS/Android)](#mobile-use-iosandroid)\n-- [Resources](#resources)\n-- [Comparison with other databases](#comparison-with-other-databases)\n-  - [Postgres, MySQL, & other relational databases](#postgres-mysql--other-relational-databases)\n-  - [LevelDB, RocksDB](#leveldb-rocksdb)\n-  - [LMDB](#lmdb)\n-- [Caveats & Limitations](#caveats--limitations)\n-- [Reading the Source](#reading-the-source)\n-- [Other Projects Using Bolt](#other-projects-using-bolt)\n+  - [Getting Started](#getting-started)\n+    - [Installing](#installing)\n+    - [Opening a database](#opening-a-database)\n+    - [Transactions](#transactions)\n+      - [Read-write transactions](#read-write-transactions)\n+      - [Read-only transactions](#read-only-transactions)\n+      - [Batch read-write transactions](#batch-read-write-transactions)\n+      - [Managing transactions manually](#managing-transactions-manually)\n+    - [Using buckets](#using-buckets)\n+    - [Using key/value pairs](#using-keyvalue-pairs)\n+    - [Autoincrementing integer for the bucket](#autoincrementing-integer-for-the-bucket)\n+    - [Iterating over keys](#iterating-over-keys)\n+      - [Prefix scans](#prefix-scans)\n+      - [Range scans](#range-scans)\n+      - [ForEach()](#foreach)\n+    - [Nested buckets](#nested-buckets)\n+    - [Database backups](#database-backups)\n+    - [Statistics](#statistics)\n+    - [Read-Only Mode](#read-only-mode)\n+    - [Mobile Use (iOS/Android)](#mobile-use-iosandroid)\n+  - [Resources](#resources)\n+  - [Comparison with other databases](#comparison-with-other-databases)\n+    - [Postgres, MySQL, & other relational databases](#postgres-mysql--other-relational-databases)\n+    - [LevelDB, RocksDB](#leveldb-rocksdb)\n+    - [LMDB](#lmdb)\n+  - [Caveats & Limitations](#caveats--limitations)\n+  - [Reading the Source](#reading-the-source)\n+  - [Other Projects Using Bolt](#other-projects-using-bolt)\n \n ## Getting Started\n \n@@ -59,13 +80,28 @@ services every day.\n To start using Bolt, install Go and run `go get`:\n \n ```sh\n-$ go get github.com/boltdb/bolt/...\n+$ go get go.etcd.io/bbolt/...\n ```\n \n This will retrieve the library and install the `bolt` command line utility into\n your `$GOBIN` path.\n \n \n+### Importing bbolt\n+\n+To use bbolt as an embedded key-value store, import as:\n+\n+```go\n+import bolt \"go.etcd.io/bbolt\"\n+\n+db, err := bolt.Open(path, 0666, nil)\n+if err != nil {\n+  return err\n+}\n+defer db.Close()\n+```\n+\n+\n ### Opening a database\n \n The top-level object in Bolt is a `DB`. It is represented as a single file on\n@@ -79,7 +115,7 @@ package main\n import (\n \t\"log\"\n \n-\t\"github.com/boltdb/bolt\"\n+\tbolt \"go.etcd.io/bbolt\"\n )\n \n func main() {\n@@ -209,7 +245,7 @@ and then safely close your transaction if an error is returned. This is the\n recommended way to use Bolt transactions.\n \n However, sometimes you may want to manually start and end your transactions.\n-You can use the `Tx.Begin()` function directly but **please** be sure to close\n+You can use the `DB.Begin()` function directly but **please** be sure to close\n the transaction.\n \n ```go\n@@ -395,7 +431,7 @@ db.View(func(tx *bolt.Tx) error {\n \tc := tx.Bucket([]byte(\"MyBucket\")).Cursor()\n \n \tprefix := []byte(\"1234\")\n-\tfor k, v := c.Seek(prefix); bytes.HasPrefix(k, prefix); k, v = c.Next() {\n+\tfor k, v := c.Seek(prefix); k != nil && bytes.HasPrefix(k, prefix); k, v = c.Next() {\n \t\tfmt.Printf(\"key=%s, value=%s\\n\", k, v)\n \t}\n \n@@ -448,6 +484,10 @@ db.View(func(tx *bolt.Tx) error {\n })\n ```\n \n+Please note that keys and values in `ForEach()` are only valid while\n+the transaction is open. If you need to use a key or value outside of\n+the transaction, you must use `copy()` to copy it to another byte\n+slice.\n \n ### Nested buckets\n \n@@ -460,6 +500,55 @@ func (*Bucket) CreateBucketIfNotExists(key []byte) (*Bucket, error)\n func (*Bucket) DeleteBucket(key []byte) error\n ```\n \n+Say you had a multi-tenant application where the root level bucket was the account bucket. Inside of this bucket was a sequence of accounts which themselves are buckets. And inside the sequence bucket you could have many buckets pertaining to the Account itself (Users, Notes, etc) isolating the information into logical groupings.\n+\n+```go\n+\n+// createUser creates a new user in the given account.\n+func createUser(accountID int, u *User) error {\n+    // Start the transaction.\n+    tx, err := db.Begin(true)\n+    if err != nil {\n+        return err\n+    }\n+    defer tx.Rollback()\n+\n+    // Retrieve the root bucket for the account.\n+    // Assume this has already been created when the account was set up.\n+    root := tx.Bucket([]byte(strconv.FormatUint(accountID, 10)))\n+\n+    // Setup the users bucket.\n+    bkt, err := root.CreateBucketIfNotExists([]byte(\"USERS\"))\n+    if err != nil {\n+        return err\n+    }\n+\n+    // Generate an ID for the new user.\n+    userID, err := bkt.NextSequence()\n+    if err != nil {\n+        return err\n+    }\n+    u.ID = userID\n+\n+    // Marshal and save the encoded user.\n+    if buf, err := json.Marshal(u); err != nil {\n+        return err\n+    } else if err := bkt.Put([]byte(strconv.FormatUint(u.ID, 10)), buf); err != nil {\n+        return err\n+    }\n+\n+    // Commit the transaction.\n+    if err := tx.Commit(); err != nil {\n+        return err\n+    }\n+\n+    return nil\n+}\n+\n+```\n+\n+\n+\n \n ### Database backups\n \n@@ -469,7 +558,7 @@ this from a read-only transaction, it will perform a hot backup and not block\n your other database reads and writes.\n \n By default, it will use a regular file handle which will utilize the operating\n-system's page cache. See the [`Tx`](https://godoc.org/github.com/boltdb/bolt#Tx)\n+system's page cache. See the [`Tx`](https://godoc.org/go.etcd.io/bbolt#Tx)\n documentation for information about optimizing for larger-than-RAM datasets.\n \n One common use case is to backup over HTTP so you can use tools like `cURL` to\n@@ -715,6 +804,9 @@ Here are a few things to note when evaluating and using Bolt:\n   can be reused by a new page or can be unmapped from virtual memory and you'll\n   see an `unexpected fault address` panic when accessing it.\n \n+* Bolt uses an exclusive write lock on the database file so it cannot be\n+  shared by multiple processes.\n+\n * Be careful when using `Bucket.FillPercent`. Setting a high fill percent for\n   buckets that have random inserts will cause your database to have very poor\n   page utilization.\n@@ -755,7 +847,7 @@ Here are a few things to note when evaluating and using Bolt:\n \n ## Reading the Source\n \n-Bolt is a relatively small code base (<3KLOC) for an embedded, serializable,\n+Bolt is a relatively small code base (<5KLOC) for an embedded, serializable,\n transactional key/value database so it can be a good starting point for people\n interested in how databases work.\n \n@@ -807,46 +899,56 @@ them via pull request.\n \n Below is a list of public, open source projects that use Bolt:\n \n-* [BoltDbWeb](https://github.com/evnix/boltdbweb) - A web based GUI for BoltDB files.\n-* [Operation Go: A Routine Mission](http://gocode.io) - An online programming game for Golang using Bolt for user accounts and a leaderboard.\n+* [Algernon](https://github.com/xyproto/algernon) - A HTTP/2 web server with built-in support for Lua. Uses BoltDB as the default database backend.\n * [Bazil](https://bazil.org/) - A file system that lets your data reside where it is most convenient for it to reside.\n-* [DVID](https://github.com/janelia-flyem/dvid) - Added Bolt as optional storage engine and testing it against Basho-tuned leveldb.\n-* [Skybox Analytics](https://github.com/skybox/skybox) - A standalone funnel analysis tool for web analytics.\n-* [Scuttlebutt](https://github.com/benbjohnson/scuttlebutt) - Uses Bolt to store and process all Twitter mentions of GitHub projects.\n-* [Wiki](https://github.com/peterhellberg/wiki) - A tiny wiki using Goji, BoltDB and Blackfriday.\n+* [bolter](https://github.com/hasit/bolter) - Command-line app for viewing BoltDB file in your terminal.\n+* [boltcli](https://github.com/spacewander/boltcli) - the redis-cli for boltdb with Lua script support.\n+* [BoltHold](https://github.com/timshannon/bolthold) - An embeddable NoSQL store for Go types built on BoltDB\n+* [BoltStore](https://github.com/yosssi/boltstore) - Session store using Bolt.\n+* [Boltdb Boilerplate](https://github.com/bobintornado/boltdb-boilerplate) - Boilerplate wrapper around bolt aiming to make simple calls one-liners.\n+* [BoltDbWeb](https://github.com/evnix/boltdbweb) - A web based GUI for BoltDB files.\n+* [bleve](http://www.blevesearch.com/) - A pure Go search engine similar to ElasticSearch that uses Bolt as the default storage backend.\n+* [btcwallet](https://github.com/btcsuite/btcwallet) - A bitcoin wallet.\n+* [buckets](https://github.com/joyrexus/buckets) - a bolt wrapper streamlining\n+  simple tx and key scans.\n+* [cayley](https://github.com/google/cayley) - Cayley is an open-source graph database using Bolt as optional backend.\n * [ChainStore](https://github.com/pressly/chainstore) - Simple key-value interface to a variety of storage engines organized as a chain of operations.\n-* [MetricBase](https://github.com/msiebuhr/MetricBase) - Single-binary version of Graphite.\n-* [Gitchain](https://github.com/gitchain/gitchain) - Decentralized, peer-to-peer Git repositories aka \"Git meets Bitcoin\".\n+* [Consul](https://github.com/hashicorp/consul) - Consul is service discovery and configuration made easy. Distributed, highly available, and datacenter-aware.\n+* [DVID](https://github.com/janelia-flyem/dvid) - Added Bolt as optional storage engine and testing it against Basho-tuned leveldb.\n+* [dcrwallet](https://github.com/decred/dcrwallet) - A wallet for the Decred cryptocurrency.\n+* [drive](https://github.com/odeke-em/drive) - drive is an unofficial Google Drive command line client for \\*NIX operating systems.\n * [event-shuttle](https://github.com/sclasen/event-shuttle) - A Unix system service to collect and reliably deliver messages to Kafka.\n+* [Freehold](http://tshannon.bitbucket.org/freehold/) - An open, secure, and lightweight platform for your files and data.\n+* [Go Report Card](https://goreportcard.com/) - Go code quality report cards as a (free and open source) service.\n+* [GoWebApp](https://github.com/josephspurrier/gowebapp) - A basic MVC web application in Go using BoltDB.\n+* [GoShort](https://github.com/pankajkhairnar/goShort) - GoShort is a URL shortener written in Golang and BoltDB for persistent key/value storage and for routing it's using high performent HTTPRouter.\n+* [gopherpit](https://github.com/gopherpit/gopherpit) - A web service to manage Go remote import paths with custom domains\n+* [Gitchain](https://github.com/gitchain/gitchain) - Decentralized, peer-to-peer Git repositories aka \"Git meets Bitcoin\".\n+* [InfluxDB](https://influxdata.com) - Scalable datastore for metrics, events, and real-time analytics.\n+* [ipLocator](https://github.com/AndreasBriese/ipLocator) - A fast ip-geo-location-server using bolt with bloom filters.\n * [ipxed](https://github.com/kelseyhightower/ipxed) - Web interface and api for ipxed.\n-* [BoltStore](https://github.com/yosssi/boltstore) - Session store using Bolt.\n-* [photosite/session](https://godoc.org/bitbucket.org/kardianos/photosite/session) - Sessions for a photo viewing site.\n+* [Ironsmith](https://github.com/timshannon/ironsmith) - A simple, script-driven continuous integration (build - > test -> release) tool, with no external dependencies\n+* [Kala](https://github.com/ajvb/kala) - Kala is a modern job scheduler optimized to run on a single node. It is persistent, JSON over HTTP API, ISO 8601 duration notation, and dependent jobs.\n+* [Key Value Access Langusge (KVAL)](https://github.com/kval-access-language) - A proposed grammar for key-value datastores offering a bbolt binding.\n * [LedisDB](https://github.com/siddontang/ledisdb) - A high performance NoSQL, using Bolt as optional storage.\n-* [ipLocator](https://github.com/AndreasBriese/ipLocator) - A fast ip-geo-location-server using bolt with bloom filters.\n-* [cayley](https://github.com/google/cayley) - Cayley is an open-source graph database using Bolt as optional backend.\n-* [bleve](http://www.blevesearch.com/) - A pure Go search engine similar to ElasticSearch that uses Bolt as the default storage backend.\n-* [tentacool](https://github.com/optiflows/tentacool) - REST api server to manage system stuff (IP, DNS, Gateway...) on a linux server.\n-* [Seaweed File System](https://github.com/chrislusf/seaweedfs) - Highly scalable distributed key~file system with O(1) disk read.\n-* [InfluxDB](https://influxdata.com) - Scalable datastore for metrics, events, and real-time analytics.\n-* [Freehold](http://tshannon.bitbucket.org/freehold/) - An open, secure, and lightweight platform for your files and data.\n+* [lru](https://github.com/crowdriff/lru) - Easy to use Bolt-backed Least-Recently-Used (LRU) read-through cache with chainable remote stores.\n+* [mbuckets](https://github.com/abhigupta912/mbuckets) - A Bolt wrapper that allows easy operations on multi level (nested) buckets.\n+* [MetricBase](https://github.com/msiebuhr/MetricBase) - Single-binary version of Graphite.\n+* [MuLiFS](https://github.com/dankomiocevic/mulifs) - Music Library Filesystem creates a filesystem to organise your music files.\n+* [Operation Go: A Routine Mission](http://gocode.io) - An online programming game for Golang using Bolt for user accounts and a leaderboard.\n+* [photosite/session](https://godoc.org/bitbucket.org/kardianos/photosite/session) - Sessions for a photo viewing site.\n * [Prometheus Annotation Server](https://github.com/oliver006/prom_annotation_server) - Annotation server for PromDash & Prometheus service monitoring system.\n-* [Consul](https://github.com/hashicorp/consul) - Consul is service discovery and configuration made easy. Distributed, highly available, and datacenter-aware.\n-* [Kala](https://github.com/ajvb/kala) - Kala is a modern job scheduler optimized to run on a single node. It is persistent, JSON over HTTP API, ISO 8601 duration notation, and dependent jobs.\n-* [drive](https://github.com/odeke-em/drive) - drive is an unofficial Google Drive command line client for \\*NIX operating systems.\n+* [reef-pi](https://github.com/reef-pi/reef-pi) - reef-pi is an award winning, modular, DIY reef tank controller using easy to learn electronics based on a Raspberry Pi.\n+* [Request Baskets](https://github.com/darklynx/request-baskets) - A web service to collect arbitrary HTTP requests and inspect them via REST API or simple web UI, similar to [RequestBin](http://requestb.in/) service\n+* [Seaweed File System](https://github.com/chrislusf/seaweedfs) - Highly scalable distributed key~file system with O(1) disk read.\n * [stow](https://github.com/djherbis/stow) -  a persistence manager for objects\n   backed by boltdb.\n-* [buckets](https://github.com/joyrexus/buckets) - a bolt wrapper streamlining\n-  simple tx and key scans.\n-* [mbuckets](https://github.com/abhigupta912/mbuckets) - A Bolt wrapper that allows easy operations on multi level (nested) buckets.\n-* [Request Baskets](https://github.com/darklynx/request-baskets) - A web service to collect arbitrary HTTP requests and inspect them via REST API or simple web UI, similar to [RequestBin](http://requestb.in/) service\n-* [Go Report Card](https://goreportcard.com/) - Go code quality report cards as a (free and open source) service.\n-* [Boltdb Boilerplate](https://github.com/bobintornado/boltdb-boilerplate) - Boilerplate wrapper around bolt aiming to make simple calls one-liners.\n-* [lru](https://github.com/crowdriff/lru) - Easy to use Bolt-backed Least-Recently-Used (LRU) read-through cache with chainable remote stores.\n * [Storm](https://github.com/asdine/storm) - Simple and powerful ORM for BoltDB.\n-* [GoWebApp](https://github.com/josephspurrier/gowebapp) - A basic MVC web application in Go using BoltDB.\n * [SimpleBolt](https://github.com/xyproto/simplebolt) - A simple way to use BoltDB. Deals mainly with strings.\n-* [Algernon](https://github.com/xyproto/algernon) - A HTTP/2 web server with built-in support for Lua. Uses BoltDB as the default database backend.\n-* [MuLiFS](https://github.com/dankomiocevic/mulifs) - Music Library Filesystem creates a filesystem to organise your music files.\n-* [GoShort](https://github.com/pankajkhairnar/goShort) - GoShort is a URL shortener written in Golang and BoltDB for persistent key/value storage and for routing it's using high performent HTTPRouter.\n+* [Skybox Analytics](https://github.com/skybox/skybox) - A standalone funnel analysis tool for web analytics.\n+* [Scuttlebutt](https://github.com/benbjohnson/scuttlebutt) - Uses Bolt to store and process all Twitter mentions of GitHub projects.\n+* [tentacool](https://github.com/optiflows/tentacool) - REST api server to manage system stuff (IP, DNS, Gateway...) on a linux server.\n+* [torrent](https://github.com/anacrolix/torrent) - Full-featured BitTorrent client package and utilities in Go. BoltDB is a storage backend in development.\n+* [Wiki](https://github.com/peterhellberg/wiki) - A tiny wiki using Goji, BoltDB and Blackfriday.\n \n If you are using Bolt in a project please send a pull request to add it to the list."
    },
    {
      "sha": "6e26e941d682d0bae5f16172998befeb59a9c56c",
      "filename": "backend/vendor/github.com/coreos/bbolt/appveyor.yml",
      "status": "removed",
      "additions": 0,
      "deletions": 18,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/coreos/bbolt/appveyor.yml",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/coreos/bbolt/appveyor.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/appveyor.yml?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,18 +0,0 @@\n-version: \"{build}\"\n-\n-os: Windows Server 2012 R2\n-\n-clone_folder: c:\\gopath\\src\\github.com\\boltdb\\bolt\n-\n-environment:\n-  GOPATH: c:\\gopath\n-\n-install:\n-  - echo %PATH%\n-  - echo %GOPATH%\n-  - go version\n-  - go env\n-  - go get -v -t ./...\n-\n-build_script:\n-  - go test -v ./..."
    },
    {
      "sha": "4d35ee7cf3d257f8939bfc10708305aea1ff3623",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_386.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,7 +1,10 @@\n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0x7FFFFFFF // 2GB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0xFFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "60a52dad56b2dab638bcec52d4a989dd49149b7b",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_amd64.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,7 +1,10 @@\n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "105d27ddb7ddbc733427d248e2c8c5d3727e53e6",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_arm.go",
      "status": "modified",
      "additions": 22,
      "deletions": 1,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,7 +1,28 @@\n-package bolt\n+package bbolt\n+\n+import \"unsafe\"\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0x7FFFFFFF // 2GB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0xFFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned bool\n+\n+func init() {\n+\t// Simple check to see whether this arch handles unaligned load/stores\n+\t// correctly.\n+\n+\t// ARM9 and older devices require load/stores to be from/to aligned\n+\t// addresses. If not, the lower 2 bits are cleared and that address is\n+\t// read in a jumbled up order.\n+\n+\t// See http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka15414.html\n+\n+\traw := [6]byte{0xfe, 0xef, 0x11, 0x22, 0x22, 0x11}\n+\tval := *(*uint32)(unsafe.Pointer(uintptr(unsafe.Pointer(&raw)) + 2))\n+\n+\tbrokenUnaligned = val != 0x11222211\n+}"
    },
    {
      "sha": "f5aa2a5ee248ee5a4cdee3dc2d3572f316ae0f88",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_arm64.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,9 +1,12 @@\n // +build arm64\n \n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "7707bcacf03a13bf440f6d4779e0013c95faa874",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_linux.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_linux.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_linux.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"syscall\""
    },
    {
      "sha": "baeb289fd94b8a6a7840032e0278cecbe18fe4b0",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_mips64x.go",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_mips64x.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_mips64x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_mips64x.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,12 @@\n+// +build mips64 mips64le\n+\n+package bbolt\n+\n+// maxMapSize represents the largest mmap size supported by Bolt.\n+const maxMapSize = 0x8000000000 // 512GB\n+\n+// maxAllocSize is the size used when creating array pointers.\n+const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "2d9b1a91f36423f14ee9f44cc85d90bd39472fc9",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_mipsx.go",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_mipsx.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_mipsx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_mipsx.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,12 @@\n+// +build mips mipsle\n+\n+package bbolt\n+\n+// maxMapSize represents the largest mmap size supported by Bolt.\n+const maxMapSize = 0x40000000 // 1GB\n+\n+// maxAllocSize is the size used when creating array pointers.\n+const maxAllocSize = 0xFFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "d7f50358ef141e742dee34ca42168af0dc0d2291",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_openbsd.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"syscall\""
    },
    {
      "sha": "69804714aaef3b2beaaf8f1ddad889b64094600f",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_ppc.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_ppc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,9 +1,12 @@\n // +build ppc\n \n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0x7FFFFFFF // 2GB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0xFFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "356590857607a8c357f69701332792bfd15585b8",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_ppc64.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,9 +1,12 @@\n // +build ppc64\n \n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "422c7c69d667ae676e9c37b764593a59c0cf8478",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_ppc64le.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_ppc64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,9 +1,12 @@\n // +build ppc64le\n \n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "6d3fcb825d344801874e96cf3bc2dd880894042e",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_s390x.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_s390x.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_s390x.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,9 +1,12 @@\n // +build s390x\n \n-package bolt\n+package bbolt\n \n // maxMapSize represents the largest mmap size supported by Bolt.\n const maxMapSize = 0xFFFFFFFFFFFF // 256TB\n \n // maxAllocSize is the size used when creating array pointers.\n const maxAllocSize = 0x7FFFFFFF\n+\n+// Are unaligned load/stores broken on this arch?\n+var brokenUnaligned = false"
    },
    {
      "sha": "5f2bb5145199018ce6fcac8c59b01e552c30bdaf",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_unix.go",
      "status": "modified",
      "additions": 23,
      "deletions": 19,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_unix.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_unix.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,41 +1,43 @@\n // +build !windows,!plan9,!solaris\n \n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n-\t\"os\"\n \t\"syscall\"\n \t\"time\"\n \t\"unsafe\"\n )\n \n // flock acquires an advisory lock on a file descriptor.\n-func flock(db *DB, mode os.FileMode, exclusive bool, timeout time.Duration) error {\n+func flock(db *DB, exclusive bool, timeout time.Duration) error {\n \tvar t time.Time\n+\tif timeout != 0 {\n+\t\tt = time.Now()\n+\t}\n+\tfd := db.file.Fd()\n+\tflag := syscall.LOCK_NB\n+\tif exclusive {\n+\t\tflag |= syscall.LOCK_EX\n+\t} else {\n+\t\tflag |= syscall.LOCK_SH\n+\t}\n \tfor {\n-\t\t// If we're beyond our timeout then return an error.\n-\t\t// This can only occur after we've attempted a flock once.\n-\t\tif t.IsZero() {\n-\t\t\tt = time.Now()\n-\t\t} else if timeout > 0 && time.Since(t) > timeout {\n-\t\t\treturn ErrTimeout\n-\t\t}\n-\t\tflag := syscall.LOCK_SH\n-\t\tif exclusive {\n-\t\t\tflag = syscall.LOCK_EX\n-\t\t}\n-\n-\t\t// Otherwise attempt to obtain an exclusive lock.\n-\t\terr := syscall.Flock(int(db.file.Fd()), flag|syscall.LOCK_NB)\n+\t\t// Attempt to obtain an exclusive lock.\n+\t\terr := syscall.Flock(int(fd), flag)\n \t\tif err == nil {\n \t\t\treturn nil\n \t\t} else if err != syscall.EWOULDBLOCK {\n \t\t\treturn err\n \t\t}\n \n+\t\t// If we timed out then return an error.\n+\t\tif timeout != 0 && time.Since(t) > timeout-flockRetryTimeout {\n+\t\t\treturn ErrTimeout\n+\t\t}\n+\n \t\t// Wait for a bit and try again.\n-\t\ttime.Sleep(50 * time.Millisecond)\n+\t\ttime.Sleep(flockRetryTimeout)\n \t}\n }\n \n@@ -53,7 +55,9 @@ func mmap(db *DB, sz int) error {\n \t}\n \n \t// Advise the kernel that the mmap is accessed randomly.\n-\tif err := madvise(b, syscall.MADV_RANDOM); err != nil {\n+\terr = madvise(b, syscall.MADV_RANDOM)\n+\tif err != nil && err != syscall.ENOSYS {\n+\t\t// Ignore not implemented error in kernel because it still works.\n \t\treturn fmt.Errorf(\"madvise: %s\", err)\n \t}\n "
    },
    {
      "sha": "babad657862bbffea24725d320e586e9186384cb",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_unix_solaris.go",
      "status": "modified",
      "additions": 21,
      "deletions": 23,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_unix_solaris.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_unix_solaris.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_unix_solaris.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,8 +1,7 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n-\t\"os\"\n \t\"syscall\"\n \t\"time\"\n \t\"unsafe\"\n@@ -11,36 +10,35 @@ import (\n )\n \n // flock acquires an advisory lock on a file descriptor.\n-func flock(db *DB, mode os.FileMode, exclusive bool, timeout time.Duration) error {\n+func flock(db *DB, exclusive bool, timeout time.Duration) error {\n \tvar t time.Time\n+\tif timeout != 0 {\n+\t\tt = time.Now()\n+\t}\n+\tfd := db.file.Fd()\n+\tvar lockType int16\n+\tif exclusive {\n+\t\tlockType = syscall.F_WRLCK\n+\t} else {\n+\t\tlockType = syscall.F_RDLCK\n+\t}\n \tfor {\n-\t\t// If we're beyond our timeout then return an error.\n-\t\t// This can only occur after we've attempted a flock once.\n-\t\tif t.IsZero() {\n-\t\t\tt = time.Now()\n-\t\t} else if timeout > 0 && time.Since(t) > timeout {\n-\t\t\treturn ErrTimeout\n-\t\t}\n-\t\tvar lock syscall.Flock_t\n-\t\tlock.Start = 0\n-\t\tlock.Len = 0\n-\t\tlock.Pid = 0\n-\t\tlock.Whence = 0\n-\t\tlock.Pid = 0\n-\t\tif exclusive {\n-\t\t\tlock.Type = syscall.F_WRLCK\n-\t\t} else {\n-\t\t\tlock.Type = syscall.F_RDLCK\n-\t\t}\n-\t\terr := syscall.FcntlFlock(db.file.Fd(), syscall.F_SETLK, &lock)\n+\t\t// Attempt to obtain an exclusive lock.\n+\t\tlock := syscall.Flock_t{Type: lockType}\n+\t\terr := syscall.FcntlFlock(fd, syscall.F_SETLK, &lock)\n \t\tif err == nil {\n \t\t\treturn nil\n \t\t} else if err != syscall.EAGAIN {\n \t\t\treturn err\n \t\t}\n \n+\t\t// If we timed out then return an error.\n+\t\tif timeout != 0 && time.Since(t) > timeout-flockRetryTimeout {\n+\t\t\treturn ErrTimeout\n+\t\t}\n+\n \t\t// Wait for a bit and try again.\n-\t\ttime.Sleep(50 * time.Millisecond)\n+\t\ttime.Sleep(flockRetryTimeout)\n \t}\n }\n "
    },
    {
      "sha": "fca178bd29082b3075736a90f44b9271d17d9fb6",
      "filename": "backend/vendor/github.com/coreos/bbolt/bolt_windows.go",
      "status": "modified",
      "additions": 27,
      "deletions": 30,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_windows.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bolt_windows.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bolt_windows.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n@@ -16,8 +16,6 @@ var (\n )\n \n const (\n-\tlockExt = \".lock\"\n-\n \t// see https://msdn.microsoft.com/en-us/library/windows/desktop/aa365203(v=vs.85).aspx\n \tflagLockExclusive       = 2\n \tflagLockFailImmediately = 1\n@@ -48,48 +46,47 @@ func fdatasync(db *DB) error {\n }\n \n // flock acquires an advisory lock on a file descriptor.\n-func flock(db *DB, mode os.FileMode, exclusive bool, timeout time.Duration) error {\n-\t// Create a separate lock file on windows because a process\n-\t// cannot share an exclusive lock on the same file. This is\n-\t// needed during Tx.WriteTo().\n-\tf, err := os.OpenFile(db.path+lockExt, os.O_CREATE, mode)\n-\tif err != nil {\n-\t\treturn err\n-\t}\n-\tdb.lockfile = f\n-\n+func flock(db *DB, exclusive bool, timeout time.Duration) error {\n \tvar t time.Time\n+\tif timeout != 0 {\n+\t\tt = time.Now()\n+\t}\n+\tvar flag uint32 = flagLockFailImmediately\n+\tif exclusive {\n+\t\tflag |= flagLockExclusive\n+\t}\n \tfor {\n-\t\t// If we're beyond our timeout then return an error.\n-\t\t// This can only occur after we've attempted a flock once.\n-\t\tif t.IsZero() {\n-\t\t\tt = time.Now()\n-\t\t} else if timeout > 0 && time.Since(t) > timeout {\n-\t\t\treturn ErrTimeout\n-\t\t}\n-\n-\t\tvar flag uint32 = flagLockFailImmediately\n-\t\tif exclusive {\n-\t\t\tflag |= flagLockExclusive\n-\t\t}\n+\t\t// Fix for https://github.com/etcd-io/bbolt/issues/121. Use byte-range\n+\t\t// -1..0 as the lock on the database file.\n+\t\tvar m1 uint32 = (1 << 32) - 1 // -1 in a uint32\n+\t\terr := lockFileEx(syscall.Handle(db.file.Fd()), flag, 0, 1, 0, &syscall.Overlapped{\n+\t\t\tOffset:     m1,\n+\t\t\tOffsetHigh: m1,\n+\t\t})\n \n-\t\terr := lockFileEx(syscall.Handle(db.lockfile.Fd()), flag, 0, 1, 0, &syscall.Overlapped{})\n \t\tif err == nil {\n \t\t\treturn nil\n \t\t} else if err != errLockViolation {\n \t\t\treturn err\n \t\t}\n \n+\t\t// If we timed oumercit then return an error.\n+\t\tif timeout != 0 && time.Since(t) > timeout-flockRetryTimeout {\n+\t\t\treturn ErrTimeout\n+\t\t}\n+\n \t\t// Wait for a bit and try again.\n-\t\ttime.Sleep(50 * time.Millisecond)\n+\t\ttime.Sleep(flockRetryTimeout)\n \t}\n }\n \n // funlock releases an advisory lock on a file descriptor.\n func funlock(db *DB) error {\n-\terr := unlockFileEx(syscall.Handle(db.lockfile.Fd()), 0, 1, 0, &syscall.Overlapped{})\n-\tdb.lockfile.Close()\n-\tos.Remove(db.path+lockExt)\n+\tvar m1 uint32 = (1 << 32) - 1 // -1 in a uint32\n+\terr := unlockFileEx(syscall.Handle(db.file.Fd()), 0, 1, 0, &syscall.Overlapped{\n+\t\tOffset:     m1,\n+\t\tOffsetHigh: m1,\n+\t})\n \treturn err\n }\n "
    },
    {
      "sha": "9587afefee404805cddb1622f0202b77c4201ed1",
      "filename": "backend/vendor/github.com/coreos/bbolt/boltsync_unix.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/boltsync_unix.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/boltsync_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/boltsync_unix.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,6 +1,6 @@\n // +build !windows,!plan9,!linux,!openbsd\n \n-package bolt\n+package bbolt\n \n // fdatasync flushes written data to a file descriptor.\n func fdatasync(db *DB) error {"
    },
    {
      "sha": "84bfd4d6a283edd5cd03a5258af1559f98174e1f",
      "filename": "backend/vendor/github.com/coreos/bbolt/bucket.go",
      "status": "modified",
      "additions": 39,
      "deletions": 12,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bucket.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/bucket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/bucket.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"bytes\"\n@@ -14,13 +14,6 @@ const (\n \tMaxValueSize = (1 << 31) - 2\n )\n \n-const (\n-\tmaxUint = ^uint(0)\n-\tminUint = 0\n-\tmaxInt  = int(^uint(0) >> 1)\n-\tminInt  = -maxInt - 1\n-)\n-\n const bucketHeaderSize = int(unsafe.Sizeof(bucket{}))\n \n const (\n@@ -130,9 +123,17 @@ func (b *Bucket) Bucket(name []byte) *Bucket {\n func (b *Bucket) openBucket(value []byte) *Bucket {\n \tvar child = newBucket(b.tx)\n \n+\t// If unaligned load/stores are broken on this arch and value is\n+\t// unaligned simply clone to an aligned byte array.\n+\tunaligned := brokenUnaligned && uintptr(unsafe.Pointer(&value[0]))&3 != 0\n+\n+\tif unaligned {\n+\t\tvalue = cloneBytes(value)\n+\t}\n+\n \t// If this is a writable transaction then we need to copy the bucket entry.\n \t// Read-only transactions can point directly at the mmap entry.\n-\tif b.tx.writable {\n+\tif b.tx.writable && !unaligned {\n \t\tchild.bucket = &bucket{}\n \t\t*child.bucket = *(*bucket)(unsafe.Pointer(&value[0]))\n \t} else {\n@@ -167,9 +168,8 @@ func (b *Bucket) CreateBucket(key []byte) (*Bucket, error) {\n \tif bytes.Equal(key, k) {\n \t\tif (flags & bucketLeafFlag) != 0 {\n \t\t\treturn nil, ErrBucketExists\n-\t\t} else {\n-\t\t\treturn nil, ErrIncompatibleValue\n \t\t}\n+\t\treturn nil, ErrIncompatibleValue\n \t}\n \n \t// Create empty, inline bucket.\n@@ -316,7 +316,12 @@ func (b *Bucket) Delete(key []byte) error {\n \n \t// Move cursor to correct position.\n \tc := b.Cursor()\n-\t_, _, flags := c.seek(key)\n+\tk, _, flags := c.seek(key)\n+\n+\t// Return nil if the key doesn't exist.\n+\tif !bytes.Equal(key, k) {\n+\t\treturn nil\n+\t}\n \n \t// Return an error if there is already existing bucket value.\n \tif (flags & bucketLeafFlag) != 0 {\n@@ -329,6 +334,28 @@ func (b *Bucket) Delete(key []byte) error {\n \treturn nil\n }\n \n+// Sequence returns the current integer for the bucket without incrementing it.\n+func (b *Bucket) Sequence() uint64 { return b.bucket.sequence }\n+\n+// SetSequence updates the sequence number for the bucket.\n+func (b *Bucket) SetSequence(v uint64) error {\n+\tif b.tx.db == nil {\n+\t\treturn ErrTxClosed\n+\t} else if !b.Writable() {\n+\t\treturn ErrTxNotWritable\n+\t}\n+\n+\t// Materialize the root node if it hasn't been already so that the\n+\t// bucket will be saved during commit.\n+\tif b.rootNode == nil {\n+\t\t_ = b.node(b.root, nil)\n+\t}\n+\n+\t// Increment and return the sequence.\n+\tb.bucket.sequence = v\n+\treturn nil\n+}\n+\n // NextSequence returns an autoincrementing integer for the bucket.\n func (b *Bucket) NextSequence() (uint64, error) {\n \tif b.tx.db == nil {"
    },
    {
      "sha": "3000aced6c4c1d38661f54f415c466440f66e987",
      "filename": "backend/vendor/github.com/coreos/bbolt/cursor.go",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/cursor.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/cursor.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/cursor.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"bytes\"\n@@ -157,12 +157,6 @@ func (c *Cursor) seek(seek []byte) (key []byte, value []byte, flags uint32) {\n \t// Start from root page/node and traverse to correct page.\n \tc.stack = c.stack[:0]\n \tc.search(seek, c.bucket.root)\n-\tref := &c.stack[len(c.stack)-1]\n-\n-\t// If the cursor is pointing to the end of page/node then return nil.\n-\tif ref.index >= ref.count() {\n-\t\treturn nil, nil, 0\n-\t}\n \n \t// If this is a bucket then return a nil value.\n \treturn c.keyValue()\n@@ -339,6 +333,8 @@ func (c *Cursor) nsearch(key []byte) {\n // keyValue returns the key and value of the current leaf element.\n func (c *Cursor) keyValue() ([]byte, []byte, uint32) {\n \tref := &c.stack[len(c.stack)-1]\n+\n+\t// If the cursor is pointing to the end of page/node then return nil.\n \tif ref.count() == 0 || ref.index >= ref.count() {\n \t\treturn nil, nil, 0\n \t}"
    },
    {
      "sha": "962248c99fe5a12c944ac05ba698877aa39cdeda",
      "filename": "backend/vendor/github.com/coreos/bbolt/db.go",
      "status": "modified",
      "additions": 193,
      "deletions": 65,
      "changes": 258,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/db.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/db.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/db.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"errors\"\n@@ -7,8 +7,7 @@ import (\n \t\"log\"\n \t\"os\"\n \t\"runtime\"\n-\t\"runtime/debug\"\n-\t\"strings\"\n+\t\"sort\"\n \t\"sync\"\n \t\"time\"\n \t\"unsafe\"\n@@ -23,6 +22,8 @@ const version = 2\n // Represents a marker value to indicate that a file is a Bolt DB.\n const magic uint32 = 0xED0CDAED\n \n+const pgidNoFreelist pgid = 0xffffffffffffffff\n+\n // IgnoreNoSync specifies whether the NoSync field of a DB is ignored when\n // syncing changes to a file.  This is required as some operating systems,\n // such as OpenBSD, do not have a unified buffer cache (UBC) and writes\n@@ -39,6 +40,19 @@ const (\n // default page size for db is set to the OS page size.\n var defaultPageSize = os.Getpagesize()\n \n+// The time elapsed between consecutive file locking attempts.\n+const flockRetryTimeout = 50 * time.Millisecond\n+\n+// FreelistType is the type of the freelist backend\n+type FreelistType string\n+\n+const (\n+\t// FreelistArrayType indicates backend freelist type is array\n+\tFreelistArrayType = FreelistType(\"array\")\n+\t// FreelistMapType indicates backend freelist type is hashmap\n+\tFreelistMapType = FreelistType(\"hashmap\")\n+)\n+\n // DB represents a collection of buckets persisted to a file on disk.\n // All data access is performed through transactions which can be obtained through the DB.\n // All the functions on DB will return a ErrDatabaseNotOpen if accessed before Open() is called.\n@@ -61,6 +75,18 @@ type DB struct {\n \t// THIS IS UNSAFE. PLEASE USE WITH CAUTION.\n \tNoSync bool\n \n+\t// When true, skips syncing freelist to disk. This improves the database\n+\t// write performance under normal operation, but requires a full database\n+\t// re-sync during recovery.\n+\tNoFreelistSync bool\n+\n+\t// FreelistType sets the backend freelist type. There are two options. Array which is simple but endures\n+\t// dramatic performance degradation if database is large and framentation in freelist is common.\n+\t// The alternative one is using hashmap, it is faster in almost all circumstances\n+\t// but it doesn't guarantee that it offers the smallest page id available. In normal case it is safe.\n+\t// The default type is array\n+\tFreelistType FreelistType\n+\n \t// When true, skips the truncate call when growing the database.\n \t// Setting this to true is only safe on non-ext3/ext4 systems.\n \t// Skipping truncation avoids preallocation of hard drive space and\n@@ -96,8 +122,7 @@ type DB struct {\n \n \tpath     string\n \tfile     *os.File\n-\tlockfile *os.File // windows only\n-\tdataref  []byte   // mmap'ed readonly, write throws SEGV\n+\tdataref  []byte // mmap'ed readonly, write throws SEGV\n \tdata     *[maxMapSize]byte\n \tdatasz   int\n \tfilesz   int // current on disk file size\n@@ -107,9 +132,11 @@ type DB struct {\n \topened   bool\n \trwtx     *Tx\n \ttxs      []*Tx\n-\tfreelist *freelist\n \tstats    Stats\n \n+\tfreelist     *freelist\n+\tfreelistLoad sync.Once\n+\n \tpagePool sync.Pool\n \n \tbatchMu sync.Mutex\n@@ -148,14 +175,18 @@ func (db *DB) String() string {\n // If the file does not exist then it will be created automatically.\n // Passing in nil options will cause Bolt to open the database with the default options.\n func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n-\tvar db = &DB{opened: true}\n-\n+\tdb := &DB{\n+\t\topened: true,\n+\t}\n \t// Set default options if no options are provided.\n \tif options == nil {\n \t\toptions = DefaultOptions\n \t}\n+\tdb.NoSync = options.NoSync\n \tdb.NoGrowSync = options.NoGrowSync\n \tdb.MmapFlags = options.MmapFlags\n+\tdb.NoFreelistSync = options.NoFreelistSync\n+\tdb.FreelistType = options.FreelistType\n \n \t// Set default values for later DB operations.\n \tdb.MaxBatchSize = DefaultMaxBatchSize\n@@ -183,39 +214,49 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \t// if !options.ReadOnly.\n \t// The database file is locked using the shared lock (more than one process may\n \t// hold a lock at the same time) otherwise (options.ReadOnly is set).\n-\tif err := flock(db, mode, !db.readOnly, options.Timeout); err != nil {\n+\tif err := flock(db, !db.readOnly, options.Timeout); err != nil {\n \t\t_ = db.close()\n \t\treturn nil, err\n \t}\n \n \t// Default values for test hooks\n \tdb.ops.writeAt = db.file.WriteAt\n \n+\tif db.pageSize = options.PageSize; db.pageSize == 0 {\n+\t\t// Set the default page size to the OS page size.\n+\t\tdb.pageSize = defaultPageSize\n+\t}\n+\n \t// Initialize the database if it doesn't exist.\n \tif info, err := db.file.Stat(); err != nil {\n+\t\t_ = db.close()\n \t\treturn nil, err\n \t} else if info.Size() == 0 {\n \t\t// Initialize new files with meta pages.\n \t\tif err := db.init(); err != nil {\n+\t\t\t// clean up file descriptor on initialization fail\n+\t\t\t_ = db.close()\n \t\t\treturn nil, err\n \t\t}\n \t} else {\n \t\t// Read the first meta page to determine the page size.\n \t\tvar buf [0x1000]byte\n-\t\tif _, err := db.file.ReadAt(buf[:], 0); err == nil {\n-\t\t\tm := db.pageInBuffer(buf[:], 0).meta()\n-\t\t\tif err := m.validate(); err != nil {\n-\t\t\t\t// If we can't read the page size, we can assume it's the same\n-\t\t\t\t// as the OS -- since that's how the page size was chosen in the\n-\t\t\t\t// first place.\n-\t\t\t\t//\n-\t\t\t\t// If the first page is invalid and this OS uses a different\n-\t\t\t\t// page size than what the database was created with then we\n-\t\t\t\t// are out of luck and cannot access the database.\n-\t\t\t\tdb.pageSize = os.Getpagesize()\n-\t\t\t} else {\n+\t\t// If we can't read the page size, but can read a page, assume\n+\t\t// it's the same as the OS or one given -- since that's how the\n+\t\t// page size was chosen in the first place.\n+\t\t//\n+\t\t// If the first page is invalid and this OS uses a different\n+\t\t// page size than what the database was created with then we\n+\t\t// are out of luck and cannot access the database.\n+\t\t//\n+\t\t// TODO: scan for next page\n+\t\tif bw, err := db.file.ReadAt(buf[:], 0); err == nil && bw == len(buf) {\n+\t\t\tif m := db.pageInBuffer(buf[:], 0).meta(); m.validate() == nil {\n \t\t\t\tdb.pageSize = int(m.pageSize)\n \t\t\t}\n+\t\t} else {\n+\t\t\t_ = db.close()\n+\t\t\treturn nil, ErrInvalid\n \t\t}\n \t}\n \n@@ -232,14 +273,50 @@ func Open(path string, mode os.FileMode, options *Options) (*DB, error) {\n \t\treturn nil, err\n \t}\n \n-\t// Read in the freelist.\n-\tdb.freelist = newFreelist()\n-\tdb.freelist.read(db.page(db.meta().freelist))\n+\tif db.readOnly {\n+\t\treturn db, nil\n+\t}\n+\n+\tdb.loadFreelist()\n+\n+\t// Flush freelist when transitioning from no sync to sync so\n+\t// NoFreelistSync unaware boltdb can open the db later.\n+\tif !db.NoFreelistSync && !db.hasSyncedFreelist() {\n+\t\ttx, err := db.Begin(true)\n+\t\tif tx != nil {\n+\t\t\terr = tx.Commit()\n+\t\t}\n+\t\tif err != nil {\n+\t\t\t_ = db.close()\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n \n \t// Mark the database as opened and return.\n \treturn db, nil\n }\n \n+// loadFreelist reads the freelist if it is synced, or reconstructs it\n+// by scanning the DB if it is not synced. It assumes there are no\n+// concurrent accesses being made to the freelist.\n+func (db *DB) loadFreelist() {\n+\tdb.freelistLoad.Do(func() {\n+\t\tdb.freelist = newFreelist(db.FreelistType)\n+\t\tif !db.hasSyncedFreelist() {\n+\t\t\t// Reconstruct free list by scanning the DB.\n+\t\t\tdb.freelist.readIDs(db.freepages())\n+\t\t} else {\n+\t\t\t// Read free list from freelist page.\n+\t\t\tdb.freelist.read(db.page(db.meta().freelist))\n+\t\t}\n+\t\tdb.stats.FreePageN = db.freelist.free_count()\n+\t})\n+}\n+\n+func (db *DB) hasSyncedFreelist() bool {\n+\treturn db.meta().freelist != pgidNoFreelist\n+}\n+\n // mmap opens the underlying memory-mapped file and initializes the meta references.\n // minsz is the minimum size that the new mmap can be.\n func (db *DB) mmap(minsz int) error {\n@@ -341,9 +418,6 @@ func (db *DB) mmapSize(size int) (int, error) {\n \n // init creates a new database file and initializes its meta pages.\n func (db *DB) init() error {\n-\t// Set the page size to the OS page size.\n-\tdb.pageSize = os.Getpagesize()\n-\n \t// Create two meta pages on a buffer.\n \tbuf := make([]byte, db.pageSize*4)\n \tfor i := 0; i < 2; i++ {\n@@ -387,16 +461,17 @@ func (db *DB) init() error {\n }\n \n // Close releases all database resources.\n-// All transactions must be closed before closing the database.\n+// It will block waiting for any open transactions to finish\n+// before closing the database and returning.\n func (db *DB) Close() error {\n \tdb.rwlock.Lock()\n \tdefer db.rwlock.Unlock()\n \n \tdb.metalock.Lock()\n \tdefer db.metalock.Unlock()\n \n-\tdb.mmaplock.RLock()\n-\tdefer db.mmaplock.RUnlock()\n+\tdb.mmaplock.Lock()\n+\tdefer db.mmaplock.Unlock()\n \n \treturn db.close()\n }\n@@ -526,21 +601,36 @@ func (db *DB) beginRWTx() (*Tx, error) {\n \tt := &Tx{writable: true}\n \tt.init(db)\n \tdb.rwtx = t\n+\tdb.freePages()\n+\treturn t, nil\n+}\n \n-\t// Free any pages associated with closed read-only transactions.\n-\tvar minid txid = 0xFFFFFFFFFFFFFFFF\n-\tfor _, t := range db.txs {\n-\t\tif t.meta.txid < minid {\n-\t\t\tminid = t.meta.txid\n-\t\t}\n+// freePages releases any pages associated with closed read-only transactions.\n+func (db *DB) freePages() {\n+\t// Free all pending pages prior to earliest open transaction.\n+\tsort.Sort(txsById(db.txs))\n+\tminid := txid(0xFFFFFFFFFFFFFFFF)\n+\tif len(db.txs) > 0 {\n+\t\tminid = db.txs[0].meta.txid\n \t}\n \tif minid > 0 {\n \t\tdb.freelist.release(minid - 1)\n \t}\n-\n-\treturn t, nil\n+\t// Release unused txid extents.\n+\tfor _, t := range db.txs {\n+\t\tdb.freelist.releaseRange(minid, t.meta.txid-1)\n+\t\tminid = t.meta.txid + 1\n+\t}\n+\tdb.freelist.releaseRange(minid, txid(0xFFFFFFFFFFFFFFFF))\n+\t// Any page both allocated and freed in an extent is safe to release.\n }\n \n+type txsById []*Tx\n+\n+func (t txsById) Len() int           { return len(t) }\n+func (t txsById) Swap(i, j int)      { t[i], t[j] = t[j], t[i] }\n+func (t txsById) Less(i, j int) bool { return t[i].meta.txid < t[j].meta.txid }\n+\n // removeTx removes a transaction from the database.\n func (db *DB) removeTx(tx *Tx) {\n \t// Release the read lock on the mmap.\n@@ -552,7 +642,10 @@ func (db *DB) removeTx(tx *Tx) {\n \t// Remove the transaction.\n \tfor i, t := range db.txs {\n \t\tif t == tx {\n-\t\t\tdb.txs = append(db.txs[:i], db.txs[i+1:]...)\n+\t\t\tlast := len(db.txs) - 1\n+\t\t\tdb.txs[i] = db.txs[last]\n+\t\t\tdb.txs[last] = nil\n+\t\t\tdb.txs = db.txs[:last]\n \t\t\tbreak\n \t\t}\n \t}\n@@ -630,11 +723,7 @@ func (db *DB) View(fn func(*Tx) error) error {\n \t\treturn err\n \t}\n \n-\tif err := t.Rollback(); err != nil {\n-\t\treturn err\n-\t}\n-\n-\treturn nil\n+\treturn t.Rollback()\n }\n \n // Batch calls fn as part of a batch. It behaves similar to Update,\n@@ -734,9 +823,7 @@ retry:\n \n \t\t// pass success, or bolt internal errors, to all callers\n \t\tfor _, c := range b.calls {\n-\t\t\tif c.err != nil {\n-\t\t\t\tc.err <- err\n-\t\t\t}\n+\t\t\tc.err <- err\n \t\t}\n \t\tbreak retry\n \t}\n@@ -823,7 +910,7 @@ func (db *DB) meta() *meta {\n }\n \n // allocate returns a contiguous block of memory starting at a given page.\n-func (db *DB) allocate(count int) (*page, error) {\n+func (db *DB) allocate(txid txid, count int) (*page, error) {\n \t// Allocate a temporary buffer for the page.\n \tvar buf []byte\n \tif count == 1 {\n@@ -835,7 +922,7 @@ func (db *DB) allocate(count int) (*page, error) {\n \tp.overflow = uint32(count - 1)\n \n \t// Use pages from the freelist if they are available.\n-\tif p.id = db.freelist.allocate(count); p.id != 0 {\n+\tif p.id = db.freelist.allocate(txid, count); p.id != 0 {\n \t\treturn p, nil\n \t}\n \n@@ -890,6 +977,38 @@ func (db *DB) IsReadOnly() bool {\n \treturn db.readOnly\n }\n \n+func (db *DB) freepages() []pgid {\n+\ttx, err := db.beginTx()\n+\tdefer func() {\n+\t\terr = tx.Rollback()\n+\t\tif err != nil {\n+\t\t\tpanic(\"freepages: failed to rollback tx\")\n+\t\t}\n+\t}()\n+\tif err != nil {\n+\t\tpanic(\"freepages: failed to open read only tx\")\n+\t}\n+\n+\treachable := make(map[pgid]*page)\n+\tnofreed := make(map[pgid]bool)\n+\tech := make(chan error)\n+\tgo func() {\n+\t\tfor e := range ech {\n+\t\t\tpanic(fmt.Sprintf(\"freepages: failed to get all reachable pages (%v)\", e))\n+\t\t}\n+\t}()\n+\ttx.checkBucket(&tx.root, reachable, nofreed, ech)\n+\tclose(ech)\n+\n+\tvar fids []pgid\n+\tfor i := pgid(2); i < db.meta().pgid; i++ {\n+\t\tif _, ok := reachable[i]; !ok {\n+\t\t\tfids = append(fids, i)\n+\t\t}\n+\t}\n+\treturn fids\n+}\n+\n // Options represents the options that can be set when opening a database.\n type Options struct {\n \t// Timeout is the amount of time to wait to obtain a file lock.\n@@ -900,6 +1019,17 @@ type Options struct {\n \t// Sets the DB.NoGrowSync flag before memory mapping the file.\n \tNoGrowSync bool\n \n+\t// Do not sync freelist to disk. This improves the database write performance\n+\t// under normal operation, but requires a full database re-sync during recovery.\n+\tNoFreelistSync bool\n+\n+\t// FreelistType sets the backend freelist type. There are two options. Array which is simple but endures\n+\t// dramatic performance degradation if database is large and framentation in freelist is common.\n+\t// The alternative one is using hashmap, it is faster in almost all circumstances\n+\t// but it doesn't guarantee that it offers the smallest page id available. In normal case it is safe.\n+\t// The default type is array\n+\tFreelistType FreelistType\n+\n \t// Open database in read-only mode. Uses flock(..., LOCK_SH |LOCK_NB) to\n \t// grab a shared lock (UNIX).\n \tReadOnly bool\n@@ -916,13 +1046,22 @@ type Options struct {\n \t// If initialMmapSize is smaller than the previous database size,\n \t// it takes no effect.\n \tInitialMmapSize int\n+\n+\t// PageSize overrides the default OS page size.\n+\tPageSize int\n+\n+\t// NoSync sets the initial value of DB.NoSync. Normally this can just be\n+\t// set directly on the DB itself when returned from Open(), but this option\n+\t// is useful in APIs which expose Options but not the underlying DB.\n+\tNoSync bool\n }\n \n // DefaultOptions represent the options used if nil options are passed into Open().\n // No timeout is used which will cause Bolt to wait indefinitely for a lock.\n var DefaultOptions = &Options{\n-\tTimeout:    0,\n-\tNoGrowSync: false,\n+\tTimeout:      0,\n+\tNoGrowSync:   false,\n+\tFreelistType: FreelistArrayType,\n }\n \n // Stats represents statistics about the database.\n@@ -952,15 +1091,11 @@ func (s *Stats) Sub(other *Stats) Stats {\n \tdiff.PendingPageN = s.PendingPageN\n \tdiff.FreeAlloc = s.FreeAlloc\n \tdiff.FreelistInuse = s.FreelistInuse\n-\tdiff.TxN = other.TxN - s.TxN\n+\tdiff.TxN = s.TxN - other.TxN\n \tdiff.TxStats = s.TxStats.Sub(&other.TxStats)\n \treturn diff\n }\n \n-func (s *Stats) add(other *Stats) {\n-\ts.TxStats.add(&other.TxStats)\n-}\n-\n type Info struct {\n \tData     uintptr\n \tPageSize int\n@@ -999,7 +1134,8 @@ func (m *meta) copy(dest *meta) {\n func (m *meta) write(p *page) {\n \tif m.root.root >= m.pgid {\n \t\tpanic(fmt.Sprintf(\"root bucket pgid (%d) above high water mark (%d)\", m.root.root, m.pgid))\n-\t} else if m.freelist >= m.pgid {\n+\t} else if m.freelist >= m.pgid && m.freelist != pgidNoFreelist {\n+\t\t// TODO: reject pgidNoFreeList if !NoFreelistSync\n \t\tpanic(fmt.Sprintf(\"freelist pgid (%d) above high water mark (%d)\", m.freelist, m.pgid))\n \t}\n \n@@ -1026,11 +1162,3 @@ func _assert(condition bool, msg string, v ...interface{}) {\n \t\tpanic(fmt.Sprintf(\"assertion failed: \"+msg, v...))\n \t}\n }\n-\n-func warn(v ...interface{})              { fmt.Fprintln(os.Stderr, v...) }\n-func warnf(msg string, v ...interface{}) { fmt.Fprintf(os.Stderr, msg+\"\\n\", v...) }\n-\n-func printstack() {\n-\tstack := strings.Join(strings.Split(string(debug.Stack()), \"\\n\")[2:], \"\\n\")\n-\tfmt.Fprintln(os.Stderr, stack)\n-}"
    },
    {
      "sha": "95f25f01c6a48f0a0ee87fba989c828442b8e590",
      "filename": "backend/vendor/github.com/coreos/bbolt/doc.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/doc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/doc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/doc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,5 +1,5 @@\n /*\n-Package bolt implements a low-level key/value store in pure Go. It supports\n+package bbolt implements a low-level key/value store in pure Go. It supports\n fully serializable transactions, ACID semantics, and lock-free MVCC with\n multiple readers and a single writer. Bolt can be used for projects that\n want a simple data store without the need to add large dependencies such as\n@@ -41,4 +41,4 @@ point to different data or can point to invalid memory which will cause a panic.\n \n \n */\n-package bolt\n+package bbolt"
    },
    {
      "sha": "48758ca5770b7801b1f2009b4b20177829670f1f",
      "filename": "backend/vendor/github.com/coreos/bbolt/errors.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/errors.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/errors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/errors.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import \"errors\"\n "
    },
    {
      "sha": "93fd85d50420eef8d0b026fd237748ca6f27ecca",
      "filename": "backend/vendor/github.com/coreos/bbolt/freelist.go",
      "status": "modified",
      "additions": 182,
      "deletions": 60,
      "changes": 242,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/freelist.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/freelist.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/freelist.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,66 +1,112 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n \t\"sort\"\n \t\"unsafe\"\n )\n \n+// txPending holds a list of pgids and corresponding allocation txns\n+// that are pending to be freed.\n+type txPending struct {\n+\tids              []pgid\n+\talloctx          []txid // txids allocating the ids\n+\tlastReleaseBegin txid   // beginning txid of last matching releaseRange\n+}\n+\n+// pidSet holds the set of starting pgids which have the same span size\n+type pidSet map[pgid]struct{}\n+\n // freelist represents a list of all pages that are available for allocation.\n // It also tracks pages that have been freed but are still in use by open transactions.\n type freelist struct {\n-\tids     []pgid          // all free and available free page ids.\n-\tpending map[txid][]pgid // mapping of soon-to-be free page ids by tx.\n-\tcache   map[pgid]bool   // fast lookup of all free and pending page ids.\n+\tfreelistType   FreelistType                // freelist type\n+\tids            []pgid                      // all free and available free page ids.\n+\tallocs         map[pgid]txid               // mapping of txid that allocated a pgid.\n+\tpending        map[txid]*txPending         // mapping of soon-to-be free page ids by tx.\n+\tcache          map[pgid]bool               // fast lookup of all free and pending page ids.\n+\tfreemaps       map[uint64]pidSet           // key is the size of continuous pages(span), value is a set which contains the starting pgids of same size\n+\tforwardMap     map[pgid]uint64             // key is start pgid, value is its span size\n+\tbackwardMap    map[pgid]uint64             // key is end pgid, value is its span size\n+\tallocate       func(txid txid, n int) pgid // the freelist allocate func\n+\tfree_count     func() int                  // the function which gives you free page number\n+\tmergeSpans     func(ids pgids)             // the mergeSpan func\n+\tgetFreePageIDs func() []pgid               // get free pgids func\n+\treadIDs        func(pgids []pgid)          // readIDs func reads list of pages and init the freelist\n }\n \n // newFreelist returns an empty, initialized freelist.\n-func newFreelist() *freelist {\n-\treturn &freelist{\n-\t\tpending: make(map[txid][]pgid),\n-\t\tcache:   make(map[pgid]bool),\n+func newFreelist(freelistType FreelistType) *freelist {\n+\tf := &freelist{\n+\t\tfreelistType: freelistType,\n+\t\tallocs:       make(map[pgid]txid),\n+\t\tpending:      make(map[txid]*txPending),\n+\t\tcache:        make(map[pgid]bool),\n+\t\tfreemaps:     make(map[uint64]pidSet),\n+\t\tforwardMap:   make(map[pgid]uint64),\n+\t\tbackwardMap:  make(map[pgid]uint64),\n+\t}\n+\n+\tif freelistType == FreelistMapType {\n+\t\tf.allocate = f.hashmapAllocate\n+\t\tf.free_count = f.hashmapFreeCount\n+\t\tf.mergeSpans = f.hashmapMergeSpans\n+\t\tf.getFreePageIDs = f.hashmapGetFreePageIDs\n+\t\tf.readIDs = f.hashmapReadIDs\n+\t} else {\n+\t\tf.allocate = f.arrayAllocate\n+\t\tf.free_count = f.arrayFreeCount\n+\t\tf.mergeSpans = f.arrayMergeSpans\n+\t\tf.getFreePageIDs = f.arrayGetFreePageIDs\n+\t\tf.readIDs = f.arrayReadIDs\n \t}\n+\n+\treturn f\n }\n \n // size returns the size of the page after serialization.\n func (f *freelist) size() int {\n-\treturn pageHeaderSize + (int(unsafe.Sizeof(pgid(0))) * f.count())\n+\tn := f.count()\n+\tif n >= 0xFFFF {\n+\t\t// The first element will be used to store the count. See freelist.write.\n+\t\tn++\n+\t}\n+\treturn pageHeaderSize + (int(unsafe.Sizeof(pgid(0))) * n)\n }\n \n // count returns count of pages on the freelist\n func (f *freelist) count() int {\n \treturn f.free_count() + f.pending_count()\n }\n \n-// free_count returns count of free pages\n-func (f *freelist) free_count() int {\n+// arrayFreeCount returns count of free pages(array version)\n+func (f *freelist) arrayFreeCount() int {\n \treturn len(f.ids)\n }\n \n // pending_count returns count of pending pages\n func (f *freelist) pending_count() int {\n \tvar count int\n-\tfor _, list := range f.pending {\n-\t\tcount += len(list)\n+\tfor _, txp := range f.pending {\n+\t\tcount += len(txp.ids)\n \t}\n \treturn count\n }\n \n-// all returns a list of all free ids and all pending ids in one sorted list.\n-func (f *freelist) all() []pgid {\n-\tm := make(pgids, 0)\n-\n-\tfor _, list := range f.pending {\n-\t\tm = append(m, list...)\n+// copyall copies into dst a list of all free ids and all pending ids in one sorted list.\n+// f.count returns the minimum length required for dst.\n+func (f *freelist) copyall(dst []pgid) {\n+\tm := make(pgids, 0, f.pending_count())\n+\tfor _, txp := range f.pending {\n+\t\tm = append(m, txp.ids...)\n \t}\n-\n \tsort.Sort(m)\n-\treturn pgids(f.ids).merge(m)\n+\tmergepgids(dst, f.getFreePageIDs(), m)\n }\n \n-// allocate returns the starting page id of a contiguous list of pages of a given size.\n+// arrayAllocate returns the starting page id of a contiguous list of pages of a given size.\n // If a contiguous block cannot be found then 0 is returned.\n-func (f *freelist) allocate(n int) pgid {\n+func (f *freelist) arrayAllocate(txid txid, n int) pgid {\n \tif len(f.ids) == 0 {\n \t\treturn 0\n \t}\n@@ -93,7 +139,7 @@ func (f *freelist) allocate(n int) pgid {\n \t\t\tfor i := pgid(0); i < pgid(n); i++ {\n \t\t\t\tdelete(f.cache, initial+i)\n \t\t\t}\n-\n+\t\t\tf.allocs[initial] = txid\n \t\t\treturn initial\n \t\t}\n \n@@ -110,44 +156,103 @@ func (f *freelist) free(txid txid, p *page) {\n \t}\n \n \t// Free page and all its overflow pages.\n-\tvar ids = f.pending[txid]\n+\ttxp := f.pending[txid]\n+\tif txp == nil {\n+\t\ttxp = &txPending{}\n+\t\tf.pending[txid] = txp\n+\t}\n+\tallocTxid, ok := f.allocs[p.id]\n+\tif ok {\n+\t\tdelete(f.allocs, p.id)\n+\t} else if (p.flags & freelistPageFlag) != 0 {\n+\t\t// Freelist is always allocated by prior tx.\n+\t\tallocTxid = txid - 1\n+\t}\n+\n \tfor id := p.id; id <= p.id+pgid(p.overflow); id++ {\n \t\t// Verify that page is not already free.\n \t\tif f.cache[id] {\n \t\t\tpanic(fmt.Sprintf(\"page %d already freed\", id))\n \t\t}\n-\n \t\t// Add to the freelist and cache.\n-\t\tids = append(ids, id)\n+\t\ttxp.ids = append(txp.ids, id)\n+\t\ttxp.alloctx = append(txp.alloctx, allocTxid)\n \t\tf.cache[id] = true\n \t}\n-\tf.pending[txid] = ids\n }\n \n // release moves all page ids for a transaction id (or older) to the freelist.\n func (f *freelist) release(txid txid) {\n \tm := make(pgids, 0)\n-\tfor tid, ids := range f.pending {\n+\tfor tid, txp := range f.pending {\n \t\tif tid <= txid {\n \t\t\t// Move transaction's pending pages to the available freelist.\n \t\t\t// Don't remove from the cache since the page is still free.\n-\t\t\tm = append(m, ids...)\n+\t\t\tm = append(m, txp.ids...)\n \t\t\tdelete(f.pending, tid)\n \t\t}\n \t}\n-\tsort.Sort(m)\n-\tf.ids = pgids(f.ids).merge(m)\n+\tf.mergeSpans(m)\n+}\n+\n+// releaseRange moves pending pages allocated within an extent [begin,end] to the free list.\n+func (f *freelist) releaseRange(begin, end txid) {\n+\tif begin > end {\n+\t\treturn\n+\t}\n+\tvar m pgids\n+\tfor tid, txp := range f.pending {\n+\t\tif tid < begin || tid > end {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Don't recompute freed pages if ranges haven't updated.\n+\t\tif txp.lastReleaseBegin == begin {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfor i := 0; i < len(txp.ids); i++ {\n+\t\t\tif atx := txp.alloctx[i]; atx < begin || atx > end {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tm = append(m, txp.ids[i])\n+\t\t\ttxp.ids[i] = txp.ids[len(txp.ids)-1]\n+\t\t\ttxp.ids = txp.ids[:len(txp.ids)-1]\n+\t\t\ttxp.alloctx[i] = txp.alloctx[len(txp.alloctx)-1]\n+\t\t\ttxp.alloctx = txp.alloctx[:len(txp.alloctx)-1]\n+\t\t\ti--\n+\t\t}\n+\t\ttxp.lastReleaseBegin = begin\n+\t\tif len(txp.ids) == 0 {\n+\t\t\tdelete(f.pending, tid)\n+\t\t}\n+\t}\n+\tf.mergeSpans(m)\n }\n \n // rollback removes the pages from a given pending tx.\n func (f *freelist) rollback(txid txid) {\n \t// Remove page ids from cache.\n-\tfor _, id := range f.pending[txid] {\n-\t\tdelete(f.cache, id)\n+\ttxp := f.pending[txid]\n+\tif txp == nil {\n+\t\treturn\n \t}\n-\n-\t// Remove pages from pending list.\n+\tvar m pgids\n+\tfor i, pgid := range txp.ids {\n+\t\tdelete(f.cache, pgid)\n+\t\ttx := txp.alloctx[i]\n+\t\tif tx == 0 {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif tx != txid {\n+\t\t\t// Pending free aborted; restore page back to alloc list.\n+\t\t\tf.allocs[pgid] = tx\n+\t\t} else {\n+\t\t\t// Freed page was allocated by this txn; OK to throw away.\n+\t\t\tm = append(m, pgid)\n+\t\t}\n+\t}\n+\t// Remove pages from pending list and mark as free if allocated by txid.\n \tdelete(f.pending, txid)\n+\tf.mergeSpans(m)\n }\n \n // freed returns whether a given page is in the free list.\n@@ -157,6 +262,9 @@ func (f *freelist) freed(pgid pgid) bool {\n \n // read initializes the freelist from a freelist page.\n func (f *freelist) read(p *page) {\n+\tif (p.flags & freelistPageFlag) == 0 {\n+\t\tpanic(fmt.Sprintf(\"invalid freelist page: %d, page type is %s\", p.id, p.typ()))\n+\t}\n \t// If the page.count is at the max uint16 value (64k) then it's considered\n \t// an overflow and the size of the freelist is stored as the first element.\n \tidx, count := 0, int(p.count)\n@@ -169,39 +277,49 @@ func (f *freelist) read(p *page) {\n \tif count == 0 {\n \t\tf.ids = nil\n \t} else {\n-\t\tids := ((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[idx:count]\n-\t\tf.ids = make([]pgid, len(ids))\n-\t\tcopy(f.ids, ids)\n+\t\tids := ((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[idx : idx+count]\n \n+\t\t// copy the ids, so we don't modify on the freelist page directly\n+\t\tidsCopy := make([]pgid, count)\n+\t\tcopy(idsCopy, ids)\n \t\t// Make sure they're sorted.\n-\t\tsort.Sort(pgids(f.ids))\n+\t\tsort.Sort(pgids(idsCopy))\n+\n+\t\tf.readIDs(idsCopy)\n \t}\n+}\n \n-\t// Rebuild the page cache.\n+// arrayReadIDs initializes the freelist from a given list of ids.\n+func (f *freelist) arrayReadIDs(ids []pgid) {\n+\tf.ids = ids\n \tf.reindex()\n }\n \n+func (f *freelist) arrayGetFreePageIDs() []pgid {\n+\treturn f.ids\n+}\n+\n // write writes the page ids onto a freelist page. All free and pending ids are\n // saved to disk since in the event of a program crash, all pending ids will\n // become free.\n func (f *freelist) write(p *page) error {\n \t// Combine the old free pgids and pgids waiting on an open transaction.\n-\tids := f.all()\n \n \t// Update the header flag.\n \tp.flags |= freelistPageFlag\n \n \t// The page.count can only hold up to 64k elements so if we overflow that\n \t// number then we handle it by putting the size in the first element.\n-\tif len(ids) == 0 {\n-\t\tp.count = uint16(len(ids))\n-\t} else if len(ids) < 0xFFFF {\n-\t\tp.count = uint16(len(ids))\n-\t\tcopy(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:], ids)\n+\tlenids := f.count()\n+\tif lenids == 0 {\n+\t\tp.count = uint16(lenids)\n+\t} else if lenids < 0xFFFF {\n+\t\tp.count = uint16(lenids)\n+\t\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[:])\n \t} else {\n \t\tp.count = 0xFFFF\n-\t\t((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(len(ids))\n-\t\tcopy(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:], ids)\n+\t\t((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[0] = pgid(lenids)\n+\t\tf.copyall(((*[maxAllocSize]pgid)(unsafe.Pointer(&p.ptr)))[1:])\n \t}\n \n \treturn nil\n@@ -213,36 +331,40 @@ func (f *freelist) reload(p *page) {\n \n \t// Build a cache of only pending pages.\n \tpcache := make(map[pgid]bool)\n-\tfor _, pendingIDs := range f.pending {\n-\t\tfor _, pendingID := range pendingIDs {\n+\tfor _, txp := range f.pending {\n+\t\tfor _, pendingID := range txp.ids {\n \t\t\tpcache[pendingID] = true\n \t\t}\n \t}\n \n \t// Check each page in the freelist and build a new available freelist\n \t// with any pages not in the pending lists.\n \tvar a []pgid\n-\tfor _, id := range f.ids {\n+\tfor _, id := range f.getFreePageIDs() {\n \t\tif !pcache[id] {\n \t\t\ta = append(a, id)\n \t\t}\n \t}\n-\tf.ids = a\n \n-\t// Once the available list is rebuilt then rebuild the free cache so that\n-\t// it includes the available and pending free pages.\n-\tf.reindex()\n+\tf.readIDs(a)\n }\n \n // reindex rebuilds the free cache based on available and pending free lists.\n func (f *freelist) reindex() {\n-\tf.cache = make(map[pgid]bool)\n-\tfor _, id := range f.ids {\n+\tids := f.getFreePageIDs()\n+\tf.cache = make(map[pgid]bool, len(ids))\n+\tfor _, id := range ids {\n \t\tf.cache[id] = true\n \t}\n-\tfor _, pendingIDs := range f.pending {\n-\t\tfor _, pendingID := range pendingIDs {\n+\tfor _, txp := range f.pending {\n+\t\tfor _, pendingID := range txp.ids {\n \t\t\tf.cache[pendingID] = true\n \t\t}\n \t}\n }\n+\n+// arrayMergeSpans try to merge list of pages(represented by pgids) with existing spans but using array\n+func (f *freelist) arrayMergeSpans(ids pgids) {\n+\tsort.Sort(ids)\n+\tf.ids = pgids(f.ids).merge(ids)\n+}"
    },
    {
      "sha": "6a03a6c3c8558f99db562d1e0b62968ee73562ac",
      "filename": "backend/vendor/github.com/coreos/bbolt/freelist_hmap.go",
      "status": "added",
      "additions": 178,
      "deletions": 0,
      "changes": 178,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/freelist_hmap.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/freelist_hmap.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/freelist_hmap.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,178 @@\n+package bbolt\n+\n+import \"sort\"\n+\n+// hashmapFreeCount returns count of free pages(hashmap version)\n+func (f *freelist) hashmapFreeCount() int {\n+\t// use the forwardmap to get the total count\n+\tcount := 0\n+\tfor _, size := range f.forwardMap {\n+\t\tcount += int(size)\n+\t}\n+\treturn count\n+}\n+\n+// hashmapAllocate serves the same purpose as arrayAllocate, but use hashmap as backend\n+func (f *freelist) hashmapAllocate(txid txid, n int) pgid {\n+\tif n == 0 {\n+\t\treturn 0\n+\t}\n+\n+\t// if we have a exact size match just return short path\n+\tif bm, ok := f.freemaps[uint64(n)]; ok {\n+\t\tfor pid := range bm {\n+\t\t\t// remove the span\n+\t\t\tf.delSpan(pid, uint64(n))\n+\n+\t\t\tf.allocs[pid] = txid\n+\n+\t\t\tfor i := pgid(0); i < pgid(n); i++ {\n+\t\t\t\tdelete(f.cache, pid+pgid(i))\n+\t\t\t}\n+\t\t\treturn pid\n+\t\t}\n+\t}\n+\n+\t// lookup the map to find larger span\n+\tfor size, bm := range f.freemaps {\n+\t\tif size < uint64(n) {\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tfor pid := range bm {\n+\t\t\t// remove the initial\n+\t\t\tf.delSpan(pid, uint64(size))\n+\n+\t\t\tf.allocs[pid] = txid\n+\n+\t\t\tremain := size - uint64(n)\n+\n+\t\t\t// add remain span\n+\t\t\tf.addSpan(pid+pgid(n), remain)\n+\n+\t\t\tfor i := pgid(0); i < pgid(n); i++ {\n+\t\t\t\tdelete(f.cache, pid+pgid(i))\n+\t\t\t}\n+\t\t\treturn pid\n+\t\t}\n+\t}\n+\n+\treturn 0\n+}\n+\n+// hashmapReadIDs reads pgids as input an initial the freelist(hashmap version)\n+func (f *freelist) hashmapReadIDs(pgids []pgid) {\n+\tf.init(pgids)\n+\n+\t// Rebuild the page cache.\n+\tf.reindex()\n+}\n+\n+// hashmapGetFreePageIDs returns the sorted free page ids\n+func (f *freelist) hashmapGetFreePageIDs() []pgid {\n+\tcount := f.free_count()\n+\tif count == 0 {\n+\t\treturn nil\n+\t}\n+\n+\tm := make([]pgid, 0, count)\n+\tfor start, size := range f.forwardMap {\n+\t\tfor i := 0; i < int(size); i++ {\n+\t\t\tm = append(m, start+pgid(i))\n+\t\t}\n+\t}\n+\tsort.Sort(pgids(m))\n+\n+\treturn m\n+}\n+\n+// hashmapMergeSpans try to merge list of pages(represented by pgids) with existing spans\n+func (f *freelist) hashmapMergeSpans(ids pgids) {\n+\tfor _, id := range ids {\n+\t\t// try to see if we can merge and update\n+\t\tf.mergeWithExistingSpan(id)\n+\t}\n+}\n+\n+// mergeWithExistingSpan merges pid to the existing free spans, try to merge it backward and forward\n+func (f *freelist) mergeWithExistingSpan(pid pgid) {\n+\tprev := pid - 1\n+\tnext := pid + 1\n+\n+\tpreSize, mergeWithPrev := f.backwardMap[prev]\n+\tnextSize, mergeWithNext := f.forwardMap[next]\n+\tnewStart := pid\n+\tnewSize := uint64(1)\n+\n+\tif mergeWithPrev {\n+\t\t//merge with previous span\n+\t\tstart := prev + 1 - pgid(preSize)\n+\t\tf.delSpan(start, preSize)\n+\n+\t\tnewStart -= pgid(preSize)\n+\t\tnewSize += preSize\n+\t}\n+\n+\tif mergeWithNext {\n+\t\t// merge with next span\n+\t\tf.delSpan(next, nextSize)\n+\t\tnewSize += nextSize\n+\t}\n+\n+\tf.addSpan(newStart, newSize)\n+}\n+\n+func (f *freelist) addSpan(start pgid, size uint64) {\n+\tf.backwardMap[start-1+pgid(size)] = size\n+\tf.forwardMap[start] = size\n+\tif _, ok := f.freemaps[size]; !ok {\n+\t\tf.freemaps[size] = make(map[pgid]struct{})\n+\t}\n+\n+\tf.freemaps[size][start] = struct{}{}\n+}\n+\n+func (f *freelist) delSpan(start pgid, size uint64) {\n+\tdelete(f.forwardMap, start)\n+\tdelete(f.backwardMap, start+pgid(size-1))\n+\tdelete(f.freemaps[size], start)\n+\tif len(f.freemaps[size]) == 0 {\n+\t\tdelete(f.freemaps, size)\n+\t}\n+}\n+\n+// initial from pgids using when use hashmap version\n+// pgids must be sorted\n+func (f *freelist) init(pgids []pgid) {\n+\tif len(pgids) == 0 {\n+\t\treturn\n+\t}\n+\n+\tsize := uint64(1)\n+\tstart := pgids[0]\n+\n+\tif !sort.SliceIsSorted([]pgid(pgids), func(i, j int) bool { return pgids[i] < pgids[j] }) {\n+\t\tpanic(\"pgids not sorted\")\n+\t}\n+\n+\tf.freemaps = make(map[uint64]pidSet)\n+\tf.forwardMap = make(map[pgid]uint64)\n+\tf.backwardMap = make(map[pgid]uint64)\n+\n+\tfor i := 1; i < len(pgids); i++ {\n+\t\t// continuous page\n+\t\tif pgids[i] == pgids[i-1]+1 {\n+\t\t\tsize++\n+\t\t} else {\n+\t\t\tf.addSpan(start, size)\n+\n+\t\t\tsize = 1\n+\t\t\tstart = pgids[i]\n+\t\t}\n+\t}\n+\n+\t// init the tail\n+\tif size != 0 && start != 0 {\n+\t\tf.addSpan(start, size)\n+\t}\n+}"
    },
    {
      "sha": "6c3fa553ea68d762f9392c825775856168c28429",
      "filename": "backend/vendor/github.com/coreos/bbolt/node.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/node.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/node.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/node.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"bytes\"\n@@ -365,7 +365,7 @@ func (n *node) spill() error {\n \t\t}\n \n \t\t// Allocate contiguous space for the node.\n-\t\tp, err := tx.allocate((node.size() / tx.db.pageSize) + 1)\n+\t\tp, err := tx.allocate((node.size() + tx.db.pageSize - 1) / tx.db.pageSize)\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}"
    },
    {
      "sha": "bca9615f0fd649b4badac333ef07b47895f302f9",
      "filename": "backend/vendor/github.com/coreos/bbolt/page.go",
      "status": "modified",
      "additions": 26,
      "deletions": 7,
      "changes": 33,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/page.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/page.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/page.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n@@ -145,12 +145,33 @@ func (a pgids) merge(b pgids) pgids {\n \t// Return the opposite slice if one is nil.\n \tif len(a) == 0 {\n \t\treturn b\n-\t} else if len(b) == 0 {\n+\t}\n+\tif len(b) == 0 {\n \t\treturn a\n \t}\n+\tmerged := make(pgids, len(a)+len(b))\n+\tmergepgids(merged, a, b)\n+\treturn merged\n+}\n+\n+// mergepgids copies the sorted union of a and b into dst.\n+// If dst is too small, it panics.\n+func mergepgids(dst, a, b pgids) {\n+\tif len(dst) < len(a)+len(b) {\n+\t\tpanic(fmt.Errorf(\"mergepgids bad len %d < %d + %d\", len(dst), len(a), len(b)))\n+\t}\n+\t// Copy in the opposite slice if one is nil.\n+\tif len(a) == 0 {\n+\t\tcopy(dst, b)\n+\t\treturn\n+\t}\n+\tif len(b) == 0 {\n+\t\tcopy(dst, a)\n+\t\treturn\n+\t}\n \n-\t// Create a list to hold all elements from both lists.\n-\tmerged := make(pgids, 0, len(a)+len(b))\n+\t// Merged will hold all elements from both lists.\n+\tmerged := dst[:0]\n \n \t// Assign lead to the slice with a lower starting value, follow to the higher value.\n \tlead, follow := a, b\n@@ -172,7 +193,5 @@ func (a pgids) merge(b pgids) pgids {\n \t}\n \n \t// Append what's left in follow.\n-\tmerged = append(merged, follow...)\n-\n-\treturn merged\n+\t_ = append(merged, follow...)\n }"
    },
    {
      "sha": "f50864142762cadcd3a323d95177156c332a3f61",
      "filename": "backend/vendor/github.com/coreos/bbolt/tx.go",
      "status": "modified",
      "additions": 57,
      "deletions": 32,
      "changes": 89,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/tx.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/coreos/bbolt/tx.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/coreos/bbolt/tx.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-package bolt\n+package bbolt\n \n import (\n \t\"fmt\"\n@@ -126,10 +126,7 @@ func (tx *Tx) DeleteBucket(name []byte) error {\n // the error is returned to the caller.\n func (tx *Tx) ForEach(fn func(name []byte, b *Bucket) error) error {\n \treturn tx.root.ForEach(func(k, v []byte) error {\n-\t\tif err := fn(k, tx.root.Bucket(k)); err != nil {\n-\t\t\treturn err\n-\t\t}\n-\t\treturn nil\n+\t\treturn fn(k, tx.root.Bucket(k))\n \t})\n }\n \n@@ -169,28 +166,18 @@ func (tx *Tx) Commit() error {\n \t// Free the old root bucket.\n \ttx.meta.root.root = tx.root.root\n \n-\topgid := tx.meta.pgid\n-\n-\t// Free the freelist and allocate new pages for it. This will overestimate\n-\t// the size of the freelist but not underestimate the size (which would be bad).\n-\ttx.db.freelist.free(tx.meta.txid, tx.db.page(tx.meta.freelist))\n-\tp, err := tx.allocate((tx.db.freelist.size() / tx.db.pageSize) + 1)\n-\tif err != nil {\n-\t\ttx.rollback()\n-\t\treturn err\n-\t}\n-\tif err := tx.db.freelist.write(p); err != nil {\n-\t\ttx.rollback()\n-\t\treturn err\n+\t// Free the old freelist because commit writes out a fresh freelist.\n+\tif tx.meta.freelist != pgidNoFreelist {\n+\t\ttx.db.freelist.free(tx.meta.txid, tx.db.page(tx.meta.freelist))\n \t}\n-\ttx.meta.freelist = p.id\n \n-\t// If the high water mark has moved up then attempt to grow the database.\n-\tif tx.meta.pgid > opgid {\n-\t\tif err := tx.db.grow(int(tx.meta.pgid+1) * tx.db.pageSize); err != nil {\n-\t\t\ttx.rollback()\n+\tif !tx.db.NoFreelistSync {\n+\t\terr := tx.commitFreelist()\n+\t\tif err != nil {\n \t\t\treturn err\n \t\t}\n+\t} else {\n+\t\ttx.meta.freelist = pgidNoFreelist\n \t}\n \n \t// Write dirty pages to disk.\n@@ -235,6 +222,31 @@ func (tx *Tx) Commit() error {\n \treturn nil\n }\n \n+func (tx *Tx) commitFreelist() error {\n+\t// Allocate new pages for the new free list. This will overestimate\n+\t// the size of the freelist but not underestimate the size (which would be bad).\n+\topgid := tx.meta.pgid\n+\tp, err := tx.allocate((tx.db.freelist.size() / tx.db.pageSize) + 1)\n+\tif err != nil {\n+\t\ttx.rollback()\n+\t\treturn err\n+\t}\n+\tif err := tx.db.freelist.write(p); err != nil {\n+\t\ttx.rollback()\n+\t\treturn err\n+\t}\n+\ttx.meta.freelist = p.id\n+\t// If the high water mark has moved up then attempt to grow the database.\n+\tif tx.meta.pgid > opgid {\n+\t\tif err := tx.db.grow(int(tx.meta.pgid+1) * tx.db.pageSize); err != nil {\n+\t\t\ttx.rollback()\n+\t\t\treturn err\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n // Rollback closes the transaction and ignores all previous updates. Read-only\n // transactions must be rolled back and not committed.\n func (tx *Tx) Rollback() error {\n@@ -291,7 +303,9 @@ func (tx *Tx) close() {\n }\n \n // Copy writes the entire database to a writer.\n-// This function exists for backwards compatibility. Use WriteTo() instead.\n+// This function exists for backwards compatibility.\n+//\n+// Deprecated; Use WriteTo() instead.\n func (tx *Tx) Copy(w io.Writer) error {\n \t_, err := tx.WriteTo(w)\n \treturn err\n@@ -305,7 +319,11 @@ func (tx *Tx) WriteTo(w io.Writer) (n int64, err error) {\n \tif err != nil {\n \t\treturn 0, err\n \t}\n-\tdefer func() { _ = f.Close() }()\n+\tdefer func() {\n+\t\tif cerr := f.Close(); err == nil {\n+\t\t\terr = cerr\n+\t\t}\n+\t}()\n \n \t// Generate a meta page. We use the same page data for both meta pages.\n \tbuf := make([]byte, tx.db.pageSize)\n@@ -333,7 +351,7 @@ func (tx *Tx) WriteTo(w io.Writer) (n int64, err error) {\n \t}\n \n \t// Move past the meta pages in the file.\n-\tif _, err := f.Seek(int64(tx.db.pageSize*2), os.SEEK_SET); err != nil {\n+\tif _, err := f.Seek(int64(tx.db.pageSize*2), io.SeekStart); err != nil {\n \t\treturn n, fmt.Errorf(\"seek: %s\", err)\n \t}\n \n@@ -344,7 +362,7 @@ func (tx *Tx) WriteTo(w io.Writer) (n int64, err error) {\n \t\treturn n, err\n \t}\n \n-\treturn n, f.Close()\n+\treturn n, nil\n }\n \n // CopyFile copies the entire database to file at the given path.\n@@ -379,9 +397,14 @@ func (tx *Tx) Check() <-chan error {\n }\n \n func (tx *Tx) check(ch chan error) {\n+\t// Force loading free list if opened in ReadOnly mode.\n+\ttx.db.loadFreelist()\n+\n \t// Check if any pages are double freed.\n \tfreed := make(map[pgid]bool)\n-\tfor _, id := range tx.db.freelist.all() {\n+\tall := make([]pgid, tx.db.freelist.count())\n+\ttx.db.freelist.copyall(all)\n+\tfor _, id := range all {\n \t\tif freed[id] {\n \t\t\tch <- fmt.Errorf(\"page %d: already freed\", id)\n \t\t}\n@@ -392,8 +415,10 @@ func (tx *Tx) check(ch chan error) {\n \treachable := make(map[pgid]*page)\n \treachable[0] = tx.page(0) // meta0\n \treachable[1] = tx.page(1) // meta1\n-\tfor i := uint32(0); i <= tx.page(tx.meta.freelist).overflow; i++ {\n-\t\treachable[tx.meta.freelist+pgid(i)] = tx.page(tx.meta.freelist)\n+\tif tx.meta.freelist != pgidNoFreelist {\n+\t\tfor i := uint32(0); i <= tx.page(tx.meta.freelist).overflow; i++ {\n+\t\t\treachable[tx.meta.freelist+pgid(i)] = tx.page(tx.meta.freelist)\n+\t\t}\n \t}\n \n \t// Recursively check buckets.\n@@ -451,7 +476,7 @@ func (tx *Tx) checkBucket(b *Bucket, reachable map[pgid]*page, freed map[pgid]bo\n \n // allocate returns a contiguous block of memory starting at a given page.\n func (tx *Tx) allocate(count int) (*page, error) {\n-\tp, err := tx.db.allocate(count)\n+\tp, err := tx.db.allocate(tx.meta.txid, count)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n@@ -460,7 +485,7 @@ func (tx *Tx) allocate(count int) (*page, error) {\n \ttx.pages[p.id] = p\n \n \t// Update statistics.\n-\ttx.stats.PageCount++\n+\ttx.stats.PageCount += count\n \ttx.stats.PageAlloc += count * tx.db.pageSize\n \n \treturn p, nil"
    },
    {
      "sha": "69673d93b7768a317ee4314441177c2455c38c43",
      "filename": "backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "status": "modified",
      "additions": 27,
      "deletions": 24,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/go-pkgz/auth/token/jwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/auth/token/jwt.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -32,16 +32,19 @@ type Handshake struct {\n \tID    string `json:\"id,omitempty\"`\n }\n \n-// default names for cookies and headers\n const (\n-\tjwtCookieName  = \"JWT\"\n-\tjwtHeaderKey   = \"X-JWT\"\n-\txsrfCookieName = \"XSRF-TOKEN\"\n-\txsrfHeaderKey  = \"X-XSRF-TOKEN\"\n-\ttokenQuery     = \"token\"\n-\tissuer         = \"go-pkgz/auth\"\n-\ttokenDuration  = time.Minute * 15\n-\tcookieDuration = time.Hour * 24 * 31\n+\t// default names for cookies and headers\n+\tdefaultJWTCookieName  = \"JWT\"\n+\tdefaultJWTHeaderKey   = \"X-JWT\"\n+\tdefaultXSRFCookieName = \"XSRF-TOKEN\"\n+\tdefaultXSRFHeaderKey  = \"X-XSRF-TOKEN\"\n+\n+\tdefaultIssuer = \"go-pkgz/auth\"\n+\n+\tdefaultTokenDuration  = time.Minute * 15\n+\tdefaultCookieDuration = time.Hour * 24 * 31\n+\n+\ttokenQuery = \"token\"\n )\n \n // Opts holds constructor params\n@@ -73,18 +76,18 @@ func NewService(opts Opts) *Service {\n \t\t}\n \t}\n \n-\tsetDefault(&res.JWTCookieName, jwtCookieName)\n-\tsetDefault(&res.JWTHeaderKey, jwtHeaderKey)\n-\tsetDefault(&res.XSRFCookieName, xsrfCookieName)\n-\tsetDefault(&res.XSRFHeaderKey, xsrfHeaderKey)\n-\tsetDefault(&res.Issuer, issuer)\n+\tsetDefault(&res.JWTCookieName, defaultJWTCookieName)\n+\tsetDefault(&res.JWTHeaderKey, defaultJWTHeaderKey)\n+\tsetDefault(&res.XSRFCookieName, defaultXSRFCookieName)\n+\tsetDefault(&res.XSRFHeaderKey, defaultXSRFHeaderKey)\n+\tsetDefault(&res.Issuer, defaultIssuer)\n \n \tif opts.TokenDuration == 0 {\n-\t\tres.TokenDuration = tokenDuration\n+\t\tres.TokenDuration = defaultTokenDuration\n \t}\n \n \tif opts.CookieDuration == 0 {\n-\t\tres.CookieDuration = cookieDuration\n+\t\tres.CookieDuration = defaultCookieDuration\n \t}\n \n \treturn &res\n@@ -198,11 +201,11 @@ func (j *Service) Set(w http.ResponseWriter, claims Claims) (Claims, error) {\n \t\tcookieExpiration = int(j.CookieDuration.Seconds())\n \t}\n \n-\tjwtCookie := http.Cookie{Name: jwtCookieName, Value: tokenString, HttpOnly: true, Path: \"/\",\n+\tjwtCookie := http.Cookie{Name: j.JWTCookieName, Value: tokenString, HttpOnly: true, Path: \"/\",\n \t\tMaxAge: cookieExpiration, Secure: j.SecureCookies}\n \thttp.SetCookie(w, &jwtCookie)\n \n-\txsrfCookie := http.Cookie{Name: xsrfCookieName, Value: claims.Id, HttpOnly: false, Path: \"/\",\n+\txsrfCookie := http.Cookie{Name: j.XSRFCookieName, Value: claims.Id, HttpOnly: false, Path: \"/\",\n \t\tMaxAge: cookieExpiration, Secure: j.SecureCookies}\n \thttp.SetCookie(w, &xsrfCookie)\n \n@@ -221,15 +224,15 @@ func (j *Service) Get(r *http.Request) (Claims, string, error) {\n \t\ttokenString = tkQuery\n \t}\n \n-\t// try to get from X-JWT header\n-\tif tokenHeader := r.Header.Get(jwtHeaderKey); tokenHeader != \"\" && tokenString == \"\" {\n+\t// try to get from JWT header\n+\tif tokenHeader := r.Header.Get(j.JWTHeaderKey); tokenHeader != \"\" && tokenString == \"\" {\n \t\ttokenString = tokenHeader\n \t}\n \n \t// try to get from JWT cookie\n \tif tokenString == \"\" {\n \t\tfromCookie = true\n-\t\tjc, err := r.Cookie(jwtCookieName)\n+\t\tjc, err := r.Cookie(j.JWTCookieName)\n \t\tif err != nil {\n \t\t\treturn Claims{}, \"\", errors.Wrap(err, \"token cookie was not presented\")\n \t\t}\n@@ -250,7 +253,7 @@ func (j *Service) Get(r *http.Request) (Claims, string, error) {\n \t}\n \n \tif fromCookie && claims.User != nil {\n-\t\txsrf := r.Header.Get(xsrfHeaderKey)\n+\t\txsrf := r.Header.Get(j.XSRFHeaderKey)\n \t\tif claims.Id != xsrf {\n \t\t\treturn Claims{}, \"\", errors.New(\"xsrf mismatch\")\n \t\t}\n@@ -265,11 +268,11 @@ func (j *Service) IsExpired(claims Claims) bool {\n \n // Reset token's cookies\n func (j *Service) Reset(w http.ResponseWriter) {\n-\tjwtCookie := http.Cookie{Name: jwtCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n+\tjwtCookie := http.Cookie{Name: j.JWTCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n \t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies}\n \thttp.SetCookie(w, &jwtCookie)\n \n-\txsrfCookie := http.Cookie{Name: xsrfCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n+\txsrfCookie := http.Cookie{Name: j.XSRFCookieName, Value: \"\", HttpOnly: false, Path: \"/\",\n \t\tMaxAge: -1, Expires: time.Unix(0, 0), Secure: j.SecureCookies}\n \thttp.SetCookie(w, &xsrfCookie)\n }"
    },
    {
      "sha": "6b416d32a0bf570e7f829bbda42f912d5bb4d166",
      "filename": "backend/vendor/github.com/go-pkgz/rest/README.md",
      "status": "modified",
      "additions": 16,
      "deletions": 2,
      "changes": 18,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/go-pkgz/rest/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/go-pkgz/rest/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/go-pkgz/rest/README.md?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -38,8 +38,22 @@ pong\n \n ### Logger middleware\n \n-Logs all info about request, including user, method, status code, response size, url, elapsed time, request body (optional).\n-Can be customized by passing flags - LogNone, LogAll, LogUser and LogBody. Flags can be combined (provided multiple times)\n+Logs request, request handling time and response. Log record fields in order of occurrence:\n+\n+- Request's HTTP method\n+- Requested URL (with sanitized query)\n+- Remote IP\n+- Response's HTTP status code\n+- Response body size\n+- Request handling time\n+- Userinfo associated with the request (optional)\n+- Request subject (optional)\n+- Request ID (if `X-Request-ID` present)\n+- Request body (optional)\n+\n+_remote IP can be masked with user defined function_\n+\n+example: `019/03/05 17:26:12.976 [INFO] GET - /api/v1/find?site=remark - 8e228e9cfece - 200 (115) - 4.47784618s`\n \n ### Recoverer middleware\n "
    },
    {
      "sha": "660b8ccc8ae00247c95976bd79b6177cc1595e34",
      "filename": "backend/vendor/github.com/golang/mock/AUTHORS",
      "status": "removed",
      "additions": 0,
      "deletions": 12,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/AUTHORS",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/AUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/AUTHORS?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,12 +0,0 @@\n-# This is the official list of GoMock authors for copyright purposes.\n-# This file is distinct from the CONTRIBUTORS files.\n-# See the latter for an explanation.\n-\n-# Names should be added to this file as\n-#\tName or Organization <email address>\n-# The email address is not required for organizations.\n-\n-# Please keep the list sorted.\n-\n-Alex Reece <awreece@gmail.com>\n-Google Inc."
    },
    {
      "sha": "def849cab1bd4219e9c0f9cbdda0daa56c768f8b",
      "filename": "backend/vendor/github.com/golang/mock/CONTRIBUTORS",
      "status": "removed",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/CONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/CONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/CONTRIBUTORS?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,37 +0,0 @@\n-# This is the official list of people who can contribute (and typically\n-# have contributed) code to the gomock repository.\n-# The AUTHORS file lists the copyright holders; this file\n-# lists people.  For example, Google employees are listed here\n-# but not in AUTHORS, because Google holds the copyright.\n-#\n-# The submission process automatically checks to make sure\n-# that people submitting code are listed in this file (by email address).\n-#\n-# Names should be added to this file only after verifying that\n-# the individual or the individual's organization has agreed to\n-# the appropriate Contributor License Agreement, found here:\n-#\n-#     http://code.google.com/legal/individual-cla-v1.0.html\n-#     http://code.google.com/legal/corporate-cla-v1.0.html\n-#\n-# The agreement for individuals can be filled out on the web.\n-#\n-# When adding J Random Contributor's name to this file,\n-# either J's name or J's organization's name should be\n-# added to the AUTHORS file, depending on whether the\n-# individual or corporate CLA was used.\n-\n-# Names should be added to this file like so:\n-#     Name <email address>\n-#\n-# An entry with two email addresses specifies that the\n-# first address should be used in the submit logs and\n-# that the second address should be recognized as the\n-# same person when interacting with Rietveld.\n-\n-# Please keep the list sorted.\n-\n-Aaron Jacobs <jacobsa@google.com> <aaronjjacobs@gmail.com>\n-Alex Reece <awreece@gmail.com>\n-David Symonds <dsymonds@golang.org>\n-Ryan Barrett <ryanb@google.com>"
    },
    {
      "sha": "d645695673349e3947e8e5ae42332d0ac3164cd7",
      "filename": "backend/vendor/github.com/golang/mock/LICENSE",
      "status": "removed",
      "additions": 0,
      "deletions": 202,
      "changes": 202,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/LICENSE?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,202 +0,0 @@\n-\n-                                 Apache License\n-                           Version 2.0, January 2004\n-                        http://www.apache.org/licenses/\n-\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-   1. Definitions.\n-\n-      \"License\" shall mean the terms and conditions for use, reproduction,\n-      and distribution as defined by Sections 1 through 9 of this document.\n-\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\n-      the copyright owner that is granting the License.\n-\n-      \"Legal Entity\" shall mean the union of the acting entity and all\n-      other entities that control, are controlled by, or are under common\n-      control with that entity. For the purposes of this definition,\n-      \"control\" means (i) the power, direct or indirect, to cause the\n-      direction or management of such entity, whether by contract or\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-      outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-      exercising permissions granted by this License.\n-\n-      \"Source\" form shall mean the preferred form for making modifications,\n-      including but not limited to software source code, documentation\n-      source, and configuration files.\n-\n-      \"Object\" form shall mean any form resulting from mechanical\n-      transformation or translation of a Source form, including but\n-      not limited to compiled object code, generated documentation,\n-      and conversions to other media types.\n-\n-      \"Work\" shall mean the work of authorship, whether in Source or\n-      Object form, made available under the License, as indicated by a\n-      copyright notice that is included in or attached to the work\n-      (an example is provided in the Appendix below).\n-\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\n-      form, that is based on (or derived from) the Work and for which the\n-      editorial revisions, annotations, elaborations, or other modifications\n-      represent, as a whole, an original work of authorship. For the purposes\n-      of this License, Derivative Works shall not include works that remain\n-      separable from, or merely link (or bind by name) to the interfaces of,\n-      the Work and Derivative Works thereof.\n-\n-      \"Contribution\" shall mean any work of authorship, including\n-      the original version of the Work and any modifications or additions\n-      to that Work or Derivative Works thereof, that is intentionally\n-      submitted to Licensor for inclusion in the Work by the copyright owner\n-      or by an individual or Legal Entity authorized to submit on behalf of\n-      the copyright owner. For the purposes of this definition, \"submitted\"\n-      means any form of electronic, verbal, or written communication sent\n-      to the Licensor or its representatives, including but not limited to\n-      communication on electronic mailing lists, source code control systems,\n-      and issue tracking systems that are managed by, or on behalf of, the\n-      Licensor for the purpose of discussing and improving the Work, but\n-      excluding communication that is conspicuously marked or otherwise\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-      on behalf of whom a Contribution has been received by Licensor and\n-      subsequently incorporated within the Work.\n-\n-   2. Grant of Copyright License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      copyright license to reproduce, prepare Derivative Works of,\n-      publicly display, publicly perform, sublicense, and distribute the\n-      Work and such Derivative Works in Source or Object form.\n-\n-   3. Grant of Patent License. Subject to the terms and conditions of\n-      this License, each Contributor hereby grants to You a perpetual,\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-      (except as stated in this section) patent license to make, have made,\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\n-      where such license applies only to those patent claims licensable\n-      by such Contributor that are necessarily infringed by their\n-      Contribution(s) alone or by combination of their Contribution(s)\n-      with the Work to which such Contribution(s) was submitted. If You\n-      institute patent litigation against any entity (including a\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\n-      or a Contribution incorporated within the Work constitutes direct\n-      or contributory patent infringement, then any patent licenses\n-      granted to You under this License for that Work shall terminate\n-      as of the date such litigation is filed.\n-\n-   4. Redistribution. You may reproduce and distribute copies of the\n-      Work or Derivative Works thereof in any medium, with or without\n-      modifications, and in Source or Object form, provided that You\n-      meet the following conditions:\n-\n-      (a) You must give any other recipients of the Work or\n-          Derivative Works a copy of this License; and\n-\n-      (b) You must cause any modified files to carry prominent notices\n-          stating that You changed the files; and\n-\n-      (c) You must retain, in the Source form of any Derivative Works\n-          that You distribute, all copyright, patent, trademark, and\n-          attribution notices from the Source form of the Work,\n-          excluding those notices that do not pertain to any part of\n-          the Derivative Works; and\n-\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\n-          distribution, then any Derivative Works that You distribute must\n-          include a readable copy of the attribution notices contained\n-          within such NOTICE file, excluding those notices that do not\n-          pertain to any part of the Derivative Works, in at least one\n-          of the following places: within a NOTICE text file distributed\n-          as part of the Derivative Works; within the Source form or\n-          documentation, if provided along with the Derivative Works; or,\n-          within a display generated by the Derivative Works, if and\n-          wherever such third-party notices normally appear. The contents\n-          of the NOTICE file are for informational purposes only and\n-          do not modify the License. You may add Your own attribution\n-          notices within Derivative Works that You distribute, alongside\n-          or as an addendum to the NOTICE text from the Work, provided\n-          that such additional attribution notices cannot be construed\n-          as modifying the License.\n-\n-      You may add Your own copyright statement to Your modifications and\n-      may provide additional or different license terms and conditions\n-      for use, reproduction, or distribution of Your modifications, or\n-      for any such Derivative Works as a whole, provided Your use,\n-      reproduction, and distribution of the Work otherwise complies with\n-      the conditions stated in this License.\n-\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\n-      any Contribution intentionally submitted for inclusion in the Work\n-      by You to the Licensor shall be under the terms and conditions of\n-      this License, without any additional terms or conditions.\n-      Notwithstanding the above, nothing herein shall supersede or modify\n-      the terms of any separate license agreement you may have executed\n-      with Licensor regarding such Contributions.\n-\n-   6. Trademarks. This License does not grant permission to use the trade\n-      names, trademarks, service marks, or product names of the Licensor,\n-      except as required for reasonable and customary use in describing the\n-      origin of the Work and reproducing the content of the NOTICE file.\n-\n-   7. Disclaimer of Warranty. Unless required by applicable law or\n-      agreed to in writing, Licensor provides the Work (and each\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-      implied, including, without limitation, any warranties or conditions\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\n-      appropriateness of using or redistributing the Work and assume any\n-      risks associated with Your exercise of permissions under this License.\n-\n-   8. Limitation of Liability. In no event and under no legal theory,\n-      whether in tort (including negligence), contract, or otherwise,\n-      unless required by applicable law (such as deliberate and grossly\n-      negligent acts) or agreed to in writing, shall any Contributor be\n-      liable to You for damages, including any direct, indirect, special,\n-      incidental, or consequential damages of any character arising as a\n-      result of this License or out of the use or inability to use the\n-      Work (including but not limited to damages for loss of goodwill,\n-      work stoppage, computer failure or malfunction, or any and all\n-      other commercial damages or losses), even if such Contributor\n-      has been advised of the possibility of such damages.\n-\n-   9. Accepting Warranty or Additional Liability. While redistributing\n-      the Work or Derivative Works thereof, You may choose to offer,\n-      and charge a fee for, acceptance of support, warranty, indemnity,\n-      or other liability obligations and/or rights consistent with this\n-      License. However, in accepting such obligations, You may act only\n-      on Your own behalf and on Your sole responsibility, not on behalf\n-      of any other Contributor, and only if You agree to indemnify,\n-      defend, and hold each Contributor harmless for any liability\n-      incurred by, or claims asserted against, such Contributor by reason\n-      of your accepting any such warranty or additional liability.\n-\n-   END OF TERMS AND CONDITIONS\n-\n-   APPENDIX: How to apply the Apache License to your work.\n-\n-      To apply the Apache License to your work, attach the following\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\n-      replaced with your own identifying information. (Don't include\n-      the brackets!)  The text should be enclosed in the appropriate\n-      comment syntax for the file format. We also recommend that a\n-      file or class name and description of purpose be included on the\n-      same \"printed page\" as the copyright notice for easier\n-      identification within third-party archives.\n-\n-   Copyright [yyyy] [name of copyright owner]\n-\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\n-   you may not use this file except in compliance with the License.\n-   You may obtain a copy of the License at\n-\n-       http://www.apache.org/licenses/LICENSE-2.0\n-\n-   Unless required by applicable law or agreed to in writing, software\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-   See the License for the specific language governing permissions and\n-   limitations under the License."
    },
    {
      "sha": "3d54d9f5d010aeb7638f86fb14ac698764229047",
      "filename": "backend/vendor/github.com/golang/mock/gomock/call.go",
      "status": "removed",
      "additions": 0,
      "deletions": 420,
      "changes": 420,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/call.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/call.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/gomock/call.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,420 +0,0 @@\n-// Copyright 2010 Google Inc.\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\");\n-// you may not use this file except in compliance with the License.\n-// You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n-package gomock\n-\n-import (\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"strconv\"\n-\t\"strings\"\n-)\n-\n-// Call represents an expected call to a mock.\n-type Call struct {\n-\tt TestHelper // for triggering test failures on invalid call setup\n-\n-\treceiver   interface{}  // the receiver of the method call\n-\tmethod     string       // the name of the method\n-\tmethodType reflect.Type // the type of the method\n-\targs       []Matcher    // the args\n-\torigin     string       // file and line number of call setup\n-\n-\tpreReqs []*Call // prerequisite calls\n-\n-\t// Expectations\n-\tminCalls, maxCalls int\n-\n-\tnumCalls int // actual number made\n-\n-\t// actions are called when this Call is called. Each action gets the args and\n-\t// can set the return values by returning a non-nil slice. Actions run in the\n-\t// order they are created.\n-\tactions []func([]interface{}) []interface{}\n-}\n-\n-// newCall creates a *Call. It requires the method type in order to support\n-// unexported methods.\n-func newCall(t TestHelper, receiver interface{}, method string, methodType reflect.Type, args ...interface{}) *Call {\n-\tt.Helper()\n-\n-\t// TODO: check arity, types.\n-\tmargs := make([]Matcher, len(args))\n-\tfor i, arg := range args {\n-\t\tif m, ok := arg.(Matcher); ok {\n-\t\t\tmargs[i] = m\n-\t\t} else if arg == nil {\n-\t\t\t// Handle nil specially so that passing a nil interface value\n-\t\t\t// will match the typed nils of concrete args.\n-\t\t\tmargs[i] = Nil()\n-\t\t} else {\n-\t\t\tmargs[i] = Eq(arg)\n-\t\t}\n-\t}\n-\n-\torigin := callerInfo(3)\n-\tactions := []func([]interface{}) []interface{}{func([]interface{}) []interface{} {\n-\t\t// Synthesize the zero value for each of the return args' types.\n-\t\trets := make([]interface{}, methodType.NumOut())\n-\t\tfor i := 0; i < methodType.NumOut(); i++ {\n-\t\t\trets[i] = reflect.Zero(methodType.Out(i)).Interface()\n-\t\t}\n-\t\treturn rets\n-\t}}\n-\treturn &Call{t: t, receiver: receiver, method: method, methodType: methodType,\n-\t\targs: margs, origin: origin, minCalls: 1, maxCalls: 1, actions: actions}\n-}\n-\n-// AnyTimes allows the expectation to be called 0 or more times\n-func (c *Call) AnyTimes() *Call {\n-\tc.minCalls, c.maxCalls = 0, 1e8 // close enough to infinity\n-\treturn c\n-}\n-\n-// MinTimes requires the call to occur at least n times. If AnyTimes or MaxTimes have not been called, MinTimes also\n-// sets the maximum number of calls to infinity.\n-func (c *Call) MinTimes(n int) *Call {\n-\tc.minCalls = n\n-\tif c.maxCalls == 1 {\n-\t\tc.maxCalls = 1e8\n-\t}\n-\treturn c\n-}\n-\n-// MaxTimes limits the number of calls to n times. If AnyTimes or MinTimes have not been called, MaxTimes also\n-// sets the minimum number of calls to 0.\n-func (c *Call) MaxTimes(n int) *Call {\n-\tc.maxCalls = n\n-\tif c.minCalls == 1 {\n-\t\tc.minCalls = 0\n-\t}\n-\treturn c\n-}\n-\n-// DoAndReturn declares the action to run when the call is matched.\n-// The return values from this function are returned by the mocked function.\n-// It takes an interface{} argument to support n-arity functions.\n-func (c *Call) DoAndReturn(f interface{}) *Call {\n-\t// TODO: Check arity and types here, rather than dying badly elsewhere.\n-\tv := reflect.ValueOf(f)\n-\n-\tc.addAction(func(args []interface{}) []interface{} {\n-\t\tvargs := make([]reflect.Value, len(args))\n-\t\tft := v.Type()\n-\t\tfor i := 0; i < len(args); i++ {\n-\t\t\tif args[i] != nil {\n-\t\t\t\tvargs[i] = reflect.ValueOf(args[i])\n-\t\t\t} else {\n-\t\t\t\t// Use the zero value for the arg.\n-\t\t\t\tvargs[i] = reflect.Zero(ft.In(i))\n-\t\t\t}\n-\t\t}\n-\t\tvrets := v.Call(vargs)\n-\t\trets := make([]interface{}, len(vrets))\n-\t\tfor i, ret := range vrets {\n-\t\t\trets[i] = ret.Interface()\n-\t\t}\n-\t\treturn rets\n-\t})\n-\treturn c\n-}\n-\n-// Do declares the action to run when the call is matched. The function's\n-// return values are ignored to retain backward compatibility. To use the\n-// return values call DoAndReturn.\n-// It takes an interface{} argument to support n-arity functions.\n-func (c *Call) Do(f interface{}) *Call {\n-\t// TODO: Check arity and types here, rather than dying badly elsewhere.\n-\tv := reflect.ValueOf(f)\n-\n-\tc.addAction(func(args []interface{}) []interface{} {\n-\t\tvargs := make([]reflect.Value, len(args))\n-\t\tft := v.Type()\n-\t\tfor i := 0; i < len(args); i++ {\n-\t\t\tif args[i] != nil {\n-\t\t\t\tvargs[i] = reflect.ValueOf(args[i])\n-\t\t\t} else {\n-\t\t\t\t// Use the zero value for the arg.\n-\t\t\t\tvargs[i] = reflect.Zero(ft.In(i))\n-\t\t\t}\n-\t\t}\n-\t\tv.Call(vargs)\n-\t\treturn nil\n-\t})\n-\treturn c\n-}\n-\n-// Return declares the values to be returned by the mocked function call.\n-func (c *Call) Return(rets ...interface{}) *Call {\n-\tc.t.Helper()\n-\n-\tmt := c.methodType\n-\tif len(rets) != mt.NumOut() {\n-\t\tc.t.Fatalf(\"wrong number of arguments to Return for %T.%v: got %d, want %d [%s]\",\n-\t\t\tc.receiver, c.method, len(rets), mt.NumOut(), c.origin)\n-\t}\n-\tfor i, ret := range rets {\n-\t\tif got, want := reflect.TypeOf(ret), mt.Out(i); got == want {\n-\t\t\t// Identical types; nothing to do.\n-\t\t} else if got == nil {\n-\t\t\t// Nil needs special handling.\n-\t\t\tswitch want.Kind() {\n-\t\t\tcase reflect.Chan, reflect.Func, reflect.Interface, reflect.Map, reflect.Ptr, reflect.Slice:\n-\t\t\t\t// ok\n-\t\t\tdefault:\n-\t\t\t\tc.t.Fatalf(\"argument %d to Return for %T.%v is nil, but %v is not nillable [%s]\",\n-\t\t\t\t\ti, c.receiver, c.method, want, c.origin)\n-\t\t\t}\n-\t\t} else if got.AssignableTo(want) {\n-\t\t\t// Assignable type relation. Make the assignment now so that the generated code\n-\t\t\t// can return the values with a type assertion.\n-\t\t\tv := reflect.New(want).Elem()\n-\t\t\tv.Set(reflect.ValueOf(ret))\n-\t\t\trets[i] = v.Interface()\n-\t\t} else {\n-\t\t\tc.t.Fatalf(\"wrong type of argument %d to Return for %T.%v: %v is not assignable to %v [%s]\",\n-\t\t\t\ti, c.receiver, c.method, got, want, c.origin)\n-\t\t}\n-\t}\n-\n-\tc.addAction(func([]interface{}) []interface{} {\n-\t\treturn rets\n-\t})\n-\n-\treturn c\n-}\n-\n-// Times declares the exact number of times a function call is expected to be executed.\n-func (c *Call) Times(n int) *Call {\n-\tc.minCalls, c.maxCalls = n, n\n-\treturn c\n-}\n-\n-// SetArg declares an action that will set the nth argument's value,\n-// indirected through a pointer. Or, in the case of a slice, SetArg\n-// will copy value's elements into the nth argument.\n-func (c *Call) SetArg(n int, value interface{}) *Call {\n-\tc.t.Helper()\n-\n-\tmt := c.methodType\n-\t// TODO: This will break on variadic methods.\n-\t// We will need to check those at invocation time.\n-\tif n < 0 || n >= mt.NumIn() {\n-\t\tc.t.Fatalf(\"SetArg(%d, ...) called for a method with %d args [%s]\",\n-\t\t\tn, mt.NumIn(), c.origin)\n-\t}\n-\t// Permit setting argument through an interface.\n-\t// In the interface case, we don't (nay, can't) check the type here.\n-\tat := mt.In(n)\n-\tswitch at.Kind() {\n-\tcase reflect.Ptr:\n-\t\tdt := at.Elem()\n-\t\tif vt := reflect.TypeOf(value); !vt.AssignableTo(dt) {\n-\t\t\tc.t.Fatalf(\"SetArg(%d, ...) argument is a %v, not assignable to %v [%s]\",\n-\t\t\t\tn, vt, dt, c.origin)\n-\t\t}\n-\tcase reflect.Interface:\n-\t\t// nothing to do\n-\tcase reflect.Slice:\n-\t\t// nothing to do\n-\tdefault:\n-\t\tc.t.Fatalf(\"SetArg(%d, ...) referring to argument of non-pointer non-interface non-slice type %v [%s]\",\n-\t\t\tn, at, c.origin)\n-\t}\n-\n-\tc.addAction(func(args []interface{}) []interface{} {\n-\t\tv := reflect.ValueOf(value)\n-\t\tswitch reflect.TypeOf(args[n]).Kind() {\n-\t\tcase reflect.Slice:\n-\t\t\tsetSlice(args[n], v)\n-\t\tdefault:\n-\t\t\treflect.ValueOf(args[n]).Elem().Set(v)\n-\t\t}\n-\t\treturn nil\n-\t})\n-\treturn c\n-}\n-\n-// isPreReq returns true if other is a direct or indirect prerequisite to c.\n-func (c *Call) isPreReq(other *Call) bool {\n-\tfor _, preReq := range c.preReqs {\n-\t\tif other == preReq || preReq.isPreReq(other) {\n-\t\t\treturn true\n-\t\t}\n-\t}\n-\treturn false\n-}\n-\n-// After declares that the call may only match after preReq has been exhausted.\n-func (c *Call) After(preReq *Call) *Call {\n-\tc.t.Helper()\n-\n-\tif c == preReq {\n-\t\tc.t.Fatalf(\"A call isn't allowed to be its own prerequisite\")\n-\t}\n-\tif preReq.isPreReq(c) {\n-\t\tc.t.Fatalf(\"Loop in call order: %v is a prerequisite to %v (possibly indirectly).\", c, preReq)\n-\t}\n-\n-\tc.preReqs = append(c.preReqs, preReq)\n-\treturn c\n-}\n-\n-// Returns true if the minimum number of calls have been made.\n-func (c *Call) satisfied() bool {\n-\treturn c.numCalls >= c.minCalls\n-}\n-\n-// Returns true iff the maximum number of calls have been made.\n-func (c *Call) exhausted() bool {\n-\treturn c.numCalls >= c.maxCalls\n-}\n-\n-func (c *Call) String() string {\n-\targs := make([]string, len(c.args))\n-\tfor i, arg := range c.args {\n-\t\targs[i] = arg.String()\n-\t}\n-\targuments := strings.Join(args, \", \")\n-\treturn fmt.Sprintf(\"%T.%v(%s) %s\", c.receiver, c.method, arguments, c.origin)\n-}\n-\n-// Tests if the given call matches the expected call.\n-// If yes, returns nil. If no, returns error with message explaining why it does not match.\n-func (c *Call) matches(args []interface{}) error {\n-\tif !c.methodType.IsVariadic() {\n-\t\tif len(args) != len(c.args) {\n-\t\t\treturn fmt.Errorf(\"Expected call at %s has the wrong number of arguments. Got: %d, want: %d\",\n-\t\t\t\tc.origin, len(args), len(c.args))\n-\t\t}\n-\n-\t\tfor i, m := range c.args {\n-\t\t\tif !m.Matches(args[i]) {\n-\t\t\t\treturn fmt.Errorf(\"Expected call at %s doesn't match the argument at index %s.\\nGot: %v\\nWant: %v\",\n-\t\t\t\t\tc.origin, strconv.Itoa(i), args[i], m)\n-\t\t\t}\n-\t\t}\n-\t} else {\n-\t\tif len(c.args) < c.methodType.NumIn()-1 {\n-\t\t\treturn fmt.Errorf(\"Expected call at %s has the wrong number of matchers. Got: %d, want: %d\",\n-\t\t\t\tc.origin, len(c.args), c.methodType.NumIn()-1)\n-\t\t}\n-\t\tif len(c.args) != c.methodType.NumIn() && len(args) != len(c.args) {\n-\t\t\treturn fmt.Errorf(\"Expected call at %s has the wrong number of arguments. Got: %d, want: %d\",\n-\t\t\t\tc.origin, len(args), len(c.args))\n-\t\t}\n-\t\tif len(args) < len(c.args)-1 {\n-\t\t\treturn fmt.Errorf(\"Expected call at %s has the wrong number of arguments. Got: %d, want: greater than or equal to %d\",\n-\t\t\t\tc.origin, len(args), len(c.args)-1)\n-\t\t}\n-\n-\t\tfor i, m := range c.args {\n-\t\t\tif i < c.methodType.NumIn()-1 {\n-\t\t\t\t// Non-variadic args\n-\t\t\t\tif !m.Matches(args[i]) {\n-\t\t\t\t\treturn fmt.Errorf(\"Expected call at %s doesn't match the argument at index %s.\\nGot: %v\\nWant: %v\",\n-\t\t\t\t\t\tc.origin, strconv.Itoa(i), args[i], m)\n-\t\t\t\t}\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t\t// The last arg has a possibility of a variadic argument, so let it branch\n-\n-\t\t\t// sample: Foo(a int, b int, c ...int)\n-\t\t\tif i < len(c.args) && i < len(args) {\n-\t\t\t\tif m.Matches(args[i]) {\n-\t\t\t\t\t// Got Foo(a, b, c) want Foo(matcherA, matcherB, gomock.Any())\n-\t\t\t\t\t// Got Foo(a, b, c) want Foo(matcherA, matcherB, someSliceMatcher)\n-\t\t\t\t\t// Got Foo(a, b, c) want Foo(matcherA, matcherB, matcherC)\n-\t\t\t\t\t// Got Foo(a, b) want Foo(matcherA, matcherB)\n-\t\t\t\t\t// Got Foo(a, b, c, d) want Foo(matcherA, matcherB, matcherC, matcherD)\n-\t\t\t\t\tcontinue\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// The number of actual args don't match the number of matchers,\n-\t\t\t// or the last matcher is a slice and the last arg is not.\n-\t\t\t// If this function still matches it is because the last matcher\n-\t\t\t// matches all the remaining arguments or the lack of any.\n-\t\t\t// Convert the remaining arguments, if any, into a slice of the\n-\t\t\t// expected type.\n-\t\t\tvargsType := c.methodType.In(c.methodType.NumIn() - 1)\n-\t\t\tvargs := reflect.MakeSlice(vargsType, 0, len(args)-i)\n-\t\t\tfor _, arg := range args[i:] {\n-\t\t\t\tvargs = reflect.Append(vargs, reflect.ValueOf(arg))\n-\t\t\t}\n-\t\t\tif m.Matches(vargs.Interface()) {\n-\t\t\t\t// Got Foo(a, b, c, d, e) want Foo(matcherA, matcherB, gomock.Any())\n-\t\t\t\t// Got Foo(a, b, c, d, e) want Foo(matcherA, matcherB, someSliceMatcher)\n-\t\t\t\t// Got Foo(a, b) want Foo(matcherA, matcherB, gomock.Any())\n-\t\t\t\t// Got Foo(a, b) want Foo(matcherA, matcherB, someEmptySliceMatcher)\n-\t\t\t\tbreak\n-\t\t\t}\n-\t\t\t// Wrong number of matchers or not match. Fail.\n-\t\t\t// Got Foo(a, b) want Foo(matcherA, matcherB, matcherC, matcherD)\n-\t\t\t// Got Foo(a, b, c) want Foo(matcherA, matcherB, matcherC, matcherD)\n-\t\t\t// Got Foo(a, b, c, d) want Foo(matcherA, matcherB, matcherC, matcherD, matcherE)\n-\t\t\t// Got Foo(a, b, c, d, e) want Foo(matcherA, matcherB, matcherC, matcherD)\n-\t\t\t// Got Foo(a, b, c) want Foo(matcherA, matcherB)\n-\t\t\treturn fmt.Errorf(\"Expected call at %s doesn't match the argument at index %s.\\nGot: %v\\nWant: %v\",\n-\t\t\t\tc.origin, strconv.Itoa(i), args[i:], c.args[i])\n-\n-\t\t}\n-\t}\n-\n-\t// Check that all prerequisite calls have been satisfied.\n-\tfor _, preReqCall := range c.preReqs {\n-\t\tif !preReqCall.satisfied() {\n-\t\t\treturn fmt.Errorf(\"Expected call at %s doesn't have a prerequisite call satisfied:\\n%v\\nshould be called before:\\n%v\",\n-\t\t\t\tc.origin, preReqCall, c)\n-\t\t}\n-\t}\n-\n-\t// Check that the call is not exhausted.\n-\tif c.exhausted() {\n-\t\treturn fmt.Errorf(\"Expected call at %s has already been called the max number of times.\", c.origin)\n-\t}\n-\n-\treturn nil\n-}\n-\n-// dropPrereqs tells the expected Call to not re-check prerequisite calls any\n-// longer, and to return its current set.\n-func (c *Call) dropPrereqs() (preReqs []*Call) {\n-\tpreReqs = c.preReqs\n-\tc.preReqs = nil\n-\treturn\n-}\n-\n-func (c *Call) call(args []interface{}) []func([]interface{}) []interface{} {\n-\tc.numCalls++\n-\treturn c.actions\n-}\n-\n-// InOrder declares that the given calls should occur in order.\n-func InOrder(calls ...*Call) {\n-\tfor i := 1; i < len(calls); i++ {\n-\t\tcalls[i].After(calls[i-1])\n-\t}\n-}\n-\n-func setSlice(arg interface{}, v reflect.Value) {\n-\tva := reflect.ValueOf(arg)\n-\tfor i := 0; i < v.Len(); i++ {\n-\t\tva.Index(i).Set(v.Index(i))\n-\t}\n-}\n-\n-func (c *Call) addAction(action func([]interface{}) []interface{}) {\n-\tc.actions = append(c.actions, action)\n-}"
    },
    {
      "sha": "c44a8a585b32eb1f0aa2e96942881aaf083e352c",
      "filename": "backend/vendor/github.com/golang/mock/gomock/callset.go",
      "status": "removed",
      "additions": 0,
      "deletions": 108,
      "changes": 108,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/callset.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/callset.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/gomock/callset.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,108 +0,0 @@\n-// Copyright 2011 Google Inc.\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\");\n-// you may not use this file except in compliance with the License.\n-// You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n-package gomock\n-\n-import (\n-\t\"bytes\"\n-\t\"fmt\"\n-)\n-\n-// callSet represents a set of expected calls, indexed by receiver and method\n-// name.\n-type callSet struct {\n-\t// Calls that are still expected.\n-\texpected map[callSetKey][]*Call\n-\t// Calls that have been exhausted.\n-\texhausted map[callSetKey][]*Call\n-}\n-\n-// callSetKey is the key in the maps in callSet\n-type callSetKey struct {\n-\treceiver interface{}\n-\tfname    string\n-}\n-\n-func newCallSet() *callSet {\n-\treturn &callSet{make(map[callSetKey][]*Call), make(map[callSetKey][]*Call)}\n-}\n-\n-// Add adds a new expected call.\n-func (cs callSet) Add(call *Call) {\n-\tkey := callSetKey{call.receiver, call.method}\n-\tm := cs.expected\n-\tif call.exhausted() {\n-\t\tm = cs.exhausted\n-\t}\n-\tm[key] = append(m[key], call)\n-}\n-\n-// Remove removes an expected call.\n-func (cs callSet) Remove(call *Call) {\n-\tkey := callSetKey{call.receiver, call.method}\n-\tcalls := cs.expected[key]\n-\tfor i, c := range calls {\n-\t\tif c == call {\n-\t\t\t// maintain order for remaining calls\n-\t\t\tcs.expected[key] = append(calls[:i], calls[i+1:]...)\n-\t\t\tcs.exhausted[key] = append(cs.exhausted[key], call)\n-\t\t\tbreak\n-\t\t}\n-\t}\n-}\n-\n-// FindMatch searches for a matching call. Returns error with explanation message if no call matched.\n-func (cs callSet) FindMatch(receiver interface{}, method string, args []interface{}) (*Call, error) {\n-\tkey := callSetKey{receiver, method}\n-\n-\t// Search through the expected calls.\n-\texpected := cs.expected[key]\n-\tvar callsErrors bytes.Buffer\n-\tfor _, call := range expected {\n-\t\terr := call.matches(args)\n-\t\tif err != nil {\n-\t\t\tfmt.Fprintf(&callsErrors, \"\\n%v\", err)\n-\t\t} else {\n-\t\t\treturn call, nil\n-\t\t}\n-\t}\n-\n-\t// If we haven't found a match then search through the exhausted calls so we\n-\t// get useful error messages.\n-\texhausted := cs.exhausted[key]\n-\tfor _, call := range exhausted {\n-\t\tif err := call.matches(args); err != nil {\n-\t\t\tfmt.Fprintf(&callsErrors, \"\\n%v\", err)\n-\t\t}\n-\t}\n-\n-\tif len(expected)+len(exhausted) == 0 {\n-\t\tfmt.Fprintf(&callsErrors, \"there are no expected calls of the method %q for that receiver\", method)\n-\t}\n-\n-\treturn nil, fmt.Errorf(callsErrors.String())\n-}\n-\n-// Failures returns the calls that are not satisfied.\n-func (cs callSet) Failures() []*Call {\n-\tfailures := make([]*Call, 0, len(cs.expected))\n-\tfor _, calls := range cs.expected {\n-\t\tfor _, call := range calls {\n-\t\t\tif !call.satisfied() {\n-\t\t\t\tfailures = append(failures, call)\n-\t\t\t}\n-\t\t}\n-\t}\n-\treturn failures\n-}"
    },
    {
      "sha": "6fde25f5087ae12a77763acb1687f2a72bbd6538",
      "filename": "backend/vendor/github.com/golang/mock/gomock/controller.go",
      "status": "removed",
      "additions": 0,
      "deletions": 235,
      "changes": 235,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/controller.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/controller.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/gomock/controller.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,235 +0,0 @@\n-// Copyright 2010 Google Inc.\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\");\n-// you may not use this file except in compliance with the License.\n-// You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n-// GoMock - a mock framework for Go.\n-//\n-// Standard usage:\n-//   (1) Define an interface that you wish to mock.\n-//         type MyInterface interface {\n-//           SomeMethod(x int64, y string)\n-//         }\n-//   (2) Use mockgen to generate a mock from the interface.\n-//   (3) Use the mock in a test:\n-//         func TestMyThing(t *testing.T) {\n-//           mockCtrl := gomock.NewController(t)\n-//           defer mockCtrl.Finish()\n-//\n-//           mockObj := something.NewMockMyInterface(mockCtrl)\n-//           mockObj.EXPECT().SomeMethod(4, \"blah\")\n-//           // pass mockObj to a real object and play with it.\n-//         }\n-//\n-// By default, expected calls are not enforced to run in any particular order.\n-// Call order dependency can be enforced by use of InOrder and/or Call.After.\n-// Call.After can create more varied call order dependencies, but InOrder is\n-// often more convenient.\n-//\n-// The following examples create equivalent call order dependencies.\n-//\n-// Example of using Call.After to chain expected call order:\n-//\n-//     firstCall := mockObj.EXPECT().SomeMethod(1, \"first\")\n-//     secondCall := mockObj.EXPECT().SomeMethod(2, \"second\").After(firstCall)\n-//     mockObj.EXPECT().SomeMethod(3, \"third\").After(secondCall)\n-//\n-// Example of using InOrder to declare expected call order:\n-//\n-//     gomock.InOrder(\n-//         mockObj.EXPECT().SomeMethod(1, \"first\"),\n-//         mockObj.EXPECT().SomeMethod(2, \"second\"),\n-//         mockObj.EXPECT().SomeMethod(3, \"third\"),\n-//     )\n-//\n-// TODO:\n-//\t- Handle different argument/return types (e.g. ..., chan, map, interface).\n-package gomock\n-\n-import (\n-\t\"context\"\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"runtime\"\n-\t\"sync\"\n-)\n-\n-// A TestReporter is something that can be used to report test failures.\n-// It is satisfied by the standard library's *testing.T.\n-type TestReporter interface {\n-\tErrorf(format string, args ...interface{})\n-\tFatalf(format string, args ...interface{})\n-}\n-\n-// TestHelper is a TestReporter that has the Helper method.  It is satisfied\n-// by the standard library's *testing.T.\n-type TestHelper interface {\n-\tTestReporter\n-\tHelper()\n-}\n-\n-// A Controller represents the top-level control of a mock ecosystem.\n-// It defines the scope and lifetime of mock objects, as well as their expectations.\n-// It is safe to call Controller's methods from multiple goroutines.\n-type Controller struct {\n-\t// T should only be called within a generated mock. It is not intended to\n-\t// be used in user code and may be changed in future versions. T is the\n-\t// TestReporter passed in when creating the Controller via NewController.\n-\t// If the TestReporter does not implment a TestHelper it will be wrapped\n-\t// with a nopTestHelper.\n-\tT             TestHelper\n-\tmu            sync.Mutex\n-\texpectedCalls *callSet\n-\tfinished      bool\n-}\n-\n-func NewController(t TestReporter) *Controller {\n-\th, ok := t.(TestHelper)\n-\tif !ok {\n-\t\th = nopTestHelper{t}\n-\t}\n-\n-\treturn &Controller{\n-\t\tT:             h,\n-\t\texpectedCalls: newCallSet(),\n-\t}\n-}\n-\n-type cancelReporter struct {\n-\tTestHelper\n-\tcancel func()\n-}\n-\n-func (r *cancelReporter) Errorf(format string, args ...interface{}) {\n-\tr.TestHelper.Errorf(format, args...)\n-}\n-func (r *cancelReporter) Fatalf(format string, args ...interface{}) {\n-\tdefer r.cancel()\n-\tr.TestHelper.Fatalf(format, args...)\n-}\n-\n-// WithContext returns a new Controller and a Context, which is cancelled on any\n-// fatal failure.\n-func WithContext(ctx context.Context, t TestReporter) (*Controller, context.Context) {\n-\th, ok := t.(TestHelper)\n-\tif !ok {\n-\t\th = nopTestHelper{t}\n-\t}\n-\n-\tctx, cancel := context.WithCancel(ctx)\n-\treturn NewController(&cancelReporter{h, cancel}), ctx\n-}\n-\n-type nopTestHelper struct {\n-\tTestReporter\n-}\n-\n-func (h nopTestHelper) Helper() {}\n-\n-func (ctrl *Controller) RecordCall(receiver interface{}, method string, args ...interface{}) *Call {\n-\tctrl.T.Helper()\n-\n-\trecv := reflect.ValueOf(receiver)\n-\tfor i := 0; i < recv.Type().NumMethod(); i++ {\n-\t\tif recv.Type().Method(i).Name == method {\n-\t\t\treturn ctrl.RecordCallWithMethodType(receiver, method, recv.Method(i).Type(), args...)\n-\t\t}\n-\t}\n-\tctrl.T.Fatalf(\"gomock: failed finding method %s on %T\", method, receiver)\n-\tpanic(\"unreachable\")\n-}\n-\n-func (ctrl *Controller) RecordCallWithMethodType(receiver interface{}, method string, methodType reflect.Type, args ...interface{}) *Call {\n-\tctrl.T.Helper()\n-\n-\tcall := newCall(ctrl.T, receiver, method, methodType, args...)\n-\n-\tctrl.mu.Lock()\n-\tdefer ctrl.mu.Unlock()\n-\tctrl.expectedCalls.Add(call)\n-\n-\treturn call\n-}\n-\n-func (ctrl *Controller) Call(receiver interface{}, method string, args ...interface{}) []interface{} {\n-\tctrl.T.Helper()\n-\n-\t// Nest this code so we can use defer to make sure the lock is released.\n-\tactions := func() []func([]interface{}) []interface{} {\n-\t\tctrl.T.Helper()\n-\t\tctrl.mu.Lock()\n-\t\tdefer ctrl.mu.Unlock()\n-\n-\t\texpected, err := ctrl.expectedCalls.FindMatch(receiver, method, args)\n-\t\tif err != nil {\n-\t\t\torigin := callerInfo(2)\n-\t\t\tctrl.T.Fatalf(\"Unexpected call to %T.%v(%v) at %s because: %s\", receiver, method, args, origin, err)\n-\t\t}\n-\n-\t\t// Two things happen here:\n-\t\t// * the matching call no longer needs to check prerequite calls,\n-\t\t// * and the prerequite calls are no longer expected, so remove them.\n-\t\tpreReqCalls := expected.dropPrereqs()\n-\t\tfor _, preReqCall := range preReqCalls {\n-\t\t\tctrl.expectedCalls.Remove(preReqCall)\n-\t\t}\n-\n-\t\tactions := expected.call(args)\n-\t\tif expected.exhausted() {\n-\t\t\tctrl.expectedCalls.Remove(expected)\n-\t\t}\n-\t\treturn actions\n-\t}()\n-\n-\tvar rets []interface{}\n-\tfor _, action := range actions {\n-\t\tif r := action(args); r != nil {\n-\t\t\trets = r\n-\t\t}\n-\t}\n-\n-\treturn rets\n-}\n-\n-func (ctrl *Controller) Finish() {\n-\tctrl.T.Helper()\n-\n-\tctrl.mu.Lock()\n-\tdefer ctrl.mu.Unlock()\n-\n-\tif ctrl.finished {\n-\t\tctrl.T.Fatalf(\"Controller.Finish was called more than once. It has to be called exactly once.\")\n-\t}\n-\tctrl.finished = true\n-\n-\t// If we're currently panicking, probably because this is a deferred call,\n-\t// pass through the panic.\n-\tif err := recover(); err != nil {\n-\t\tpanic(err)\n-\t}\n-\n-\t// Check that all remaining expected calls are satisfied.\n-\tfailures := ctrl.expectedCalls.Failures()\n-\tfor _, call := range failures {\n-\t\tctrl.T.Errorf(\"missing call(s) to %v\", call)\n-\t}\n-\tif len(failures) != 0 {\n-\t\tctrl.T.Fatalf(\"aborting test due to missing call(s)\")\n-\t}\n-}\n-\n-func callerInfo(skip int) string {\n-\tif _, file, line, ok := runtime.Caller(skip + 1); ok {\n-\t\treturn fmt.Sprintf(\"%s:%d\", file, line)\n-\t}\n-\treturn \"unknown file\"\n-}"
    },
    {
      "sha": "189796f8656d0ce8f26b3d0ac60f63caa2d44cfb",
      "filename": "backend/vendor/github.com/golang/mock/gomock/matchers.go",
      "status": "removed",
      "additions": 0,
      "deletions": 122,
      "changes": 122,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/matchers.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/golang/mock/gomock/matchers.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/mock/gomock/matchers.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,122 +0,0 @@\n-// Copyright 2010 Google Inc.\n-//\n-// Licensed under the Apache License, Version 2.0 (the \"License\");\n-// you may not use this file except in compliance with the License.\n-// You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n-package gomock\n-\n-import (\n-\t\"fmt\"\n-\t\"reflect\"\n-)\n-\n-// A Matcher is a representation of a class of values.\n-// It is used to represent the valid or expected arguments to a mocked method.\n-type Matcher interface {\n-\t// Matches returns whether x is a match.\n-\tMatches(x interface{}) bool\n-\n-\t// String describes what the matcher matches.\n-\tString() string\n-}\n-\n-type anyMatcher struct{}\n-\n-func (anyMatcher) Matches(x interface{}) bool {\n-\treturn true\n-}\n-\n-func (anyMatcher) String() string {\n-\treturn \"is anything\"\n-}\n-\n-type eqMatcher struct {\n-\tx interface{}\n-}\n-\n-func (e eqMatcher) Matches(x interface{}) bool {\n-\treturn reflect.DeepEqual(e.x, x)\n-}\n-\n-func (e eqMatcher) String() string {\n-\treturn fmt.Sprintf(\"is equal to %v\", e.x)\n-}\n-\n-type nilMatcher struct{}\n-\n-func (nilMatcher) Matches(x interface{}) bool {\n-\tif x == nil {\n-\t\treturn true\n-\t}\n-\n-\tv := reflect.ValueOf(x)\n-\tswitch v.Kind() {\n-\tcase reflect.Chan, reflect.Func, reflect.Interface, reflect.Map,\n-\t\treflect.Ptr, reflect.Slice:\n-\t\treturn v.IsNil()\n-\t}\n-\n-\treturn false\n-}\n-\n-func (nilMatcher) String() string {\n-\treturn \"is nil\"\n-}\n-\n-type notMatcher struct {\n-\tm Matcher\n-}\n-\n-func (n notMatcher) Matches(x interface{}) bool {\n-\treturn !n.m.Matches(x)\n-}\n-\n-func (n notMatcher) String() string {\n-\t// TODO: Improve this if we add a NotString method to the Matcher interface.\n-\treturn \"not(\" + n.m.String() + \")\"\n-}\n-\n-type assignableToTypeOfMatcher struct {\n-\ttargetType reflect.Type\n-}\n-\n-func (m assignableToTypeOfMatcher) Matches(x interface{}) bool {\n-\treturn reflect.TypeOf(x).AssignableTo(m.targetType)\n-}\n-\n-func (m assignableToTypeOfMatcher) String() string {\n-\treturn \"is assignable to \" + m.targetType.Name()\n-}\n-\n-// Constructors\n-func Any() Matcher             { return anyMatcher{} }\n-func Eq(x interface{}) Matcher { return eqMatcher{x} }\n-func Nil() Matcher             { return nilMatcher{} }\n-func Not(x interface{}) Matcher {\n-\tif m, ok := x.(Matcher); ok {\n-\t\treturn notMatcher{m}\n-\t}\n-\treturn notMatcher{Eq(x)}\n-}\n-\n-// AssignableToTypeOf is a Matcher that matches if the parameter to the mock\n-// function is assignable to the type of the parameter to this function.\n-//\n-// Example usage:\n-//\n-// \t\tdbMock.EXPECT().\n-// \t\t\tInsert(gomock.AssignableToTypeOf(&EmployeeRecord{})).\n-// \t\t\tReturn(errors.New(\"DB error\"))\n-//\n-func AssignableToTypeOf(x interface{}) Matcher {\n-\treturn assignableToTypeOfMatcher{reflect.TypeOf(x)}\n-}"
    },
    {
      "sha": "63b0f08bef2a0bbadd27d64221e8b8a486fda969",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/decode.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/decode.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/decode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/decode.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -186,7 +186,6 @@ func (p *Buffer) DecodeVarint() (x uint64, err error) {\n \tif b&0x80 == 0 {\n \t\tgoto done\n \t}\n-\t// x -= 0x80 << 63 // Always zero.\n \n \treturn 0, errOverflow\n "
    },
    {
      "sha": "35b882c09aaf900fbd03018d0a0b6d8c1713d5f3",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/deprecated.go",
      "status": "added",
      "additions": 63,
      "deletions": 0,
      "changes": 63,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/deprecated.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/deprecated.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/deprecated.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,63 @@\n+// Go support for Protocol Buffers - Google's data interchange format\n+//\n+// Copyright 2018 The Go Authors.  All rights reserved.\n+// https://github.com/golang/protobuf\n+//\n+// Redistribution and use in source and binary forms, with or without\n+// modification, are permitted provided that the following conditions are\n+// met:\n+//\n+//     * Redistributions of source code must retain the above copyright\n+// notice, this list of conditions and the following disclaimer.\n+//     * Redistributions in binary form must reproduce the above\n+// copyright notice, this list of conditions and the following disclaimer\n+// in the documentation and/or other materials provided with the\n+// distribution.\n+//     * Neither the name of Google Inc. nor the names of its\n+// contributors may be used to endorse or promote products derived from\n+// this software without specific prior written permission.\n+//\n+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n+// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n+// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n+// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n+// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n+// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n+// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+package proto\n+\n+import \"errors\"\n+\n+// Deprecated: do not use.\n+type Stats struct{ Emalloc, Dmalloc, Encode, Decode, Chit, Cmiss, Size uint64 }\n+\n+// Deprecated: do not use.\n+func GetStats() Stats { return Stats{} }\n+\n+// Deprecated: do not use.\n+func MarshalMessageSet(interface{}) ([]byte, error) {\n+\treturn nil, errors.New(\"proto: not implemented\")\n+}\n+\n+// Deprecated: do not use.\n+func UnmarshalMessageSet([]byte, interface{}) error {\n+\treturn errors.New(\"proto: not implemented\")\n+}\n+\n+// Deprecated: do not use.\n+func MarshalMessageSetJSON(interface{}) ([]byte, error) {\n+\treturn nil, errors.New(\"proto: not implemented\")\n+}\n+\n+// Deprecated: do not use.\n+func UnmarshalMessageSetJSON([]byte, interface{}) error {\n+\treturn errors.New(\"proto: not implemented\")\n+}\n+\n+// Deprecated: do not use.\n+func RegisterMessageSetType(Message, int32, string) {}"
    },
    {
      "sha": "f9b6e41b3c1087a0f8a7adc1e36143b241d6a016",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/equal.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/equal.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/equal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/equal.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -246,7 +246,8 @@ func equalExtMap(base reflect.Type, em1, em2 map[int32]Extension) bool {\n \t\t\treturn false\n \t\t}\n \n-\t\tm1, m2 := e1.value, e2.value\n+\t\tm1 := extensionAsLegacyType(e1.value)\n+\t\tm2 := extensionAsLegacyType(e2.value)\n \n \t\tif m1 == nil && m2 == nil {\n \t\t\t// Both have only encoded form."
    },
    {
      "sha": "fa88add30a41f881fd5445ea8581ff26e7c12432",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/extensions.go",
      "status": "modified",
      "additions": 71,
      "deletions": 7,
      "changes": 78,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/extensions.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/extensions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/extensions.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -185,9 +185,25 @@ type Extension struct {\n \t// extension will have only enc set. When such an extension is\n \t// accessed using GetExtension (or GetExtensions) desc and value\n \t// will be set.\n-\tdesc  *ExtensionDesc\n+\tdesc *ExtensionDesc\n+\n+\t// value is a concrete value for the extension field. Let the type of\n+\t// desc.ExtensionType be the \"API type\" and the type of Extension.value\n+\t// be the \"storage type\". The API type and storage type are the same except:\n+\t//\t* For scalars (except []byte), the API type uses *T,\n+\t//\twhile the storage type uses T.\n+\t//\t* For repeated fields, the API type uses []T, while the storage type\n+\t//\tuses *[]T.\n+\t//\n+\t// The reason for the divergence is so that the storage type more naturally\n+\t// matches what is expected of when retrieving the values through the\n+\t// protobuf reflection APIs.\n+\t//\n+\t// The value may only be populated if desc is also populated.\n \tvalue interface{}\n-\tenc   []byte\n+\n+\t// enc is the raw bytes for the extension field.\n+\tenc []byte\n }\n \n // SetRawExtension is for testing only.\n@@ -334,7 +350,7 @@ func GetExtension(pb Message, extension *ExtensionDesc) (interface{}, error) {\n \t\t\t// descriptors with the same field number.\n \t\t\treturn nil, errors.New(\"proto: descriptor conflict\")\n \t\t}\n-\t\treturn e.value, nil\n+\t\treturn extensionAsLegacyType(e.value), nil\n \t}\n \n \tif extension.ExtensionType == nil {\n@@ -349,11 +365,11 @@ func GetExtension(pb Message, extension *ExtensionDesc) (interface{}, error) {\n \n \t// Remember the decoded version and drop the encoded version.\n \t// That way it is safe to mutate what we return.\n-\te.value = v\n+\te.value = extensionAsStorageType(v)\n \te.desc = extension\n \te.enc = nil\n \temap[extension.Field] = e\n-\treturn e.value, nil\n+\treturn extensionAsLegacyType(e.value), nil\n }\n \n // defaultExtensionValue returns the default value for extension.\n@@ -488,7 +504,7 @@ func SetExtension(pb Message, extension *ExtensionDesc, value interface{}) error\n \t}\n \ttyp := reflect.TypeOf(extension.ExtensionType)\n \tif typ != reflect.TypeOf(value) {\n-\t\treturn errors.New(\"proto: bad extension value type\")\n+\t\treturn fmt.Errorf(\"proto: bad extension value type. got: %T, want: %T\", value, extension.ExtensionType)\n \t}\n \t// nil extension values need to be caught early, because the\n \t// encoder can't distinguish an ErrNil due to a nil extension\n@@ -500,7 +516,7 @@ func SetExtension(pb Message, extension *ExtensionDesc, value interface{}) error\n \t}\n \n \textmap := epb.extensionsWrite()\n-\textmap[extension.Field] = Extension{desc: extension, value: value}\n+\textmap[extension.Field] = Extension{desc: extension, value: extensionAsStorageType(value)}\n \treturn nil\n }\n \n@@ -541,3 +557,51 @@ func RegisterExtension(desc *ExtensionDesc) {\n func RegisteredExtensions(pb Message) map[int32]*ExtensionDesc {\n \treturn extensionMaps[reflect.TypeOf(pb).Elem()]\n }\n+\n+// extensionAsLegacyType converts an value in the storage type as the API type.\n+// See Extension.value.\n+func extensionAsLegacyType(v interface{}) interface{} {\n+\tswitch rv := reflect.ValueOf(v); rv.Kind() {\n+\tcase reflect.Bool, reflect.Int32, reflect.Int64, reflect.Uint32, reflect.Uint64, reflect.Float32, reflect.Float64, reflect.String:\n+\t\t// Represent primitive types as a pointer to the value.\n+\t\trv2 := reflect.New(rv.Type())\n+\t\trv2.Elem().Set(rv)\n+\t\tv = rv2.Interface()\n+\tcase reflect.Ptr:\n+\t\t// Represent slice types as the value itself.\n+\t\tswitch rv.Type().Elem().Kind() {\n+\t\tcase reflect.Slice:\n+\t\t\tif rv.IsNil() {\n+\t\t\t\tv = reflect.Zero(rv.Type().Elem()).Interface()\n+\t\t\t} else {\n+\t\t\t\tv = rv.Elem().Interface()\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn v\n+}\n+\n+// extensionAsStorageType converts an value in the API type as the storage type.\n+// See Extension.value.\n+func extensionAsStorageType(v interface{}) interface{} {\n+\tswitch rv := reflect.ValueOf(v); rv.Kind() {\n+\tcase reflect.Ptr:\n+\t\t// Represent slice types as the value itself.\n+\t\tswitch rv.Type().Elem().Kind() {\n+\t\tcase reflect.Bool, reflect.Int32, reflect.Int64, reflect.Uint32, reflect.Uint64, reflect.Float32, reflect.Float64, reflect.String:\n+\t\t\tif rv.IsNil() {\n+\t\t\t\tv = reflect.Zero(rv.Type().Elem()).Interface()\n+\t\t\t} else {\n+\t\t\t\tv = rv.Elem().Interface()\n+\t\t\t}\n+\t\t}\n+\tcase reflect.Slice:\n+\t\t// Represent slice types as a pointer to the value.\n+\t\tif rv.Type().Elem().Kind() != reflect.Uint8 {\n+\t\t\trv2 := reflect.New(rv.Type())\n+\t\t\trv2.Elem().Set(rv)\n+\t\t\tv = rv2.Interface()\n+\t\t}\n+\t}\n+\treturn v\n+}"
    },
    {
      "sha": "fdd328bb7f541e68813bb369e21e26ec3c096725",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/lib.go",
      "status": "modified",
      "additions": 12,
      "deletions": 26,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/lib.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/lib.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/lib.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -341,26 +341,6 @@ type Message interface {\n \tProtoMessage()\n }\n \n-// Stats records allocation details about the protocol buffer encoders\n-// and decoders.  Useful for tuning the library itself.\n-type Stats struct {\n-\tEmalloc uint64 // mallocs in encode\n-\tDmalloc uint64 // mallocs in decode\n-\tEncode  uint64 // number of encodes\n-\tDecode  uint64 // number of decodes\n-\tChit    uint64 // number of cache hits\n-\tCmiss   uint64 // number of cache misses\n-\tSize    uint64 // number of sizes\n-}\n-\n-// Set to true to enable stats collection.\n-const collectStats = false\n-\n-var stats Stats\n-\n-// GetStats returns a copy of the global Stats structure.\n-func GetStats() Stats { return stats }\n-\n // A Buffer is a buffer manager for marshaling and unmarshaling\n // protocol buffers.  It may be reused between invocations to\n // reduce memory usage.  It is not necessary to use a Buffer;\n@@ -960,13 +940,19 @@ func isProto3Zero(v reflect.Value) bool {\n \treturn false\n }\n \n-// ProtoPackageIsVersion2 is referenced from generated protocol buffer files\n-// to assert that that code is compatible with this version of the proto package.\n-const ProtoPackageIsVersion2 = true\n+const (\n+\t// ProtoPackageIsVersion3 is referenced from generated protocol buffer files\n+\t// to assert that that code is compatible with this version of the proto package.\n+\tProtoPackageIsVersion3 = true\n+\n+\t// ProtoPackageIsVersion2 is referenced from generated protocol buffer files\n+\t// to assert that that code is compatible with this version of the proto package.\n+\tProtoPackageIsVersion2 = true\n \n-// ProtoPackageIsVersion1 is referenced from generated protocol buffer files\n-// to assert that that code is compatible with this version of the proto package.\n-const ProtoPackageIsVersion1 = true\n+\t// ProtoPackageIsVersion1 is referenced from generated protocol buffer files\n+\t// to assert that that code is compatible with this version of the proto package.\n+\tProtoPackageIsVersion1 = true\n+)\n \n // InternalMessageInfo is a type used internally by generated .pb.go files.\n // This type is not intended to be used by non-generated code."
    },
    {
      "sha": "f48a756761eade8ded2dd3f747602d20fa3b2a60",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/message_set.go",
      "status": "modified",
      "additions": 2,
      "deletions": 135,
      "changes": 137,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/message_set.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/message_set.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/message_set.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -36,13 +36,7 @@ package proto\n  */\n \n import (\n-\t\"bytes\"\n-\t\"encoding/json\"\n \t\"errors\"\n-\t\"fmt\"\n-\t\"reflect\"\n-\t\"sort\"\n-\t\"sync\"\n )\n \n // errNoMessageTypeID occurs when a protocol buffer does not have a message type ID.\n@@ -145,46 +139,9 @@ func skipVarint(buf []byte) []byte {\n \treturn buf[i+1:]\n }\n \n-// MarshalMessageSet encodes the extension map represented by m in the message set wire format.\n-// It is called by generated Marshal methods on protocol buffer messages with the message_set_wire_format option.\n-func MarshalMessageSet(exts interface{}) ([]byte, error) {\n-\treturn marshalMessageSet(exts, false)\n-}\n-\n-// marshaMessageSet implements above function, with the opt to turn on / off deterministic during Marshal.\n-func marshalMessageSet(exts interface{}, deterministic bool) ([]byte, error) {\n-\tswitch exts := exts.(type) {\n-\tcase *XXX_InternalExtensions:\n-\t\tvar u marshalInfo\n-\t\tsiz := u.sizeMessageSet(exts)\n-\t\tb := make([]byte, 0, siz)\n-\t\treturn u.appendMessageSet(b, exts, deterministic)\n-\n-\tcase map[int32]Extension:\n-\t\t// This is an old-style extension map.\n-\t\t// Wrap it in a new-style XXX_InternalExtensions.\n-\t\tie := XXX_InternalExtensions{\n-\t\t\tp: &struct {\n-\t\t\t\tmu           sync.Mutex\n-\t\t\t\textensionMap map[int32]Extension\n-\t\t\t}{\n-\t\t\t\textensionMap: exts,\n-\t\t\t},\n-\t\t}\n-\n-\t\tvar u marshalInfo\n-\t\tsiz := u.sizeMessageSet(&ie)\n-\t\tb := make([]byte, 0, siz)\n-\t\treturn u.appendMessageSet(b, &ie, deterministic)\n-\n-\tdefault:\n-\t\treturn nil, errors.New(\"proto: not an extension map\")\n-\t}\n-}\n-\n-// UnmarshalMessageSet decodes the extension map encoded in buf in the message set wire format.\n+// unmarshalMessageSet decodes the extension map encoded in buf in the message set wire format.\n // It is called by Unmarshal methods on protocol buffer messages with the message_set_wire_format option.\n-func UnmarshalMessageSet(buf []byte, exts interface{}) error {\n+func unmarshalMessageSet(buf []byte, exts interface{}) error {\n \tvar m map[int32]Extension\n \tswitch exts := exts.(type) {\n \tcase *XXX_InternalExtensions:\n@@ -222,93 +179,3 @@ func UnmarshalMessageSet(buf []byte, exts interface{}) error {\n \t}\n \treturn nil\n }\n-\n-// MarshalMessageSetJSON encodes the extension map represented by m in JSON format.\n-// It is called by generated MarshalJSON methods on protocol buffer messages with the message_set_wire_format option.\n-func MarshalMessageSetJSON(exts interface{}) ([]byte, error) {\n-\tvar m map[int32]Extension\n-\tswitch exts := exts.(type) {\n-\tcase *XXX_InternalExtensions:\n-\t\tvar mu sync.Locker\n-\t\tm, mu = exts.extensionsRead()\n-\t\tif m != nil {\n-\t\t\t// Keep the extensions map locked until we're done marshaling to prevent\n-\t\t\t// races between marshaling and unmarshaling the lazily-{en,de}coded\n-\t\t\t// values.\n-\t\t\tmu.Lock()\n-\t\t\tdefer mu.Unlock()\n-\t\t}\n-\tcase map[int32]Extension:\n-\t\tm = exts\n-\tdefault:\n-\t\treturn nil, errors.New(\"proto: not an extension map\")\n-\t}\n-\tvar b bytes.Buffer\n-\tb.WriteByte('{')\n-\n-\t// Process the map in key order for deterministic output.\n-\tids := make([]int32, 0, len(m))\n-\tfor id := range m {\n-\t\tids = append(ids, id)\n-\t}\n-\tsort.Sort(int32Slice(ids)) // int32Slice defined in text.go\n-\n-\tfor i, id := range ids {\n-\t\text := m[id]\n-\t\tmsd, ok := messageSetMap[id]\n-\t\tif !ok {\n-\t\t\t// Unknown type; we can't render it, so skip it.\n-\t\t\tcontinue\n-\t\t}\n-\n-\t\tif i > 0 && b.Len() > 1 {\n-\t\t\tb.WriteByte(',')\n-\t\t}\n-\n-\t\tfmt.Fprintf(&b, `\"[%s]\":`, msd.name)\n-\n-\t\tx := ext.value\n-\t\tif x == nil {\n-\t\t\tx = reflect.New(msd.t.Elem()).Interface()\n-\t\t\tif err := Unmarshal(ext.enc, x.(Message)); err != nil {\n-\t\t\t\treturn nil, err\n-\t\t\t}\n-\t\t}\n-\t\td, err := json.Marshal(x)\n-\t\tif err != nil {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tb.Write(d)\n-\t}\n-\tb.WriteByte('}')\n-\treturn b.Bytes(), nil\n-}\n-\n-// UnmarshalMessageSetJSON decodes the extension map encoded in buf in JSON format.\n-// It is called by generated UnmarshalJSON methods on protocol buffer messages with the message_set_wire_format option.\n-func UnmarshalMessageSetJSON(buf []byte, exts interface{}) error {\n-\t// Common-case fast path.\n-\tif len(buf) == 0 || bytes.Equal(buf, []byte(\"{}\")) {\n-\t\treturn nil\n-\t}\n-\n-\t// This is fairly tricky, and it's not clear that it is needed.\n-\treturn errors.New(\"TODO: UnmarshalMessageSetJSON not yet implemented\")\n-}\n-\n-// A global registry of types that can be used in a MessageSet.\n-\n-var messageSetMap = make(map[int32]messageSetDesc)\n-\n-type messageSetDesc struct {\n-\tt    reflect.Type // pointer to struct\n-\tname string\n-}\n-\n-// RegisterMessageSetType is called from the generated code.\n-func RegisterMessageSetType(m Message, fieldNum int32, name string) {\n-\tmessageSetMap[fieldNum] = messageSetDesc{\n-\t\tt:    reflect.TypeOf(m),\n-\t\tname: name,\n-\t}\n-}"
    },
    {
      "sha": "94fa9194a88231988051f270dfdffe0c7a29572c",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/pointer_reflect.go",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/pointer_reflect.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/pointer_reflect.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/pointer_reflect.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -79,10 +79,13 @@ func toPointer(i *Message) pointer {\n \n // toAddrPointer converts an interface to a pointer that points to\n // the interface data.\n-func toAddrPointer(i *interface{}, isptr bool) pointer {\n+func toAddrPointer(i *interface{}, isptr, deref bool) pointer {\n \tv := reflect.ValueOf(*i)\n \tu := reflect.New(v.Type())\n \tu.Elem().Set(v)\n+\tif deref {\n+\t\tu = u.Elem()\n+\t}\n \treturn pointer{v: u}\n }\n "
    },
    {
      "sha": "dbfffe071b82aabab10a91d5b0c084bf7327b89a",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/pointer_unsafe.go",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/pointer_unsafe.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/pointer_unsafe.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/pointer_unsafe.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -85,16 +85,21 @@ func toPointer(i *Message) pointer {\n \n // toAddrPointer converts an interface to a pointer that points to\n // the interface data.\n-func toAddrPointer(i *interface{}, isptr bool) pointer {\n+func toAddrPointer(i *interface{}, isptr, deref bool) (p pointer) {\n \t// Super-tricky - read or get the address of data word of interface value.\n \tif isptr {\n \t\t// The interface is of pointer type, thus it is a direct interface.\n \t\t// The data word is the pointer data itself. We take its address.\n-\t\treturn pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}\n+\t\tp = pointer{p: unsafe.Pointer(uintptr(unsafe.Pointer(i)) + ptrSize)}\n+\t} else {\n+\t\t// The interface is not of pointer type. The data word is the pointer\n+\t\t// to the data.\n+\t\tp = pointer{p: (*[2]unsafe.Pointer)(unsafe.Pointer(i))[1]}\n \t}\n-\t// The interface is not of pointer type. The data word is the pointer\n-\t// to the data.\n-\treturn pointer{p: (*[2]unsafe.Pointer)(unsafe.Pointer(i))[1]}\n+\tif deref {\n+\t\tp.p = *(*unsafe.Pointer)(p.p)\n+\t}\n+\treturn p\n }\n \n // valToPointer converts v to a pointer. v must be of pointer type."
    },
    {
      "sha": "79668ff5c5ca46fe8705bdefc19801f3e5f4d3fd",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/properties.go",
      "status": "modified",
      "additions": 16,
      "deletions": 15,
      "changes": 31,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/properties.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/properties.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/properties.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -334,9 +334,6 @@ func GetProperties(t reflect.Type) *StructProperties {\n \tsprop, ok := propertiesMap[t]\n \tpropertiesMu.RUnlock()\n \tif ok {\n-\t\tif collectStats {\n-\t\t\tstats.Chit++\n-\t\t}\n \t\treturn sprop\n \t}\n \n@@ -346,17 +343,20 @@ func GetProperties(t reflect.Type) *StructProperties {\n \treturn sprop\n }\n \n+type (\n+\toneofFuncsIface interface {\n+\t\tXXX_OneofFuncs() (func(Message, *Buffer) error, func(Message, int, int, *Buffer) (bool, error), func(Message) int, []interface{})\n+\t}\n+\toneofWrappersIface interface {\n+\t\tXXX_OneofWrappers() []interface{}\n+\t}\n+)\n+\n // getPropertiesLocked requires that propertiesMu is held.\n func getPropertiesLocked(t reflect.Type) *StructProperties {\n \tif prop, ok := propertiesMap[t]; ok {\n-\t\tif collectStats {\n-\t\t\tstats.Chit++\n-\t\t}\n \t\treturn prop\n \t}\n-\tif collectStats {\n-\t\tstats.Cmiss++\n-\t}\n \n \tprop := new(StructProperties)\n \t// in case of recursive protos, fill this in now.\n@@ -391,13 +391,14 @@ func getPropertiesLocked(t reflect.Type) *StructProperties {\n \t// Re-order prop.order.\n \tsort.Sort(prop)\n \n-\ttype oneofMessage interface {\n-\t\tXXX_OneofFuncs() (func(Message, *Buffer) error, func(Message, int, int, *Buffer) (bool, error), func(Message) int, []interface{})\n+\tvar oots []interface{}\n+\tswitch m := reflect.Zero(reflect.PtrTo(t)).Interface().(type) {\n+\tcase oneofFuncsIface:\n+\t\t_, _, _, oots = m.XXX_OneofFuncs()\n+\tcase oneofWrappersIface:\n+\t\toots = m.XXX_OneofWrappers()\n \t}\n-\tif om, ok := reflect.Zero(reflect.PtrTo(t)).Interface().(oneofMessage); ok {\n-\t\tvar oots []interface{}\n-\t\t_, _, _, oots = om.XXX_OneofFuncs()\n-\n+\tif len(oots) > 0 {\n \t\t// Interpret oneof metadata.\n \t\tprop.OneofTypes = make(map[string]*OneofProperties)\n \t\tfor _, oot := range oots {"
    },
    {
      "sha": "5cb11fa955e4d087c7579f4f018b25270a88de47",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/table_marshal.go",
      "status": "modified",
      "additions": 27,
      "deletions": 18,
      "changes": 45,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/table_marshal.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/table_marshal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/table_marshal.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -87,6 +87,7 @@ type marshalElemInfo struct {\n \tsizer     sizer\n \tmarshaler marshaler\n \tisptr     bool // elem is pointer typed, thus interface of this type is a direct interface (extension only)\n+\tderef     bool // dereference the pointer before operating on it; implies isptr\n }\n \n var (\n@@ -320,8 +321,11 @@ func (u *marshalInfo) computeMarshalInfo() {\n \n \t// get oneof implementers\n \tvar oneofImplementers []interface{}\n-\tif m, ok := reflect.Zero(reflect.PtrTo(t)).Interface().(oneofMessage); ok {\n+\tswitch m := reflect.Zero(reflect.PtrTo(t)).Interface().(type) {\n+\tcase oneofFuncsIface:\n \t\t_, _, _, oneofImplementers = m.XXX_OneofFuncs()\n+\tcase oneofWrappersIface:\n+\t\toneofImplementers = m.XXX_OneofWrappers()\n \t}\n \n \tn := t.NumField()\n@@ -407,13 +411,22 @@ func (u *marshalInfo) getExtElemInfo(desc *ExtensionDesc) *marshalElemInfo {\n \t\tpanic(\"tag is not an integer\")\n \t}\n \twt := wiretype(tags[0])\n+\tif t.Kind() == reflect.Ptr && t.Elem().Kind() != reflect.Struct {\n+\t\tt = t.Elem()\n+\t}\n \tsizer, marshaler := typeMarshaler(t, tags, false, false)\n+\tvar deref bool\n+\tif t.Kind() == reflect.Slice && t.Elem().Kind() != reflect.Uint8 {\n+\t\tt = reflect.PtrTo(t)\n+\t\tderef = true\n+\t}\n \te = &marshalElemInfo{\n \t\twiretag:   uint64(tag)<<3 | wt,\n \t\ttagsize:   SizeVarint(uint64(tag) << 3),\n \t\tsizer:     sizer,\n \t\tmarshaler: marshaler,\n \t\tisptr:     t.Kind() == reflect.Ptr,\n+\t\tderef:     deref,\n \t}\n \n \t// update cache\n@@ -448,7 +461,7 @@ func (fi *marshalFieldInfo) computeMarshalFieldInfo(f *reflect.StructField) {\n \n func (fi *marshalFieldInfo) computeOneofFieldInfo(f *reflect.StructField, oneofImplementers []interface{}) {\n \tfi.field = toField(f)\n-\tfi.wiretag = 1<<31 - 1 // Use a large tag number, make oneofs sorted at the end. This tag will not appear on the wire.\n+\tfi.wiretag = math.MaxInt32 // Use a large tag number, make oneofs sorted at the end. This tag will not appear on the wire.\n \tfi.isPointer = true\n \tfi.sizer, fi.marshaler = makeOneOfMarshaler(fi, f)\n \tfi.oneofElems = make(map[reflect.Type]*marshalElemInfo)\n@@ -476,10 +489,6 @@ func (fi *marshalFieldInfo) computeOneofFieldInfo(f *reflect.StructField, oneofI\n \t}\n }\n \n-type oneofMessage interface {\n-\tXXX_OneofFuncs() (func(Message, *Buffer) error, func(Message, int, int, *Buffer) (bool, error), func(Message) int, []interface{})\n-}\n-\n // wiretype returns the wire encoding of the type.\n func wiretype(encoding string) uint64 {\n \tswitch encoding {\n@@ -2310,8 +2319,8 @@ func makeMapMarshaler(f *reflect.StructField) (sizer, marshaler) {\n \t\t\tfor _, k := range m.MapKeys() {\n \t\t\t\tki := k.Interface()\n \t\t\t\tvi := m.MapIndex(k).Interface()\n-\t\t\t\tkaddr := toAddrPointer(&ki, false)             // pointer to key\n-\t\t\t\tvaddr := toAddrPointer(&vi, valIsPtr)          // pointer to value\n+\t\t\t\tkaddr := toAddrPointer(&ki, false, false)      // pointer to key\n+\t\t\t\tvaddr := toAddrPointer(&vi, valIsPtr, false)   // pointer to value\n \t\t\t\tsiz := keySizer(kaddr, 1) + valSizer(vaddr, 1) // tag of key = 1 (size=1), tag of val = 2 (size=1)\n \t\t\t\tn += siz + SizeVarint(uint64(siz)) + tagsize\n \t\t\t}\n@@ -2329,8 +2338,8 @@ func makeMapMarshaler(f *reflect.StructField) (sizer, marshaler) {\n \t\t\tfor _, k := range keys {\n \t\t\t\tki := k.Interface()\n \t\t\t\tvi := m.MapIndex(k).Interface()\n-\t\t\t\tkaddr := toAddrPointer(&ki, false)    // pointer to key\n-\t\t\t\tvaddr := toAddrPointer(&vi, valIsPtr) // pointer to value\n+\t\t\t\tkaddr := toAddrPointer(&ki, false, false)    // pointer to key\n+\t\t\t\tvaddr := toAddrPointer(&vi, valIsPtr, false) // pointer to value\n \t\t\t\tb = appendVarint(b, tag)\n \t\t\t\tsiz := keySizer(kaddr, 1) + valCachedSizer(vaddr, 1) // tag of key = 1 (size=1), tag of val = 2 (size=1)\n \t\t\t\tb = appendVarint(b, uint64(siz))\n@@ -2399,7 +2408,7 @@ func (u *marshalInfo) sizeExtensions(ext *XXX_InternalExtensions) int {\n \t\t// the last time this function was called.\n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tn += ei.sizer(p, ei.tagsize)\n \t}\n \tmu.Unlock()\n@@ -2434,7 +2443,7 @@ func (u *marshalInfo) appendExtensions(b []byte, ext *XXX_InternalExtensions, de\n \n \t\t\tei := u.getExtElemInfo(e.desc)\n \t\t\tv := e.value\n-\t\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\t\tb, err = ei.marshaler(b, p, ei.wiretag, deterministic)\n \t\t\tif !nerr.Merge(err) {\n \t\t\t\treturn b, err\n@@ -2465,7 +2474,7 @@ func (u *marshalInfo) appendExtensions(b []byte, ext *XXX_InternalExtensions, de\n \n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tb, err = ei.marshaler(b, p, ei.wiretag, deterministic)\n \t\tif !nerr.Merge(err) {\n \t\t\treturn b, err\n@@ -2510,7 +2519,7 @@ func (u *marshalInfo) sizeMessageSet(ext *XXX_InternalExtensions) int {\n \n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tn += ei.sizer(p, 1) // message, tag = 3 (size=1)\n \t}\n \tmu.Unlock()\n@@ -2553,7 +2562,7 @@ func (u *marshalInfo) appendMessageSet(b []byte, ext *XXX_InternalExtensions, de\n \n \t\t\tei := u.getExtElemInfo(e.desc)\n \t\t\tv := e.value\n-\t\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\t\tb, err = ei.marshaler(b, p, 3<<3|WireBytes, deterministic)\n \t\t\tif !nerr.Merge(err) {\n \t\t\t\treturn b, err\n@@ -2591,7 +2600,7 @@ func (u *marshalInfo) appendMessageSet(b []byte, ext *XXX_InternalExtensions, de\n \n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tb, err = ei.marshaler(b, p, 3<<3|WireBytes, deterministic)\n \t\tb = append(b, 1<<3|WireEndGroup)\n \t\tif !nerr.Merge(err) {\n@@ -2621,7 +2630,7 @@ func (u *marshalInfo) sizeV1Extensions(m map[int32]Extension) int {\n \n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tn += ei.sizer(p, ei.tagsize)\n \t}\n \treturn n\n@@ -2656,7 +2665,7 @@ func (u *marshalInfo) appendV1Extensions(b []byte, m map[int32]Extension, determ\n \n \t\tei := u.getExtElemInfo(e.desc)\n \t\tv := e.value\n-\t\tp := toAddrPointer(&v, ei.isptr)\n+\t\tp := toAddrPointer(&v, ei.isptr, ei.deref)\n \t\tb, err = ei.marshaler(b, p, ei.wiretag, deterministic)\n \t\tif !nerr.Merge(err) {\n \t\t\treturn b, err"
    },
    {
      "sha": "acee2fc52964081b2201a7bf7049492e82b02c46",
      "filename": "backend/vendor/github.com/golang/protobuf/proto/table_unmarshal.go",
      "status": "modified",
      "additions": 37,
      "deletions": 35,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/table_unmarshal.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/golang/protobuf/proto/table_unmarshal.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/golang/protobuf/proto/table_unmarshal.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -136,7 +136,7 @@ func (u *unmarshalInfo) unmarshal(m pointer, b []byte) error {\n \t\tu.computeUnmarshalInfo()\n \t}\n \tif u.isMessageSet {\n-\t\treturn UnmarshalMessageSet(b, m.offset(u.extensions).toExtensions())\n+\t\treturn unmarshalMessageSet(b, m.offset(u.extensions).toExtensions())\n \t}\n \tvar reqMask uint64 // bitmask of required fields we've seen.\n \tvar errLater error\n@@ -362,46 +362,48 @@ func (u *unmarshalInfo) computeUnmarshalInfo() {\n \t}\n \n \t// Find any types associated with oneof fields.\n-\t// TODO: XXX_OneofFuncs returns more info than we need.  Get rid of some of it?\n-\tfn := reflect.Zero(reflect.PtrTo(t)).MethodByName(\"XXX_OneofFuncs\")\n-\tif fn.IsValid() {\n-\t\tres := fn.Call(nil)[3] // last return value from XXX_OneofFuncs: []interface{}\n-\t\tfor i := res.Len() - 1; i >= 0; i-- {\n-\t\t\tv := res.Index(i)                             // interface{}\n-\t\t\ttptr := reflect.ValueOf(v.Interface()).Type() // *Msg_X\n-\t\t\ttyp := tptr.Elem()                            // Msg_X\n-\n-\t\t\tf := typ.Field(0) // oneof implementers have one field\n-\t\t\tbaseUnmarshal := fieldUnmarshaler(&f)\n-\t\t\ttags := strings.Split(f.Tag.Get(\"protobuf\"), \",\")\n-\t\t\tfieldNum, err := strconv.Atoi(tags[1])\n-\t\t\tif err != nil {\n-\t\t\t\tpanic(\"protobuf tag field not an integer: \" + tags[1])\n-\t\t\t}\n-\t\t\tvar name string\n-\t\t\tfor _, tag := range tags {\n-\t\t\t\tif strings.HasPrefix(tag, \"name=\") {\n-\t\t\t\t\tname = strings.TrimPrefix(tag, \"name=\")\n-\t\t\t\t\tbreak\n-\t\t\t\t}\n+\tvar oneofImplementers []interface{}\n+\tswitch m := reflect.Zero(reflect.PtrTo(t)).Interface().(type) {\n+\tcase oneofFuncsIface:\n+\t\t_, _, _, oneofImplementers = m.XXX_OneofFuncs()\n+\tcase oneofWrappersIface:\n+\t\toneofImplementers = m.XXX_OneofWrappers()\n+\t}\n+\tfor _, v := range oneofImplementers {\n+\t\ttptr := reflect.TypeOf(v) // *Msg_X\n+\t\ttyp := tptr.Elem()        // Msg_X\n+\n+\t\tf := typ.Field(0) // oneof implementers have one field\n+\t\tbaseUnmarshal := fieldUnmarshaler(&f)\n+\t\ttags := strings.Split(f.Tag.Get(\"protobuf\"), \",\")\n+\t\tfieldNum, err := strconv.Atoi(tags[1])\n+\t\tif err != nil {\n+\t\t\tpanic(\"protobuf tag field not an integer: \" + tags[1])\n+\t\t}\n+\t\tvar name string\n+\t\tfor _, tag := range tags {\n+\t\t\tif strings.HasPrefix(tag, \"name=\") {\n+\t\t\t\tname = strings.TrimPrefix(tag, \"name=\")\n+\t\t\t\tbreak\n \t\t\t}\n+\t\t}\n \n-\t\t\t// Find the oneof field that this struct implements.\n-\t\t\t// Might take O(n^2) to process all of the oneofs, but who cares.\n-\t\t\tfor _, of := range oneofFields {\n-\t\t\t\tif tptr.Implements(of.ityp) {\n-\t\t\t\t\t// We have found the corresponding interface for this struct.\n-\t\t\t\t\t// That lets us know where this struct should be stored\n-\t\t\t\t\t// when we encounter it during unmarshaling.\n-\t\t\t\t\tunmarshal := makeUnmarshalOneof(typ, of.ityp, baseUnmarshal)\n-\t\t\t\t\tu.setTag(fieldNum, of.field, unmarshal, 0, name)\n-\t\t\t\t}\n+\t\t// Find the oneof field that this struct implements.\n+\t\t// Might take O(n^2) to process all of the oneofs, but who cares.\n+\t\tfor _, of := range oneofFields {\n+\t\t\tif tptr.Implements(of.ityp) {\n+\t\t\t\t// We have found the corresponding interface for this struct.\n+\t\t\t\t// That lets us know where this struct should be stored\n+\t\t\t\t// when we encounter it during unmarshaling.\n+\t\t\t\tunmarshal := makeUnmarshalOneof(typ, of.ityp, baseUnmarshal)\n+\t\t\t\tu.setTag(fieldNum, of.field, unmarshal, 0, name)\n \t\t\t}\n \t\t}\n+\n \t}\n \n \t// Get extension ranges, if any.\n-\tfn = reflect.Zero(reflect.PtrTo(t)).MethodByName(\"ExtensionRangeArray\")\n+\tfn := reflect.Zero(reflect.PtrTo(t)).MethodByName(\"ExtensionRangeArray\")\n \tif fn.IsValid() {\n \t\tif !u.extensions.IsValid() && !u.oldExtensions.IsValid() {\n \t\t\tpanic(\"a message with extensions, but no extensions field in \" + t.Name())\n@@ -1948,7 +1950,7 @@ func encodeVarint(b []byte, x uint64) []byte {\n // If there is an error, it returns 0,0.\n func decodeVarint(b []byte) (uint64, int) {\n \tvar x, y uint64\n-\tif len(b) <= 0 {\n+\tif len(b) == 0 {\n \t\tgoto bad\n \t}\n \tx = uint64(b[0])"
    },
    {
      "sha": "1cbe04b7d0fc0a49ce0a82006b288a6b29733f62",
      "filename": "backend/vendor/github.com/hashicorp/golang-lru/lru.go",
      "status": "modified",
      "additions": 18,
      "deletions": 12,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/hashicorp/golang-lru/lru.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/hashicorp/golang-lru/lru.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/hashicorp/golang-lru/lru.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -40,31 +40,35 @@ func (c *Cache) Purge() {\n // Add adds a value to the cache.  Returns true if an eviction occurred.\n func (c *Cache) Add(key, value interface{}) (evicted bool) {\n \tc.lock.Lock()\n-\tdefer c.lock.Unlock()\n-\treturn c.lru.Add(key, value)\n+\tevicted = c.lru.Add(key, value)\n+\tc.lock.Unlock()\n+\treturn evicted\n }\n \n // Get looks up a key's value from the cache.\n func (c *Cache) Get(key interface{}) (value interface{}, ok bool) {\n \tc.lock.Lock()\n-\tdefer c.lock.Unlock()\n-\treturn c.lru.Get(key)\n+\tvalue, ok = c.lru.Get(key)\n+\tc.lock.Unlock()\n+\treturn value, ok\n }\n \n // Contains checks if a key is in the cache, without updating the\n // recent-ness or deleting it for being stale.\n func (c *Cache) Contains(key interface{}) bool {\n \tc.lock.RLock()\n-\tdefer c.lock.RUnlock()\n-\treturn c.lru.Contains(key)\n+\tcontainKey := c.lru.Contains(key)\n+\tc.lock.RUnlock()\n+\treturn containKey\n }\n \n // Peek returns the key value (or undefined if not found) without updating\n // the \"recently used\"-ness of the key.\n func (c *Cache) Peek(key interface{}) (value interface{}, ok bool) {\n \tc.lock.RLock()\n-\tdefer c.lock.RUnlock()\n-\treturn c.lru.Peek(key)\n+\tvalue, ok = c.lru.Peek(key)\n+\tc.lock.RUnlock()\n+\treturn value, ok\n }\n \n // ContainsOrAdd checks if a key is in the cache  without updating the\n@@ -98,13 +102,15 @@ func (c *Cache) RemoveOldest() {\n // Keys returns a slice of the keys in the cache, from oldest to newest.\n func (c *Cache) Keys() []interface{} {\n \tc.lock.RLock()\n-\tdefer c.lock.RUnlock()\n-\treturn c.lru.Keys()\n+\tkeys := c.lru.Keys()\n+\tc.lock.RUnlock()\n+\treturn keys\n }\n \n // Len returns the number of items in the cache.\n func (c *Cache) Len() int {\n \tc.lock.RLock()\n-\tdefer c.lock.RUnlock()\n-\treturn c.lru.Len()\n+\tlength := c.lru.Len()\n+\tc.lock.RUnlock()\n+\treturn length\n }"
    },
    {
      "sha": "559fa399c130eb720031bfb75daf16c8eef220df",
      "filename": "backend/vendor/github.com/stretchr/objx/.codeclimate.yml",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/.codeclimate.yml",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/.codeclimate.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/.codeclimate.yml?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -10,4 +10,12 @@ exclude_patterns:\n - \".github/\"\n - \"vendor/\"\n - \"codegen/\"\n+- \"*.yml\"\n+- \".*.yml\"\n+- \"*.md\"\n+- \"Gopkg.*\"\n - \"doc.go\"\n+- \"type_specific_codegen_test.go\"\n+- \"type_specific_codegen.go\"\n+- \".gitignore\"\n+- \"LICENSE\""
    },
    {
      "sha": "cde6eb2affdf22fdd8fd76a7a8281c78b6224ca5",
      "filename": "backend/vendor/github.com/stretchr/objx/.travis.yml",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/.travis.yml",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/.travis.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/.travis.yml?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,8 +1,14 @@\n language: go\n go:\n-  - 1.8\n-  - 1.9\n-  - tip\n+  - \"1.10.x\"\n+  - \"1.11.x\"\n+  - \"1.12.x\"\n+  - master\n+\n+matrix:\n+  allow_failures:\n+    - go: master\n+fast_finish: true\n \n env:\n   global:\n@@ -14,12 +20,11 @@ before_script:\n   - ./cc-test-reporter before-build\n \n install:\n-- go get github.com/go-task/task/cmd/task\n+  - curl -sL https://taskfile.dev/install.sh | sh\n \n script:\n-- task dl-deps\n-- task lint\n-- task test-coverage\n+  - diff -u <(echo -n) <(./bin/task lint)\n+  - ./bin/task test-coverage\n \n after_script:\n   - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT"
    },
    {
      "sha": "eebe342a9602606d3b719f13a26b9a36685cf3c4",
      "filename": "backend/vendor/github.com/stretchr/objx/Gopkg.lock",
      "status": "removed",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/Gopkg.lock",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/Gopkg.lock",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/Gopkg.lock?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,30 +0,0 @@\n-# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.\n-\n-\n-[[projects]]\n-  name = \"github.com/davecgh/go-spew\"\n-  packages = [\"spew\"]\n-  revision = \"346938d642f2ec3594ed81d874461961cd0faa76\"\n-  version = \"v1.1.0\"\n-\n-[[projects]]\n-  name = \"github.com/pmezard/go-difflib\"\n-  packages = [\"difflib\"]\n-  revision = \"792786c7400a136282c1664665ae0a8db921c6c2\"\n-  version = \"v1.0.0\"\n-\n-[[projects]]\n-  name = \"github.com/stretchr/testify\"\n-  packages = [\n-    \"assert\",\n-    \"require\"\n-  ]\n-  revision = \"b91bfb9ebec76498946beb6af7c0230c7cc7ba6c\"\n-  version = \"v1.2.0\"\n-\n-[solve-meta]\n-  analyzer-name = \"dep\"\n-  analyzer-version = 1\n-  inputs-digest = \"2d160a7dea4ffd13c6c31dab40373822f9d78c73beba016d662bef8f7a998876\"\n-  solver-name = \"gps-cdcl\"\n-  solver-version = 1"
    },
    {
      "sha": "d70f1570b95a71d65a5cbf38ff88497d036c016f",
      "filename": "backend/vendor/github.com/stretchr/objx/Gopkg.toml",
      "status": "removed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/Gopkg.toml",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/Gopkg.toml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/Gopkg.toml?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,8 +0,0 @@\n-[prune]\n-  unused-packages = true\n-  non-go = true\n-  go-tests = true\n-\n-[[constraint]]\n-  name = \"github.com/stretchr/testify\"\n-  version = \"~1.2.0\""
    },
    {
      "sha": "246660b21a9f403024ab51a031c6df56d51c9b46",
      "filename": "backend/vendor/github.com/stretchr/objx/README.md",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/README.md?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -74,7 +74,7 @@ To update Objx to the latest version, run:\n     go get -u github.com/stretchr/objx\n \n ### Supported go versions\n-We support the lastest two major Go versions, which are 1.8 and 1.9 at the moment.\n+We support the lastest three major Go versions, which are 1.10, 1.11 and 1.12 at the moment.\n \n ## Contributing\n Please feel free to submit issues, fork the repository and send pull requests!"
    },
    {
      "sha": "a749ac5492e5b68d1157e43f7159b64baafb2920",
      "filename": "backend/vendor/github.com/stretchr/objx/Taskfile.yml",
      "status": "modified",
      "additions": 25,
      "deletions": 27,
      "changes": 52,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/Taskfile.yml",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/Taskfile.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/Taskfile.yml?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,32 +1,30 @@\n-default:\n-  deps: [test]\n+version: '2'\n \n-dl-deps:\n-  desc: Downloads cli dependencies\n-  cmds:\n-    - go get -u github.com/golang/lint/golint\n-    - go get -u github.com/golang/dep/cmd/dep\n+env:\n+  GOFLAGS: -mod=vendor\n \n-update-deps:\n-  desc: Updates dependencies\n-  cmds:\n-    - dep ensure\n-    - dep ensure -update\n+tasks:\n+  default:\n+    deps: [test]\n \n-lint:\n-  desc: Runs golint\n-  cmds:\n-    - go fmt $(go list ./... | grep -v /vendor/)\n-    - go vet $(go list ./... | grep -v /vendor/)\n-    - golint $(ls *.go | grep -v \"doc.go\")\n-  silent: true\n+  lint:\n+    desc: Checks code style\n+    cmds:\n+      - gofmt -d -s *.go\n+      - go vet ./...\n+    silent: true\n \n-test:\n-  desc: Runs go tests\n-  cmds:\n-    - go test -race  .\n+  lint-fix:\n+    desc: Fixes code style\n+    cmds:\n+      - gofmt -w -s *.go\n \n-test-coverage:\n-  desc: Runs go tests and calucates test coverage\n-  cmds:\n-    - go test -coverprofile=c.out .\n+  test:\n+    desc: Runs go tests\n+    cmds:\n+      - go test -race  ./...\n+\n+  test-coverage:\n+    desc: Runs go tests and calucates test coverage\n+    cmds:\n+      - go test -race -coverprofile=c.out ./..."
    },
    {
      "sha": "676316281154e39a56e4f30244785d0aadd12a73",
      "filename": "backend/vendor/github.com/stretchr/objx/accessors.go",
      "status": "modified",
      "additions": 63,
      "deletions": 92,
      "changes": 155,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/accessors.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/accessors.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/accessors.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -6,9 +6,17 @@ import (\n \t\"strings\"\n )\n \n-// arrayAccesRegexString is the regex used to extract the array number\n-// from the access path\n-const arrayAccesRegexString = `^(.+)\\[([0-9]+)\\]$`\n+const (\n+\t// PathSeparator is the character used to separate the elements\n+\t// of the keypath.\n+\t//\n+\t// For example, `location.address.city`\n+\tPathSeparator string = \".\"\n+\n+\t// arrayAccesRegexString is the regex used to extract the array number\n+\t// from the access path\n+\tarrayAccesRegexString = `^(.+)\\[([0-9]+)\\]$`\n+)\n \n // arrayAccesRegex is the compiled arrayAccesRegexString\n var arrayAccesRegex = regexp.MustCompile(arrayAccesRegexString)\n@@ -46,103 +54,66 @@ func (m Map) Set(selector string, value interface{}) Map {\n \treturn m\n }\n \n+// getIndex returns the index, which is hold in s by two braches.\n+// It also returns s withour the index part, e.g. name[1] will return (1, name).\n+// If no index is found, -1 is returned\n+func getIndex(s string) (int, string) {\n+\tarrayMatches := arrayAccesRegex.FindStringSubmatch(s)\n+\tif len(arrayMatches) > 0 {\n+\t\t// Get the key into the map\n+\t\tselector := arrayMatches[1]\n+\t\t// Get the index into the array at the key\n+\t\t// We know this cannt fail because arrayMatches[2] is an int for sure\n+\t\tindex, _ := strconv.Atoi(arrayMatches[2])\n+\t\treturn index, selector\n+\t}\n+\treturn -1, s\n+}\n+\n // access accesses the object using the selector and performs the\n // appropriate action.\n-func access(current, selector, value interface{}, isSet bool) interface{} {\n-\tswitch selector.(type) {\n-\tcase int, int8, int16, int32, int64, uint, uint8, uint16, uint32, uint64:\n-\t\tif array, ok := current.([]interface{}); ok {\n-\t\t\tindex := intFromInterface(selector)\n-\t\t\tif index >= len(array) {\n-\t\t\t\treturn nil\n-\t\t\t}\n-\t\t\treturn array[index]\n-\t\t}\n-\t\treturn nil\n-\n-\tcase string:\n-\t\tselStr := selector.(string)\n-\t\tselSegs := strings.SplitN(selStr, PathSeparator, 2)\n-\t\tthisSel := selSegs[0]\n-\t\tindex := -1\n-\t\tvar err error\n-\n-\t\tif strings.Contains(thisSel, \"[\") {\n-\t\t\tarrayMatches := arrayAccesRegex.FindStringSubmatch(thisSel)\n-\t\t\tif len(arrayMatches) > 0 {\n-\t\t\t\t// Get the key into the map\n-\t\t\t\tthisSel = arrayMatches[1]\n+func access(current interface{}, selector string, value interface{}, isSet bool) interface{} {\n+\tselSegs := strings.SplitN(selector, PathSeparator, 2)\n+\tthisSel := selSegs[0]\n+\tindex := -1\n \n-\t\t\t\t// Get the index into the array at the key\n-\t\t\t\tindex, err = strconv.Atoi(arrayMatches[2])\n+\tif strings.Contains(thisSel, \"[\") {\n+\t\tindex, thisSel = getIndex(thisSel)\n+\t}\n \n-\t\t\t\tif err != nil {\n-\t\t\t\t\t// This should never happen. If it does, something has gone\n-\t\t\t\t\t// seriously wrong. Panic.\n-\t\t\t\t\tpanic(\"objx: Array index is not an integer.  Must use array[int].\")\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tif curMap, ok := current.(Map); ok {\n-\t\t\tcurrent = map[string]interface{}(curMap)\n+\tif curMap, ok := current.(Map); ok {\n+\t\tcurrent = map[string]interface{}(curMap)\n+\t}\n+\t// get the object in question\n+\tswitch current.(type) {\n+\tcase map[string]interface{}:\n+\t\tcurMSI := current.(map[string]interface{})\n+\t\tif len(selSegs) <= 1 && isSet {\n+\t\t\tcurMSI[thisSel] = value\n+\t\t\treturn nil\n \t\t}\n-\t\t// get the object in question\n-\t\tswitch current.(type) {\n-\t\tcase map[string]interface{}:\n-\t\t\tcurMSI := current.(map[string]interface{})\n-\t\t\tif len(selSegs) <= 1 && isSet {\n-\t\t\t\tcurMSI[thisSel] = value\n-\t\t\t\treturn nil\n-\t\t\t}\n-\t\t\tcurrent = curMSI[thisSel]\n-\t\tdefault:\n-\t\t\tcurrent = nil\n+\n+\t\t_, ok := curMSI[thisSel].(map[string]interface{})\n+\t\tif (curMSI[thisSel] == nil || !ok) && index == -1 && isSet {\n+\t\t\tcurMSI[thisSel] = map[string]interface{}{}\n \t\t}\n-\t\t// do we need to access the item of an array?\n-\t\tif index > -1 {\n-\t\t\tif array, ok := current.([]interface{}); ok {\n-\t\t\t\tif index < len(array) {\n-\t\t\t\t\tcurrent = array[index]\n-\t\t\t\t} else {\n-\t\t\t\t\tcurrent = nil\n-\t\t\t\t}\n+\n+\t\tcurrent = curMSI[thisSel]\n+\tdefault:\n+\t\tcurrent = nil\n+\t}\n+\t// do we need to access the item of an array?\n+\tif index > -1 {\n+\t\tif array, ok := current.([]interface{}); ok {\n+\t\t\tif index < len(array) {\n+\t\t\t\tcurrent = array[index]\n+\t\t\t} else {\n+\t\t\t\tcurrent = nil\n \t\t\t}\n \t\t}\n-\t\tif len(selSegs) > 1 {\n-\t\t\tcurrent = access(current, selSegs[1], value, isSet)\n-\t\t}\n \t}\n-\treturn current\n-}\n-\n-// intFromInterface converts an interface object to the largest\n-// representation of an unsigned integer using a type switch and\n-// assertions\n-func intFromInterface(selector interface{}) int {\n-\tvar value int\n-\tswitch selector.(type) {\n-\tcase int:\n-\t\tvalue = selector.(int)\n-\tcase int8:\n-\t\tvalue = int(selector.(int8))\n-\tcase int16:\n-\t\tvalue = int(selector.(int16))\n-\tcase int32:\n-\t\tvalue = int(selector.(int32))\n-\tcase int64:\n-\t\tvalue = int(selector.(int64))\n-\tcase uint:\n-\t\tvalue = int(selector.(uint))\n-\tcase uint8:\n-\t\tvalue = int(selector.(uint8))\n-\tcase uint16:\n-\t\tvalue = int(selector.(uint16))\n-\tcase uint32:\n-\t\tvalue = int(selector.(uint32))\n-\tcase uint64:\n-\t\tvalue = int(selector.(uint64))\n-\tdefault:\n-\t\treturn 0\n+\tif len(selSegs) > 1 {\n+\t\tcurrent = access(current, selSegs[1], value, isSet)\n \t}\n-\treturn value\n+\treturn current\n }"
    },
    {
      "sha": "f9eb42a25e0b92a7a2b308a5046b9b71fd1cac9b",
      "filename": "backend/vendor/github.com/stretchr/objx/constants.go",
      "status": "removed",
      "additions": 0,
      "deletions": 13,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/constants.go",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/github.com/stretchr/objx/constants.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/constants.go?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,13 +0,0 @@\n-package objx\n-\n-const (\n-\t// PathSeparator is the character used to separate the elements\n-\t// of the keypath.\n-\t//\n-\t// For example, `location.address.city`\n-\tPathSeparator string = \".\"\n-\n-\t// SignatureSeparator is the character that is used to\n-\t// separate the Base64 string from the security signature.\n-\tSignatureSeparator = \"_\"\n-)"
    },
    {
      "sha": "080aa46e472309dd43c326c6206b1025679e0dd8",
      "filename": "backend/vendor/github.com/stretchr/objx/conversions.go",
      "status": "modified",
      "additions": 180,
      "deletions": 8,
      "changes": 188,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/conversions.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/conversions.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/conversions.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -7,18 +7,115 @@ import (\n \t\"errors\"\n \t\"fmt\"\n \t\"net/url\"\n+\t\"strconv\"\n )\n \n+// SignatureSeparator is the character that is used to\n+// separate the Base64 string from the security signature.\n+const SignatureSeparator = \"_\"\n+\n+// URLValuesSliceKeySuffix is the character that is used to\n+// specify a suffic for slices parsed by URLValues.\n+// If the suffix is set to \"[i]\", then the index of the slice\n+// is used in place of i\n+// Ex: Suffix \"[]\" would have the form a[]=b&a[]=c\n+// OR Suffix \"[i]\" would have the form a[0]=b&a[1]=c\n+// OR Suffix \"\" would have the form a=b&a=c\n+var urlValuesSliceKeySuffix = \"[]\"\n+\n+const (\n+\tURLValuesSliceKeySuffixEmpty = \"\"\n+\tURLValuesSliceKeySuffixArray = \"[]\"\n+\tURLValuesSliceKeySuffixIndex = \"[i]\"\n+)\n+\n+// SetURLValuesSliceKeySuffix sets the character that is used to\n+// specify a suffic for slices parsed by URLValues.\n+// If the suffix is set to \"[i]\", then the index of the slice\n+// is used in place of i\n+// Ex: Suffix \"[]\" would have the form a[]=b&a[]=c\n+// OR Suffix \"[i]\" would have the form a[0]=b&a[1]=c\n+// OR Suffix \"\" would have the form a=b&a=c\n+func SetURLValuesSliceKeySuffix(s string) error {\n+\tif s == URLValuesSliceKeySuffixEmpty || s == URLValuesSliceKeySuffixArray || s == URLValuesSliceKeySuffixIndex {\n+\t\turlValuesSliceKeySuffix = s\n+\t\treturn nil\n+\t}\n+\n+\treturn errors.New(\"objx: Invalid URLValuesSliceKeySuffix provided.\")\n+}\n+\n // JSON converts the contained object to a JSON string\n // representation\n func (m Map) JSON() (string, error) {\n+\tfor k, v := range m {\n+\t\tm[k] = cleanUp(v)\n+\t}\n+\n \tresult, err := json.Marshal(m)\n \tif err != nil {\n \t\terr = errors.New(\"objx: JSON encode failed with: \" + err.Error())\n \t}\n \treturn string(result), err\n }\n \n+func cleanUpInterfaceArray(in []interface{}) []interface{} {\n+\tresult := make([]interface{}, len(in))\n+\tfor i, v := range in {\n+\t\tresult[i] = cleanUp(v)\n+\t}\n+\treturn result\n+}\n+\n+func cleanUpInterfaceMap(in map[interface{}]interface{}) Map {\n+\tresult := Map{}\n+\tfor k, v := range in {\n+\t\tresult[fmt.Sprintf(\"%v\", k)] = cleanUp(v)\n+\t}\n+\treturn result\n+}\n+\n+func cleanUpStringMap(in map[string]interface{}) Map {\n+\tresult := Map{}\n+\tfor k, v := range in {\n+\t\tresult[k] = cleanUp(v)\n+\t}\n+\treturn result\n+}\n+\n+func cleanUpMSIArray(in []map[string]interface{}) []Map {\n+\tresult := make([]Map, len(in))\n+\tfor i, v := range in {\n+\t\tresult[i] = cleanUpStringMap(v)\n+\t}\n+\treturn result\n+}\n+\n+func cleanUpMapArray(in []Map) []Map {\n+\tresult := make([]Map, len(in))\n+\tfor i, v := range in {\n+\t\tresult[i] = cleanUpStringMap(v)\n+\t}\n+\treturn result\n+}\n+\n+func cleanUp(v interface{}) interface{} {\n+\tswitch v := v.(type) {\n+\tcase []interface{}:\n+\t\treturn cleanUpInterfaceArray(v)\n+\tcase []map[string]interface{}:\n+\t\treturn cleanUpMSIArray(v)\n+\tcase map[interface{}]interface{}:\n+\t\treturn cleanUpInterfaceMap(v)\n+\tcase Map:\n+\t\treturn cleanUpStringMap(v)\n+\tcase []Map:\n+\t\treturn cleanUpMapArray(v)\n+\tdefault:\n+\t\treturn v\n+\t}\n+}\n+\n // MustJSON converts the contained object to a JSON string\n // representation and panics if there is an error\n func (m Map) MustJSON() string {\n@@ -40,10 +137,7 @@ func (m Map) Base64() (string, error) {\n \t}\n \n \tencoder := base64.NewEncoder(base64.StdEncoding, &buf)\n-\t_, err = encoder.Write([]byte(jsonData))\n-\tif err != nil {\n-\t\treturn \"\", err\n-\t}\n+\t_, _ = encoder.Write([]byte(jsonData))\n \t_ = encoder.Close()\n \n \treturn buf.String(), nil\n@@ -93,13 +187,91 @@ func (m Map) MustSignedBase64(key string) string {\n // function requires that the wrapped object be a map[string]interface{}\n func (m Map) URLValues() url.Values {\n \tvals := make(url.Values)\n-\tfor k, v := range m {\n-\t\t//TODO: can this be done without sprintf?\n-\t\tvals.Set(k, fmt.Sprintf(\"%v\", v))\n-\t}\n+\n+\tm.parseURLValues(m, vals, \"\")\n+\n \treturn vals\n }\n \n+func (m Map) parseURLValues(queryMap Map, vals url.Values, key string) {\n+\tuseSliceIndex := false\n+\tif urlValuesSliceKeySuffix == \"[i]\" {\n+\t\tuseSliceIndex = true\n+\t}\n+\n+\tfor k, v := range queryMap {\n+\t\tval := &Value{data: v}\n+\t\tswitch {\n+\t\tcase val.IsObjxMap():\n+\t\t\tif key == \"\" {\n+\t\t\t\tm.parseURLValues(val.ObjxMap(), vals, k)\n+\t\t\t} else {\n+\t\t\t\tm.parseURLValues(val.ObjxMap(), vals, key+\"[\"+k+\"]\")\n+\t\t\t}\n+\t\tcase val.IsObjxMapSlice():\n+\t\t\tsliceKey := k\n+\t\t\tif key != \"\" {\n+\t\t\t\tsliceKey = key + \"[\" + k + \"]\"\n+\t\t\t}\n+\n+\t\t\tif useSliceIndex {\n+\t\t\t\tfor i, sv := range val.MustObjxMapSlice() {\n+\t\t\t\t\tsk := sliceKey + \"[\" + strconv.FormatInt(int64(i), 10) + \"]\"\n+\t\t\t\t\tm.parseURLValues(sv, vals, sk)\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tsliceKey = sliceKey + urlValuesSliceKeySuffix\n+\t\t\t\tfor _, sv := range val.MustObjxMapSlice() {\n+\t\t\t\t\tm.parseURLValues(sv, vals, sliceKey)\n+\t\t\t\t}\n+\t\t\t}\n+\t\tcase val.IsMSISlice():\n+\t\t\tsliceKey := k\n+\t\t\tif key != \"\" {\n+\t\t\t\tsliceKey = key + \"[\" + k + \"]\"\n+\t\t\t}\n+\n+\t\t\tif useSliceIndex {\n+\t\t\t\tfor i, sv := range val.MustMSISlice() {\n+\t\t\t\t\tsk := sliceKey + \"[\" + strconv.FormatInt(int64(i), 10) + \"]\"\n+\t\t\t\t\tm.parseURLValues(New(sv), vals, sk)\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tsliceKey = sliceKey + urlValuesSliceKeySuffix\n+\t\t\t\tfor _, sv := range val.MustMSISlice() {\n+\t\t\t\t\tm.parseURLValues(New(sv), vals, sliceKey)\n+\t\t\t\t}\n+\t\t\t}\n+\t\tcase val.IsStrSlice(), val.IsBoolSlice(),\n+\t\t\tval.IsFloat32Slice(), val.IsFloat64Slice(),\n+\t\t\tval.IsIntSlice(), val.IsInt8Slice(), val.IsInt16Slice(), val.IsInt32Slice(), val.IsInt64Slice(),\n+\t\t\tval.IsUintSlice(), val.IsUint8Slice(), val.IsUint16Slice(), val.IsUint32Slice(), val.IsUint64Slice():\n+\n+\t\t\tsliceKey := k\n+\t\t\tif key != \"\" {\n+\t\t\t\tsliceKey = key + \"[\" + k + \"]\"\n+\t\t\t}\n+\n+\t\t\tif useSliceIndex {\n+\t\t\t\tfor i, sv := range val.StringSlice() {\n+\t\t\t\t\tsk := sliceKey + \"[\" + strconv.FormatInt(int64(i), 10) + \"]\"\n+\t\t\t\t\tvals.Set(sk, sv)\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tsliceKey = sliceKey + urlValuesSliceKeySuffix\n+\t\t\t\tvals[sliceKey] = val.StringSlice()\n+\t\t\t}\n+\n+\t\tdefault:\n+\t\t\tif key == \"\" {\n+\t\t\t\tvals.Set(k, val.String())\n+\t\t\t} else {\n+\t\t\t\tvals.Set(key+\"[\"+k+\"]\", val.String())\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n // URLQuery gets an encoded URL query representing the given\n // Obj. This function requires that the wrapped object be a\n // map[string]interface{}"
    },
    {
      "sha": "31ec5a7d9484886e181b4e890093c7cecf7e0be1",
      "filename": "backend/vendor/github.com/stretchr/objx/go.mod",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/go.mod?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,8 @@\n+module github.com/stretchr/objx\n+\n+go 1.12\n+\n+require (\n+\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n+\tgithub.com/stretchr/testify v1.3.0\n+)"
    },
    {
      "sha": "4f89841505b81f5596b6f3e084a0c4a8fa9177a4",
      "filename": "backend/vendor/github.com/stretchr/objx/go.sum",
      "status": "added",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/go.sum?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,8 @@\n+github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\n+github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\n+github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\n+github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\n+github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\n+github.com/stretchr/testify v1.3.0 h1:TivCn/peBQ7UY8ooIcPgZFpTNSz0Q2U6UrFlUfqbe0Q=\n+github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI="
    },
    {
      "sha": "95149c06a6d31e0334b82743d3b07c6d4f4bac29",
      "filename": "backend/vendor/github.com/stretchr/objx/map.go",
      "status": "modified",
      "additions": 41,
      "deletions": 3,
      "changes": 44,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/map.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/map.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/map.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -97,12 +97,50 @@ func MustFromJSON(jsonString string) Map {\n //\n // Returns an error if the JSON is invalid.\n func FromJSON(jsonString string) (Map, error) {\n-\tvar data interface{}\n-\terr := json.Unmarshal([]byte(jsonString), &data)\n+\tvar m Map\n+\terr := json.Unmarshal([]byte(jsonString), &m)\n \tif err != nil {\n \t\treturn Nil, err\n \t}\n-\treturn New(data), nil\n+\tm.tryConvertFloat64()\n+\treturn m, nil\n+}\n+\n+func (m Map) tryConvertFloat64() {\n+\tfor k, v := range m {\n+\t\tswitch v.(type) {\n+\t\tcase float64:\n+\t\t\tf := v.(float64)\n+\t\t\tif float64(int(f)) == f {\n+\t\t\t\tm[k] = int(f)\n+\t\t\t}\n+\t\tcase map[string]interface{}:\n+\t\t\tt := New(v)\n+\t\t\tt.tryConvertFloat64()\n+\t\t\tm[k] = t\n+\t\tcase []interface{}:\n+\t\t\tm[k] = tryConvertFloat64InSlice(v.([]interface{}))\n+\t\t}\n+\t}\n+}\n+\n+func tryConvertFloat64InSlice(s []interface{}) []interface{} {\n+\tfor k, v := range s {\n+\t\tswitch v.(type) {\n+\t\tcase float64:\n+\t\t\tf := v.(float64)\n+\t\t\tif float64(int(f)) == f {\n+\t\t\t\ts[k] = int(f)\n+\t\t\t}\n+\t\tcase map[string]interface{}:\n+\t\t\tt := New(v)\n+\t\t\tt.tryConvertFloat64()\n+\t\t\ts[k] = t\n+\t\tcase []interface{}:\n+\t\t\ts[k] = tryConvertFloat64InSlice(v.([]interface{}))\n+\t\t}\n+\t}\n+\treturn s\n }\n \n // FromBase64 creates a new Obj containing the data specified"
    },
    {
      "sha": "80f88d9fa29f84995f379f9cd61f702de64d9d3a",
      "filename": "backend/vendor/github.com/stretchr/objx/type_specific.go",
      "status": "added",
      "additions": 346,
      "deletions": 0,
      "changes": 346,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/type_specific.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/type_specific.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/type_specific.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,346 @@\n+package objx\n+\n+/*\n+   MSI (map[string]interface{} and []map[string]interface{})\n+*/\n+\n+// MSI gets the value as a map[string]interface{}, returns the optionalDefault\n+// value or a system default object if the value is the wrong type.\n+func (v *Value) MSI(optionalDefault ...map[string]interface{}) map[string]interface{} {\n+\tif s, ok := v.data.(map[string]interface{}); ok {\n+\t\treturn s\n+\t}\n+\tif s, ok := v.data.(Map); ok {\n+\t\treturn map[string]interface{}(s)\n+\t}\n+\tif len(optionalDefault) == 1 {\n+\t\treturn optionalDefault[0]\n+\t}\n+\treturn nil\n+}\n+\n+// MustMSI gets the value as a map[string]interface{}.\n+//\n+// Panics if the object is not a map[string]interface{}.\n+func (v *Value) MustMSI() map[string]interface{} {\n+\tif s, ok := v.data.(Map); ok {\n+\t\treturn map[string]interface{}(s)\n+\t}\n+\treturn v.data.(map[string]interface{})\n+}\n+\n+// MSISlice gets the value as a []map[string]interface{}, returns the optionalDefault\n+// value or nil if the value is not a []map[string]interface{}.\n+func (v *Value) MSISlice(optionalDefault ...[]map[string]interface{}) []map[string]interface{} {\n+\tif s, ok := v.data.([]map[string]interface{}); ok {\n+\t\treturn s\n+\t}\n+\n+\ts := v.ObjxMapSlice()\n+\tif s == nil {\n+\t\tif len(optionalDefault) == 1 {\n+\t\t\treturn optionalDefault[0]\n+\t\t}\n+\t\treturn nil\n+\t}\n+\n+\tresult := make([]map[string]interface{}, len(s))\n+\tfor i := range s {\n+\t\tresult[i] = s[i].Value().MSI()\n+\t}\n+\treturn result\n+}\n+\n+// MustMSISlice gets the value as a []map[string]interface{}.\n+//\n+// Panics if the object is not a []map[string]interface{}.\n+func (v *Value) MustMSISlice() []map[string]interface{} {\n+\tif s := v.MSISlice(); s != nil {\n+\t\treturn s\n+\t}\n+\n+\treturn v.data.([]map[string]interface{})\n+}\n+\n+// IsMSI gets whether the object contained is a map[string]interface{} or not.\n+func (v *Value) IsMSI() bool {\n+\t_, ok := v.data.(map[string]interface{})\n+\tif !ok {\n+\t\t_, ok = v.data.(Map)\n+\t}\n+\treturn ok\n+}\n+\n+// IsMSISlice gets whether the object contained is a []map[string]interface{} or not.\n+func (v *Value) IsMSISlice() bool {\n+\t_, ok := v.data.([]map[string]interface{})\n+\tif !ok {\n+\t\t_, ok = v.data.([]Map)\n+\t\tif !ok {\n+\t\t\ts, ok := v.data.([]interface{})\n+\t\t\tif ok {\n+\t\t\t\tfor i := range s {\n+\t\t\t\t\tswitch s[i].(type) {\n+\t\t\t\t\tcase Map:\n+\t\t\t\t\tcase map[string]interface{}:\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\treturn false\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn ok\n+}\n+\n+// EachMSI calls the specified callback for each object\n+// in the []map[string]interface{}.\n+//\n+// Panics if the object is the wrong type.\n+func (v *Value) EachMSI(callback func(int, map[string]interface{}) bool) *Value {\n+\tfor index, val := range v.MustMSISlice() {\n+\t\tcarryon := callback(index, val)\n+\t\tif !carryon {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\treturn v\n+}\n+\n+// WhereMSI uses the specified decider function to select items\n+// from the []map[string]interface{}.  The object contained in the result will contain\n+// only the selected items.\n+func (v *Value) WhereMSI(decider func(int, map[string]interface{}) bool) *Value {\n+\tvar selected []map[string]interface{}\n+\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n+\t\tshouldSelect := decider(index, val)\n+\t\tif !shouldSelect {\n+\t\t\tselected = append(selected, val)\n+\t\t}\n+\t\treturn true\n+\t})\n+\treturn &Value{data: selected}\n+}\n+\n+// GroupMSI uses the specified grouper function to group the items\n+// keyed by the return of the grouper.  The object contained in the\n+// result will contain a map[string][]map[string]interface{}.\n+func (v *Value) GroupMSI(grouper func(int, map[string]interface{}) string) *Value {\n+\tgroups := make(map[string][]map[string]interface{})\n+\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n+\t\tgroup := grouper(index, val)\n+\t\tif _, ok := groups[group]; !ok {\n+\t\t\tgroups[group] = make([]map[string]interface{}, 0)\n+\t\t}\n+\t\tgroups[group] = append(groups[group], val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: groups}\n+}\n+\n+// ReplaceMSI uses the specified function to replace each map[string]interface{}s\n+// by iterating each item.  The data in the returned result will be a\n+// []map[string]interface{} containing the replaced items.\n+func (v *Value) ReplaceMSI(replacer func(int, map[string]interface{}) map[string]interface{}) *Value {\n+\tarr := v.MustMSISlice()\n+\treplaced := make([]map[string]interface{}, len(arr))\n+\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n+\t\treplaced[index] = replacer(index, val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: replaced}\n+}\n+\n+// CollectMSI uses the specified collector function to collect a value\n+// for each of the map[string]interface{}s in the slice.  The data returned will be a\n+// []interface{}.\n+func (v *Value) CollectMSI(collector func(int, map[string]interface{}) interface{}) *Value {\n+\tarr := v.MustMSISlice()\n+\tcollected := make([]interface{}, len(arr))\n+\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n+\t\tcollected[index] = collector(index, val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: collected}\n+}\n+\n+/*\n+   ObjxMap ((Map) and [](Map))\n+*/\n+\n+// ObjxMap gets the value as a (Map), returns the optionalDefault\n+// value or a system default object if the value is the wrong type.\n+func (v *Value) ObjxMap(optionalDefault ...(Map)) Map {\n+\tif s, ok := v.data.((Map)); ok {\n+\t\treturn s\n+\t}\n+\tif s, ok := v.data.(map[string]interface{}); ok {\n+\t\treturn s\n+\t}\n+\tif len(optionalDefault) == 1 {\n+\t\treturn optionalDefault[0]\n+\t}\n+\treturn New(nil)\n+}\n+\n+// MustObjxMap gets the value as a (Map).\n+//\n+// Panics if the object is not a (Map).\n+func (v *Value) MustObjxMap() Map {\n+\tif s, ok := v.data.(map[string]interface{}); ok {\n+\t\treturn s\n+\t}\n+\treturn v.data.((Map))\n+}\n+\n+// ObjxMapSlice gets the value as a [](Map), returns the optionalDefault\n+// value or nil if the value is not a [](Map).\n+func (v *Value) ObjxMapSlice(optionalDefault ...[](Map)) [](Map) {\n+\tif s, ok := v.data.([]Map); ok {\n+\t\treturn s\n+\t}\n+\n+\tif s, ok := v.data.([]map[string]interface{}); ok {\n+\t\tresult := make([]Map, len(s))\n+\t\tfor i := range s {\n+\t\t\tresult[i] = s[i]\n+\t\t}\n+\t\treturn result\n+\t}\n+\n+\ts, ok := v.data.([]interface{})\n+\tif !ok {\n+\t\tif len(optionalDefault) == 1 {\n+\t\t\treturn optionalDefault[0]\n+\t\t}\n+\t\treturn nil\n+\t}\n+\n+\tresult := make([]Map, len(s))\n+\tfor i := range s {\n+\t\tswitch s[i].(type) {\n+\t\tcase Map:\n+\t\t\tresult[i] = s[i].(Map)\n+\t\tcase map[string]interface{}:\n+\t\t\tresult[i] = New(s[i])\n+\t\tdefault:\n+\t\t\treturn nil\n+\t\t}\n+\t}\n+\treturn result\n+}\n+\n+// MustObjxMapSlice gets the value as a [](Map).\n+//\n+// Panics if the object is not a [](Map).\n+func (v *Value) MustObjxMapSlice() [](Map) {\n+\tif s := v.ObjxMapSlice(); s != nil {\n+\t\treturn s\n+\t}\n+\treturn v.data.([](Map))\n+}\n+\n+// IsObjxMap gets whether the object contained is a (Map) or not.\n+func (v *Value) IsObjxMap() bool {\n+\t_, ok := v.data.((Map))\n+\tif !ok {\n+\t\t_, ok = v.data.(map[string]interface{})\n+\t}\n+\treturn ok\n+}\n+\n+// IsObjxMapSlice gets whether the object contained is a [](Map) or not.\n+func (v *Value) IsObjxMapSlice() bool {\n+\t_, ok := v.data.([](Map))\n+\tif !ok {\n+\t\t_, ok = v.data.([]map[string]interface{})\n+\t\tif !ok {\n+\t\t\ts, ok := v.data.([]interface{})\n+\t\t\tif ok {\n+\t\t\t\tfor i := range s {\n+\t\t\t\t\tswitch s[i].(type) {\n+\t\t\t\t\tcase Map:\n+\t\t\t\t\tcase map[string]interface{}:\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\treturn false\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\treturn ok\n+}\n+\n+// EachObjxMap calls the specified callback for each object\n+// in the [](Map).\n+//\n+// Panics if the object is the wrong type.\n+func (v *Value) EachObjxMap(callback func(int, Map) bool) *Value {\n+\tfor index, val := range v.MustObjxMapSlice() {\n+\t\tcarryon := callback(index, val)\n+\t\tif !carryon {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\treturn v\n+}\n+\n+// WhereObjxMap uses the specified decider function to select items\n+// from the [](Map).  The object contained in the result will contain\n+// only the selected items.\n+func (v *Value) WhereObjxMap(decider func(int, Map) bool) *Value {\n+\tvar selected [](Map)\n+\tv.EachObjxMap(func(index int, val Map) bool {\n+\t\tshouldSelect := decider(index, val)\n+\t\tif !shouldSelect {\n+\t\t\tselected = append(selected, val)\n+\t\t}\n+\t\treturn true\n+\t})\n+\treturn &Value{data: selected}\n+}\n+\n+// GroupObjxMap uses the specified grouper function to group the items\n+// keyed by the return of the grouper.  The object contained in the\n+// result will contain a map[string][](Map).\n+func (v *Value) GroupObjxMap(grouper func(int, Map) string) *Value {\n+\tgroups := make(map[string][](Map))\n+\tv.EachObjxMap(func(index int, val Map) bool {\n+\t\tgroup := grouper(index, val)\n+\t\tif _, ok := groups[group]; !ok {\n+\t\t\tgroups[group] = make([](Map), 0)\n+\t\t}\n+\t\tgroups[group] = append(groups[group], val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: groups}\n+}\n+\n+// ReplaceObjxMap uses the specified function to replace each (Map)s\n+// by iterating each item.  The data in the returned result will be a\n+// [](Map) containing the replaced items.\n+func (v *Value) ReplaceObjxMap(replacer func(int, Map) Map) *Value {\n+\tarr := v.MustObjxMapSlice()\n+\treplaced := make([](Map), len(arr))\n+\tv.EachObjxMap(func(index int, val Map) bool {\n+\t\treplaced[index] = replacer(index, val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: replaced}\n+}\n+\n+// CollectObjxMap uses the specified collector function to collect a value\n+// for each of the (Map)s in the slice.  The data returned will be a\n+// []interface{}.\n+func (v *Value) CollectObjxMap(collector func(int, Map) interface{}) *Value {\n+\tarr := v.MustObjxMapSlice()\n+\tcollected := make([]interface{}, len(arr))\n+\tv.EachObjxMap(func(index int, val Map) bool {\n+\t\tcollected[index] = collector(index, val)\n+\t\treturn true\n+\t})\n+\treturn &Value{data: collected}\n+}"
    },
    {
      "sha": "9859b407f0290d3655d03437ce26f87f5fd26f28",
      "filename": "backend/vendor/github.com/stretchr/objx/type_specific_codegen.go",
      "status": "modified",
      "additions": 18,
      "deletions": 268,
      "changes": 286,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/type_specific_codegen.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/type_specific_codegen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/type_specific_codegen.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,7 +1,7 @@\n package objx\n \n /*\n-\tInter (interface{} and []interface{})\n+   Inter (interface{} and []interface{})\n */\n \n // Inter gets the value as a interface{}, returns the optionalDefault\n@@ -126,257 +126,7 @@ func (v *Value) CollectInter(collector func(int, interface{}) interface{}) *Valu\n }\n \n /*\n-\tMSI (map[string]interface{} and []map[string]interface{})\n-*/\n-\n-// MSI gets the value as a map[string]interface{}, returns the optionalDefault\n-// value or a system default object if the value is the wrong type.\n-func (v *Value) MSI(optionalDefault ...map[string]interface{}) map[string]interface{} {\n-\tif s, ok := v.data.(map[string]interface{}); ok {\n-\t\treturn s\n-\t}\n-\tif len(optionalDefault) == 1 {\n-\t\treturn optionalDefault[0]\n-\t}\n-\treturn nil\n-}\n-\n-// MustMSI gets the value as a map[string]interface{}.\n-//\n-// Panics if the object is not a map[string]interface{}.\n-func (v *Value) MustMSI() map[string]interface{} {\n-\treturn v.data.(map[string]interface{})\n-}\n-\n-// MSISlice gets the value as a []map[string]interface{}, returns the optionalDefault\n-// value or nil if the value is not a []map[string]interface{}.\n-func (v *Value) MSISlice(optionalDefault ...[]map[string]interface{}) []map[string]interface{} {\n-\tif s, ok := v.data.([]map[string]interface{}); ok {\n-\t\treturn s\n-\t}\n-\tif len(optionalDefault) == 1 {\n-\t\treturn optionalDefault[0]\n-\t}\n-\treturn nil\n-}\n-\n-// MustMSISlice gets the value as a []map[string]interface{}.\n-//\n-// Panics if the object is not a []map[string]interface{}.\n-func (v *Value) MustMSISlice() []map[string]interface{} {\n-\treturn v.data.([]map[string]interface{})\n-}\n-\n-// IsMSI gets whether the object contained is a map[string]interface{} or not.\n-func (v *Value) IsMSI() bool {\n-\t_, ok := v.data.(map[string]interface{})\n-\treturn ok\n-}\n-\n-// IsMSISlice gets whether the object contained is a []map[string]interface{} or not.\n-func (v *Value) IsMSISlice() bool {\n-\t_, ok := v.data.([]map[string]interface{})\n-\treturn ok\n-}\n-\n-// EachMSI calls the specified callback for each object\n-// in the []map[string]interface{}.\n-//\n-// Panics if the object is the wrong type.\n-func (v *Value) EachMSI(callback func(int, map[string]interface{}) bool) *Value {\n-\tfor index, val := range v.MustMSISlice() {\n-\t\tcarryon := callback(index, val)\n-\t\tif !carryon {\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn v\n-}\n-\n-// WhereMSI uses the specified decider function to select items\n-// from the []map[string]interface{}.  The object contained in the result will contain\n-// only the selected items.\n-func (v *Value) WhereMSI(decider func(int, map[string]interface{}) bool) *Value {\n-\tvar selected []map[string]interface{}\n-\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n-\t\tshouldSelect := decider(index, val)\n-\t\tif !shouldSelect {\n-\t\t\tselected = append(selected, val)\n-\t\t}\n-\t\treturn true\n-\t})\n-\treturn &Value{data: selected}\n-}\n-\n-// GroupMSI uses the specified grouper function to group the items\n-// keyed by the return of the grouper.  The object contained in the\n-// result will contain a map[string][]map[string]interface{}.\n-func (v *Value) GroupMSI(grouper func(int, map[string]interface{}) string) *Value {\n-\tgroups := make(map[string][]map[string]interface{})\n-\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n-\t\tgroup := grouper(index, val)\n-\t\tif _, ok := groups[group]; !ok {\n-\t\t\tgroups[group] = make([]map[string]interface{}, 0)\n-\t\t}\n-\t\tgroups[group] = append(groups[group], val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: groups}\n-}\n-\n-// ReplaceMSI uses the specified function to replace each map[string]interface{}s\n-// by iterating each item.  The data in the returned result will be a\n-// []map[string]interface{} containing the replaced items.\n-func (v *Value) ReplaceMSI(replacer func(int, map[string]interface{}) map[string]interface{}) *Value {\n-\tarr := v.MustMSISlice()\n-\treplaced := make([]map[string]interface{}, len(arr))\n-\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n-\t\treplaced[index] = replacer(index, val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: replaced}\n-}\n-\n-// CollectMSI uses the specified collector function to collect a value\n-// for each of the map[string]interface{}s in the slice.  The data returned will be a\n-// []interface{}.\n-func (v *Value) CollectMSI(collector func(int, map[string]interface{}) interface{}) *Value {\n-\tarr := v.MustMSISlice()\n-\tcollected := make([]interface{}, len(arr))\n-\tv.EachMSI(func(index int, val map[string]interface{}) bool {\n-\t\tcollected[index] = collector(index, val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: collected}\n-}\n-\n-/*\n-\tObjxMap ((Map) and [](Map))\n-*/\n-\n-// ObjxMap gets the value as a (Map), returns the optionalDefault\n-// value or a system default object if the value is the wrong type.\n-func (v *Value) ObjxMap(optionalDefault ...(Map)) Map {\n-\tif s, ok := v.data.((Map)); ok {\n-\t\treturn s\n-\t}\n-\tif len(optionalDefault) == 1 {\n-\t\treturn optionalDefault[0]\n-\t}\n-\treturn New(nil)\n-}\n-\n-// MustObjxMap gets the value as a (Map).\n-//\n-// Panics if the object is not a (Map).\n-func (v *Value) MustObjxMap() Map {\n-\treturn v.data.((Map))\n-}\n-\n-// ObjxMapSlice gets the value as a [](Map), returns the optionalDefault\n-// value or nil if the value is not a [](Map).\n-func (v *Value) ObjxMapSlice(optionalDefault ...[](Map)) [](Map) {\n-\tif s, ok := v.data.([](Map)); ok {\n-\t\treturn s\n-\t}\n-\tif len(optionalDefault) == 1 {\n-\t\treturn optionalDefault[0]\n-\t}\n-\treturn nil\n-}\n-\n-// MustObjxMapSlice gets the value as a [](Map).\n-//\n-// Panics if the object is not a [](Map).\n-func (v *Value) MustObjxMapSlice() [](Map) {\n-\treturn v.data.([](Map))\n-}\n-\n-// IsObjxMap gets whether the object contained is a (Map) or not.\n-func (v *Value) IsObjxMap() bool {\n-\t_, ok := v.data.((Map))\n-\treturn ok\n-}\n-\n-// IsObjxMapSlice gets whether the object contained is a [](Map) or not.\n-func (v *Value) IsObjxMapSlice() bool {\n-\t_, ok := v.data.([](Map))\n-\treturn ok\n-}\n-\n-// EachObjxMap calls the specified callback for each object\n-// in the [](Map).\n-//\n-// Panics if the object is the wrong type.\n-func (v *Value) EachObjxMap(callback func(int, Map) bool) *Value {\n-\tfor index, val := range v.MustObjxMapSlice() {\n-\t\tcarryon := callback(index, val)\n-\t\tif !carryon {\n-\t\t\tbreak\n-\t\t}\n-\t}\n-\treturn v\n-}\n-\n-// WhereObjxMap uses the specified decider function to select items\n-// from the [](Map).  The object contained in the result will contain\n-// only the selected items.\n-func (v *Value) WhereObjxMap(decider func(int, Map) bool) *Value {\n-\tvar selected [](Map)\n-\tv.EachObjxMap(func(index int, val Map) bool {\n-\t\tshouldSelect := decider(index, val)\n-\t\tif !shouldSelect {\n-\t\t\tselected = append(selected, val)\n-\t\t}\n-\t\treturn true\n-\t})\n-\treturn &Value{data: selected}\n-}\n-\n-// GroupObjxMap uses the specified grouper function to group the items\n-// keyed by the return of the grouper.  The object contained in the\n-// result will contain a map[string][](Map).\n-func (v *Value) GroupObjxMap(grouper func(int, Map) string) *Value {\n-\tgroups := make(map[string][](Map))\n-\tv.EachObjxMap(func(index int, val Map) bool {\n-\t\tgroup := grouper(index, val)\n-\t\tif _, ok := groups[group]; !ok {\n-\t\t\tgroups[group] = make([](Map), 0)\n-\t\t}\n-\t\tgroups[group] = append(groups[group], val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: groups}\n-}\n-\n-// ReplaceObjxMap uses the specified function to replace each (Map)s\n-// by iterating each item.  The data in the returned result will be a\n-// [](Map) containing the replaced items.\n-func (v *Value) ReplaceObjxMap(replacer func(int, Map) Map) *Value {\n-\tarr := v.MustObjxMapSlice()\n-\treplaced := make([](Map), len(arr))\n-\tv.EachObjxMap(func(index int, val Map) bool {\n-\t\treplaced[index] = replacer(index, val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: replaced}\n-}\n-\n-// CollectObjxMap uses the specified collector function to collect a value\n-// for each of the (Map)s in the slice.  The data returned will be a\n-// []interface{}.\n-func (v *Value) CollectObjxMap(collector func(int, Map) interface{}) *Value {\n-\tarr := v.MustObjxMapSlice()\n-\tcollected := make([]interface{}, len(arr))\n-\tv.EachObjxMap(func(index int, val Map) bool {\n-\t\tcollected[index] = collector(index, val)\n-\t\treturn true\n-\t})\n-\treturn &Value{data: collected}\n-}\n-\n-/*\n-\tBool (bool and []bool)\n+   Bool (bool and []bool)\n */\n \n // Bool gets the value as a bool, returns the optionalDefault\n@@ -501,7 +251,7 @@ func (v *Value) CollectBool(collector func(int, bool) interface{}) *Value {\n }\n \n /*\n-\tStr (string and []string)\n+   Str (string and []string)\n */\n \n // Str gets the value as a string, returns the optionalDefault\n@@ -626,7 +376,7 @@ func (v *Value) CollectStr(collector func(int, string) interface{}) *Value {\n }\n \n /*\n-\tInt (int and []int)\n+   Int (int and []int)\n */\n \n // Int gets the value as a int, returns the optionalDefault\n@@ -751,7 +501,7 @@ func (v *Value) CollectInt(collector func(int, int) interface{}) *Value {\n }\n \n /*\n-\tInt8 (int8 and []int8)\n+   Int8 (int8 and []int8)\n */\n \n // Int8 gets the value as a int8, returns the optionalDefault\n@@ -876,7 +626,7 @@ func (v *Value) CollectInt8(collector func(int, int8) interface{}) *Value {\n }\n \n /*\n-\tInt16 (int16 and []int16)\n+   Int16 (int16 and []int16)\n */\n \n // Int16 gets the value as a int16, returns the optionalDefault\n@@ -1001,7 +751,7 @@ func (v *Value) CollectInt16(collector func(int, int16) interface{}) *Value {\n }\n \n /*\n-\tInt32 (int32 and []int32)\n+   Int32 (int32 and []int32)\n */\n \n // Int32 gets the value as a int32, returns the optionalDefault\n@@ -1126,7 +876,7 @@ func (v *Value) CollectInt32(collector func(int, int32) interface{}) *Value {\n }\n \n /*\n-\tInt64 (int64 and []int64)\n+   Int64 (int64 and []int64)\n */\n \n // Int64 gets the value as a int64, returns the optionalDefault\n@@ -1251,7 +1001,7 @@ func (v *Value) CollectInt64(collector func(int, int64) interface{}) *Value {\n }\n \n /*\n-\tUint (uint and []uint)\n+   Uint (uint and []uint)\n */\n \n // Uint gets the value as a uint, returns the optionalDefault\n@@ -1376,7 +1126,7 @@ func (v *Value) CollectUint(collector func(int, uint) interface{}) *Value {\n }\n \n /*\n-\tUint8 (uint8 and []uint8)\n+   Uint8 (uint8 and []uint8)\n */\n \n // Uint8 gets the value as a uint8, returns the optionalDefault\n@@ -1501,7 +1251,7 @@ func (v *Value) CollectUint8(collector func(int, uint8) interface{}) *Value {\n }\n \n /*\n-\tUint16 (uint16 and []uint16)\n+   Uint16 (uint16 and []uint16)\n */\n \n // Uint16 gets the value as a uint16, returns the optionalDefault\n@@ -1626,7 +1376,7 @@ func (v *Value) CollectUint16(collector func(int, uint16) interface{}) *Value {\n }\n \n /*\n-\tUint32 (uint32 and []uint32)\n+   Uint32 (uint32 and []uint32)\n */\n \n // Uint32 gets the value as a uint32, returns the optionalDefault\n@@ -1751,7 +1501,7 @@ func (v *Value) CollectUint32(collector func(int, uint32) interface{}) *Value {\n }\n \n /*\n-\tUint64 (uint64 and []uint64)\n+   Uint64 (uint64 and []uint64)\n */\n \n // Uint64 gets the value as a uint64, returns the optionalDefault\n@@ -1876,7 +1626,7 @@ func (v *Value) CollectUint64(collector func(int, uint64) interface{}) *Value {\n }\n \n /*\n-\tUintptr (uintptr and []uintptr)\n+   Uintptr (uintptr and []uintptr)\n */\n \n // Uintptr gets the value as a uintptr, returns the optionalDefault\n@@ -2001,7 +1751,7 @@ func (v *Value) CollectUintptr(collector func(int, uintptr) interface{}) *Value\n }\n \n /*\n-\tFloat32 (float32 and []float32)\n+   Float32 (float32 and []float32)\n */\n \n // Float32 gets the value as a float32, returns the optionalDefault\n@@ -2126,7 +1876,7 @@ func (v *Value) CollectFloat32(collector func(int, float32) interface{}) *Value\n }\n \n /*\n-\tFloat64 (float64 and []float64)\n+   Float64 (float64 and []float64)\n */\n \n // Float64 gets the value as a float64, returns the optionalDefault\n@@ -2251,7 +2001,7 @@ func (v *Value) CollectFloat64(collector func(int, float64) interface{}) *Value\n }\n \n /*\n-\tComplex64 (complex64 and []complex64)\n+   Complex64 (complex64 and []complex64)\n */\n \n // Complex64 gets the value as a complex64, returns the optionalDefault\n@@ -2376,7 +2126,7 @@ func (v *Value) CollectComplex64(collector func(int, complex64) interface{}) *Va\n }\n \n /*\n-\tComplex128 (complex128 and []complex128)\n+   Complex128 (complex128 and []complex128)\n */\n \n // Complex128 gets the value as a complex128, returns the optionalDefault"
    },
    {
      "sha": "4e5f9b77e69cb90c6beeb0b313ed56f87411d9a3",
      "filename": "backend/vendor/github.com/stretchr/objx/value.go",
      "status": "modified",
      "additions": 106,
      "deletions": 0,
      "changes": 106,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/value.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/github.com/stretchr/objx/value.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/github.com/stretchr/objx/value.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -20,6 +20,8 @@ func (v *Value) Data() interface{} {\n // String returns the value always as a string\n func (v *Value) String() string {\n \tswitch {\n+\tcase v.IsNil():\n+\t\treturn \"\"\n \tcase v.IsStr():\n \t\treturn v.Str()\n \tcase v.IsBool():\n@@ -51,3 +53,107 @@ func (v *Value) String() string {\n \t}\n \treturn fmt.Sprintf(\"%#v\", v.Data())\n }\n+\n+// StringSlice returns the value always as a []string\n+func (v *Value) StringSlice(optionalDefault ...[]string) []string {\n+\tswitch {\n+\tcase v.IsStrSlice():\n+\t\treturn v.MustStrSlice()\n+\tcase v.IsBoolSlice():\n+\t\tslice := v.MustBoolSlice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatBool(iv)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsFloat32Slice():\n+\t\tslice := v.MustFloat32Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatFloat(float64(iv), 'f', -1, 32)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsFloat64Slice():\n+\t\tslice := v.MustFloat64Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatFloat(iv, 'f', -1, 64)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsIntSlice():\n+\t\tslice := v.MustIntSlice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatInt(int64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsInt8Slice():\n+\t\tslice := v.MustInt8Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatInt(int64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsInt16Slice():\n+\t\tslice := v.MustInt16Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatInt(int64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsInt32Slice():\n+\t\tslice := v.MustInt32Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatInt(int64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsInt64Slice():\n+\t\tslice := v.MustInt64Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatInt(iv, 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsUintSlice():\n+\t\tslice := v.MustUintSlice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatUint(uint64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsUint8Slice():\n+\t\tslice := v.MustUint8Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatUint(uint64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsUint16Slice():\n+\t\tslice := v.MustUint16Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatUint(uint64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsUint32Slice():\n+\t\tslice := v.MustUint32Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatUint(uint64(iv), 10)\n+\t\t}\n+\t\treturn vals\n+\tcase v.IsUint64Slice():\n+\t\tslice := v.MustUint64Slice()\n+\t\tvals := make([]string, len(slice))\n+\t\tfor i, iv := range slice {\n+\t\t\tvals[i] = strconv.FormatUint(iv, 10)\n+\t\t}\n+\t\treturn vals\n+\t}\n+\tif len(optionalDefault) == 1 {\n+\t\treturn optionalDefault[0]\n+\t}\n+\n+\treturn []string{}\n+}"
    },
    {
      "sha": "e562609cc7b58196b364cee1502988d5359c4355",
      "filename": "backend/vendor/golang.org/x/crypto/acme/autocert/autocert.go",
      "status": "modified",
      "additions": 19,
      "deletions": 2,
      "changes": 21,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/crypto/acme/autocert/autocert.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/crypto/acme/autocert/autocert.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/crypto/acme/autocert/autocert.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -32,6 +32,7 @@ import (\n \t\"time\"\n \n \t\"golang.org/x/crypto/acme\"\n+\t\"golang.org/x/net/idna\"\n )\n \n // createCertRetryAfter is how much time to wait before removing a failed state\n@@ -62,10 +63,16 @@ type HostPolicy func(ctx context.Context, host string) error\n // HostWhitelist returns a policy where only the specified host names are allowed.\n // Only exact matches are currently supported. Subdomains, regexp or wildcard\n // will not match.\n+//\n+// Note that all hosts will be converted to Punycode via idna.Lookup.ToASCII so that\n+// Manager.GetCertificate can handle the Unicode IDN and mixedcase hosts correctly.\n+// Invalid hosts will be silently ignored.\n func HostWhitelist(hosts ...string) HostPolicy {\n \twhitelist := make(map[string]bool, len(hosts))\n \tfor _, h := range hosts {\n-\t\twhitelist[h] = true\n+\t\tif h, err := idna.Lookup.ToASCII(h); err == nil {\n+\t\t\twhitelist[h] = true\n+\t\t}\n \t}\n \treturn func(_ context.Context, host string) error {\n \t\tif !whitelist[host] {\n@@ -243,7 +250,17 @@ func (m *Manager) GetCertificate(hello *tls.ClientHelloInfo) (*tls.Certificate,\n \tif !strings.Contains(strings.Trim(name, \".\"), \".\") {\n \t\treturn nil, errors.New(\"acme/autocert: server name component count invalid\")\n \t}\n-\tif strings.ContainsAny(name, `+/\\`) {\n+\n+\t// Note that this conversion is necessary because some server names in the handshakes\n+\t// started by some clients (such as cURL) are not converted to Punycode, which will\n+\t// prevent us from obtaining certificates for them. In addition, we should also treat\n+\t// example.com and EXAMPLE.COM as equivalent and return the same certificate for them.\n+\t// Fortunately, this conversion also helped us deal with this kind of mixedcase problems.\n+\t//\n+\t// Due to the \"σςΣ\" problem (see https://unicode.org/faq/idn.html#22), we can't use\n+\t// idna.Punycode.ToASCII (or just idna.ToASCII) here.\n+\tname, err := idna.Lookup.ToASCII(name)\n+\tif err != nil {\n \t\treturn nil, errors.New(\"acme/autocert: server name contains invalid character\")\n \t}\n "
    },
    {
      "sha": "992cff2a33a5252af208ad046cd137088eccfdc0",
      "filename": "backend/vendor/golang.org/x/net/html/parse.go",
      "status": "modified",
      "additions": 94,
      "deletions": 9,
      "changes": 103,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/html/parse.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/html/parse.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/html/parse.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -630,7 +630,16 @@ func inHeadIM(p *parser) bool {\n \t\t\tp.oe.pop()\n \t\t\tp.acknowledgeSelfClosingTag()\n \t\t\treturn true\n-\t\tcase a.Script, a.Title, a.Noscript, a.Noframes, a.Style:\n+\t\tcase a.Noscript:\n+\t\t\tp.addElement()\n+\t\t\tif p.scripting {\n+\t\t\t\tp.setOriginalIM()\n+\t\t\t\tp.im = textIM\n+\t\t\t} else {\n+\t\t\t\tp.im = inHeadNoscriptIM\n+\t\t\t}\n+\t\t\treturn true\n+\t\tcase a.Script, a.Title, a.Noframes, a.Style:\n \t\t\tp.addElement()\n \t\t\tp.setOriginalIM()\n \t\t\tp.im = textIM\n@@ -692,6 +701,49 @@ func inHeadIM(p *parser) bool {\n \treturn false\n }\n \n+// 12.2.6.4.5.\n+func inHeadNoscriptIM(p *parser) bool {\n+\tswitch p.tok.Type {\n+\tcase DoctypeToken:\n+\t\t// Ignore the token.\n+\t\treturn true\n+\tcase StartTagToken:\n+\t\tswitch p.tok.DataAtom {\n+\t\tcase a.Html:\n+\t\t\treturn inBodyIM(p)\n+\t\tcase a.Basefont, a.Bgsound, a.Link, a.Meta, a.Noframes, a.Style:\n+\t\t\treturn inHeadIM(p)\n+\t\tcase a.Head, a.Noscript:\n+\t\t\t// Ignore the token.\n+\t\t\treturn true\n+\t\t}\n+\tcase EndTagToken:\n+\t\tswitch p.tok.DataAtom {\n+\t\tcase a.Noscript, a.Br:\n+\t\tdefault:\n+\t\t\t// Ignore the token.\n+\t\t\treturn true\n+\t\t}\n+\tcase TextToken:\n+\t\ts := strings.TrimLeft(p.tok.Data, whitespace)\n+\t\tif len(s) == 0 {\n+\t\t\t// It was all whitespace.\n+\t\t\treturn inHeadIM(p)\n+\t\t}\n+\tcase CommentToken:\n+\t\treturn inHeadIM(p)\n+\t}\n+\tp.oe.pop()\n+\tif p.top().DataAtom != a.Head {\n+\t\tpanic(\"html: the new current node will be a head element.\")\n+\t}\n+\tp.im = inHeadIM\n+\tif p.tok.DataAtom == a.Noscript {\n+\t\treturn true\n+\t}\n+\treturn false\n+}\n+\n // Section 12.2.6.4.6.\n func afterHeadIM(p *parser) bool {\n \tswitch p.tok.Type {\n@@ -1692,8 +1744,9 @@ func inCellIM(p *parser) bool {\n \t\t\t\treturn true\n \t\t\t}\n \t\t\t// Close the cell and reprocess.\n-\t\t\tp.popUntil(tableScope, a.Td, a.Th)\n-\t\t\tp.clearActiveFormattingElements()\n+\t\t\tif p.popUntil(tableScope, a.Td, a.Th) {\n+\t\t\t\tp.clearActiveFormattingElements()\n+\t\t\t}\n \t\t\tp.im = inRowIM\n \t\t\treturn false\n \t\t}\n@@ -2247,6 +2300,33 @@ func (p *parser) parse() error {\n //\n // The input is assumed to be UTF-8 encoded.\n func Parse(r io.Reader) (*Node, error) {\n+\treturn ParseWithOptions(r)\n+}\n+\n+// ParseFragment parses a fragment of HTML and returns the nodes that were\n+// found. If the fragment is the InnerHTML for an existing element, pass that\n+// element in context.\n+//\n+// It has the same intricacies as Parse.\n+func ParseFragment(r io.Reader, context *Node) ([]*Node, error) {\n+\treturn ParseFragmentWithOptions(r, context)\n+}\n+\n+// ParseOption configures a parser.\n+type ParseOption func(p *parser)\n+\n+// ParseOptionEnableScripting configures the scripting flag.\n+// https://html.spec.whatwg.org/multipage/webappapis.html#enabling-and-disabling-scripting\n+//\n+// By default, scripting is enabled.\n+func ParseOptionEnableScripting(enable bool) ParseOption {\n+\treturn func(p *parser) {\n+\t\tp.scripting = enable\n+\t}\n+}\n+\n+// ParseWithOptions is like Parse, with options.\n+func ParseWithOptions(r io.Reader, opts ...ParseOption) (*Node, error) {\n \tp := &parser{\n \t\ttokenizer: NewTokenizer(r),\n \t\tdoc: &Node{\n@@ -2256,19 +2336,20 @@ func Parse(r io.Reader) (*Node, error) {\n \t\tframesetOK: true,\n \t\tim:         initialIM,\n \t}\n+\n+\tfor _, f := range opts {\n+\t\tf(p)\n+\t}\n+\n \terr := p.parse()\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \treturn p.doc, nil\n }\n \n-// ParseFragment parses a fragment of HTML and returns the nodes that were\n-// found. If the fragment is the InnerHTML for an existing element, pass that\n-// element in context.\n-//\n-// It has the same intricacies as Parse.\n-func ParseFragment(r io.Reader, context *Node) ([]*Node, error) {\n+// ParseFragmentWithOptions is like ParseFragment, with options.\n+func ParseFragmentWithOptions(r io.Reader, context *Node, opts ...ParseOption) ([]*Node, error) {\n \tcontextTag := \"\"\n \tif context != nil {\n \t\tif context.Type != ElementNode {\n@@ -2292,6 +2373,10 @@ func ParseFragment(r io.Reader, context *Node) ([]*Node, error) {\n \t\tcontext:   context,\n \t}\n \n+\tfor _, f := range opts {\n+\t\tf(p)\n+\t}\n+\n \troot := &Node{\n \t\tType:     ElementNode,\n \t\tDataAtom: a.Html,"
    },
    {
      "sha": "a98a31f40388894036a4122ef802465231b90149",
      "filename": "backend/vendor/golang.org/x/net/idna/idna10.0.0.go",
      "status": "added",
      "additions": 734,
      "deletions": 0,
      "changes": 734,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/idna10.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/idna10.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/idna10.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,734 @@\n+// Code generated by running \"go generate\" in golang.org/x/text. DO NOT EDIT.\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build go1.10\n+\n+// Package idna implements IDNA2008 using the compatibility processing\n+// defined by UTS (Unicode Technical Standard) #46, which defines a standard to\n+// deal with the transition from IDNA2003.\n+//\n+// IDNA2008 (Internationalized Domain Names for Applications), is defined in RFC\n+// 5890, RFC 5891, RFC 5892, RFC 5893 and RFC 5894.\n+// UTS #46 is defined in https://www.unicode.org/reports/tr46.\n+// See https://unicode.org/cldr/utility/idna.jsp for a visualization of the\n+// differences between these two standards.\n+package idna // import \"golang.org/x/net/idna\"\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\t\"unicode/utf8\"\n+\n+\t\"golang.org/x/text/secure/bidirule\"\n+\t\"golang.org/x/text/unicode/bidi\"\n+\t\"golang.org/x/text/unicode/norm\"\n+)\n+\n+// NOTE: Unlike common practice in Go APIs, the functions will return a\n+// sanitized domain name in case of errors. Browsers sometimes use a partially\n+// evaluated string as lookup.\n+// TODO: the current error handling is, in my opinion, the least opinionated.\n+// Other strategies are also viable, though:\n+// Option 1) Return an empty string in case of error, but allow the user to\n+//    specify explicitly which errors to ignore.\n+// Option 2) Return the partially evaluated string if it is itself a valid\n+//    string, otherwise return the empty string in case of error.\n+// Option 3) Option 1 and 2.\n+// Option 4) Always return an empty string for now and implement Option 1 as\n+//    needed, and document that the return string may not be empty in case of\n+//    error in the future.\n+// I think Option 1 is best, but it is quite opinionated.\n+\n+// ToASCII is a wrapper for Punycode.ToASCII.\n+func ToASCII(s string) (string, error) {\n+\treturn Punycode.process(s, true)\n+}\n+\n+// ToUnicode is a wrapper for Punycode.ToUnicode.\n+func ToUnicode(s string) (string, error) {\n+\treturn Punycode.process(s, false)\n+}\n+\n+// An Option configures a Profile at creation time.\n+type Option func(*options)\n+\n+// Transitional sets a Profile to use the Transitional mapping as defined in UTS\n+// #46. This will cause, for example, \"ß\" to be mapped to \"ss\". Using the\n+// transitional mapping provides a compromise between IDNA2003 and IDNA2008\n+// compatibility. It is used by most browsers when resolving domain names. This\n+// option is only meaningful if combined with MapForLookup.\n+func Transitional(transitional bool) Option {\n+\treturn func(o *options) { o.transitional = true }\n+}\n+\n+// VerifyDNSLength sets whether a Profile should fail if any of the IDN parts\n+// are longer than allowed by the RFC.\n+func VerifyDNSLength(verify bool) Option {\n+\treturn func(o *options) { o.verifyDNSLength = verify }\n+}\n+\n+// RemoveLeadingDots removes leading label separators. Leading runes that map to\n+// dots, such as U+3002 IDEOGRAPHIC FULL STOP, are removed as well.\n+//\n+// This is the behavior suggested by the UTS #46 and is adopted by some\n+// browsers.\n+func RemoveLeadingDots(remove bool) Option {\n+\treturn func(o *options) { o.removeLeadingDots = remove }\n+}\n+\n+// ValidateLabels sets whether to check the mandatory label validation criteria\n+// as defined in Section 5.4 of RFC 5891. This includes testing for correct use\n+// of hyphens ('-'), normalization, validity of runes, and the context rules.\n+func ValidateLabels(enable bool) Option {\n+\treturn func(o *options) {\n+\t\t// Don't override existing mappings, but set one that at least checks\n+\t\t// normalization if it is not set.\n+\t\tif o.mapping == nil && enable {\n+\t\t\to.mapping = normalize\n+\t\t}\n+\t\to.trie = trie\n+\t\to.validateLabels = enable\n+\t\to.fromPuny = validateFromPunycode\n+\t}\n+}\n+\n+// StrictDomainName limits the set of permissible ASCII characters to those\n+// allowed in domain names as defined in RFC 1034 (A-Z, a-z, 0-9 and the\n+// hyphen). This is set by default for MapForLookup and ValidateForRegistration.\n+//\n+// This option is useful, for instance, for browsers that allow characters\n+// outside this range, for example a '_' (U+005F LOW LINE). See\n+// http://www.rfc-editor.org/std/std3.txt for more details This option\n+// corresponds to the UseSTD3ASCIIRules option in UTS #46.\n+func StrictDomainName(use bool) Option {\n+\treturn func(o *options) {\n+\t\to.trie = trie\n+\t\to.useSTD3Rules = use\n+\t\to.fromPuny = validateFromPunycode\n+\t}\n+}\n+\n+// NOTE: the following options pull in tables. The tables should not be linked\n+// in as long as the options are not used.\n+\n+// BidiRule enables the Bidi rule as defined in RFC 5893. Any application\n+// that relies on proper validation of labels should include this rule.\n+func BidiRule() Option {\n+\treturn func(o *options) { o.bidirule = bidirule.ValidString }\n+}\n+\n+// ValidateForRegistration sets validation options to verify that a given IDN is\n+// properly formatted for registration as defined by Section 4 of RFC 5891.\n+func ValidateForRegistration() Option {\n+\treturn func(o *options) {\n+\t\to.mapping = validateRegistration\n+\t\tStrictDomainName(true)(o)\n+\t\tValidateLabels(true)(o)\n+\t\tVerifyDNSLength(true)(o)\n+\t\tBidiRule()(o)\n+\t}\n+}\n+\n+// MapForLookup sets validation and mapping options such that a given IDN is\n+// transformed for domain name lookup according to the requirements set out in\n+// Section 5 of RFC 5891. The mappings follow the recommendations of RFC 5894,\n+// RFC 5895 and UTS 46. It does not add the Bidi Rule. Use the BidiRule option\n+// to add this check.\n+//\n+// The mappings include normalization and mapping case, width and other\n+// compatibility mappings.\n+func MapForLookup() Option {\n+\treturn func(o *options) {\n+\t\to.mapping = validateAndMap\n+\t\tStrictDomainName(true)(o)\n+\t\tValidateLabels(true)(o)\n+\t}\n+}\n+\n+type options struct {\n+\ttransitional      bool\n+\tuseSTD3Rules      bool\n+\tvalidateLabels    bool\n+\tverifyDNSLength   bool\n+\tremoveLeadingDots bool\n+\n+\ttrie *idnaTrie\n+\n+\t// fromPuny calls validation rules when converting A-labels to U-labels.\n+\tfromPuny func(p *Profile, s string) error\n+\n+\t// mapping implements a validation and mapping step as defined in RFC 5895\n+\t// or UTS 46, tailored to, for example, domain registration or lookup.\n+\tmapping func(p *Profile, s string) (mapped string, isBidi bool, err error)\n+\n+\t// bidirule, if specified, checks whether s conforms to the Bidi Rule\n+\t// defined in RFC 5893.\n+\tbidirule func(s string) bool\n+}\n+\n+// A Profile defines the configuration of an IDNA mapper.\n+type Profile struct {\n+\toptions\n+}\n+\n+func apply(o *options, opts []Option) {\n+\tfor _, f := range opts {\n+\t\tf(o)\n+\t}\n+}\n+\n+// New creates a new Profile.\n+//\n+// With no options, the returned Profile is the most permissive and equals the\n+// Punycode Profile. Options can be passed to further restrict the Profile. The\n+// MapForLookup and ValidateForRegistration options set a collection of options,\n+// for lookup and registration purposes respectively, which can be tailored by\n+// adding more fine-grained options, where later options override earlier\n+// options.\n+func New(o ...Option) *Profile {\n+\tp := &Profile{}\n+\tapply(&p.options, o)\n+\treturn p\n+}\n+\n+// ToASCII converts a domain or domain label to its ASCII form. For example,\n+// ToASCII(\"bücher.example.com\") is \"xn--bcher-kva.example.com\", and\n+// ToASCII(\"golang\") is \"golang\". If an error is encountered it will return\n+// an error and a (partially) processed result.\n+func (p *Profile) ToASCII(s string) (string, error) {\n+\treturn p.process(s, true)\n+}\n+\n+// ToUnicode converts a domain or domain label to its Unicode form. For example,\n+// ToUnicode(\"xn--bcher-kva.example.com\") is \"bücher.example.com\", and\n+// ToUnicode(\"golang\") is \"golang\". If an error is encountered it will return\n+// an error and a (partially) processed result.\n+func (p *Profile) ToUnicode(s string) (string, error) {\n+\tpp := *p\n+\tpp.transitional = false\n+\treturn pp.process(s, false)\n+}\n+\n+// String reports a string with a description of the profile for debugging\n+// purposes. The string format may change with different versions.\n+func (p *Profile) String() string {\n+\ts := \"\"\n+\tif p.transitional {\n+\t\ts = \"Transitional\"\n+\t} else {\n+\t\ts = \"NonTransitional\"\n+\t}\n+\tif p.useSTD3Rules {\n+\t\ts += \":UseSTD3Rules\"\n+\t}\n+\tif p.validateLabels {\n+\t\ts += \":ValidateLabels\"\n+\t}\n+\tif p.verifyDNSLength {\n+\t\ts += \":VerifyDNSLength\"\n+\t}\n+\treturn s\n+}\n+\n+var (\n+\t// Punycode is a Profile that does raw punycode processing with a minimum\n+\t// of validation.\n+\tPunycode *Profile = punycode\n+\n+\t// Lookup is the recommended profile for looking up domain names, according\n+\t// to Section 5 of RFC 5891. The exact configuration of this profile may\n+\t// change over time.\n+\tLookup *Profile = lookup\n+\n+\t// Display is the recommended profile for displaying domain names.\n+\t// The configuration of this profile may change over time.\n+\tDisplay *Profile = display\n+\n+\t// Registration is the recommended profile for checking whether a given\n+\t// IDN is valid for registration, according to Section 4 of RFC 5891.\n+\tRegistration *Profile = registration\n+\n+\tpunycode = &Profile{}\n+\tlookup   = &Profile{options{\n+\t\ttransitional:   true,\n+\t\tuseSTD3Rules:   true,\n+\t\tvalidateLabels: true,\n+\t\ttrie:           trie,\n+\t\tfromPuny:       validateFromPunycode,\n+\t\tmapping:        validateAndMap,\n+\t\tbidirule:       bidirule.ValidString,\n+\t}}\n+\tdisplay = &Profile{options{\n+\t\tuseSTD3Rules:   true,\n+\t\tvalidateLabels: true,\n+\t\ttrie:           trie,\n+\t\tfromPuny:       validateFromPunycode,\n+\t\tmapping:        validateAndMap,\n+\t\tbidirule:       bidirule.ValidString,\n+\t}}\n+\tregistration = &Profile{options{\n+\t\tuseSTD3Rules:    true,\n+\t\tvalidateLabels:  true,\n+\t\tverifyDNSLength: true,\n+\t\ttrie:            trie,\n+\t\tfromPuny:        validateFromPunycode,\n+\t\tmapping:         validateRegistration,\n+\t\tbidirule:        bidirule.ValidString,\n+\t}}\n+\n+\t// TODO: profiles\n+\t// Register: recommended for approving domain names: don't do any mappings\n+\t// but rather reject on invalid input. Bundle or block deviation characters.\n+)\n+\n+type labelError struct{ label, code_ string }\n+\n+func (e labelError) code() string { return e.code_ }\n+func (e labelError) Error() string {\n+\treturn fmt.Sprintf(\"idna: invalid label %q\", e.label)\n+}\n+\n+type runeError rune\n+\n+func (e runeError) code() string { return \"P1\" }\n+func (e runeError) Error() string {\n+\treturn fmt.Sprintf(\"idna: disallowed rune %U\", e)\n+}\n+\n+// process implements the algorithm described in section 4 of UTS #46,\n+// see https://www.unicode.org/reports/tr46.\n+func (p *Profile) process(s string, toASCII bool) (string, error) {\n+\tvar err error\n+\tvar isBidi bool\n+\tif p.mapping != nil {\n+\t\ts, isBidi, err = p.mapping(p, s)\n+\t}\n+\t// Remove leading empty labels.\n+\tif p.removeLeadingDots {\n+\t\tfor ; len(s) > 0 && s[0] == '.'; s = s[1:] {\n+\t\t}\n+\t}\n+\t// TODO: allow for a quick check of the tables data.\n+\t// It seems like we should only create this error on ToASCII, but the\n+\t// UTS 46 conformance tests suggests we should always check this.\n+\tif err == nil && p.verifyDNSLength && s == \"\" {\n+\t\terr = &labelError{s, \"A4\"}\n+\t}\n+\tlabels := labelIter{orig: s}\n+\tfor ; !labels.done(); labels.next() {\n+\t\tlabel := labels.label()\n+\t\tif label == \"\" {\n+\t\t\t// Empty labels are not okay. The label iterator skips the last\n+\t\t\t// label if it is empty.\n+\t\t\tif err == nil && p.verifyDNSLength {\n+\t\t\t\terr = &labelError{s, \"A4\"}\n+\t\t\t}\n+\t\t\tcontinue\n+\t\t}\n+\t\tif strings.HasPrefix(label, acePrefix) {\n+\t\t\tu, err2 := decode(label[len(acePrefix):])\n+\t\t\tif err2 != nil {\n+\t\t\t\tif err == nil {\n+\t\t\t\t\terr = err2\n+\t\t\t\t}\n+\t\t\t\t// Spec says keep the old label.\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tisBidi = isBidi || bidirule.DirectionString(u) != bidi.LeftToRight\n+\t\t\tlabels.set(u)\n+\t\t\tif err == nil && p.validateLabels {\n+\t\t\t\terr = p.fromPuny(p, u)\n+\t\t\t}\n+\t\t\tif err == nil {\n+\t\t\t\t// This should be called on NonTransitional, according to the\n+\t\t\t\t// spec, but that currently does not have any effect. Use the\n+\t\t\t\t// original profile to preserve options.\n+\t\t\t\terr = p.validateLabel(u)\n+\t\t\t}\n+\t\t} else if err == nil {\n+\t\t\terr = p.validateLabel(label)\n+\t\t}\n+\t}\n+\tif isBidi && p.bidirule != nil && err == nil {\n+\t\tfor labels.reset(); !labels.done(); labels.next() {\n+\t\t\tif !p.bidirule(labels.label()) {\n+\t\t\t\terr = &labelError{s, \"B\"}\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t}\n+\tif toASCII {\n+\t\tfor labels.reset(); !labels.done(); labels.next() {\n+\t\t\tlabel := labels.label()\n+\t\t\tif !ascii(label) {\n+\t\t\t\ta, err2 := encode(acePrefix, label)\n+\t\t\t\tif err == nil {\n+\t\t\t\t\terr = err2\n+\t\t\t\t}\n+\t\t\t\tlabel = a\n+\t\t\t\tlabels.set(a)\n+\t\t\t}\n+\t\t\tn := len(label)\n+\t\t\tif p.verifyDNSLength && err == nil && (n == 0 || n > 63) {\n+\t\t\t\terr = &labelError{label, \"A4\"}\n+\t\t\t}\n+\t\t}\n+\t}\n+\ts = labels.result()\n+\tif toASCII && p.verifyDNSLength && err == nil {\n+\t\t// Compute the length of the domain name minus the root label and its dot.\n+\t\tn := len(s)\n+\t\tif n > 0 && s[n-1] == '.' {\n+\t\t\tn--\n+\t\t}\n+\t\tif len(s) < 1 || n > 253 {\n+\t\t\terr = &labelError{s, \"A4\"}\n+\t\t}\n+\t}\n+\treturn s, err\n+}\n+\n+func normalize(p *Profile, s string) (mapped string, isBidi bool, err error) {\n+\t// TODO: consider first doing a quick check to see if any of these checks\n+\t// need to be done. This will make it slower in the general case, but\n+\t// faster in the common case.\n+\tmapped = norm.NFC.String(s)\n+\tisBidi = bidirule.DirectionString(mapped) == bidi.RightToLeft\n+\treturn mapped, isBidi, nil\n+}\n+\n+func validateRegistration(p *Profile, s string) (idem string, bidi bool, err error) {\n+\t// TODO: filter need for normalization in loop below.\n+\tif !norm.NFC.IsNormalString(s) {\n+\t\treturn s, false, &labelError{s, \"V1\"}\n+\t}\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\tif sz == 0 {\n+\t\t\treturn s, bidi, runeError(utf8.RuneError)\n+\t\t}\n+\t\tbidi = bidi || info(v).isBidi(s[i:])\n+\t\t// Copy bytes not copied so far.\n+\t\tswitch p.simplify(info(v).category()) {\n+\t\t// TODO: handle the NV8 defined in the Unicode idna data set to allow\n+\t\t// for strict conformance to IDNA2008.\n+\t\tcase valid, deviation:\n+\t\tcase disallowed, mapped, unknown, ignored:\n+\t\t\tr, _ := utf8.DecodeRuneInString(s[i:])\n+\t\t\treturn s, bidi, runeError(r)\n+\t\t}\n+\t\ti += sz\n+\t}\n+\treturn s, bidi, nil\n+}\n+\n+func (c info) isBidi(s string) bool {\n+\tif !c.isMapped() {\n+\t\treturn c&attributesMask == rtl\n+\t}\n+\t// TODO: also store bidi info for mapped data. This is possible, but a bit\n+\t// cumbersome and not for the common case.\n+\tp, _ := bidi.LookupString(s)\n+\tswitch p.Class() {\n+\tcase bidi.R, bidi.AL, bidi.AN:\n+\t\treturn true\n+\t}\n+\treturn false\n+}\n+\n+func validateAndMap(p *Profile, s string) (vm string, bidi bool, err error) {\n+\tvar (\n+\t\tb []byte\n+\t\tk int\n+\t)\n+\t// combinedInfoBits contains the or-ed bits of all runes. We use this\n+\t// to derive the mayNeedNorm bit later. This may trigger normalization\n+\t// overeagerly, but it will not do so in the common case. The end result\n+\t// is another 10% saving on BenchmarkProfile for the common case.\n+\tvar combinedInfoBits info\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\tif sz == 0 {\n+\t\t\tb = append(b, s[k:i]...)\n+\t\t\tb = append(b, \"\\ufffd\"...)\n+\t\t\tk = len(s)\n+\t\t\tif err == nil {\n+\t\t\t\terr = runeError(utf8.RuneError)\n+\t\t\t}\n+\t\t\tbreak\n+\t\t}\n+\t\tcombinedInfoBits |= info(v)\n+\t\tbidi = bidi || info(v).isBidi(s[i:])\n+\t\tstart := i\n+\t\ti += sz\n+\t\t// Copy bytes not copied so far.\n+\t\tswitch p.simplify(info(v).category()) {\n+\t\tcase valid:\n+\t\t\tcontinue\n+\t\tcase disallowed:\n+\t\t\tif err == nil {\n+\t\t\t\tr, _ := utf8.DecodeRuneInString(s[start:])\n+\t\t\t\terr = runeError(r)\n+\t\t\t}\n+\t\t\tcontinue\n+\t\tcase mapped, deviation:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\tb = info(v).appendMapping(b, s[start:i])\n+\t\tcase ignored:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\t// drop the rune\n+\t\tcase unknown:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\tb = append(b, \"\\ufffd\"...)\n+\t\t}\n+\t\tk = i\n+\t}\n+\tif k == 0 {\n+\t\t// No changes so far.\n+\t\tif combinedInfoBits&mayNeedNorm != 0 {\n+\t\t\ts = norm.NFC.String(s)\n+\t\t}\n+\t} else {\n+\t\tb = append(b, s[k:]...)\n+\t\tif norm.NFC.QuickSpan(b) != len(b) {\n+\t\t\tb = norm.NFC.Bytes(b)\n+\t\t}\n+\t\t// TODO: the punycode converters require strings as input.\n+\t\ts = string(b)\n+\t}\n+\treturn s, bidi, err\n+}\n+\n+// A labelIter allows iterating over domain name labels.\n+type labelIter struct {\n+\torig     string\n+\tslice    []string\n+\tcurStart int\n+\tcurEnd   int\n+\ti        int\n+}\n+\n+func (l *labelIter) reset() {\n+\tl.curStart = 0\n+\tl.curEnd = 0\n+\tl.i = 0\n+}\n+\n+func (l *labelIter) done() bool {\n+\treturn l.curStart >= len(l.orig)\n+}\n+\n+func (l *labelIter) result() string {\n+\tif l.slice != nil {\n+\t\treturn strings.Join(l.slice, \".\")\n+\t}\n+\treturn l.orig\n+}\n+\n+func (l *labelIter) label() string {\n+\tif l.slice != nil {\n+\t\treturn l.slice[l.i]\n+\t}\n+\tp := strings.IndexByte(l.orig[l.curStart:], '.')\n+\tl.curEnd = l.curStart + p\n+\tif p == -1 {\n+\t\tl.curEnd = len(l.orig)\n+\t}\n+\treturn l.orig[l.curStart:l.curEnd]\n+}\n+\n+// next sets the value to the next label. It skips the last label if it is empty.\n+func (l *labelIter) next() {\n+\tl.i++\n+\tif l.slice != nil {\n+\t\tif l.i >= len(l.slice) || l.i == len(l.slice)-1 && l.slice[l.i] == \"\" {\n+\t\t\tl.curStart = len(l.orig)\n+\t\t}\n+\t} else {\n+\t\tl.curStart = l.curEnd + 1\n+\t\tif l.curStart == len(l.orig)-1 && l.orig[l.curStart] == '.' {\n+\t\t\tl.curStart = len(l.orig)\n+\t\t}\n+\t}\n+}\n+\n+func (l *labelIter) set(s string) {\n+\tif l.slice == nil {\n+\t\tl.slice = strings.Split(l.orig, \".\")\n+\t}\n+\tl.slice[l.i] = s\n+}\n+\n+// acePrefix is the ASCII Compatible Encoding prefix.\n+const acePrefix = \"xn--\"\n+\n+func (p *Profile) simplify(cat category) category {\n+\tswitch cat {\n+\tcase disallowedSTD3Mapped:\n+\t\tif p.useSTD3Rules {\n+\t\t\tcat = disallowed\n+\t\t} else {\n+\t\t\tcat = mapped\n+\t\t}\n+\tcase disallowedSTD3Valid:\n+\t\tif p.useSTD3Rules {\n+\t\t\tcat = disallowed\n+\t\t} else {\n+\t\t\tcat = valid\n+\t\t}\n+\tcase deviation:\n+\t\tif !p.transitional {\n+\t\t\tcat = valid\n+\t\t}\n+\tcase validNV8, validXV8:\n+\t\t// TODO: handle V2008\n+\t\tcat = valid\n+\t}\n+\treturn cat\n+}\n+\n+func validateFromPunycode(p *Profile, s string) error {\n+\tif !norm.NFC.IsNormalString(s) {\n+\t\treturn &labelError{s, \"V1\"}\n+\t}\n+\t// TODO: detect whether string may have to be normalized in the following\n+\t// loop.\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\tif sz == 0 {\n+\t\t\treturn runeError(utf8.RuneError)\n+\t\t}\n+\t\tif c := p.simplify(info(v).category()); c != valid && c != deviation {\n+\t\t\treturn &labelError{s, \"V6\"}\n+\t\t}\n+\t\ti += sz\n+\t}\n+\treturn nil\n+}\n+\n+const (\n+\tzwnj = \"\\u200c\"\n+\tzwj  = \"\\u200d\"\n+)\n+\n+type joinState int8\n+\n+const (\n+\tstateStart joinState = iota\n+\tstateVirama\n+\tstateBefore\n+\tstateBeforeVirama\n+\tstateAfter\n+\tstateFAIL\n+)\n+\n+var joinStates = [][numJoinTypes]joinState{\n+\tstateStart: {\n+\t\tjoiningL:   stateBefore,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateVirama,\n+\t},\n+\tstateVirama: {\n+\t\tjoiningL: stateBefore,\n+\t\tjoiningD: stateBefore,\n+\t},\n+\tstateBefore: {\n+\t\tjoiningL:   stateBefore,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoiningT:   stateBefore,\n+\t\tjoinZWNJ:   stateAfter,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateBeforeVirama,\n+\t},\n+\tstateBeforeVirama: {\n+\t\tjoiningL: stateBefore,\n+\t\tjoiningD: stateBefore,\n+\t\tjoiningT: stateBefore,\n+\t},\n+\tstateAfter: {\n+\t\tjoiningL:   stateFAIL,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoiningT:   stateAfter,\n+\t\tjoiningR:   stateStart,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateAfter, // no-op as we can't accept joiners here\n+\t},\n+\tstateFAIL: {\n+\t\t0:          stateFAIL,\n+\t\tjoiningL:   stateFAIL,\n+\t\tjoiningD:   stateFAIL,\n+\t\tjoiningT:   stateFAIL,\n+\t\tjoiningR:   stateFAIL,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateFAIL,\n+\t},\n+}\n+\n+// validateLabel validates the criteria from Section 4.1. Item 1, 4, and 6 are\n+// already implicitly satisfied by the overall implementation.\n+func (p *Profile) validateLabel(s string) (err error) {\n+\tif s == \"\" {\n+\t\tif p.verifyDNSLength {\n+\t\t\treturn &labelError{s, \"A4\"}\n+\t\t}\n+\t\treturn nil\n+\t}\n+\tif !p.validateLabels {\n+\t\treturn nil\n+\t}\n+\ttrie := p.trie // p.validateLabels is only set if trie is set.\n+\tif len(s) > 4 && s[2] == '-' && s[3] == '-' {\n+\t\treturn &labelError{s, \"V2\"}\n+\t}\n+\tif s[0] == '-' || s[len(s)-1] == '-' {\n+\t\treturn &labelError{s, \"V3\"}\n+\t}\n+\t// TODO: merge the use of this in the trie.\n+\tv, sz := trie.lookupString(s)\n+\tx := info(v)\n+\tif x.isModifier() {\n+\t\treturn &labelError{s, \"V5\"}\n+\t}\n+\t// Quickly return in the absence of zero-width (non) joiners.\n+\tif strings.Index(s, zwj) == -1 && strings.Index(s, zwnj) == -1 {\n+\t\treturn nil\n+\t}\n+\tst := stateStart\n+\tfor i := 0; ; {\n+\t\tjt := x.joinType()\n+\t\tif s[i:i+sz] == zwj {\n+\t\t\tjt = joinZWJ\n+\t\t} else if s[i:i+sz] == zwnj {\n+\t\t\tjt = joinZWNJ\n+\t\t}\n+\t\tst = joinStates[st][jt]\n+\t\tif x.isViramaModifier() {\n+\t\t\tst = joinStates[st][joinVirama]\n+\t\t}\n+\t\tif i += sz; i == len(s) {\n+\t\t\tbreak\n+\t\t}\n+\t\tv, sz = trie.lookupString(s[i:])\n+\t\tx = info(v)\n+\t}\n+\tif st == stateFAIL || st == stateAfter {\n+\t\treturn &labelError{s, \"C\"}\n+\t}\n+\treturn nil\n+}\n+\n+func ascii(s string) bool {\n+\tfor i := 0; i < len(s); i++ {\n+\t\tif s[i] >= utf8.RuneSelf {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}"
    },
    {
      "sha": "8842146b5d9920954100babde5eb3dcc2ffb9150",
      "filename": "backend/vendor/golang.org/x/net/idna/idna9.0.0.go",
      "status": "added",
      "additions": 682,
      "deletions": 0,
      "changes": 682,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/idna9.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/idna9.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/idna9.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,682 @@\n+// Code generated by running \"go generate\" in golang.org/x/text. DO NOT EDIT.\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !go1.10\n+\n+// Package idna implements IDNA2008 using the compatibility processing\n+// defined by UTS (Unicode Technical Standard) #46, which defines a standard to\n+// deal with the transition from IDNA2003.\n+//\n+// IDNA2008 (Internationalized Domain Names for Applications), is defined in RFC\n+// 5890, RFC 5891, RFC 5892, RFC 5893 and RFC 5894.\n+// UTS #46 is defined in https://www.unicode.org/reports/tr46.\n+// See https://unicode.org/cldr/utility/idna.jsp for a visualization of the\n+// differences between these two standards.\n+package idna // import \"golang.org/x/net/idna\"\n+\n+import (\n+\t\"fmt\"\n+\t\"strings\"\n+\t\"unicode/utf8\"\n+\n+\t\"golang.org/x/text/secure/bidirule\"\n+\t\"golang.org/x/text/unicode/norm\"\n+)\n+\n+// NOTE: Unlike common practice in Go APIs, the functions will return a\n+// sanitized domain name in case of errors. Browsers sometimes use a partially\n+// evaluated string as lookup.\n+// TODO: the current error handling is, in my opinion, the least opinionated.\n+// Other strategies are also viable, though:\n+// Option 1) Return an empty string in case of error, but allow the user to\n+//    specify explicitly which errors to ignore.\n+// Option 2) Return the partially evaluated string if it is itself a valid\n+//    string, otherwise return the empty string in case of error.\n+// Option 3) Option 1 and 2.\n+// Option 4) Always return an empty string for now and implement Option 1 as\n+//    needed, and document that the return string may not be empty in case of\n+//    error in the future.\n+// I think Option 1 is best, but it is quite opinionated.\n+\n+// ToASCII is a wrapper for Punycode.ToASCII.\n+func ToASCII(s string) (string, error) {\n+\treturn Punycode.process(s, true)\n+}\n+\n+// ToUnicode is a wrapper for Punycode.ToUnicode.\n+func ToUnicode(s string) (string, error) {\n+\treturn Punycode.process(s, false)\n+}\n+\n+// An Option configures a Profile at creation time.\n+type Option func(*options)\n+\n+// Transitional sets a Profile to use the Transitional mapping as defined in UTS\n+// #46. This will cause, for example, \"ß\" to be mapped to \"ss\". Using the\n+// transitional mapping provides a compromise between IDNA2003 and IDNA2008\n+// compatibility. It is used by most browsers when resolving domain names. This\n+// option is only meaningful if combined with MapForLookup.\n+func Transitional(transitional bool) Option {\n+\treturn func(o *options) { o.transitional = true }\n+}\n+\n+// VerifyDNSLength sets whether a Profile should fail if any of the IDN parts\n+// are longer than allowed by the RFC.\n+func VerifyDNSLength(verify bool) Option {\n+\treturn func(o *options) { o.verifyDNSLength = verify }\n+}\n+\n+// RemoveLeadingDots removes leading label separators. Leading runes that map to\n+// dots, such as U+3002 IDEOGRAPHIC FULL STOP, are removed as well.\n+//\n+// This is the behavior suggested by the UTS #46 and is adopted by some\n+// browsers.\n+func RemoveLeadingDots(remove bool) Option {\n+\treturn func(o *options) { o.removeLeadingDots = remove }\n+}\n+\n+// ValidateLabels sets whether to check the mandatory label validation criteria\n+// as defined in Section 5.4 of RFC 5891. This includes testing for correct use\n+// of hyphens ('-'), normalization, validity of runes, and the context rules.\n+func ValidateLabels(enable bool) Option {\n+\treturn func(o *options) {\n+\t\t// Don't override existing mappings, but set one that at least checks\n+\t\t// normalization if it is not set.\n+\t\tif o.mapping == nil && enable {\n+\t\t\to.mapping = normalize\n+\t\t}\n+\t\to.trie = trie\n+\t\to.validateLabels = enable\n+\t\to.fromPuny = validateFromPunycode\n+\t}\n+}\n+\n+// StrictDomainName limits the set of permissable ASCII characters to those\n+// allowed in domain names as defined in RFC 1034 (A-Z, a-z, 0-9 and the\n+// hyphen). This is set by default for MapForLookup and ValidateForRegistration.\n+//\n+// This option is useful, for instance, for browsers that allow characters\n+// outside this range, for example a '_' (U+005F LOW LINE). See\n+// http://www.rfc-editor.org/std/std3.txt for more details This option\n+// corresponds to the UseSTD3ASCIIRules option in UTS #46.\n+func StrictDomainName(use bool) Option {\n+\treturn func(o *options) {\n+\t\to.trie = trie\n+\t\to.useSTD3Rules = use\n+\t\to.fromPuny = validateFromPunycode\n+\t}\n+}\n+\n+// NOTE: the following options pull in tables. The tables should not be linked\n+// in as long as the options are not used.\n+\n+// BidiRule enables the Bidi rule as defined in RFC 5893. Any application\n+// that relies on proper validation of labels should include this rule.\n+func BidiRule() Option {\n+\treturn func(o *options) { o.bidirule = bidirule.ValidString }\n+}\n+\n+// ValidateForRegistration sets validation options to verify that a given IDN is\n+// properly formatted for registration as defined by Section 4 of RFC 5891.\n+func ValidateForRegistration() Option {\n+\treturn func(o *options) {\n+\t\to.mapping = validateRegistration\n+\t\tStrictDomainName(true)(o)\n+\t\tValidateLabels(true)(o)\n+\t\tVerifyDNSLength(true)(o)\n+\t\tBidiRule()(o)\n+\t}\n+}\n+\n+// MapForLookup sets validation and mapping options such that a given IDN is\n+// transformed for domain name lookup according to the requirements set out in\n+// Section 5 of RFC 5891. The mappings follow the recommendations of RFC 5894,\n+// RFC 5895 and UTS 46. It does not add the Bidi Rule. Use the BidiRule option\n+// to add this check.\n+//\n+// The mappings include normalization and mapping case, width and other\n+// compatibility mappings.\n+func MapForLookup() Option {\n+\treturn func(o *options) {\n+\t\to.mapping = validateAndMap\n+\t\tStrictDomainName(true)(o)\n+\t\tValidateLabels(true)(o)\n+\t\tRemoveLeadingDots(true)(o)\n+\t}\n+}\n+\n+type options struct {\n+\ttransitional      bool\n+\tuseSTD3Rules      bool\n+\tvalidateLabels    bool\n+\tverifyDNSLength   bool\n+\tremoveLeadingDots bool\n+\n+\ttrie *idnaTrie\n+\n+\t// fromPuny calls validation rules when converting A-labels to U-labels.\n+\tfromPuny func(p *Profile, s string) error\n+\n+\t// mapping implements a validation and mapping step as defined in RFC 5895\n+\t// or UTS 46, tailored to, for example, domain registration or lookup.\n+\tmapping func(p *Profile, s string) (string, error)\n+\n+\t// bidirule, if specified, checks whether s conforms to the Bidi Rule\n+\t// defined in RFC 5893.\n+\tbidirule func(s string) bool\n+}\n+\n+// A Profile defines the configuration of a IDNA mapper.\n+type Profile struct {\n+\toptions\n+}\n+\n+func apply(o *options, opts []Option) {\n+\tfor _, f := range opts {\n+\t\tf(o)\n+\t}\n+}\n+\n+// New creates a new Profile.\n+//\n+// With no options, the returned Profile is the most permissive and equals the\n+// Punycode Profile. Options can be passed to further restrict the Profile. The\n+// MapForLookup and ValidateForRegistration options set a collection of options,\n+// for lookup and registration purposes respectively, which can be tailored by\n+// adding more fine-grained options, where later options override earlier\n+// options.\n+func New(o ...Option) *Profile {\n+\tp := &Profile{}\n+\tapply(&p.options, o)\n+\treturn p\n+}\n+\n+// ToASCII converts a domain or domain label to its ASCII form. For example,\n+// ToASCII(\"bücher.example.com\") is \"xn--bcher-kva.example.com\", and\n+// ToASCII(\"golang\") is \"golang\". If an error is encountered it will return\n+// an error and a (partially) processed result.\n+func (p *Profile) ToASCII(s string) (string, error) {\n+\treturn p.process(s, true)\n+}\n+\n+// ToUnicode converts a domain or domain label to its Unicode form. For example,\n+// ToUnicode(\"xn--bcher-kva.example.com\") is \"bücher.example.com\", and\n+// ToUnicode(\"golang\") is \"golang\". If an error is encountered it will return\n+// an error and a (partially) processed result.\n+func (p *Profile) ToUnicode(s string) (string, error) {\n+\tpp := *p\n+\tpp.transitional = false\n+\treturn pp.process(s, false)\n+}\n+\n+// String reports a string with a description of the profile for debugging\n+// purposes. The string format may change with different versions.\n+func (p *Profile) String() string {\n+\ts := \"\"\n+\tif p.transitional {\n+\t\ts = \"Transitional\"\n+\t} else {\n+\t\ts = \"NonTransitional\"\n+\t}\n+\tif p.useSTD3Rules {\n+\t\ts += \":UseSTD3Rules\"\n+\t}\n+\tif p.validateLabels {\n+\t\ts += \":ValidateLabels\"\n+\t}\n+\tif p.verifyDNSLength {\n+\t\ts += \":VerifyDNSLength\"\n+\t}\n+\treturn s\n+}\n+\n+var (\n+\t// Punycode is a Profile that does raw punycode processing with a minimum\n+\t// of validation.\n+\tPunycode *Profile = punycode\n+\n+\t// Lookup is the recommended profile for looking up domain names, according\n+\t// to Section 5 of RFC 5891. The exact configuration of this profile may\n+\t// change over time.\n+\tLookup *Profile = lookup\n+\n+\t// Display is the recommended profile for displaying domain names.\n+\t// The configuration of this profile may change over time.\n+\tDisplay *Profile = display\n+\n+\t// Registration is the recommended profile for checking whether a given\n+\t// IDN is valid for registration, according to Section 4 of RFC 5891.\n+\tRegistration *Profile = registration\n+\n+\tpunycode = &Profile{}\n+\tlookup   = &Profile{options{\n+\t\ttransitional:      true,\n+\t\tuseSTD3Rules:      true,\n+\t\tvalidateLabels:    true,\n+\t\tremoveLeadingDots: true,\n+\t\ttrie:              trie,\n+\t\tfromPuny:          validateFromPunycode,\n+\t\tmapping:           validateAndMap,\n+\t\tbidirule:          bidirule.ValidString,\n+\t}}\n+\tdisplay = &Profile{options{\n+\t\tuseSTD3Rules:      true,\n+\t\tvalidateLabels:    true,\n+\t\tremoveLeadingDots: true,\n+\t\ttrie:              trie,\n+\t\tfromPuny:          validateFromPunycode,\n+\t\tmapping:           validateAndMap,\n+\t\tbidirule:          bidirule.ValidString,\n+\t}}\n+\tregistration = &Profile{options{\n+\t\tuseSTD3Rules:    true,\n+\t\tvalidateLabels:  true,\n+\t\tverifyDNSLength: true,\n+\t\ttrie:            trie,\n+\t\tfromPuny:        validateFromPunycode,\n+\t\tmapping:         validateRegistration,\n+\t\tbidirule:        bidirule.ValidString,\n+\t}}\n+\n+\t// TODO: profiles\n+\t// Register: recommended for approving domain names: don't do any mappings\n+\t// but rather reject on invalid input. Bundle or block deviation characters.\n+)\n+\n+type labelError struct{ label, code_ string }\n+\n+func (e labelError) code() string { return e.code_ }\n+func (e labelError) Error() string {\n+\treturn fmt.Sprintf(\"idna: invalid label %q\", e.label)\n+}\n+\n+type runeError rune\n+\n+func (e runeError) code() string { return \"P1\" }\n+func (e runeError) Error() string {\n+\treturn fmt.Sprintf(\"idna: disallowed rune %U\", e)\n+}\n+\n+// process implements the algorithm described in section 4 of UTS #46,\n+// see https://www.unicode.org/reports/tr46.\n+func (p *Profile) process(s string, toASCII bool) (string, error) {\n+\tvar err error\n+\tif p.mapping != nil {\n+\t\ts, err = p.mapping(p, s)\n+\t}\n+\t// Remove leading empty labels.\n+\tif p.removeLeadingDots {\n+\t\tfor ; len(s) > 0 && s[0] == '.'; s = s[1:] {\n+\t\t}\n+\t}\n+\t// It seems like we should only create this error on ToASCII, but the\n+\t// UTS 46 conformance tests suggests we should always check this.\n+\tif err == nil && p.verifyDNSLength && s == \"\" {\n+\t\terr = &labelError{s, \"A4\"}\n+\t}\n+\tlabels := labelIter{orig: s}\n+\tfor ; !labels.done(); labels.next() {\n+\t\tlabel := labels.label()\n+\t\tif label == \"\" {\n+\t\t\t// Empty labels are not okay. The label iterator skips the last\n+\t\t\t// label if it is empty.\n+\t\t\tif err == nil && p.verifyDNSLength {\n+\t\t\t\terr = &labelError{s, \"A4\"}\n+\t\t\t}\n+\t\t\tcontinue\n+\t\t}\n+\t\tif strings.HasPrefix(label, acePrefix) {\n+\t\t\tu, err2 := decode(label[len(acePrefix):])\n+\t\t\tif err2 != nil {\n+\t\t\t\tif err == nil {\n+\t\t\t\t\terr = err2\n+\t\t\t\t}\n+\t\t\t\t// Spec says keep the old label.\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tlabels.set(u)\n+\t\t\tif err == nil && p.validateLabels {\n+\t\t\t\terr = p.fromPuny(p, u)\n+\t\t\t}\n+\t\t\tif err == nil {\n+\t\t\t\t// This should be called on NonTransitional, according to the\n+\t\t\t\t// spec, but that currently does not have any effect. Use the\n+\t\t\t\t// original profile to preserve options.\n+\t\t\t\terr = p.validateLabel(u)\n+\t\t\t}\n+\t\t} else if err == nil {\n+\t\t\terr = p.validateLabel(label)\n+\t\t}\n+\t}\n+\tif toASCII {\n+\t\tfor labels.reset(); !labels.done(); labels.next() {\n+\t\t\tlabel := labels.label()\n+\t\t\tif !ascii(label) {\n+\t\t\t\ta, err2 := encode(acePrefix, label)\n+\t\t\t\tif err == nil {\n+\t\t\t\t\terr = err2\n+\t\t\t\t}\n+\t\t\t\tlabel = a\n+\t\t\t\tlabels.set(a)\n+\t\t\t}\n+\t\t\tn := len(label)\n+\t\t\tif p.verifyDNSLength && err == nil && (n == 0 || n > 63) {\n+\t\t\t\terr = &labelError{label, \"A4\"}\n+\t\t\t}\n+\t\t}\n+\t}\n+\ts = labels.result()\n+\tif toASCII && p.verifyDNSLength && err == nil {\n+\t\t// Compute the length of the domain name minus the root label and its dot.\n+\t\tn := len(s)\n+\t\tif n > 0 && s[n-1] == '.' {\n+\t\t\tn--\n+\t\t}\n+\t\tif len(s) < 1 || n > 253 {\n+\t\t\terr = &labelError{s, \"A4\"}\n+\t\t}\n+\t}\n+\treturn s, err\n+}\n+\n+func normalize(p *Profile, s string) (string, error) {\n+\treturn norm.NFC.String(s), nil\n+}\n+\n+func validateRegistration(p *Profile, s string) (string, error) {\n+\tif !norm.NFC.IsNormalString(s) {\n+\t\treturn s, &labelError{s, \"V1\"}\n+\t}\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\t// Copy bytes not copied so far.\n+\t\tswitch p.simplify(info(v).category()) {\n+\t\t// TODO: handle the NV8 defined in the Unicode idna data set to allow\n+\t\t// for strict conformance to IDNA2008.\n+\t\tcase valid, deviation:\n+\t\tcase disallowed, mapped, unknown, ignored:\n+\t\t\tr, _ := utf8.DecodeRuneInString(s[i:])\n+\t\t\treturn s, runeError(r)\n+\t\t}\n+\t\ti += sz\n+\t}\n+\treturn s, nil\n+}\n+\n+func validateAndMap(p *Profile, s string) (string, error) {\n+\tvar (\n+\t\terr error\n+\t\tb   []byte\n+\t\tk   int\n+\t)\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\tstart := i\n+\t\ti += sz\n+\t\t// Copy bytes not copied so far.\n+\t\tswitch p.simplify(info(v).category()) {\n+\t\tcase valid:\n+\t\t\tcontinue\n+\t\tcase disallowed:\n+\t\t\tif err == nil {\n+\t\t\t\tr, _ := utf8.DecodeRuneInString(s[start:])\n+\t\t\t\terr = runeError(r)\n+\t\t\t}\n+\t\t\tcontinue\n+\t\tcase mapped, deviation:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\tb = info(v).appendMapping(b, s[start:i])\n+\t\tcase ignored:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\t// drop the rune\n+\t\tcase unknown:\n+\t\t\tb = append(b, s[k:start]...)\n+\t\t\tb = append(b, \"\\ufffd\"...)\n+\t\t}\n+\t\tk = i\n+\t}\n+\tif k == 0 {\n+\t\t// No changes so far.\n+\t\ts = norm.NFC.String(s)\n+\t} else {\n+\t\tb = append(b, s[k:]...)\n+\t\tif norm.NFC.QuickSpan(b) != len(b) {\n+\t\t\tb = norm.NFC.Bytes(b)\n+\t\t}\n+\t\t// TODO: the punycode converters require strings as input.\n+\t\ts = string(b)\n+\t}\n+\treturn s, err\n+}\n+\n+// A labelIter allows iterating over domain name labels.\n+type labelIter struct {\n+\torig     string\n+\tslice    []string\n+\tcurStart int\n+\tcurEnd   int\n+\ti        int\n+}\n+\n+func (l *labelIter) reset() {\n+\tl.curStart = 0\n+\tl.curEnd = 0\n+\tl.i = 0\n+}\n+\n+func (l *labelIter) done() bool {\n+\treturn l.curStart >= len(l.orig)\n+}\n+\n+func (l *labelIter) result() string {\n+\tif l.slice != nil {\n+\t\treturn strings.Join(l.slice, \".\")\n+\t}\n+\treturn l.orig\n+}\n+\n+func (l *labelIter) label() string {\n+\tif l.slice != nil {\n+\t\treturn l.slice[l.i]\n+\t}\n+\tp := strings.IndexByte(l.orig[l.curStart:], '.')\n+\tl.curEnd = l.curStart + p\n+\tif p == -1 {\n+\t\tl.curEnd = len(l.orig)\n+\t}\n+\treturn l.orig[l.curStart:l.curEnd]\n+}\n+\n+// next sets the value to the next label. It skips the last label if it is empty.\n+func (l *labelIter) next() {\n+\tl.i++\n+\tif l.slice != nil {\n+\t\tif l.i >= len(l.slice) || l.i == len(l.slice)-1 && l.slice[l.i] == \"\" {\n+\t\t\tl.curStart = len(l.orig)\n+\t\t}\n+\t} else {\n+\t\tl.curStart = l.curEnd + 1\n+\t\tif l.curStart == len(l.orig)-1 && l.orig[l.curStart] == '.' {\n+\t\t\tl.curStart = len(l.orig)\n+\t\t}\n+\t}\n+}\n+\n+func (l *labelIter) set(s string) {\n+\tif l.slice == nil {\n+\t\tl.slice = strings.Split(l.orig, \".\")\n+\t}\n+\tl.slice[l.i] = s\n+}\n+\n+// acePrefix is the ASCII Compatible Encoding prefix.\n+const acePrefix = \"xn--\"\n+\n+func (p *Profile) simplify(cat category) category {\n+\tswitch cat {\n+\tcase disallowedSTD3Mapped:\n+\t\tif p.useSTD3Rules {\n+\t\t\tcat = disallowed\n+\t\t} else {\n+\t\t\tcat = mapped\n+\t\t}\n+\tcase disallowedSTD3Valid:\n+\t\tif p.useSTD3Rules {\n+\t\t\tcat = disallowed\n+\t\t} else {\n+\t\t\tcat = valid\n+\t\t}\n+\tcase deviation:\n+\t\tif !p.transitional {\n+\t\t\tcat = valid\n+\t\t}\n+\tcase validNV8, validXV8:\n+\t\t// TODO: handle V2008\n+\t\tcat = valid\n+\t}\n+\treturn cat\n+}\n+\n+func validateFromPunycode(p *Profile, s string) error {\n+\tif !norm.NFC.IsNormalString(s) {\n+\t\treturn &labelError{s, \"V1\"}\n+\t}\n+\tfor i := 0; i < len(s); {\n+\t\tv, sz := trie.lookupString(s[i:])\n+\t\tif c := p.simplify(info(v).category()); c != valid && c != deviation {\n+\t\t\treturn &labelError{s, \"V6\"}\n+\t\t}\n+\t\ti += sz\n+\t}\n+\treturn nil\n+}\n+\n+const (\n+\tzwnj = \"\\u200c\"\n+\tzwj  = \"\\u200d\"\n+)\n+\n+type joinState int8\n+\n+const (\n+\tstateStart joinState = iota\n+\tstateVirama\n+\tstateBefore\n+\tstateBeforeVirama\n+\tstateAfter\n+\tstateFAIL\n+)\n+\n+var joinStates = [][numJoinTypes]joinState{\n+\tstateStart: {\n+\t\tjoiningL:   stateBefore,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateVirama,\n+\t},\n+\tstateVirama: {\n+\t\tjoiningL: stateBefore,\n+\t\tjoiningD: stateBefore,\n+\t},\n+\tstateBefore: {\n+\t\tjoiningL:   stateBefore,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoiningT:   stateBefore,\n+\t\tjoinZWNJ:   stateAfter,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateBeforeVirama,\n+\t},\n+\tstateBeforeVirama: {\n+\t\tjoiningL: stateBefore,\n+\t\tjoiningD: stateBefore,\n+\t\tjoiningT: stateBefore,\n+\t},\n+\tstateAfter: {\n+\t\tjoiningL:   stateFAIL,\n+\t\tjoiningD:   stateBefore,\n+\t\tjoiningT:   stateAfter,\n+\t\tjoiningR:   stateStart,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateAfter, // no-op as we can't accept joiners here\n+\t},\n+\tstateFAIL: {\n+\t\t0:          stateFAIL,\n+\t\tjoiningL:   stateFAIL,\n+\t\tjoiningD:   stateFAIL,\n+\t\tjoiningT:   stateFAIL,\n+\t\tjoiningR:   stateFAIL,\n+\t\tjoinZWNJ:   stateFAIL,\n+\t\tjoinZWJ:    stateFAIL,\n+\t\tjoinVirama: stateFAIL,\n+\t},\n+}\n+\n+// validateLabel validates the criteria from Section 4.1. Item 1, 4, and 6 are\n+// already implicitly satisfied by the overall implementation.\n+func (p *Profile) validateLabel(s string) error {\n+\tif s == \"\" {\n+\t\tif p.verifyDNSLength {\n+\t\t\treturn &labelError{s, \"A4\"}\n+\t\t}\n+\t\treturn nil\n+\t}\n+\tif p.bidirule != nil && !p.bidirule(s) {\n+\t\treturn &labelError{s, \"B\"}\n+\t}\n+\tif !p.validateLabels {\n+\t\treturn nil\n+\t}\n+\ttrie := p.trie // p.validateLabels is only set if trie is set.\n+\tif len(s) > 4 && s[2] == '-' && s[3] == '-' {\n+\t\treturn &labelError{s, \"V2\"}\n+\t}\n+\tif s[0] == '-' || s[len(s)-1] == '-' {\n+\t\treturn &labelError{s, \"V3\"}\n+\t}\n+\t// TODO: merge the use of this in the trie.\n+\tv, sz := trie.lookupString(s)\n+\tx := info(v)\n+\tif x.isModifier() {\n+\t\treturn &labelError{s, \"V5\"}\n+\t}\n+\t// Quickly return in the absence of zero-width (non) joiners.\n+\tif strings.Index(s, zwj) == -1 && strings.Index(s, zwnj) == -1 {\n+\t\treturn nil\n+\t}\n+\tst := stateStart\n+\tfor i := 0; ; {\n+\t\tjt := x.joinType()\n+\t\tif s[i:i+sz] == zwj {\n+\t\t\tjt = joinZWJ\n+\t\t} else if s[i:i+sz] == zwnj {\n+\t\t\tjt = joinZWNJ\n+\t\t}\n+\t\tst = joinStates[st][jt]\n+\t\tif x.isViramaModifier() {\n+\t\t\tst = joinStates[st][joinVirama]\n+\t\t}\n+\t\tif i += sz; i == len(s) {\n+\t\t\tbreak\n+\t\t}\n+\t\tv, sz = trie.lookupString(s[i:])\n+\t\tx = info(v)\n+\t}\n+\tif st == stateFAIL || st == stateAfter {\n+\t\treturn &labelError{s, \"C\"}\n+\t}\n+\treturn nil\n+}\n+\n+func ascii(s string) bool {\n+\tfor i := 0; i < len(s); i++ {\n+\t\tif s[i] >= utf8.RuneSelf {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}"
    },
    {
      "sha": "02c7d59af3b417327e3027bd0e0dbd09aa9107e3",
      "filename": "backend/vendor/golang.org/x/net/idna/punycode.go",
      "status": "added",
      "additions": 203,
      "deletions": 0,
      "changes": 203,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/punycode.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/punycode.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/punycode.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,203 @@\n+// Code generated by running \"go generate\" in golang.org/x/text. DO NOT EDIT.\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package idna\n+\n+// This file implements the Punycode algorithm from RFC 3492.\n+\n+import (\n+\t\"math\"\n+\t\"strings\"\n+\t\"unicode/utf8\"\n+)\n+\n+// These parameter values are specified in section 5.\n+//\n+// All computation is done with int32s, so that overflow behavior is identical\n+// regardless of whether int is 32-bit or 64-bit.\n+const (\n+\tbase        int32 = 36\n+\tdamp        int32 = 700\n+\tinitialBias int32 = 72\n+\tinitialN    int32 = 128\n+\tskew        int32 = 38\n+\ttmax        int32 = 26\n+\ttmin        int32 = 1\n+)\n+\n+func punyError(s string) error { return &labelError{s, \"A3\"} }\n+\n+// decode decodes a string as specified in section 6.2.\n+func decode(encoded string) (string, error) {\n+\tif encoded == \"\" {\n+\t\treturn \"\", nil\n+\t}\n+\tpos := 1 + strings.LastIndex(encoded, \"-\")\n+\tif pos == 1 {\n+\t\treturn \"\", punyError(encoded)\n+\t}\n+\tif pos == len(encoded) {\n+\t\treturn encoded[:len(encoded)-1], nil\n+\t}\n+\toutput := make([]rune, 0, len(encoded))\n+\tif pos != 0 {\n+\t\tfor _, r := range encoded[:pos-1] {\n+\t\t\toutput = append(output, r)\n+\t\t}\n+\t}\n+\ti, n, bias := int32(0), initialN, initialBias\n+\tfor pos < len(encoded) {\n+\t\toldI, w := i, int32(1)\n+\t\tfor k := base; ; k += base {\n+\t\t\tif pos == len(encoded) {\n+\t\t\t\treturn \"\", punyError(encoded)\n+\t\t\t}\n+\t\t\tdigit, ok := decodeDigit(encoded[pos])\n+\t\t\tif !ok {\n+\t\t\t\treturn \"\", punyError(encoded)\n+\t\t\t}\n+\t\t\tpos++\n+\t\t\ti += digit * w\n+\t\t\tif i < 0 {\n+\t\t\t\treturn \"\", punyError(encoded)\n+\t\t\t}\n+\t\t\tt := k - bias\n+\t\t\tif t < tmin {\n+\t\t\t\tt = tmin\n+\t\t\t} else if t > tmax {\n+\t\t\t\tt = tmax\n+\t\t\t}\n+\t\t\tif digit < t {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\tw *= base - t\n+\t\t\tif w >= math.MaxInt32/base {\n+\t\t\t\treturn \"\", punyError(encoded)\n+\t\t\t}\n+\t\t}\n+\t\tx := int32(len(output) + 1)\n+\t\tbias = adapt(i-oldI, x, oldI == 0)\n+\t\tn += i / x\n+\t\ti %= x\n+\t\tif n > utf8.MaxRune || len(output) >= 1024 {\n+\t\t\treturn \"\", punyError(encoded)\n+\t\t}\n+\t\toutput = append(output, 0)\n+\t\tcopy(output[i+1:], output[i:])\n+\t\toutput[i] = n\n+\t\ti++\n+\t}\n+\treturn string(output), nil\n+}\n+\n+// encode encodes a string as specified in section 6.3 and prepends prefix to\n+// the result.\n+//\n+// The \"while h < length(input)\" line in the specification becomes \"for\n+// remaining != 0\" in the Go code, because len(s) in Go is in bytes, not runes.\n+func encode(prefix, s string) (string, error) {\n+\toutput := make([]byte, len(prefix), len(prefix)+1+2*len(s))\n+\tcopy(output, prefix)\n+\tdelta, n, bias := int32(0), initialN, initialBias\n+\tb, remaining := int32(0), int32(0)\n+\tfor _, r := range s {\n+\t\tif r < 0x80 {\n+\t\t\tb++\n+\t\t\toutput = append(output, byte(r))\n+\t\t} else {\n+\t\t\tremaining++\n+\t\t}\n+\t}\n+\th := b\n+\tif b > 0 {\n+\t\toutput = append(output, '-')\n+\t}\n+\tfor remaining != 0 {\n+\t\tm := int32(0x7fffffff)\n+\t\tfor _, r := range s {\n+\t\t\tif m > r && r >= n {\n+\t\t\t\tm = r\n+\t\t\t}\n+\t\t}\n+\t\tdelta += (m - n) * (h + 1)\n+\t\tif delta < 0 {\n+\t\t\treturn \"\", punyError(s)\n+\t\t}\n+\t\tn = m\n+\t\tfor _, r := range s {\n+\t\t\tif r < n {\n+\t\t\t\tdelta++\n+\t\t\t\tif delta < 0 {\n+\t\t\t\t\treturn \"\", punyError(s)\n+\t\t\t\t}\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif r > n {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tq := delta\n+\t\t\tfor k := base; ; k += base {\n+\t\t\t\tt := k - bias\n+\t\t\t\tif t < tmin {\n+\t\t\t\t\tt = tmin\n+\t\t\t\t} else if t > tmax {\n+\t\t\t\t\tt = tmax\n+\t\t\t\t}\n+\t\t\t\tif q < t {\n+\t\t\t\t\tbreak\n+\t\t\t\t}\n+\t\t\t\toutput = append(output, encodeDigit(t+(q-t)%(base-t)))\n+\t\t\t\tq = (q - t) / (base - t)\n+\t\t\t}\n+\t\t\toutput = append(output, encodeDigit(q))\n+\t\t\tbias = adapt(delta, h+1, h == b)\n+\t\t\tdelta = 0\n+\t\t\th++\n+\t\t\tremaining--\n+\t\t}\n+\t\tdelta++\n+\t\tn++\n+\t}\n+\treturn string(output), nil\n+}\n+\n+func decodeDigit(x byte) (digit int32, ok bool) {\n+\tswitch {\n+\tcase '0' <= x && x <= '9':\n+\t\treturn int32(x - ('0' - 26)), true\n+\tcase 'A' <= x && x <= 'Z':\n+\t\treturn int32(x - 'A'), true\n+\tcase 'a' <= x && x <= 'z':\n+\t\treturn int32(x - 'a'), true\n+\t}\n+\treturn 0, false\n+}\n+\n+func encodeDigit(digit int32) byte {\n+\tswitch {\n+\tcase 0 <= digit && digit < 26:\n+\t\treturn byte(digit + 'a')\n+\tcase 26 <= digit && digit < 36:\n+\t\treturn byte(digit + ('0' - 26))\n+\t}\n+\tpanic(\"idna: internal error in punycode encoding\")\n+}\n+\n+// adapt is the bias adaptation function specified in section 6.1.\n+func adapt(delta, numPoints int32, firstTime bool) int32 {\n+\tif firstTime {\n+\t\tdelta /= damp\n+\t} else {\n+\t\tdelta /= 2\n+\t}\n+\tdelta += delta / numPoints\n+\tk := int32(0)\n+\tfor delta > ((base-tmin)*tmax)/2 {\n+\t\tdelta /= base - tmin\n+\t\tk += base\n+\t}\n+\treturn k + (base-tmin+1)*delta/(delta+skew)\n+}"
    },
    {
      "sha": "54fddb4b16cce914c20f23527658f5b70ab1b873",
      "filename": "backend/vendor/golang.org/x/net/idna/tables10.0.0.go",
      "status": "added",
      "additions": 4559,
      "deletions": 0,
      "changes": 4559,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables10.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables10.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/tables10.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "c515d7ad2a20d2855f846bd1c8dddafed4e7ef4c",
      "filename": "backend/vendor/golang.org/x/net/idna/tables11.0.0.go",
      "status": "added",
      "additions": 4653,
      "deletions": 0,
      "changes": 4653,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables11.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables11.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/tables11.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "8b65fa16783034e716548f6e2a23a7a816f0ebba",
      "filename": "backend/vendor/golang.org/x/net/idna/tables9.0.0.go",
      "status": "added",
      "additions": 4486,
      "deletions": 0,
      "changes": 4486,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables9.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/tables9.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/tables9.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "c4ef847e7a37d62bb63ea5af5393f877d18ad56a",
      "filename": "backend/vendor/golang.org/x/net/idna/trie.go",
      "status": "added",
      "additions": 72,
      "deletions": 0,
      "changes": 72,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/trie.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/trie.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/trie.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,72 @@\n+// Code generated by running \"go generate\" in golang.org/x/text. DO NOT EDIT.\n+\n+// Copyright 2016 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package idna\n+\n+// appendMapping appends the mapping for the respective rune. isMapped must be\n+// true. A mapping is a categorization of a rune as defined in UTS #46.\n+func (c info) appendMapping(b []byte, s string) []byte {\n+\tindex := int(c >> indexShift)\n+\tif c&xorBit == 0 {\n+\t\ts := mappings[index:]\n+\t\treturn append(b, s[1:s[0]+1]...)\n+\t}\n+\tb = append(b, s...)\n+\tif c&inlineXOR == inlineXOR {\n+\t\t// TODO: support and handle two-byte inline masks\n+\t\tb[len(b)-1] ^= byte(index)\n+\t} else {\n+\t\tfor p := len(b) - int(xorData[index]); p < len(b); p++ {\n+\t\t\tindex++\n+\t\t\tb[p] ^= xorData[index]\n+\t\t}\n+\t}\n+\treturn b\n+}\n+\n+// Sparse block handling code.\n+\n+type valueRange struct {\n+\tvalue  uint16 // header: value:stride\n+\tlo, hi byte   // header: lo:n\n+}\n+\n+type sparseBlocks struct {\n+\tvalues []valueRange\n+\toffset []uint16\n+}\n+\n+var idnaSparse = sparseBlocks{\n+\tvalues: idnaSparseValues[:],\n+\toffset: idnaSparseOffset[:],\n+}\n+\n+// Don't use newIdnaTrie to avoid unconditional linking in of the table.\n+var trie = &idnaTrie{}\n+\n+// lookup determines the type of block n and looks up the value for b.\n+// For n < t.cutoff, the block is a simple lookup table. Otherwise, the block\n+// is a list of ranges with an accompanying value. Given a matching range r,\n+// the value for b is by r.value + (b - r.lo) * stride.\n+func (t *sparseBlocks) lookup(n uint32, b byte) uint16 {\n+\toffset := t.offset[n]\n+\theader := t.values[offset]\n+\tlo := offset + 1\n+\thi := lo + uint16(header.lo)\n+\tfor lo < hi {\n+\t\tm := lo + (hi-lo)/2\n+\t\tr := t.values[m]\n+\t\tif r.lo <= b && b <= r.hi {\n+\t\t\treturn r.value + uint16(b-r.lo)*header.value\n+\t\t}\n+\t\tif b < r.lo {\n+\t\t\thi = m\n+\t\t} else {\n+\t\t\tlo = m + 1\n+\t\t}\n+\t}\n+\treturn 0\n+}"
    },
    {
      "sha": "7a8cf889b5bc74c441b54261cd12feb8b158de5f",
      "filename": "backend/vendor/golang.org/x/net/idna/trieval.go",
      "status": "added",
      "additions": 119,
      "deletions": 0,
      "changes": 119,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/trieval.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/net/idna/trieval.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/net/idna/trieval.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,119 @@\n+// Code generated by running \"go generate\" in golang.org/x/text. DO NOT EDIT.\n+\n+package idna\n+\n+// This file contains definitions for interpreting the trie value of the idna\n+// trie generated by \"go run gen*.go\". It is shared by both the generator\n+// program and the resultant package. Sharing is achieved by the generator\n+// copying gen_trieval.go to trieval.go and changing what's above this comment.\n+\n+// info holds information from the IDNA mapping table for a single rune. It is\n+// the value returned by a trie lookup. In most cases, all information fits in\n+// a 16-bit value. For mappings, this value may contain an index into a slice\n+// with the mapped string. Such mappings can consist of the actual mapped value\n+// or an XOR pattern to be applied to the bytes of the UTF8 encoding of the\n+// input rune. This technique is used by the cases packages and reduces the\n+// table size significantly.\n+//\n+// The per-rune values have the following format:\n+//\n+//   if mapped {\n+//     if inlinedXOR {\n+//       15..13 inline XOR marker\n+//       12..11 unused\n+//       10..3  inline XOR mask\n+//     } else {\n+//       15..3  index into xor or mapping table\n+//     }\n+//   } else {\n+//       15..14 unused\n+//       13     mayNeedNorm\n+//       12..11 attributes\n+//       10..8  joining type\n+//        7..3  category type\n+//   }\n+//      2  use xor pattern\n+//   1..0  mapped category\n+//\n+// See the definitions below for a more detailed description of the various\n+// bits.\n+type info uint16\n+\n+const (\n+\tcatSmallMask = 0x3\n+\tcatBigMask   = 0xF8\n+\tindexShift   = 3\n+\txorBit       = 0x4    // interpret the index as an xor pattern\n+\tinlineXOR    = 0xE000 // These bits are set if the XOR pattern is inlined.\n+\n+\tjoinShift = 8\n+\tjoinMask  = 0x07\n+\n+\t// Attributes\n+\tattributesMask = 0x1800\n+\tviramaModifier = 0x1800\n+\tmodifier       = 0x1000\n+\trtl            = 0x0800\n+\n+\tmayNeedNorm = 0x2000\n+)\n+\n+// A category corresponds to a category defined in the IDNA mapping table.\n+type category uint16\n+\n+const (\n+\tunknown              category = 0 // not currently defined in unicode.\n+\tmapped               category = 1\n+\tdisallowedSTD3Mapped category = 2\n+\tdeviation            category = 3\n+)\n+\n+const (\n+\tvalid               category = 0x08\n+\tvalidNV8            category = 0x18\n+\tvalidXV8            category = 0x28\n+\tdisallowed          category = 0x40\n+\tdisallowedSTD3Valid category = 0x80\n+\tignored             category = 0xC0\n+)\n+\n+// join types and additional rune information\n+const (\n+\tjoiningL = (iota + 1)\n+\tjoiningD\n+\tjoiningT\n+\tjoiningR\n+\n+\t//the following types are derived during processing\n+\tjoinZWJ\n+\tjoinZWNJ\n+\tjoinVirama\n+\tnumJoinTypes\n+)\n+\n+func (c info) isMapped() bool {\n+\treturn c&0x3 != 0\n+}\n+\n+func (c info) category() category {\n+\tsmall := c & catSmallMask\n+\tif small != 0 {\n+\t\treturn category(small)\n+\t}\n+\treturn category(c & catBigMask)\n+}\n+\n+func (c info) joinType() info {\n+\tif c.isMapped() {\n+\t\treturn 0\n+\t}\n+\treturn (c >> joinShift) & joinMask\n+}\n+\n+func (c info) isModifier() bool {\n+\treturn c&(modifier|catSmallMask) == modifier\n+}\n+\n+func (c info) isViramaModifier() bool {\n+\treturn c&(attributesMask|catSmallMask) == viramaModifier\n+}"
    },
    {
      "sha": "0f443e6934d9980f58a3d8327d4e8b6836de09cf",
      "filename": "backend/vendor/golang.org/x/oauth2/README.md",
      "status": "modified",
      "additions": 0,
      "deletions": 51,
      "changes": 51,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/README.md",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/README.md",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/README.md?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -19,57 +19,6 @@ See godoc for further documentation and examples.\n * [godoc.org/golang.org/x/oauth2](http://godoc.org/golang.org/x/oauth2)\n * [godoc.org/golang.org/x/oauth2/google](http://godoc.org/golang.org/x/oauth2/google)\n \n-\n-## App Engine\n-\n-In change 96e89be (March 2015), we removed the `oauth2.Context2` type in favor\n-of the [`context.Context`](https://golang.org/x/net/context#Context) type from\n-the `golang.org/x/net/context` package. Later replaced by the standard `context` package\n-of the [`context.Context`](https://golang.org/pkg/context#Context) type.\n-\n-\n-This means it's no longer possible to use the \"Classic App Engine\"\n-`appengine.Context` type with the `oauth2` package. (You're using\n-Classic App Engine if you import the package `\"appengine\"`.)\n-\n-To work around this, you may use the new `\"google.golang.org/appengine\"`\n-package. This package has almost the same API as the `\"appengine\"` package,\n-but it can be fetched with `go get` and used on \"Managed VMs\" and well as\n-Classic App Engine.\n-\n-See the [new `appengine` package's readme](https://github.com/golang/appengine#updating-a-go-app-engine-app)\n-for information on updating your app.\n-\n-If you don't want to update your entire app to use the new App Engine packages,\n-you may use both sets of packages in parallel, using only the new packages\n-with the `oauth2` package.\n-\n-```go\n-import (\n-\t\"context\"\n-\t\"golang.org/x/oauth2\"\n-\t\"golang.org/x/oauth2/google\"\n-\tnewappengine \"google.golang.org/appengine\"\n-\tnewurlfetch \"google.golang.org/appengine/urlfetch\"\n-\n-\t\"appengine\"\n-)\n-\n-func handler(w http.ResponseWriter, r *http.Request) {\n-\tvar c appengine.Context = appengine.NewContext(r)\n-\tc.Infof(\"Logging a message with the old package\")\n-\n-\tvar ctx context.Context = newappengine.NewContext(r)\n-\tclient := &http.Client{\n-\t\tTransport: &oauth2.Transport{\n-\t\t\tSource: google.AppEngineTokenSource(ctx, \"scope\"),\n-\t\t\tBase:   &newurlfetch.Transport{Context: ctx},\n-\t\t},\n-\t}\n-\tclient.Get(\"...\")\n-}\n-```\n-\n ## Policy for new packages\n \n We no longer accept new provider-specific packages in this repo. For"
    },
    {
      "sha": "b0054e387c5603c6ef6467dc1ec75ef6099afc54",
      "filename": "backend/vendor/golang.org/x/oauth2/facebook/facebook.go",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/facebook/facebook.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/facebook/facebook.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/facebook/facebook.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -11,6 +11,6 @@ import (\n \n // Endpoint is Facebook's OAuth 2.0 endpoint.\n var Endpoint = oauth2.Endpoint{\n-\tAuthURL:  \"https://www.facebook.com/v3.1/dialog/oauth\",\n-\tTokenURL: \"https://graph.facebook.com/v3.1/oauth/access_token\",\n+\tAuthURL:  \"https://www.facebook.com/v3.2/dialog/oauth\",\n+\tTokenURL: \"https://graph.facebook.com/v3.2/oauth/access_token\",\n }"
    },
    {
      "sha": "b3457815528f589ba43a7d45081346e313c2e9cd",
      "filename": "backend/vendor/golang.org/x/oauth2/go.mod",
      "status": "added",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/go.mod",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/go.mod",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/go.mod?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,10 @@\n+module golang.org/x/oauth2\n+\n+go 1.11\n+\n+require (\n+\tcloud.google.com/go v0.34.0\n+\tgolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e\n+\tgolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4 // indirect\n+\tgoogle.golang.org/appengine v1.4.0\n+)"
    },
    {
      "sha": "6f0079b0d7f9eb51b8fd1d3c6943bd376b29d7c3",
      "filename": "backend/vendor/golang.org/x/oauth2/go.sum",
      "status": "added",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/go.sum",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/go.sum",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/go.sum?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,12 @@\n+cloud.google.com/go v0.34.0 h1:eOI3/cP2VTU6uZLDYAoic+eyzzB9YyGmJ7eIjl8rOPg=\n+cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\n+github.com/golang/protobuf v1.2.0 h1:P3YflyNX/ehuJFLhxviNdFxQPkGK5cDcApsge1SqnvM=\n+github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\n+golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n+golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e h1:bRhVy7zSSasaqNksaRZiA5EEI+Ei4I1nO5Jh72wfHlg=\n+golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\n+golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4 h1:YUO/7uOKsKeq9UokNS62b8FYywz3ker1l1vDZRCRefw=\n+golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\n+golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\n+google.golang.org/appengine v1.4.0 h1:/wp5JvzpHIxhs/dumFmF7BXTf3Z+dd4uXta4kVyO508=\n+google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4="
    },
    {
      "sha": "ad2c09236c5abafdc4156d0b491f5c944cd896c4",
      "filename": "backend/vendor/golang.org/x/oauth2/google/default.go",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/google/default.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/google/default.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/google/default.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -73,7 +73,6 @@ func DefaultTokenSource(ctx context.Context, scope ...string) (oauth2.TokenSourc\n //   4. On Google Compute Engine, Google App Engine standard second generation runtimes\n //      (>= Go 1.11), and Google App Engine flexible environment, it fetches\n //      credentials from the metadata server.\n-//      (In this final case any provided scopes are ignored.)\n func FindDefaultCredentials(ctx context.Context, scopes ...string) (*Credentials, error) {\n \t// First, try the environment variable.\n \tconst envVar = \"GOOGLE_APPLICATION_CREDENTIALS\"\n@@ -109,7 +108,7 @@ func FindDefaultCredentials(ctx context.Context, scopes ...string) (*Credentials\n \t\tid, _ := metadata.ProjectID()\n \t\treturn &DefaultCredentials{\n \t\t\tProjectID:   id,\n-\t\t\tTokenSource: ComputeTokenSource(\"\"),\n+\t\t\tTokenSource: ComputeTokenSource(\"\", scopes...),\n \t\t}, nil\n \t}\n "
    },
    {
      "sha": "6eb2aa95f5b692249fc0ea971cc3801def45a616",
      "filename": "backend/vendor/golang.org/x/oauth2/google/google.go",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/google/google.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/google/google.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/google/google.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -9,6 +9,7 @@ import (\n \t\"encoding/json\"\n \t\"errors\"\n \t\"fmt\"\n+\t\"net/url\"\n \t\"strings\"\n \t\"time\"\n \n@@ -19,12 +20,13 @@ import (\n \n // Endpoint is Google's OAuth 2.0 endpoint.\n var Endpoint = oauth2.Endpoint{\n-\tAuthURL:  \"https://accounts.google.com/o/oauth2/auth\",\n-\tTokenURL: \"https://accounts.google.com/o/oauth2/token\",\n+\tAuthURL:   \"https://accounts.google.com/o/oauth2/auth\",\n+\tTokenURL:  \"https://oauth2.googleapis.com/token\",\n+\tAuthStyle: oauth2.AuthStyleInParams,\n }\n \n // JWTTokenURL is Google's OAuth 2.0 token URL to use with the JWT flow.\n-const JWTTokenURL = \"https://accounts.google.com/o/oauth2/token\"\n+const JWTTokenURL = \"https://oauth2.googleapis.com/token\"\n \n // ConfigFromJSON uses a Google Developers Console client_credentials.json\n // file to construct a config.\n@@ -150,14 +152,16 @@ func (f *credentialsFile) tokenSource(ctx context.Context, scopes []string) (oau\n // from Google Compute Engine (GCE)'s metadata server. It's only valid to use\n // this token source if your program is running on a GCE instance.\n // If no account is specified, \"default\" is used.\n+// If no scopes are specified, a set of default scopes are automatically granted.\n // Further information about retrieving access tokens from the GCE metadata\n // server can be found at https://cloud.google.com/compute/docs/authentication.\n-func ComputeTokenSource(account string) oauth2.TokenSource {\n-\treturn oauth2.ReuseTokenSource(nil, computeSource{account: account})\n+func ComputeTokenSource(account string, scope ...string) oauth2.TokenSource {\n+\treturn oauth2.ReuseTokenSource(nil, computeSource{account: account, scopes: scope})\n }\n \n type computeSource struct {\n \taccount string\n+\tscopes  []string\n }\n \n func (cs computeSource) Token() (*oauth2.Token, error) {\n@@ -168,7 +172,13 @@ func (cs computeSource) Token() (*oauth2.Token, error) {\n \tif acct == \"\" {\n \t\tacct = \"default\"\n \t}\n-\ttokenJSON, err := metadata.Get(\"instance/service-accounts/\" + acct + \"/token\")\n+\ttokenURI := \"instance/service-accounts/\" + acct + \"/token\"\n+\tif len(cs.scopes) > 0 {\n+\t\tv := url.Values{}\n+\t\tv.Set(\"scopes\", strings.Join(cs.scopes, \",\"))\n+\t\ttokenURI = tokenURI + \"?\" + v.Encode()\n+\t}\n+\ttokenJSON, err := metadata.Get(tokenURI)\n \tif err != nil {\n \t\treturn nil, err\n \t}"
    },
    {
      "sha": "355c386961dd427f8b2ca44bf5328c135087311b",
      "filename": "backend/vendor/golang.org/x/oauth2/internal/token.go",
      "status": "modified",
      "additions": 122,
      "deletions": 105,
      "changes": 227,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/internal/token.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/internal/token.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/internal/token.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -11,11 +11,13 @@ import (\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n+\t\"math\"\n \t\"mime\"\n \t\"net/http\"\n \t\"net/url\"\n \t\"strconv\"\n \t\"strings\"\n+\t\"sync\"\n \t\"time\"\n \n \t\"golang.org/x/net/context/ctxhttp\"\n@@ -61,22 +63,21 @@ type tokenJSON struct {\n \tTokenType    string         `json:\"token_type\"`\n \tRefreshToken string         `json:\"refresh_token\"`\n \tExpiresIn    expirationTime `json:\"expires_in\"` // at least PayPal returns string, while most return number\n-\tExpires      expirationTime `json:\"expires\"`    // broken Facebook spelling of expires_in\n }\n \n func (e *tokenJSON) expiry() (t time.Time) {\n \tif v := e.ExpiresIn; v != 0 {\n \t\treturn time.Now().Add(time.Duration(v) * time.Second)\n \t}\n-\tif v := e.Expires; v != 0 {\n-\t\treturn time.Now().Add(time.Duration(v) * time.Second)\n-\t}\n \treturn\n }\n \n type expirationTime int32\n \n func (e *expirationTime) UnmarshalJSON(b []byte) error {\n+\tif len(b) == 0 || string(b) == \"null\" {\n+\t\treturn nil\n+\t}\n \tvar n json.Number\n \terr := json.Unmarshal(b, &n)\n \tif err != nil {\n@@ -86,106 +87,78 @@ func (e *expirationTime) UnmarshalJSON(b []byte) error {\n \tif err != nil {\n \t\treturn err\n \t}\n+\tif i > math.MaxInt32 {\n+\t\ti = math.MaxInt32\n+\t}\n \t*e = expirationTime(i)\n \treturn nil\n }\n \n-var brokenAuthHeaderProviders = []string{\n-\t\"https://accounts.google.com/\",\n-\t\"https://api.codeswholesale.com/oauth/token\",\n-\t\"https://api.dropbox.com/\",\n-\t\"https://api.dropboxapi.com/\",\n-\t\"https://api.instagram.com/\",\n-\t\"https://api.netatmo.net/\",\n-\t\"https://api.odnoklassniki.ru/\",\n-\t\"https://api.pushbullet.com/\",\n-\t\"https://api.soundcloud.com/\",\n-\t\"https://api.twitch.tv/\",\n-\t\"https://id.twitch.tv/\",\n-\t\"https://app.box.com/\",\n-\t\"https://api.box.com/\",\n-\t\"https://connect.stripe.com/\",\n-\t\"https://login.mailchimp.com/\",\n-\t\"https://login.microsoftonline.com/\",\n-\t\"https://login.salesforce.com/\",\n-\t\"https://login.windows.net\",\n-\t\"https://login.live.com/\",\n-\t\"https://login.live-int.com/\",\n-\t\"https://oauth.sandbox.trainingpeaks.com/\",\n-\t\"https://oauth.trainingpeaks.com/\",\n-\t\"https://oauth.vk.com/\",\n-\t\"https://openapi.baidu.com/\",\n-\t\"https://slack.com/\",\n-\t\"https://test-sandbox.auth.corp.google.com\",\n-\t\"https://test.salesforce.com/\",\n-\t\"https://user.gini.net/\",\n-\t\"https://www.douban.com/\",\n-\t\"https://www.googleapis.com/\",\n-\t\"https://www.linkedin.com/\",\n-\t\"https://www.strava.com/oauth/\",\n-\t\"https://www.wunderlist.com/oauth/\",\n-\t\"https://api.patreon.com/\",\n-\t\"https://sandbox.codeswholesale.com/oauth/token\",\n-\t\"https://api.sipgate.com/v1/authorization/oauth\",\n-\t\"https://api.medium.com/v1/tokens\",\n-\t\"https://log.finalsurge.com/oauth/token\",\n-\t\"https://multisport.todaysplan.com.au/rest/oauth/access_token\",\n-\t\"https://whats.todaysplan.com.au/rest/oauth/access_token\",\n-\t\"https://stackoverflow.com/oauth/access_token\",\n-\t\"https://account.health.nokia.com\",\n-\t\"https://accounts.zoho.com\",\n-\t\"https://gitter.im/login/oauth/token\",\n-\t\"https://openid-connect.onelogin.com/oidc\",\n-\t\"https://api.dailymotion.com/oauth/token\",\n-}\n+// RegisterBrokenAuthHeaderProvider previously did something. It is now a no-op.\n+//\n+// Deprecated: this function no longer does anything. Caller code that\n+// wants to avoid potential extra HTTP requests made during\n+// auto-probing of the provider's auth style should set\n+// Endpoint.AuthStyle.\n+func RegisterBrokenAuthHeaderProvider(tokenURL string) {}\n+\n+// AuthStyle is a copy of the golang.org/x/oauth2 package's AuthStyle type.\n+type AuthStyle int\n \n-// brokenAuthHeaderDomains lists broken providers that issue dynamic endpoints.\n-var brokenAuthHeaderDomains = []string{\n-\t\".auth0.com\",\n-\t\".force.com\",\n-\t\".myshopify.com\",\n-\t\".okta.com\",\n-\t\".oktapreview.com\",\n+const (\n+\tAuthStyleUnknown  AuthStyle = 0\n+\tAuthStyleInParams AuthStyle = 1\n+\tAuthStyleInHeader AuthStyle = 2\n+)\n+\n+// authStyleCache is the set of tokenURLs we've successfully used via\n+// RetrieveToken and which style auth we ended up using.\n+// It's called a cache, but it doesn't (yet?) shrink. It's expected that\n+// the set of OAuth2 servers a program contacts over time is fixed and\n+// small.\n+var authStyleCache struct {\n+\tsync.Mutex\n+\tm map[string]AuthStyle // keyed by tokenURL\n }\n \n-func RegisterBrokenAuthHeaderProvider(tokenURL string) {\n-\tbrokenAuthHeaderProviders = append(brokenAuthHeaderProviders, tokenURL)\n+// ResetAuthCache resets the global authentication style cache used\n+// for AuthStyleUnknown token requests.\n+func ResetAuthCache() {\n+\tauthStyleCache.Lock()\n+\tdefer authStyleCache.Unlock()\n+\tauthStyleCache.m = nil\n }\n \n-// providerAuthHeaderWorks reports whether the OAuth2 server identified by the tokenURL\n-// implements the OAuth2 spec correctly\n-// See https://code.google.com/p/goauth2/issues/detail?id=31 for background.\n-// In summary:\n-// - Reddit only accepts client secret in the Authorization header\n-// - Dropbox accepts either it in URL param or Auth header, but not both.\n-// - Google only accepts URL param (not spec compliant?), not Auth header\n-// - Stripe only accepts client secret in Auth header with Bearer method, not Basic\n-func providerAuthHeaderWorks(tokenURL string) bool {\n-\tfor _, s := range brokenAuthHeaderProviders {\n-\t\tif strings.HasPrefix(tokenURL, s) {\n-\t\t\t// Some sites fail to implement the OAuth2 spec fully.\n-\t\t\treturn false\n-\t\t}\n-\t}\n+// lookupAuthStyle reports which auth style we last used with tokenURL\n+// when calling RetrieveToken and whether we have ever done so.\n+func lookupAuthStyle(tokenURL string) (style AuthStyle, ok bool) {\n+\tauthStyleCache.Lock()\n+\tdefer authStyleCache.Unlock()\n+\tstyle, ok = authStyleCache.m[tokenURL]\n+\treturn\n+}\n \n-\tif u, err := url.Parse(tokenURL); err == nil {\n-\t\tfor _, s := range brokenAuthHeaderDomains {\n-\t\t\tif strings.HasSuffix(u.Host, s) {\n-\t\t\t\treturn false\n-\t\t\t}\n-\t\t}\n+// setAuthStyle adds an entry to authStyleCache, documented above.\n+func setAuthStyle(tokenURL string, v AuthStyle) {\n+\tauthStyleCache.Lock()\n+\tdefer authStyleCache.Unlock()\n+\tif authStyleCache.m == nil {\n+\t\tauthStyleCache.m = make(map[string]AuthStyle)\n \t}\n-\n-\t// Assume the provider implements the spec properly\n-\t// otherwise. We can add more exceptions as they're\n-\t// discovered. We will _not_ be adding configurable hooks\n-\t// to this package to let users select server bugs.\n-\treturn true\n+\tauthStyleCache.m[tokenURL] = v\n }\n \n-func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string, v url.Values) (*Token, error) {\n-\tbustedAuth := !providerAuthHeaderWorks(tokenURL)\n-\tif bustedAuth {\n+// newTokenRequest returns a new *http.Request to retrieve a new token\n+// from tokenURL using the provided clientID, clientSecret, and POST\n+// body parameters.\n+//\n+// inParams is whether the clientID & clientSecret should be encoded\n+// as the POST body. An 'inParams' value of true means to send it in\n+// the POST body (along with any values in v); false means to send it\n+// in the Authorization header.\n+func newTokenRequest(tokenURL, clientID, clientSecret string, v url.Values, authStyle AuthStyle) (*http.Request, error) {\n+\tif authStyle == AuthStyleInParams {\n+\t\tv = cloneURLValues(v)\n \t\tif clientID != \"\" {\n \t\t\tv.Set(\"client_id\", clientID)\n \t\t}\n@@ -198,15 +171,70 @@ func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string,\n \t\treturn nil, err\n \t}\n \treq.Header.Set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n-\tif !bustedAuth {\n+\tif authStyle == AuthStyleInHeader {\n \t\treq.SetBasicAuth(url.QueryEscape(clientID), url.QueryEscape(clientSecret))\n \t}\n+\treturn req, nil\n+}\n+\n+func cloneURLValues(v url.Values) url.Values {\n+\tv2 := make(url.Values, len(v))\n+\tfor k, vv := range v {\n+\t\tv2[k] = append([]string(nil), vv...)\n+\t}\n+\treturn v2\n+}\n+\n+func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string, v url.Values, authStyle AuthStyle) (*Token, error) {\n+\tneedsAuthStyleProbe := authStyle == 0\n+\tif needsAuthStyleProbe {\n+\t\tif style, ok := lookupAuthStyle(tokenURL); ok {\n+\t\t\tauthStyle = style\n+\t\t\tneedsAuthStyleProbe = false\n+\t\t} else {\n+\t\t\tauthStyle = AuthStyleInHeader // the first way we'll try\n+\t\t}\n+\t}\n+\treq, err := newTokenRequest(tokenURL, clientID, clientSecret, v, authStyle)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\ttoken, err := doTokenRoundTrip(ctx, req)\n+\tif err != nil && needsAuthStyleProbe {\n+\t\t// If we get an error, assume the server wants the\n+\t\t// clientID & clientSecret in a different form.\n+\t\t// See https://code.google.com/p/goauth2/issues/detail?id=31 for background.\n+\t\t// In summary:\n+\t\t// - Reddit only accepts client secret in the Authorization header\n+\t\t// - Dropbox accepts either it in URL param or Auth header, but not both.\n+\t\t// - Google only accepts URL param (not spec compliant?), not Auth header\n+\t\t// - Stripe only accepts client secret in Auth header with Bearer method, not Basic\n+\t\t//\n+\t\t// We used to maintain a big table in this code of all the sites and which way\n+\t\t// they went, but maintaining it didn't scale & got annoying.\n+\t\t// So just try both ways.\n+\t\tauthStyle = AuthStyleInParams // the second way we'll try\n+\t\treq, _ = newTokenRequest(tokenURL, clientID, clientSecret, v, authStyle)\n+\t\ttoken, err = doTokenRoundTrip(ctx, req)\n+\t}\n+\tif needsAuthStyleProbe && err == nil {\n+\t\tsetAuthStyle(tokenURL, authStyle)\n+\t}\n+\t// Don't overwrite `RefreshToken` with an empty value\n+\t// if this was a token refreshing request.\n+\tif token != nil && token.RefreshToken == \"\" {\n+\t\ttoken.RefreshToken = v.Get(\"refresh_token\")\n+\t}\n+\treturn token, err\n+}\n+\n+func doTokenRoundTrip(ctx context.Context, req *http.Request) (*Token, error) {\n \tr, err := ctxhttp.Do(ctx, ContextClient(ctx), req)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tdefer r.Body.Close()\n \tbody, err := ioutil.ReadAll(io.LimitReader(r.Body, 1<<20))\n+\tr.Body.Close()\n \tif err != nil {\n \t\treturn nil, fmt.Errorf(\"oauth2: cannot fetch token: %v\", err)\n \t}\n@@ -232,12 +260,6 @@ func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string,\n \t\t\tRaw:          vals,\n \t\t}\n \t\te := vals.Get(\"expires_in\")\n-\t\tif e == \"\" {\n-\t\t\t// TODO(jbd): Facebook's OAuth2 implementation is broken and\n-\t\t\t// returns expires_in field in expires. Remove the fallback to expires,\n-\t\t\t// when Facebook fixes their implementation.\n-\t\t\te = vals.Get(\"expires\")\n-\t\t}\n \t\texpires, _ := strconv.Atoi(e)\n \t\tif expires != 0 {\n \t\t\ttoken.Expiry = time.Now().Add(time.Duration(expires) * time.Second)\n@@ -256,13 +278,8 @@ func RetrieveToken(ctx context.Context, clientID, clientSecret, tokenURL string,\n \t\t}\n \t\tjson.Unmarshal(body, &token.Raw) // no error checks for optional fields\n \t}\n-\t// Don't overwrite `RefreshToken` with an empty value\n-\t// if this was a token refreshing request.\n-\tif token.RefreshToken == \"\" {\n-\t\ttoken.RefreshToken = v.Get(\"refresh_token\")\n-\t}\n \tif token.AccessToken == \"\" {\n-\t\treturn token, errors.New(\"oauth2: server response missing access_token\")\n+\t\treturn nil, errors.New(\"oauth2: server response missing access_token\")\n \t}\n \treturn token, nil\n }"
    },
    {
      "sha": "99f3e0a32c8a43098b7c2b9eedf6ba4af97eae72",
      "filename": "backend/vendor/golang.org/x/oauth2/jwt/jwt.go",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/jwt/jwt.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/jwt/jwt.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/jwt/jwt.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -61,6 +61,11 @@ type Config struct {\n \n \t// Expires optionally specifies how long the token is valid for.\n \tExpires time.Duration\n+\n+\t// Audience optionally specifies the intended audience of the\n+\t// request.  If empty, the value of TokenURL is used as the\n+\t// intended audience.\n+\tAudience string\n }\n \n // TokenSource returns a JWT TokenSource using the configuration\n@@ -105,6 +110,9 @@ func (js jwtSource) Token() (*oauth2.Token, error) {\n \tif t := js.conf.Expires; t > 0 {\n \t\tclaimSet.Exp = time.Now().Add(t).Unix()\n \t}\n+\tif aud := js.conf.Audience; aud != \"\" {\n+\t\tclaimSet.Aud = aud\n+\t}\n \th := *defaultHeader\n \th.KeyID = js.conf.PrivateKeyID\n \tpayload, err := jws.Encode(&h, claimSet, pk)"
    },
    {
      "sha": "428283f0b01025a29984887d779a7b5951a05bd9",
      "filename": "backend/vendor/golang.org/x/oauth2/oauth2.go",
      "status": "modified",
      "additions": 34,
      "deletions": 13,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/oauth2.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/oauth2.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/oauth2.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -26,17 +26,13 @@ import (\n // Deprecated: Use context.Background() or context.TODO() instead.\n var NoContext = context.TODO()\n \n-// RegisterBrokenAuthHeaderProvider registers an OAuth2 server\n-// identified by the tokenURL prefix as an OAuth2 implementation\n-// which doesn't support the HTTP Basic authentication\n-// scheme to authenticate with the authorization server.\n-// Once a server is registered, credentials (client_id and client_secret)\n-// will be passed as query parameters rather than being present\n-// in the Authorization header.\n-// See https://code.google.com/p/goauth2/issues/detail?id=31 for background.\n-func RegisterBrokenAuthHeaderProvider(tokenURL string) {\n-\tinternal.RegisterBrokenAuthHeaderProvider(tokenURL)\n-}\n+// RegisterBrokenAuthHeaderProvider previously did something. It is now a no-op.\n+//\n+// Deprecated: this function no longer does anything. Caller code that\n+// wants to avoid potential extra HTTP requests made during\n+// auto-probing of the provider's auth style should set\n+// Endpoint.AuthStyle.\n+func RegisterBrokenAuthHeaderProvider(tokenURL string) {}\n \n // Config describes a typical 3-legged OAuth2 flow, with both the\n // client application information and the server's endpoint URLs.\n@@ -71,13 +67,38 @@ type TokenSource interface {\n \tToken() (*Token, error)\n }\n \n-// Endpoint contains the OAuth 2.0 provider's authorization and token\n+// Endpoint represents an OAuth 2.0 provider's authorization and token\n // endpoint URLs.\n type Endpoint struct {\n \tAuthURL  string\n \tTokenURL string\n+\n+\t// AuthStyle optionally specifies how the endpoint wants the\n+\t// client ID & client secret sent. The zero value means to\n+\t// auto-detect.\n+\tAuthStyle AuthStyle\n }\n \n+// AuthStyle represents how requests for tokens are authenticated\n+// to the server.\n+type AuthStyle int\n+\n+const (\n+\t// AuthStyleAutoDetect means to auto-detect which authentication\n+\t// style the provider wants by trying both ways and caching\n+\t// the successful way for the future.\n+\tAuthStyleAutoDetect AuthStyle = 0\n+\n+\t// AuthStyleInParams sends the \"client_id\" and \"client_secret\"\n+\t// in the POST body as application/x-www-form-urlencoded parameters.\n+\tAuthStyleInParams AuthStyle = 1\n+\n+\t// AuthStyleInHeader sends the client_id and client_password\n+\t// using HTTP Basic Authorization. This is an optional style\n+\t// described in the OAuth2 RFC 6749 section 2.3.1.\n+\tAuthStyleInHeader AuthStyle = 2\n+)\n+\n var (\n \t// AccessTypeOnline and AccessTypeOffline are options passed\n \t// to the Options.AuthCodeURL method. They modify the\n@@ -124,7 +145,7 @@ func SetAuthURLParam(key, value string) AuthCodeOption {\n //\n // Opts may include AccessTypeOnline or AccessTypeOffline, as well\n // as ApprovalForce.\n-// It can also be used to pass the PKCE challange.\n+// It can also be used to pass the PKCE challenge.\n // See https://www.oauth.com/oauth2-servers/pkce/ for more info.\n func (c *Config) AuthCodeURL(state string, opts ...AuthCodeOption) string {\n \tvar buf bytes.Buffer"
    },
    {
      "sha": "822720341af143a33c4585dd9d8219d231ee5921",
      "filename": "backend/vendor/golang.org/x/oauth2/token.go",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/token.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/oauth2/token.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/oauth2/token.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -118,13 +118,16 @@ func (t *Token) Extra(key string) interface{} {\n \treturn v\n }\n \n+// timeNow is time.Now but pulled out as a variable for tests.\n+var timeNow = time.Now\n+\n // expired reports whether the token is expired.\n // t must be non-nil.\n func (t *Token) expired() bool {\n \tif t.Expiry.IsZero() {\n \t\treturn false\n \t}\n-\treturn t.Expiry.Round(0).Add(-expiryDelta).Before(time.Now())\n+\treturn t.Expiry.Round(0).Add(-expiryDelta).Before(timeNow())\n }\n \n // Valid reports whether t is non-nil, has an AccessToken, and is not expired.\n@@ -151,7 +154,7 @@ func tokenFromInternal(t *internal.Token) *Token {\n // This token is then mapped from *internal.Token into an *oauth2.Token which is returned along\n // with an error..\n func retrieveToken(ctx context.Context, c *Config, v url.Values) (*Token, error) {\n-\ttk, err := internal.RetrieveToken(ctx, c.ClientID, c.ClientSecret, c.Endpoint.TokenURL, v)\n+\ttk, err := internal.RetrieveToken(ctx, c.ClientID, c.ClientSecret, c.Endpoint.TokenURL, v, internal.AuthStyle(c.Endpoint.AuthStyle))\n \tif err != nil {\n \t\tif rErr, ok := err.(*internal.RetrieveError); ok {\n \t\t\treturn nil, (*RetrieveError)(rErr)"
    },
    {
      "sha": "0cedea3d39d8ed44a1c32ec00a5048f2b4265be5",
      "filename": "backend/vendor/golang.org/x/sys/unix/asm_openbsd_arm64.s",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/asm_openbsd_arm64.s",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/asm_openbsd_arm64.s",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/asm_openbsd_arm64.s?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !gccgo\n+\n+#include \"textflag.h\"\n+\n+//\n+// System call support for arm64, OpenBSD\n+//\n+\n+// Just jump to package syscall's implementation for all these functions.\n+// The runtime may know about them.\n+\n+TEXT\t·Syscall(SB),NOSPLIT,$0-56\n+\tJMP\tsyscall·Syscall(SB)\n+\n+TEXT\t·Syscall6(SB),NOSPLIT,$0-80\n+\tJMP\tsyscall·Syscall6(SB)\n+\n+TEXT\t·Syscall9(SB),NOSPLIT,$0-104\n+\tJMP\tsyscall·Syscall9(SB)\n+\n+TEXT\t·RawSyscall(SB),NOSPLIT,$0-56\n+\tJMP\tsyscall·RawSyscall(SB)\n+\n+TEXT\t·RawSyscall6(SB),NOSPLIT,$0-80\n+\tJMP\tsyscall·RawSyscall6(SB)"
    },
    {
      "sha": "80d00707bb0ddfaf48c6833fd0994374c2a76a23",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkall.sh",
      "status": "modified",
      "additions": 19,
      "deletions": 6,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mkall.sh",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mkall.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mkall.sh?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -146,24 +146,39 @@ netbsd_arm)\n \t# API consistent across platforms.\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n \t;;\n+netbsd_arm64)\n+\tmkerrors=\"$mkerrors -m64\"\n+\tmksyscall=\"go run mksyscall.go -netbsd\"\n+\tmksysnum=\"go run mksysnum.go 'http://cvsweb.netbsd.org/bsdweb.cgi/~checkout~/src/sys/kern/syscalls.master'\"\n+\tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n+\t;;\n openbsd_386)\n \tmkerrors=\"$mkerrors -m32\"\n \tmksyscall=\"go run mksyscall.go -l32 -openbsd\"\n-\tmksysctl=\"./mksysctl_openbsd.pl\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n \tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n \t;;\n openbsd_amd64)\n \tmkerrors=\"$mkerrors -m64\"\n \tmksyscall=\"go run mksyscall.go -openbsd\"\n-\tmksysctl=\"./mksysctl_openbsd.pl\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n \tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs\"\n \t;;\n openbsd_arm)\n \tmkerrors=\"$mkerrors\"\n \tmksyscall=\"go run mksyscall.go -l32 -openbsd -arm\"\n-\tmksysctl=\"./mksysctl_openbsd.pl\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n+\tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n+\t# Let the type of C char be signed for making the bare syscall\n+\t# API consistent across platforms.\n+\tmktypes=\"GOARCH=$GOARCH go tool cgo -godefs -- -fsigned-char\"\n+\t;;\n+openbsd_arm64)\n+\tmkerrors=\"$mkerrors -m64\"\n+\tmksyscall=\"go run mksyscall.go -openbsd\"\n+\tmksysctl=\"go run mksysctl_openbsd.go\"\n \tmksysnum=\"go run mksysnum.go 'https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master'\"\n \t# Let the type of C char be signed for making the bare syscall\n \t# API consistent across platforms.\n@@ -207,8 +222,6 @@ esac\n \tesac\n \tif [ -n \"$mksysctl\" ]; then echo \"$mksysctl |gofmt >$zsysctl\"; fi\n \tif [ -n \"$mksysnum\" ]; then echo \"$mksysnum |gofmt >zsysnum_$GOOSARCH.go\"; fi\n-\tif [ -n \"$mktypes\" ]; then\n-\t\techo \"$mktypes types_$GOOS.go | go run mkpost.go > ztypes_$GOOSARCH.go\";\n+\tif [ -n \"$mktypes\" ]; then echo \"$mktypes types_$GOOS.go | go run mkpost.go > ztypes_$GOOSARCH.go\"; fi\n \tif [ -n \"$mkasm\" ]; then echo \"$mkasm $GOARCH\"; fi\n-\tfi\n ) | $run"
    },
    {
      "sha": "b3c33c2c324b22905c32fad09f61feec4490c1e3",
      "filename": "backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mkerrors.sh",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mkerrors.sh?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -192,6 +192,7 @@ struct ltchars {\n #include <linux/if_packet.h>\n #include <linux/if_addr.h>\n #include <linux/falloc.h>\n+#include <linux/fanotify.h>\n #include <linux/filter.h>\n #include <linux/fs.h>\n #include <linux/kexec.h>\n@@ -221,6 +222,7 @@ struct ltchars {\n #include <linux/hdreg.h>\n #include <linux/rtc.h>\n #include <linux/if_xdp.h>\n+#include <linux/cryptouser.h>\n #include <mtd/ubi-user.h>\n #include <net/route.h>\n \n@@ -498,9 +500,11 @@ ccflags=\"$@\"\n \t\t$2 ~ /^NFN/ ||\n \t\t$2 ~ /^XDP_/ ||\n \t\t$2 ~ /^(HDIO|WIN|SMART)_/ ||\n+\t\t$2 ~ /^CRYPTO_/ ||\n \t\t$2 !~ \"WMESGLEN\" &&\n \t\t$2 ~ /^W[A-Z0-9]+$/ ||\n \t\t$2 ~/^PPPIOC/ ||\n+\t\t$2 ~ /^FAN_|FANOTIFY_/ ||\n \t\t$2 ~ /^BLK[A-Z]*(GET$|SET$|BUF$|PART$|SIZE)/ {printf(\"\\t%s = C.%s\\n\", $2, $2)}\n \t\t$2 ~ /^__WCOREFLAG$/ {next}\n \t\t$2 ~ /^__W[A-Z0-9]+$/ {printf(\"\\t%s = C.%s\\n\", substr($2,3), $2)}"
    },
    {
      "sha": "e4af9424e97886239f52a5035fbe64c3402c4792",
      "filename": "backend/vendor/golang.org/x/sys/unix/mksyscall.go",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mksyscall.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -153,6 +153,11 @@ func main() {\n \t\t\t}\n \t\t\tfunct, inps, outps, sysname := f[2], f[3], f[4], f[5]\n \n+\t\t\t// ClockGettime doesn't have a syscall number on Darwin, only generate libc wrappers.\n+\t\t\tif goos == \"darwin\" && !libc && funct == \"ClockGettime\" {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\n \t\t\t// Split argument lists on comma.\n \t\t\tin := parseParamList(inps)\n \t\t\tout := parseParamList(outps)\n@@ -228,7 +233,7 @@ func main() {\n \t\t\t\t\t} else {\n \t\t\t\t\t\targs = append(args, fmt.Sprintf(\"uintptr(%s)\", p.Name))\n \t\t\t\t\t}\n-\t\t\t\t} else if p.Type == \"int64\" && endianness != \"\" {\n+\t\t\t\t} else if (p.Type == \"int64\" || p.Type == \"uint64\") && endianness != \"\" {\n \t\t\t\t\tif len(args)%2 == 1 && *arm {\n \t\t\t\t\t\t// arm abi specifies 64-bit argument uses\n \t\t\t\t\t\t// (even, odd) pair"
    },
    {
      "sha": "3be3cdfc3b6ee5f6273d4458cdc01f49cd6913d5",
      "filename": "backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc.go",
      "status": "modified",
      "additions": 12,
      "deletions": 1,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -214,6 +214,11 @@ func main() {\n \t\t\t}\n \n \t\t\tif funct != \"fcntl\" && funct != \"FcntlInt\" && funct != \"readlen\" && funct != \"writelen\" {\n+\t\t\t\tif sysname == \"select\" {\n+\t\t\t\t\t// select is a keyword of Go. Its name is\n+\t\t\t\t\t// changed to c_select.\n+\t\t\t\t\tcExtern += \"#define c_select select\\n\"\n+\t\t\t\t}\n \t\t\t\t// Imports of system calls from libc\n \t\t\t\tcExtern += fmt.Sprintf(\"%s %s\", cRettype, sysname)\n \t\t\t\tcIn := strings.Join(cIn, \", \")\n@@ -328,7 +333,13 @@ func main() {\n \t\t\t} else {\n \t\t\t\tcall += \"\"\n \t\t\t}\n-\t\t\tcall += fmt.Sprintf(\"C.%s(%s)\", sysname, arglist)\n+\t\t\tif sysname == \"select\" {\n+\t\t\t\t// select is a keyword of Go. Its name is\n+\t\t\t\t// changed to c_select.\n+\t\t\t\tcall += fmt.Sprintf(\"C.c_%s(%s)\", sysname, arglist)\n+\t\t\t} else {\n+\t\t\t\tcall += fmt.Sprintf(\"C.%s(%s)\", sysname, arglist)\n+\t\t\t}\n \n \t\t\t// Assign return values.\n \t\t\tbody := \"\""
    },
    {
      "sha": "c960099517af00196e77b62b8c029c1be765c9e0",
      "filename": "backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc64.go",
      "status": "modified",
      "additions": 13,
      "deletions": 1,
      "changes": 14,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mksyscall_aix_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -282,6 +282,11 @@ func main() {\n \t\t\tif !onlyCommon {\n \t\t\t\t// GCCGO Prototype Generation\n \t\t\t\t// Imports of system calls from libc\n+\t\t\t\tif sysname == \"select\" {\n+\t\t\t\t\t// select is a keyword of Go. Its name is\n+\t\t\t\t\t// changed to c_select.\n+\t\t\t\t\tcExtern += \"#define c_select select\\n\"\n+\t\t\t\t}\n \t\t\t\tcExtern += fmt.Sprintf(\"%s %s\", cRettype, sysname)\n \t\t\t\tcIn := strings.Join(cIn, \", \")\n \t\t\t\tcExtern += fmt.Sprintf(\"(%s);\\n\", cIn)\n@@ -490,7 +495,14 @@ func main() {\n \n \t\t\t// GCCGO function generation\n \t\t\targsgccgolist := strings.Join(argsgccgo, \", \")\n-\t\t\tcallgccgo := fmt.Sprintf(\"C.%s(%s)\", sysname, argsgccgolist)\n+\t\t\tvar callgccgo string\n+\t\t\tif sysname == \"select\" {\n+\t\t\t\t// select is a keyword of Go. Its name is\n+\t\t\t\t// changed to c_select.\n+\t\t\t\tcallgccgo = fmt.Sprintf(\"C.c_%s(%s)\", sysname, argsgccgolist)\n+\t\t\t} else {\n+\t\t\t\tcallgccgo = fmt.Sprintf(\"C.%s(%s)\", sysname, argsgccgolist)\n+\t\t\t}\n \t\t\ttextgccgo += callProto\n \t\t\ttextgccgo += fmt.Sprintf(\"\\tr1 = uintptr(%s)\\n\", callgccgo)\n \t\t\ttextgccgo += \"\\te1 = syscall.GetErrno()\\n\""
    },
    {
      "sha": "b6b409909cc3c93d86deb351f5699cf672aa4e76",
      "filename": "backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.go",
      "status": "added",
      "additions": 355,
      "deletions": 0,
      "changes": 355,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,355 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build ignore\n+\n+// Parse the header files for OpenBSD and generate a Go usable sysctl MIB.\n+//\n+// Build a MIB with each entry being an array containing the level, type and\n+// a hash that will contain additional entries if the current entry is a node.\n+// We then walk this MIB and create a flattened sysctl name to OID hash.\n+\n+package main\n+\n+import (\n+\t\"bufio\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\t\"regexp\"\n+\t\"sort\"\n+\t\"strings\"\n+)\n+\n+var (\n+\tgoos, goarch string\n+)\n+\n+// cmdLine returns this programs's commandline arguments.\n+func cmdLine() string {\n+\treturn \"go run mksysctl_openbsd.go \" + strings.Join(os.Args[1:], \" \")\n+}\n+\n+// buildTags returns build tags.\n+func buildTags() string {\n+\treturn fmt.Sprintf(\"%s,%s\", goarch, goos)\n+}\n+\n+// reMatch performs regular expression match and stores the substring slice to value pointed by m.\n+func reMatch(re *regexp.Regexp, str string, m *[]string) bool {\n+\t*m = re.FindStringSubmatch(str)\n+\tif *m != nil {\n+\t\treturn true\n+\t}\n+\treturn false\n+}\n+\n+type nodeElement struct {\n+\tn  int\n+\tt  string\n+\tpE *map[string]nodeElement\n+}\n+\n+var (\n+\tdebugEnabled bool\n+\tmib          map[string]nodeElement\n+\tnode         *map[string]nodeElement\n+\tnodeMap      map[string]string\n+\tsysCtl       []string\n+)\n+\n+var (\n+\tctlNames1RE = regexp.MustCompile(`^#define\\s+(CTL_NAMES)\\s+{`)\n+\tctlNames2RE = regexp.MustCompile(`^#define\\s+(CTL_(.*)_NAMES)\\s+{`)\n+\tctlNames3RE = regexp.MustCompile(`^#define\\s+((.*)CTL_NAMES)\\s+{`)\n+\tnetInetRE   = regexp.MustCompile(`^netinet/`)\n+\tnetInet6RE  = regexp.MustCompile(`^netinet6/`)\n+\tnetRE       = regexp.MustCompile(`^net/`)\n+\tbracesRE    = regexp.MustCompile(`{.*}`)\n+\tctlTypeRE   = regexp.MustCompile(`{\\s+\"(\\w+)\",\\s+(CTLTYPE_[A-Z]+)\\s+}`)\n+\tfsNetKernRE = regexp.MustCompile(`^(fs|net|kern)_`)\n+)\n+\n+func debug(s string) {\n+\tif debugEnabled {\n+\t\tfmt.Fprintln(os.Stderr, s)\n+\t}\n+}\n+\n+// Walk the MIB and build a sysctl name to OID mapping.\n+func buildSysctl(pNode *map[string]nodeElement, name string, oid []int) {\n+\tlNode := pNode // local copy of pointer to node\n+\tvar keys []string\n+\tfor k := range *lNode {\n+\t\tkeys = append(keys, k)\n+\t}\n+\tsort.Strings(keys)\n+\n+\tfor _, key := range keys {\n+\t\tnodename := name\n+\t\tif name != \"\" {\n+\t\t\tnodename += \".\"\n+\t\t}\n+\t\tnodename += key\n+\n+\t\tnodeoid := append(oid, (*pNode)[key].n)\n+\n+\t\tif (*pNode)[key].t == `CTLTYPE_NODE` {\n+\t\t\tif _, ok := nodeMap[nodename]; ok {\n+\t\t\t\tlNode = &mib\n+\t\t\t\tctlName := nodeMap[nodename]\n+\t\t\t\tfor _, part := range strings.Split(ctlName, \".\") {\n+\t\t\t\t\tlNode = ((*lNode)[part]).pE\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tlNode = (*pNode)[key].pE\n+\t\t\t}\n+\t\t\tbuildSysctl(lNode, nodename, nodeoid)\n+\t\t} else if (*pNode)[key].t != \"\" {\n+\t\t\toidStr := []string{}\n+\t\t\tfor j := range nodeoid {\n+\t\t\t\toidStr = append(oidStr, fmt.Sprintf(\"%d\", nodeoid[j]))\n+\t\t\t}\n+\t\t\ttext := \"\\t{ \\\"\" + nodename + \"\\\", []_C_int{ \" + strings.Join(oidStr, \", \") + \" } }, \\n\"\n+\t\t\tsysCtl = append(sysCtl, text)\n+\t\t}\n+\t}\n+}\n+\n+func main() {\n+\t// Get the OS (using GOOS_TARGET if it exist)\n+\tgoos = os.Getenv(\"GOOS_TARGET\")\n+\tif goos == \"\" {\n+\t\tgoos = os.Getenv(\"GOOS\")\n+\t}\n+\t// Get the architecture (using GOARCH_TARGET if it exists)\n+\tgoarch = os.Getenv(\"GOARCH_TARGET\")\n+\tif goarch == \"\" {\n+\t\tgoarch = os.Getenv(\"GOARCH\")\n+\t}\n+\t// Check if GOOS and GOARCH environment variables are defined\n+\tif goarch == \"\" || goos == \"\" {\n+\t\tfmt.Fprintf(os.Stderr, \"GOARCH or GOOS not defined in environment\\n\")\n+\t\tos.Exit(1)\n+\t}\n+\n+\tmib = make(map[string]nodeElement)\n+\theaders := [...]string{\n+\t\t`sys/sysctl.h`,\n+\t\t`sys/socket.h`,\n+\t\t`sys/tty.h`,\n+\t\t`sys/malloc.h`,\n+\t\t`sys/mount.h`,\n+\t\t`sys/namei.h`,\n+\t\t`sys/sem.h`,\n+\t\t`sys/shm.h`,\n+\t\t`sys/vmmeter.h`,\n+\t\t`uvm/uvmexp.h`,\n+\t\t`uvm/uvm_param.h`,\n+\t\t`uvm/uvm_swap_encrypt.h`,\n+\t\t`ddb/db_var.h`,\n+\t\t`net/if.h`,\n+\t\t`net/if_pfsync.h`,\n+\t\t`net/pipex.h`,\n+\t\t`netinet/in.h`,\n+\t\t`netinet/icmp_var.h`,\n+\t\t`netinet/igmp_var.h`,\n+\t\t`netinet/ip_ah.h`,\n+\t\t`netinet/ip_carp.h`,\n+\t\t`netinet/ip_divert.h`,\n+\t\t`netinet/ip_esp.h`,\n+\t\t`netinet/ip_ether.h`,\n+\t\t`netinet/ip_gre.h`,\n+\t\t`netinet/ip_ipcomp.h`,\n+\t\t`netinet/ip_ipip.h`,\n+\t\t`netinet/pim_var.h`,\n+\t\t`netinet/tcp_var.h`,\n+\t\t`netinet/udp_var.h`,\n+\t\t`netinet6/in6.h`,\n+\t\t`netinet6/ip6_divert.h`,\n+\t\t`netinet6/pim6_var.h`,\n+\t\t`netinet/icmp6.h`,\n+\t\t`netmpls/mpls.h`,\n+\t}\n+\n+\tctls := [...]string{\n+\t\t`kern`,\n+\t\t`vm`,\n+\t\t`fs`,\n+\t\t`net`,\n+\t\t//debug\t\t\t/* Special handling required */\n+\t\t`hw`,\n+\t\t//machdep\t\t/* Arch specific */\n+\t\t`user`,\n+\t\t`ddb`,\n+\t\t//vfs\t\t\t/* Special handling required */\n+\t\t`fs.posix`,\n+\t\t`kern.forkstat`,\n+\t\t`kern.intrcnt`,\n+\t\t`kern.malloc`,\n+\t\t`kern.nchstats`,\n+\t\t`kern.seminfo`,\n+\t\t`kern.shminfo`,\n+\t\t`kern.timecounter`,\n+\t\t`kern.tty`,\n+\t\t`kern.watchdog`,\n+\t\t`net.bpf`,\n+\t\t`net.ifq`,\n+\t\t`net.inet`,\n+\t\t`net.inet.ah`,\n+\t\t`net.inet.carp`,\n+\t\t`net.inet.divert`,\n+\t\t`net.inet.esp`,\n+\t\t`net.inet.etherip`,\n+\t\t`net.inet.gre`,\n+\t\t`net.inet.icmp`,\n+\t\t`net.inet.igmp`,\n+\t\t`net.inet.ip`,\n+\t\t`net.inet.ip.ifq`,\n+\t\t`net.inet.ipcomp`,\n+\t\t`net.inet.ipip`,\n+\t\t`net.inet.mobileip`,\n+\t\t`net.inet.pfsync`,\n+\t\t`net.inet.pim`,\n+\t\t`net.inet.tcp`,\n+\t\t`net.inet.udp`,\n+\t\t`net.inet6`,\n+\t\t`net.inet6.divert`,\n+\t\t`net.inet6.ip6`,\n+\t\t`net.inet6.icmp6`,\n+\t\t`net.inet6.pim6`,\n+\t\t`net.inet6.tcp6`,\n+\t\t`net.inet6.udp6`,\n+\t\t`net.mpls`,\n+\t\t`net.mpls.ifq`,\n+\t\t`net.key`,\n+\t\t`net.pflow`,\n+\t\t`net.pfsync`,\n+\t\t`net.pipex`,\n+\t\t`net.rt`,\n+\t\t`vm.swapencrypt`,\n+\t\t//vfsgenctl\t\t/* Special handling required */\n+\t}\n+\n+\t// Node name \"fixups\"\n+\tctlMap := map[string]string{\n+\t\t\"ipproto\":             \"net.inet\",\n+\t\t\"net.inet.ipproto\":    \"net.inet\",\n+\t\t\"net.inet6.ipv6proto\": \"net.inet6\",\n+\t\t\"net.inet6.ipv6\":      \"net.inet6.ip6\",\n+\t\t\"net.inet.icmpv6\":     \"net.inet6.icmp6\",\n+\t\t\"net.inet6.divert6\":   \"net.inet6.divert\",\n+\t\t\"net.inet6.tcp6\":      \"net.inet.tcp\",\n+\t\t\"net.inet6.udp6\":      \"net.inet.udp\",\n+\t\t\"mpls\":                \"net.mpls\",\n+\t\t\"swpenc\":              \"vm.swapencrypt\",\n+\t}\n+\n+\t// Node mappings\n+\tnodeMap = map[string]string{\n+\t\t\"net.inet.ip.ifq\": \"net.ifq\",\n+\t\t\"net.inet.pfsync\": \"net.pfsync\",\n+\t\t\"net.mpls.ifq\":    \"net.ifq\",\n+\t}\n+\n+\tmCtls := make(map[string]bool)\n+\tfor _, ctl := range ctls {\n+\t\tmCtls[ctl] = true\n+\t}\n+\n+\tfor _, header := range headers {\n+\t\tdebug(\"Processing \" + header)\n+\t\tfile, err := os.Open(filepath.Join(\"/usr/include\", header))\n+\t\tif err != nil {\n+\t\t\tfmt.Fprintf(os.Stderr, \"%v\\n\", err)\n+\t\t\tos.Exit(1)\n+\t\t}\n+\t\ts := bufio.NewScanner(file)\n+\t\tfor s.Scan() {\n+\t\t\tvar sub []string\n+\t\t\tif reMatch(ctlNames1RE, s.Text(), &sub) ||\n+\t\t\t\treMatch(ctlNames2RE, s.Text(), &sub) ||\n+\t\t\t\treMatch(ctlNames3RE, s.Text(), &sub) {\n+\t\t\t\tif sub[1] == `CTL_NAMES` {\n+\t\t\t\t\t// Top level.\n+\t\t\t\t\tnode = &mib\n+\t\t\t\t} else {\n+\t\t\t\t\t// Node.\n+\t\t\t\t\tnodename := strings.ToLower(sub[2])\n+\t\t\t\t\tctlName := \"\"\n+\t\t\t\t\tif reMatch(netInetRE, header, &sub) {\n+\t\t\t\t\t\tctlName = \"net.inet.\" + nodename\n+\t\t\t\t\t} else if reMatch(netInet6RE, header, &sub) {\n+\t\t\t\t\t\tctlName = \"net.inet6.\" + nodename\n+\t\t\t\t\t} else if reMatch(netRE, header, &sub) {\n+\t\t\t\t\t\tctlName = \"net.\" + nodename\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tctlName = nodename\n+\t\t\t\t\t\tctlName = fsNetKernRE.ReplaceAllString(ctlName, `$1.`)\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif val, ok := ctlMap[ctlName]; ok {\n+\t\t\t\t\t\tctlName = val\n+\t\t\t\t\t}\n+\t\t\t\t\tif _, ok := mCtls[ctlName]; !ok {\n+\t\t\t\t\t\tdebug(\"Ignoring \" + ctlName + \"...\")\n+\t\t\t\t\t\tcontinue\n+\t\t\t\t\t}\n+\n+\t\t\t\t\t// Walk down from the top of the MIB.\n+\t\t\t\t\tnode = &mib\n+\t\t\t\t\tfor _, part := range strings.Split(ctlName, \".\") {\n+\t\t\t\t\t\tif _, ok := (*node)[part]; !ok {\n+\t\t\t\t\t\t\tdebug(\"Missing node \" + part)\n+\t\t\t\t\t\t\t(*node)[part] = nodeElement{n: 0, t: \"\", pE: &map[string]nodeElement{}}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tnode = (*node)[part].pE\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\t// Populate current node with entries.\n+\t\t\t\ti := -1\n+\t\t\t\tfor !strings.HasPrefix(s.Text(), \"}\") {\n+\t\t\t\t\ts.Scan()\n+\t\t\t\t\tif reMatch(bracesRE, s.Text(), &sub) {\n+\t\t\t\t\t\ti++\n+\t\t\t\t\t}\n+\t\t\t\t\tif !reMatch(ctlTypeRE, s.Text(), &sub) {\n+\t\t\t\t\t\tcontinue\n+\t\t\t\t\t}\n+\t\t\t\t\t(*node)[sub[1]] = nodeElement{n: i, t: sub[2], pE: &map[string]nodeElement{}}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\terr = s.Err()\n+\t\tif err != nil {\n+\t\t\tfmt.Fprintf(os.Stderr, \"%v\\n\", err)\n+\t\t\tos.Exit(1)\n+\t\t}\n+\t\tfile.Close()\n+\t}\n+\tbuildSysctl(&mib, \"\", []int{})\n+\n+\tsort.Strings(sysCtl)\n+\ttext := strings.Join(sysCtl, \"\")\n+\n+\tfmt.Printf(srcTemplate, cmdLine(), buildTags(), text)\n+}\n+\n+const srcTemplate = `// %s\n+// Code generated by the command above; DO NOT EDIT.\n+\n+// +build %s\n+\n+package unix\n+\n+type mibentry struct {\n+\tctlname string\n+\tctloid []_C_int\n+}\n+\n+var sysctlMib = []mibentry {\n+%s\n+}\n+`"
    },
    {
      "sha": "20632e14608e37ba2ff7c5b3f467009cf315b51a",
      "filename": "backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl",
      "status": "removed",
      "additions": 0,
      "deletions": 265,
      "changes": 265,
      "blob_url": "https://github.com/umputun/remark/blob/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl",
      "raw_url": "https://github.com/umputun/remark/raw/1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/mksysctl_openbsd.pl?ref=1616f43f0c85c231bc28cb1c8d64f6a3c834c9f4",
      "patch": "@@ -1,265 +0,0 @@\n-#!/usr/bin/env perl\n-\n-# Copyright 2011 The Go Authors. All rights reserved.\n-# Use of this source code is governed by a BSD-style\n-# license that can be found in the LICENSE file.\n-\n-#\n-# Parse the header files for OpenBSD and generate a Go usable sysctl MIB.\n-#\n-# Build a MIB with each entry being an array containing the level, type and\n-# a hash that will contain additional entries if the current entry is a node.\n-# We then walk this MIB and create a flattened sysctl name to OID hash.\n-#\n-\n-use strict;\n-\n-if($ENV{'GOARCH'} eq \"\" || $ENV{'GOOS'} eq \"\") {\n-\tprint STDERR \"GOARCH or GOOS not defined in environment\\n\";\n-\texit 1;\n-}\n-\n-my $debug = 0;\n-my %ctls = ();\n-\n-my @headers = qw (\n-\tsys/sysctl.h\n-\tsys/socket.h\n-\tsys/tty.h\n-\tsys/malloc.h\n-\tsys/mount.h\n-\tsys/namei.h\n-\tsys/sem.h\n-\tsys/shm.h\n-\tsys/vmmeter.h\n-\tuvm/uvmexp.h\n-\tuvm/uvm_param.h\n-\tuvm/uvm_swap_encrypt.h\n-\tddb/db_var.h\n-\tnet/if.h\n-\tnet/if_pfsync.h\n-\tnet/pipex.h\n-\tnetinet/in.h\n-\tnetinet/icmp_var.h\n-\tnetinet/igmp_var.h\n-\tnetinet/ip_ah.h\n-\tnetinet/ip_carp.h\n-\tnetinet/ip_divert.h\n-\tnetinet/ip_esp.h\n-\tnetinet/ip_ether.h\n-\tnetinet/ip_gre.h\n-\tnetinet/ip_ipcomp.h\n-\tnetinet/ip_ipip.h\n-\tnetinet/pim_var.h\n-\tnetinet/tcp_var.h\n-\tnetinet/udp_var.h\n-\tnetinet6/in6.h\n-\tnetinet6/ip6_divert.h\n-\tnetinet6/pim6_var.h\n-\tnetinet/icmp6.h\n-\tnetmpls/mpls.h\n-);\n-\n-my @ctls = qw (\n-\tkern\n-\tvm\n-\tfs\n-\tnet\n-\t#debug\t\t\t\t# Special handling required\n-\thw\n-\t#machdep\t\t\t# Arch specific\n-\tuser\n-\tddb\n-\t#vfs\t\t\t\t# Special handling required\n-\tfs.posix\n-\tkern.forkstat\n-\tkern.intrcnt\n-\tkern.malloc\n-\tkern.nchstats\n-\tkern.seminfo\n-\tkern.shminfo\n-\tkern.timecounter\n-\tkern.tty\n-\tkern.watchdog\n-\tnet.bpf\n-\tnet.ifq\n-\tnet.inet\n-\tnet.inet.ah\n-\tnet.inet.carp\n-\tnet.inet.divert\n-\tnet.inet.esp\n-\tnet.inet.etherip\n-\tnet.inet.gre\n-\tnet.inet.icmp\n-\tnet.inet.igmp\n-\tnet.inet.ip\n-\tnet.inet.ip.ifq\n-\tnet.inet.ipcomp\n-\tnet.inet.ipip\n-\tnet.inet.mobileip\n-\tnet.inet.pfsync\n-\tnet.inet.pim\n-\tnet.inet.tcp\n-\tnet.inet.udp\n-\tnet.inet6\n-\tnet.inet6.divert\n-\tnet.inet6.ip6\n-\tnet.inet6.icmp6\n-\tnet.inet6.pim6\n-\tnet.inet6.tcp6\n-\tnet.inet6.udp6\n-\tnet.mpls\n-\tnet.mpls.ifq\n-\tnet.key\n-\tnet.pflow\n-\tnet.pfsync\n-\tnet.pipex\n-\tnet.rt\n-\tvm.swapencrypt\n-\t#vfsgenctl\t\t\t# Special handling required\n-);\n-\n-# Node name \"fixups\"\n-my %ctl_map = (\n-\t\"ipproto\" => \"net.inet\",\n-\t\"net.inet.ipproto\" => \"net.inet\",\n-\t\"net.inet6.ipv6proto\" => \"net.inet6\",\n-\t\"net.inet6.ipv6\" => \"net.inet6.ip6\",\n-\t\"net.inet.icmpv6\" => \"net.inet6.icmp6\",\n-\t\"net.inet6.divert6\" => \"net.inet6.divert\",\n-\t\"net.inet6.tcp6\" => \"net.inet.tcp\",\n-\t\"net.inet6.udp6\" => \"net.inet.udp\",\n-\t\"mpls\" => \"net.mpls\",\n-\t\"swpenc\" => \"vm.swapencrypt\"\n-);\n-\n-# Node mappings\n-my %node_map = (\n-\t\"net.inet.ip.ifq\" => \"net.ifq\",\n-\t\"net.inet.pfsync\" => \"net.pfsync\",\n-\t\"net.mpls.ifq\" => \"net.ifq\"\n-);\n-\n-my $ctlname;\n-my %mib = ();\n-my %sysctl = ();\n-my $node;\n-\n-sub debug() {\n-\tprint STDERR \"$_[0]\\n\" if $debug;\n-}\n-\n-# Walk the MIB and build a sysctl name to OID mapping.\n-sub build_sysctl() {\n-\tmy ($node, $name, $oid) = @_;\n-\tmy %node = %{$node};\n-\tmy @oid = @{$oid};\n-\n-\tforeach my $key (sort keys %node) {\n-\t\tmy @node = @{$node{$key}};\n-\t\tmy $nodename = $name.($name ne '' ? '.' : '').$key;\n-\t\tmy @nodeoid = (@oid, $node[0]);\n-\t\tif ($node[1] eq 'CTLTYPE_NODE') {\n-\t\t\tif (exists $node_map{$nodename}) {\n-\t\t\t\t$node = \\%mib;\n-\t\t\t\t$ctlname = $node_map{$nodename};\n-\t\t\t\tforeach my $part (split /\\./, $ctlname) {\n-\t\t\t\t\t$node = \\%{@{$$node{$part}}[2]};\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\t$node = $node[2];\n-\t\t\t}\n-\t\t\t&build_sysctl($node, $nodename, \\@nodeoid);\n-\t\t} elsif ($node[1] ne '') {\n-\t\t\t$sysctl{$nodename} = \\@nodeoid;\n-\t\t}\n-\t}\n-}\n-\n-foreach my $ctl (@ctls) {\n-\t$ctls{$ctl} = $ctl;\n-}\n-\n-# Build MIB\n-foreach my $header (@headers) {\n-\t&debug(\"Processing $header...\");\n-\topen HEADER, \"/usr/include/$header\" ||\n-\t    print STDERR \"Failed to open $header\\n\";\n-\twhile (<HEADER>) {\n-\t\tif ($_ =~ /^#define\\s+(CTL_NAMES)\\s+{/ ||\n-\t\t    $_ =~ /^#define\\s+(CTL_(.*)_NAMES)\\s+{/ ||\n-\t\t    $_ =~ /^#define\\s+((.*)CTL_NAMES)\\s+{/) {\n-\t\t\tif ($1 eq 'CTL_NAMES') {\n-\t\t\t\t# Top level.\n-\t\t\t\t$node = \\%mib;\n-\t\t\t} else {\n-\t\t\t\t# Node.\n-\t\t\t\tmy $nodename = lc($2);\n-\t\t\t\tif ($header =~ /^netinet\\//) {\n-\t\t\t\t\t$ctlname = \"net.inet.$nodename\";\n-\t\t\t\t} elsif ($header =~ /^netinet6\\//) {\n-\t\t\t\t\t$ctlname = \"net.inet6.$nodename\";\n-\t\t\t\t} elsif ($header =~ /^net\\//) {\n-\t\t\t\t\t$ctlname = \"net.$nodename\";\n-\t\t\t\t} else {\n-\t\t\t\t\t$ctlname = \"$nodename\";\n-\t\t\t\t\t$ctlname =~ s/^(fs|net|kern)_/$1\\./;\n-\t\t\t\t}\n-\t\t\t\tif (exists $ctl_map{$ctlname}) {\n-\t\t\t\t\t$ctlname = $ctl_map{$ctlname};\n-\t\t\t\t}\n-\t\t\t\tif (not exists $ctls{$ctlname}) {\n-\t\t\t\t\t&debug(\"Ignoring $ctlname...\");\n-\t\t\t\t\tnext;\n-\t\t\t\t}\n-\n-\t\t\t\t# Walk down from the top of the MIB.\n-\t\t\t\t$node = \\%mib;\n-\t\t\t\tforeach my $part (split /\\./, $ctlname) {\n-\t\t\t\t\tif (not exists $$node{$part}) {\n-\t\t\t\t\t\t&debug(\"Missing node $part\");\n-\t\t\t\t\t\t$$node{$part} = [ 0, '', {} ];\n-\t\t\t\t\t}\n-\t\t\t\t\t$node = \\%{@{$$node{$part}}[2]};\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t# Populate current node with entries.\n-\t\t\tmy $i = -1;\n-\t\t\twhile (defined($_) && $_ !~ /^}/) {\n-\t\t\t\t$_ = <HEADER>;\n-\t\t\t\t$i++ if $_ =~ /{.*}/;\n-\t\t\t\tnext if $_ !~ /{\\s+\"(\\w+)\",\\s+(CTLTYPE_[A-Z]+)\\s+}/;\n-\t\t\t\t$$node{$1} = [ $i, $2, {} ];\n-\t\t\t}\n-\t\t}\n-\t}\n-\tclose HEADER;\n-}\n-\n-&build_sysctl(\\%mib, \"\", []);\n-\n-print <<EOF;\n-// mksysctl_openbsd.pl\n-// Code generated by the command above; DO NOT EDIT.\n-\n-// +build $ENV{'GOARCH'},$ENV{'GOOS'}\n-\n-package unix;\n-\n-type mibentry struct {\n-\tctlname string\n-\tctloid []_C_int\n-}\n-\n-var sysctlMib = []mibentry {\n-EOF\n-\n-foreach my $name (sort keys %sysctl) {\n-\tmy @oid = @{$sysctl{$name}};\n-\tprint \"\\t{ \\\"$name\\\", []_C_int{ \", join(', ', @oid), \" } }, \\n\";\n-}\n-\n-print <<EOF;\n-}\n-EOF"
    },
    {
      "sha": "eb48294b2742bf0141212eb69261436a2ea5e0d8",
      "filename": "backend/vendor/golang.org/x/sys/unix/pledge_openbsd.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 3,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/pledge_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/pledge_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/pledge_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -2,9 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build openbsd\n-// +build 386 amd64 arm\n-\n package unix\n \n import (",
      "previous_filename": "backend/vendor/golang.org/x/sys/unix/openbsd_pledge.go"
    },
    {
      "sha": "062bcabab1b0edaa65c9a099ff15bf023e79558f",
      "filename": "backend/vendor/golang.org/x/sys/unix/sockcmsg_unix.go",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/sockcmsg_unix.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/sockcmsg_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/sockcmsg_unix.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -18,15 +18,18 @@ func cmsgAlignOf(salen int) int {\n \tsalign := SizeofPtr\n \n \tswitch runtime.GOOS {\n-\tcase \"darwin\", \"dragonfly\", \"solaris\":\n-\t\t// NOTE: It seems like 64-bit Darwin, DragonFly BSD and\n-\t\t// Solaris kernels still require 32-bit aligned access to\n-\t\t// network subsystem.\n+\tcase \"aix\":\n+\t\t// There is no alignment on AIX.\n+\t\tsalign = 1\n+\tcase \"darwin\", \"dragonfly\", \"solaris\", \"illumos\":\n+\t\t// NOTE: It seems like 64-bit Darwin, DragonFly BSD,\n+\t\t// illumos, and Solaris kernels still require 32-bit\n+\t\t// aligned access to network subsystem.\n \t\tif SizeofPtr == 8 {\n \t\t\tsalign = 4\n \t\t}\n-\tcase \"openbsd\":\n-\t\t// OpenBSD armv7 requires 64-bit alignment.\n+\tcase \"netbsd\", \"openbsd\":\n+\t\t// NetBSD and OpenBSD armv7 require 64-bit alignment.\n \t\tif runtime.GOARCH == \"arm\" {\n \t\t\tsalign = 8\n \t\t}"
    },
    {
      "sha": "fd4ee8ebeb7072d32b042e2d6f1ba7b8bc055122",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall.go",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -50,5 +50,4 @@ func BytePtrFromString(s string) (*byte, error) {\n }\n \n // Single-word zero for use when we need a valid pointer to 0 bytes.\n-// See mkunix.pl.\n var _zero uintptr"
    },
    {
      "sha": "c1fb7bd16e9fd1b98548cd07be049faaeedc8f7f",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "status": "modified",
      "additions": 16,
      "deletions": 6,
      "changes": 22,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_aix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_aix.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -444,8 +444,6 @@ func IoctlGetTermios(fd int, req uint) (*Termios, error) {\n //sysnb\tTimes(tms *Tms) (ticks uintptr, err error)\n //sysnb\tUmask(mask int) (oldmask int)\n //sysnb\tUname(buf *Utsname) (err error)\n-//TODO umount\n-// //sys\tUnmount(target string, flags int) (err error) = umount\n //sys   Unlink(path string) (err error)\n //sys   Unlinkat(dirfd int, path string, flags int) (err error)\n //sys\tUstat(dev int, ubuf *Ustat_t) (err error)\n@@ -470,8 +468,7 @@ func IoctlGetTermios(fd int, req uint) (*Termios, error) {\n //sys\tPause() (err error)\n //sys\tPread(fd int, p []byte, offset int64) (n int, err error) = pread64\n //sys\tPwrite(fd int, p []byte, offset int64) (n int, err error) = pwrite64\n-//TODO Select\n-// //sys\tSelect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error)\n+//sys\tSelect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error)\n //sys\tPselect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timespec, sigmask *Sigset_t) (n int, err error)\n //sysnb\tSetregid(rgid int, egid int) (err error)\n //sysnb\tSetreuid(ruid int, euid int) (err error)\n@@ -493,8 +490,10 @@ func IoctlGetTermios(fd int, req uint) (*Termios, error) {\n //sysnb\tgetsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error)\n //sys\trecvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error)\n //sys\tsendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error)\n-//sys\trecvmsg(s int, msg *Msghdr, flags int) (n int, err error)\n-//sys\tsendmsg(s int, msg *Msghdr, flags int) (n int, err error)\n+\n+// In order to use msghdr structure with Control, Controllen, nrecvmsg and nsendmsg must be used.\n+//sys\trecvmsg(s int, msg *Msghdr, flags int) (n int, err error) = nrecvmsg\n+//sys\tsendmsg(s int, msg *Msghdr, flags int) (n int, err error) = nsendmsg\n \n //sys\tmunmap(addr uintptr, length uintptr) (err error)\n \n@@ -545,3 +544,14 @@ func Poll(fds []PollFd, timeout int) (n int, err error) {\n //sys\tgettimeofday(tv *Timeval, tzp *Timezone) (err error)\n //sysnb\tTime(t *Time_t) (tt Time_t, err error)\n //sys\tUtime(path string, buf *Utimbuf) (err error)\n+\n+//sys\tGetsystemcfg(label int) (n uint64)\n+\n+//sys\tumount(target string) (err error)\n+func Unmount(target string, flags int) (err error) {\n+\tif flags != 0 {\n+\t\t// AIX doesn't have any flags for umount.\n+\t\treturn ENOSYS\n+\t}\n+\treturn umount(target)\n+}"
    },
    {
      "sha": "21200918927f54a8da5bb74c5bd91ec98373aacb",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_darwin.go",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_darwin.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_darwin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_darwin.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -144,6 +144,23 @@ func getAttrList(path string, attrList attrList, attrBuf []byte, options uint) (\n \n //sys getattrlist(path *byte, list unsafe.Pointer, buf unsafe.Pointer, size uintptr, options int) (err error)\n \n+func SysctlClockinfo(name string) (*Clockinfo, error) {\n+\tmib, err := sysctlmib(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tn := uintptr(SizeofClockinfo)\n+\tvar ci Clockinfo\n+\tif err := sysctl(mib, (*byte)(unsafe.Pointer(&ci)), &n, nil, 0); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif n != SizeofClockinfo {\n+\t\treturn nil, EIO\n+\t}\n+\treturn &ci, nil\n+}\n+\n //sysnb pipe() (r int, w int, err error)\n \n func Pipe(p []int) (err error) {"
    },
    {
      "sha": "c302f01b2e941a7d82dbf810105dfb3f83caa6fe",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "status": "modified",
      "additions": 130,
      "deletions": 0,
      "changes": 130,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_linux.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -39,6 +39,20 @@ func Creat(path string, mode uint32) (fd int, err error) {\n \treturn Open(path, O_CREAT|O_WRONLY|O_TRUNC, mode)\n }\n \n+//sys\tFanotifyInit(flags uint, event_f_flags uint) (fd int, err error)\n+//sys\tfanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error)\n+\n+func FanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname string) (err error) {\n+\tif pathname == \"\" {\n+\t\treturn fanotifyMark(fd, flags, mask, dirFd, nil)\n+\t}\n+\tp, err := BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\treturn fanotifyMark(fd, flags, mask, dirFd, p)\n+}\n+\n //sys\tfchmodat(dirfd int, path string, mode uint32) (err error)\n \n func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {\n@@ -990,10 +1004,50 @@ func GetsockoptString(fd, level, opt int) (string, error) {\n \treturn string(buf[:vallen-1]), nil\n }\n \n+func GetsockoptTpacketStats(fd, level, opt int) (*TpacketStats, error) {\n+\tvar value TpacketStats\n+\tvallen := _Socklen(SizeofTpacketStats)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n+\treturn &value, err\n+}\n+\n+func GetsockoptTpacketStatsV3(fd, level, opt int) (*TpacketStatsV3, error) {\n+\tvar value TpacketStatsV3\n+\tvallen := _Socklen(SizeofTpacketStatsV3)\n+\terr := getsockopt(fd, level, opt, unsafe.Pointer(&value), &vallen)\n+\treturn &value, err\n+}\n+\n func SetsockoptIPMreqn(fd, level, opt int, mreq *IPMreqn) (err error) {\n \treturn setsockopt(fd, level, opt, unsafe.Pointer(mreq), unsafe.Sizeof(*mreq))\n }\n \n+func SetsockoptPacketMreq(fd, level, opt int, mreq *PacketMreq) error {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(mreq), unsafe.Sizeof(*mreq))\n+}\n+\n+// SetsockoptSockFprog attaches a classic BPF or an extended BPF program to a\n+// socket to filter incoming packets.  See 'man 7 socket' for usage information.\n+func SetsockoptSockFprog(fd, level, opt int, fprog *SockFprog) error {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(fprog), unsafe.Sizeof(*fprog))\n+}\n+\n+func SetsockoptCanRawFilter(fd, level, opt int, filter []CanFilter) error {\n+\tvar p unsafe.Pointer\n+\tif len(filter) > 0 {\n+\t\tp = unsafe.Pointer(&filter[0])\n+\t}\n+\treturn setsockopt(fd, level, opt, p, uintptr(len(filter)*SizeofCanFilter))\n+}\n+\n+func SetsockoptTpacketReq(fd, level, opt int, tp *TpacketReq) error {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(tp), unsafe.Sizeof(*tp))\n+}\n+\n+func SetsockoptTpacketReq3(fd, level, opt int, tp *TpacketReq3) error {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(tp), unsafe.Sizeof(*tp))\n+}\n+\n // Keyctl Commands (http://man7.org/linux/man-pages/man2/keyctl.2.html)\n \n // KeyctlInt calls keyctl commands in which each argument is an int.\n@@ -1608,6 +1662,82 @@ func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {\n \treturn EACCES\n }\n \n+//sys nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) = SYS_NAME_TO_HANDLE_AT\n+//sys openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) = SYS_OPEN_BY_HANDLE_AT\n+\n+// fileHandle is the argument to nameToHandleAt and openByHandleAt. We\n+// originally tried to generate it via unix/linux/types.go with \"type\n+// fileHandle C.struct_file_handle\" but that generated empty structs\n+// for mips64 and mips64le. Instead, hard code it for now (it's the\n+// same everywhere else) until the mips64 generator issue is fixed.\n+type fileHandle struct {\n+\tBytes uint32\n+\tType  int32\n+}\n+\n+// FileHandle represents the C struct file_handle used by\n+// name_to_handle_at (see NameToHandleAt) and open_by_handle_at (see\n+// OpenByHandleAt).\n+type FileHandle struct {\n+\t*fileHandle\n+}\n+\n+// NewFileHandle constructs a FileHandle.\n+func NewFileHandle(handleType int32, handle []byte) FileHandle {\n+\tconst hdrSize = unsafe.Sizeof(fileHandle{})\n+\tbuf := make([]byte, hdrSize+uintptr(len(handle)))\n+\tcopy(buf[hdrSize:], handle)\n+\tfh := (*fileHandle)(unsafe.Pointer(&buf[0]))\n+\tfh.Type = handleType\n+\tfh.Bytes = uint32(len(handle))\n+\treturn FileHandle{fh}\n+}\n+\n+func (fh *FileHandle) Size() int   { return int(fh.fileHandle.Bytes) }\n+func (fh *FileHandle) Type() int32 { return fh.fileHandle.Type }\n+func (fh *FileHandle) Bytes() []byte {\n+\tn := fh.Size()\n+\tif n == 0 {\n+\t\treturn nil\n+\t}\n+\treturn (*[1 << 30]byte)(unsafe.Pointer(uintptr(unsafe.Pointer(&fh.fileHandle.Type)) + 4))[:n:n]\n+}\n+\n+// NameToHandleAt wraps the name_to_handle_at system call; it obtains\n+// a handle for a path name.\n+func NameToHandleAt(dirfd int, path string, flags int) (handle FileHandle, mountID int, err error) {\n+\tvar mid _C_int\n+\t// Try first with a small buffer, assuming the handle will\n+\t// only be 32 bytes.\n+\tsize := uint32(32 + unsafe.Sizeof(fileHandle{}))\n+\tdidResize := false\n+\tfor {\n+\t\tbuf := make([]byte, size)\n+\t\tfh := (*fileHandle)(unsafe.Pointer(&buf[0]))\n+\t\tfh.Bytes = size - uint32(unsafe.Sizeof(fileHandle{}))\n+\t\terr = nameToHandleAt(dirfd, path, fh, &mid, flags)\n+\t\tif err == EOVERFLOW {\n+\t\t\tif didResize {\n+\t\t\t\t// We shouldn't need to resize more than once\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tdidResize = true\n+\t\t\tsize = fh.Bytes + uint32(unsafe.Sizeof(fileHandle{}))\n+\t\t\tcontinue\n+\t\t}\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\treturn FileHandle{fh}, int(mid), nil\n+\t}\n+}\n+\n+// OpenByHandleAt wraps the open_by_handle_at system call; it opens a\n+// file via a handle as previously returned by NameToHandleAt.\n+func OpenByHandleAt(mountFD int, handle FileHandle, flags int) (fd int, err error) {\n+\treturn openByHandleAt(mountFD, handle.fileHandle, flags)\n+}\n+\n /*\n  * Unimplemented\n  */"
    },
    {
      "sha": "3a3c37b4c8b6d8b1b4ac896c9d0b54e2bb59d84d",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_arm.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -19,12 +19,18 @@ func setTimeval(sec, usec int64) Timeval {\n \treturn Timeval{Sec: int32(sec), Usec: int32(usec)}\n }\n \n+//sysnb\tpipe(p *[2]_C_int) (err error)\n+\n func Pipe(p []int) (err error) {\n \tif len(p) != 2 {\n \t\treturn EINVAL\n \t}\n \tvar pp [2]_C_int\n+\t// Try pipe2 first for Android O, then try pipe for kernel 2.6.23.\n \terr = pipe2(&pp, 0)\n+\tif err == ENOSYS {\n+\t\terr = pipe(&pp)\n+\t}\n \tp[0] = int(pp[0])\n \tp[1] = int(pp[1])\n \treturn"
    },
    {
      "sha": "cb20b15d5d2bfb424881c6ef3b06ee191efe82ed",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -208,3 +208,16 @@ func Poll(fds []PollFd, timeout int) (n int, err error) {\n \t}\n \treturn ppoll(&fds[0], len(fds), ts, nil)\n }\n+\n+//sys\tkexecFileLoad(kernelFd int, initrdFd int, cmdlineLen int, cmdline string, flags int) (err error)\n+\n+func KexecFileLoad(kernelFd int, initrdFd int, cmdline string, flags int) error {\n+\tcmdlineLen := len(cmdline)\n+\tif cmdlineLen > 0 {\n+\t\t// Account for the additional NULL byte added by\n+\t\t// BytePtrFromString in kexecFileLoad. The kexec_file_load\n+\t\t// syscall expects a NULL-terminated string.\n+\t\tcmdlineLen++\n+\t}\n+\treturn kexecFileLoad(kernelFd, initrdFd, cmdlineLen, cmdline, flags)\n+}"
    },
    {
      "sha": "6230f64052003973785d3b622d28f0b105edb502",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
      "status": "modified",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -211,3 +211,16 @@ func Poll(fds []PollFd, timeout int) (n int, err error) {\n func Renameat(olddirfd int, oldpath string, newdirfd int, newpath string) (err error) {\n \treturn Renameat2(olddirfd, oldpath, newdirfd, newpath, 0)\n }\n+\n+//sys\tkexecFileLoad(kernelFd int, initrdFd int, cmdlineLen int, cmdline string, flags int) (err error)\n+\n+func KexecFileLoad(kernelFd int, initrdFd int, cmdline string, flags int) error {\n+\tcmdlineLen := len(cmdline)\n+\tif cmdlineLen > 0 {\n+\t\t// Account for the additional NULL byte added by\n+\t\t// BytePtrFromString in kexecFileLoad. The kexec_file_load\n+\t\t// syscall expects a NULL-terminated string.\n+\t\tcmdlineLen++\n+\t}\n+\treturn kexecFileLoad(kernelFd, initrdFd, cmdlineLen, cmdline, flags)\n+}"
    },
    {
      "sha": "c8648ec02678713de430345ed3f10552a42566a0",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_openbsd.go",
      "status": "modified",
      "additions": 17,
      "deletions": 0,
      "changes": 17,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -43,6 +43,23 @@ func nametomib(name string) (mib []_C_int, err error) {\n \treturn nil, EINVAL\n }\n \n+func SysctlClockinfo(name string) (*Clockinfo, error) {\n+\tmib, err := sysctlmib(name)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tn := uintptr(SizeofClockinfo)\n+\tvar ci Clockinfo\n+\tif err := sysctl(mib, (*byte)(unsafe.Pointer(&ci)), &n, nil, 0); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif n != SizeofClockinfo {\n+\t\treturn nil, EIO\n+\t}\n+\treturn &ci, nil\n+}\n+\n func SysctlUvmexp(name string) (*Uvmexp, error) {\n \tmib, err := sysctlmib(name)\n \tif err != nil {"
    },
    {
      "sha": "0fb39cf5eb121bee58521ab25df3aea9ef2ae308",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go",
      "status": "added",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build arm64,openbsd\n+\n+package unix\n+\n+func setTimespec(sec, nsec int64) Timespec {\n+\treturn Timespec{Sec: sec, Nsec: nsec}\n+}\n+\n+func setTimeval(sec, usec int64) Timeval {\n+\treturn Timeval{Sec: sec, Usec: usec}\n+}\n+\n+func SetKevent(k *Kevent_t, fd, mode, flags int) {\n+\tk.Ident = uint64(fd)\n+\tk.Filter = int16(mode)\n+\tk.Flags = uint16(flags)\n+}\n+\n+func (iov *Iovec) SetLen(length int) {\n+\tiov.Len = uint64(length)\n+}\n+\n+func (msghdr *Msghdr) SetControllen(length int) {\n+\tmsghdr.Controllen = uint32(length)\n+}\n+\n+func (cmsg *Cmsghdr) SetLen(length int) {\n+\tcmsg.Len = uint32(length)\n+}\n+\n+// SYS___SYSCTL is used by syscall_bsd.go for all BSDs, but in modern versions\n+// of openbsd/amd64 the syscall is called sysctl instead of __sysctl.\n+const SYS___SYSCTL = SYS_SYSCTL"
    },
    {
      "sha": "3de37566c6fd9f23a9c45e850b01e403072ad766",
      "filename": "backend/vendor/golang.org/x/sys/unix/syscall_unix.go",
      "status": "modified",
      "additions": 53,
      "deletions": 1,
      "changes": 54,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_unix.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/syscall_unix.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/syscall_unix.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -28,6 +28,11 @@ var (\n \terrENOENT error = syscall.ENOENT\n )\n \n+var (\n+\tsignalNameMapOnce sync.Once\n+\tsignalNameMap     map[string]syscall.Signal\n+)\n+\n // errnoErr returns common boxed Errno values, to prevent\n // allocations at runtime.\n func errnoErr(e syscall.Errno) error {\n@@ -66,6 +71,19 @@ func SignalName(s syscall.Signal) string {\n \treturn \"\"\n }\n \n+// SignalNum returns the syscall.Signal for signal named s,\n+// or 0 if a signal with such name is not found.\n+// The signal name should start with \"SIG\".\n+func SignalNum(s string) syscall.Signal {\n+\tsignalNameMapOnce.Do(func() {\n+\t\tsignalNameMap = make(map[string]syscall.Signal)\n+\t\tfor _, signal := range signalList {\n+\t\t\tsignalNameMap[signal.name] = signal.num\n+\t\t}\n+\t})\n+\treturn signalNameMap[s]\n+}\n+\n // clen returns the index of the first NULL byte in n or len(n) if n contains no NULL byte.\n func clen(n []byte) int {\n \ti := bytes.IndexByte(n, 0)\n@@ -276,6 +294,13 @@ func GetsockoptTimeval(fd, level, opt int) (*Timeval, error) {\n \treturn &tv, err\n }\n \n+func GetsockoptUint64(fd, level, opt int) (value uint64, err error) {\n+\tvar n uint64\n+\tvallen := _Socklen(8)\n+\terr = getsockopt(fd, level, opt, unsafe.Pointer(&n), &vallen)\n+\treturn n, err\n+}\n+\n func Recvfrom(fd int, p []byte, flags int) (n int, from Sockaddr, err error) {\n \tvar rsa RawSockaddrAny\n \tvar len _Socklen = SizeofSockaddrAny\n@@ -326,13 +351,21 @@ func SetsockoptLinger(fd, level, opt int, l *Linger) (err error) {\n }\n \n func SetsockoptString(fd, level, opt int, s string) (err error) {\n-\treturn setsockopt(fd, level, opt, unsafe.Pointer(&[]byte(s)[0]), uintptr(len(s)))\n+\tvar p unsafe.Pointer\n+\tif len(s) > 0 {\n+\t\tp = unsafe.Pointer(&[]byte(s)[0])\n+\t}\n+\treturn setsockopt(fd, level, opt, p, uintptr(len(s)))\n }\n \n func SetsockoptTimeval(fd, level, opt int, tv *Timeval) (err error) {\n \treturn setsockopt(fd, level, opt, unsafe.Pointer(tv), unsafe.Sizeof(*tv))\n }\n \n+func SetsockoptUint64(fd, level, opt int, value uint64) (err error) {\n+\treturn setsockopt(fd, level, opt, unsafe.Pointer(&value), 8)\n+}\n+\n func Socket(domain, typ, proto int) (fd int, err error) {\n \tif domain == AF_INET6 && SocketDisableIPv6 {\n \t\treturn -1, EAFNOSUPPORT\n@@ -377,3 +410,22 @@ func SetNonblock(fd int, nonblocking bool) (err error) {\n func Exec(argv0 string, argv []string, envv []string) error {\n \treturn syscall.Exec(argv0, argv, envv)\n }\n+\n+// Lutimes sets the access and modification times tv on path. If path refers to\n+// a symlink, it is not dereferenced and the timestamps are set on the symlink.\n+// If tv is nil, the access and modification times are set to the current time.\n+// Otherwise tv must contain exactly 2 elements, with access time as the first\n+// element and modification time as the second element.\n+func Lutimes(path string, tv []Timeval) error {\n+\tif tv == nil {\n+\t\treturn UtimesNanoAt(AT_FDCWD, path, nil, AT_SYMLINK_NOFOLLOW)\n+\t}\n+\tif len(tv) != 2 {\n+\t\treturn EINVAL\n+\t}\n+\tts := []Timespec{\n+\t\tNsecToTimespec(TimevalToNsec(tv[0])),\n+\t\tNsecToTimespec(TimevalToNsec(tv[1])),\n+\t}\n+\treturn UtimesNanoAt(AT_FDCWD, path, ts, AT_SYMLINK_NOFOLLOW)\n+}"
    },
    {
      "sha": "155c2e692b45eb9f4416eaa6fe5ad50c4ea655a1",
      "filename": "backend/vendor/golang.org/x/sys/unix/types_darwin.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/types_darwin.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/types_darwin.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/types_darwin.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -275,3 +275,9 @@ const (\n // uname\n \n type Utsname C.struct_utsname\n+\n+// Clockinfo\n+\n+const SizeofClockinfo = C.sizeof_struct_clockinfo\n+\n+type Clockinfo C.struct_clockinfo"
    },
    {
      "sha": "8aafbe4469bfaf4e26df54c4550349490a70c342",
      "filename": "backend/vendor/golang.org/x/sys/unix/types_openbsd.go",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/types_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/types_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/types_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -274,3 +274,9 @@ type Utsname C.struct_utsname\n const SizeofUvmexp = C.sizeof_struct_uvmexp\n \n type Uvmexp C.struct_uvmexp\n+\n+// Clockinfo\n+\n+const SizeofClockinfo = C.sizeof_struct_clockinfo\n+\n+type Clockinfo C.struct_clockinfo"
    },
    {
      "sha": "168d5ae77914b2f64303199c01b9dbf62e420fe1",
      "filename": "backend/vendor/golang.org/x/sys/unix/unveil_openbsd.go",
      "status": "renamed",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/unveil_openbsd.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/unveil_openbsd.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/unveil_openbsd.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -2,8 +2,6 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build openbsd\n-\n package unix\n \n import (",
      "previous_filename": "backend/vendor/golang.org/x/sys/unix/openbsd_unveil.go"
    },
    {
      "sha": "1def8a5812657313c2348f0a12281654160bbc2a",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -926,6 +926,8 @@ const (\n \tTCSETSF                       = 0x5404\n \tTCSETSW                       = 0x5403\n \tTCXONC                        = 0x540b\n+\tTIMER_ABSTIME                 = 0x3e7\n+\tTIMER_MAX                     = 0x20\n \tTIOC                          = 0x5400\n \tTIOCCBRK                      = 0x2000747a\n \tTIOCCDTR                      = 0x20007478"
    },
    {
      "sha": "03187dea98f39000437c7a9e9c8301e7c7e15bea",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_aix_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -3,7 +3,7 @@\n \n // +build ppc64,aix\n \n-// Created by cgo -godefs - DO NOT EDIT\n+// Code generated by cmd/cgo -godefs; DO NOT EDIT.\n // cgo -godefs -- -maix64 _const.go\n \n package unix\n@@ -926,6 +926,8 @@ const (\n \tTCSETSF                       = 0x5404\n \tTCSETSW                       = 0x5403\n \tTCXONC                        = 0x540b\n+\tTIMER_ABSTIME                 = 0x3e7\n+\tTIMER_MAX                     = 0x20\n \tTIOC                          = 0x5400\n \tTIOCCBRK                      = 0x2000747a\n \tTIOCCDTR                      = 0x20007478"
    },
    {
      "sha": "d180147f7972e8bff33948cb26efe705a114c5ae",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80041270\n \tBLKBSZSET                            = 0x40041271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,13 +491,58 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n \tFP_XSTATE_MAGIC2                     = 0x46505845\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -514,7 +564,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1134,7 +1184,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1398,6 +1448,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2232,6 +2288,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "1d277a412d7eb59410ea7d05a105ac858434fb2d",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80081270\n \tBLKBSZSET                            = 0x40081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,13 +491,58 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n \tFP_XSTATE_MAGIC2                     = 0x46505845\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -514,7 +564,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1134,7 +1184,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1398,6 +1448,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2233,6 +2289,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "63ac45af8161b673156c3ea8979139c37e7a4db5",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80041270\n \tBLKBSZSET                            = 0x40041271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2239,6 +2295,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "81d3259edb0198837b54fcf2b664811d8e358098",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80081270\n \tBLKBSZSET                            = 0x40081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -488,13 +493,58 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n \tFPSIMD_MAGIC                         = 0x46508001\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -516,7 +566,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1135,7 +1185,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1399,6 +1449,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2224,6 +2280,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "58fc1eb9c829d2dd7cb4bb683a5f2ed78877ebb6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40041270\n \tBLKBSZSET                            = 0x80041271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x2000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2234,6 +2290,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "67336da6cd5fa6422fe50980c6e118743b81333c",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40081270\n \tBLKBSZSET                            = 0x80081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x2000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2234,6 +2290,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "af030dcbb0a6e3fb67106c9eb014bad08dc7a802",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mips64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40081270\n \tBLKBSZSET                            = 0x80081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x2000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2234,6 +2290,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "be225da7d914406f84990643d0913ecfbdeed4a9",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_mipsle.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40041270\n \tBLKBSZSET                            = 0x80041271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x2000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2234,6 +2290,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "fcbc70173a0739dfc8919c3b41bca2ea6995485b",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40081270\n \tBLKBSZSET                            = 0x80081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x3000\n \tCREAD                                = 0x800\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x100\n \tCS7                                  = 0x200\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x4000\n \tFFDLY                                = 0x4000\n \tFLUSHO                               = 0x800000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1131,7 +1181,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1398,6 +1448,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2294,6 +2350,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "5cd3b4ed0e6ff94152402bf7382c129f09b674ca",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_ppc64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40081270\n \tBLKBSZSET                            = 0x80081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x3000\n \tCREAD                                = 0x800\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x100\n \tCS7                                  = 0x200\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x4000\n \tFFDLY                                = 0x4000\n \tFLUSHO                               = 0x800000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1131,7 +1181,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1398,6 +1448,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2294,6 +2350,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "0465451e884f460c800156633ddf08e648449cc4",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_riscv64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80081270\n \tBLKBSZSET                            = 0x40081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2220,6 +2276,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "e1592a17a31722eb8a0a198dc0f76598d6463323",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_s390x.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -174,6 +174,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x80081270\n \tBLKBSZSET                            = 0x40081271\n@@ -319,6 +320,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -486,12 +491,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -513,7 +563,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1132,7 +1182,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1396,6 +1446,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2293,6 +2349,7 @@ const (\n \tTUNGETVNETBE                         = 0x800454df\n \tTUNGETVNETHDRSZ                      = 0x800454d7\n \tTUNGETVNETLE                         = 0x800454dd\n+\tTUNSETCARRIER                        = 0x400454e2\n \tTUNSETDEBUG                          = 0x400454c9\n \tTUNSETFILTEREBPF                     = 0x800454e1\n \tTUNSETGROUP                          = 0x400454ce"
    },
    {
      "sha": "4be507343cdd692319445d2eb58e2efc1df5ce23",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go",
      "status": "modified",
      "additions": 59,
      "deletions": 2,
      "changes": 61,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_linux_sparc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -177,6 +177,7 @@ const (\n \tB9600                                = 0xd\n \tBALLOON_KVM_MAGIC                    = 0x13661366\n \tBDEVFS_MAGIC                         = 0x62646576\n+\tBINDERFS_SUPER_MAGIC                 = 0x6c6f6f70\n \tBINFMTFS_MAGIC                       = 0x42494e4d\n \tBLKBSZGET                            = 0x40081270\n \tBLKBSZSET                            = 0x80081271\n@@ -322,6 +323,10 @@ const (\n \tCRDLY                                = 0x600\n \tCREAD                                = 0x80\n \tCRTSCTS                              = 0x80000000\n+\tCRYPTO_MAX_NAME                      = 0x40\n+\tCRYPTO_MSG_MAX                       = 0x15\n+\tCRYPTO_NR_MSGTYPES                   = 0x6\n+\tCRYPTO_REPORT_MAXSIZE                = 0x160\n \tCS5                                  = 0x0\n \tCS6                                  = 0x10\n \tCS7                                  = 0x20\n@@ -490,12 +495,57 @@ const (\n \tFALLOC_FL_PUNCH_HOLE                 = 0x2\n \tFALLOC_FL_UNSHARE_RANGE              = 0x40\n \tFALLOC_FL_ZERO_RANGE                 = 0x10\n+\tFANOTIFY_METADATA_VERSION            = 0x3\n+\tFAN_ACCESS                           = 0x1\n+\tFAN_ACCESS_PERM                      = 0x20000\n+\tFAN_ALLOW                            = 0x1\n+\tFAN_ALL_CLASS_BITS                   = 0xc\n+\tFAN_ALL_EVENTS                       = 0x3b\n+\tFAN_ALL_INIT_FLAGS                   = 0x3f\n+\tFAN_ALL_MARK_FLAGS                   = 0xff\n+\tFAN_ALL_OUTGOING_EVENTS              = 0x3403b\n+\tFAN_ALL_PERM_EVENTS                  = 0x30000\n+\tFAN_AUDIT                            = 0x10\n+\tFAN_CLASS_CONTENT                    = 0x4\n+\tFAN_CLASS_NOTIF                      = 0x0\n+\tFAN_CLASS_PRE_CONTENT                = 0x8\n+\tFAN_CLOEXEC                          = 0x1\n+\tFAN_CLOSE                            = 0x18\n+\tFAN_CLOSE_NOWRITE                    = 0x10\n+\tFAN_CLOSE_WRITE                      = 0x8\n+\tFAN_DENY                             = 0x2\n+\tFAN_ENABLE_AUDIT                     = 0x40\n+\tFAN_EVENT_METADATA_LEN               = 0x18\n+\tFAN_EVENT_ON_CHILD                   = 0x8000000\n+\tFAN_MARK_ADD                         = 0x1\n+\tFAN_MARK_DONT_FOLLOW                 = 0x4\n+\tFAN_MARK_FILESYSTEM                  = 0x100\n+\tFAN_MARK_FLUSH                       = 0x80\n+\tFAN_MARK_IGNORED_MASK                = 0x20\n+\tFAN_MARK_IGNORED_SURV_MODIFY         = 0x40\n+\tFAN_MARK_INODE                       = 0x0\n+\tFAN_MARK_MOUNT                       = 0x10\n+\tFAN_MARK_ONLYDIR                     = 0x8\n+\tFAN_MARK_REMOVE                      = 0x2\n+\tFAN_MODIFY                           = 0x2\n+\tFAN_NOFD                             = -0x1\n+\tFAN_NONBLOCK                         = 0x2\n+\tFAN_ONDIR                            = 0x40000000\n+\tFAN_OPEN                             = 0x20\n+\tFAN_OPEN_EXEC                        = 0x1000\n+\tFAN_OPEN_EXEC_PERM                   = 0x40000\n+\tFAN_OPEN_PERM                        = 0x10000\n+\tFAN_Q_OVERFLOW                       = 0x4000\n+\tFAN_REPORT_TID                       = 0x100\n+\tFAN_UNLIMITED_MARKS                  = 0x20\n+\tFAN_UNLIMITED_QUEUE                  = 0x10\n \tFD_CLOEXEC                           = 0x1\n \tFD_SETSIZE                           = 0x400\n \tFF0                                  = 0x0\n \tFF1                                  = 0x8000\n \tFFDLY                                = 0x8000\n \tFLUSHO                               = 0x1000\n+\tFS_ENCRYPTION_MODE_ADIANTUM          = 0x9\n \tFS_ENCRYPTION_MODE_AES_128_CBC       = 0x5\n \tFS_ENCRYPTION_MODE_AES_128_CTS       = 0x6\n \tFS_ENCRYPTION_MODE_AES_256_CBC       = 0x3\n@@ -517,7 +567,7 @@ const (\n \tFS_POLICY_FLAGS_PAD_4                = 0x0\n \tFS_POLICY_FLAGS_PAD_8                = 0x1\n \tFS_POLICY_FLAGS_PAD_MASK             = 0x3\n-\tFS_POLICY_FLAGS_VALID                = 0x3\n+\tFS_POLICY_FLAGS_VALID                = 0x7\n \tFUTEXFS_SUPER_MAGIC                  = 0xbad1dea\n \tF_ADD_SEALS                          = 0x409\n \tF_DUPFD                              = 0x0\n@@ -1136,7 +1186,7 @@ const (\n \tNETLINK_UNUSED                       = 0x1\n \tNETLINK_USERSOCK                     = 0x2\n \tNETLINK_XFRM                         = 0x6\n-\tNETNSA_MAX                           = 0x3\n+\tNETNSA_MAX                           = 0x5\n \tNETNSA_NSID_NOT_ASSIGNED             = -0x1\n \tNFNETLINK_V0                         = 0x0\n \tNFNLGRP_ACCT_QUOTA                   = 0x8\n@@ -1400,6 +1450,12 @@ const (\n \tPR_MCE_KILL_SET                      = 0x1\n \tPR_MPX_DISABLE_MANAGEMENT            = 0x2c\n \tPR_MPX_ENABLE_MANAGEMENT             = 0x2b\n+\tPR_PAC_APDAKEY                       = 0x4\n+\tPR_PAC_APDBKEY                       = 0x8\n+\tPR_PAC_APGAKEY                       = 0x10\n+\tPR_PAC_APIAKEY                       = 0x1\n+\tPR_PAC_APIBKEY                       = 0x2\n+\tPR_PAC_RESET_KEYS                    = 0x36\n \tPR_SET_CHILD_SUBREAPER               = 0x24\n \tPR_SET_DUMPABLE                      = 0x4\n \tPR_SET_ENDIAN                        = 0x14\n@@ -2282,6 +2338,7 @@ const (\n \tTUNGETVNETBE                         = 0x400454df\n \tTUNGETVNETHDRSZ                      = 0x400454d7\n \tTUNGETVNETLE                         = 0x400454dd\n+\tTUNSETCARRIER                        = 0x800454e2\n \tTUNSETDEBUG                          = 0x800454c9\n \tTUNSETFILTEREBPF                     = 0x400454e1\n \tTUNSETGROUP                          = 0x800454ce"
    },
    {
      "sha": "ec5f92de8883f31956b02a390fd4ba19c241d9b5",
      "filename": "backend/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go",
      "status": "added",
      "additions": 1789,
      "deletions": 0,
      "changes": 1789,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zerrors_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,1789 @@\n+// mkerrors.sh -m64\n+// Code generated by the command above; see README.md. DO NOT EDIT.\n+\n+// +build arm64,openbsd\n+\n+// Code generated by cmd/cgo -godefs; DO NOT EDIT.\n+// cgo -godefs -- -m64 _const.go\n+\n+package unix\n+\n+import \"syscall\"\n+\n+const (\n+\tAF_APPLETALK                      = 0x10\n+\tAF_BLUETOOTH                      = 0x20\n+\tAF_CCITT                          = 0xa\n+\tAF_CHAOS                          = 0x5\n+\tAF_CNT                            = 0x15\n+\tAF_COIP                           = 0x14\n+\tAF_DATAKIT                        = 0x9\n+\tAF_DECnet                         = 0xc\n+\tAF_DLI                            = 0xd\n+\tAF_E164                           = 0x1a\n+\tAF_ECMA                           = 0x8\n+\tAF_ENCAP                          = 0x1c\n+\tAF_HYLINK                         = 0xf\n+\tAF_IMPLINK                        = 0x3\n+\tAF_INET                           = 0x2\n+\tAF_INET6                          = 0x18\n+\tAF_IPX                            = 0x17\n+\tAF_ISDN                           = 0x1a\n+\tAF_ISO                            = 0x7\n+\tAF_KEY                            = 0x1e\n+\tAF_LAT                            = 0xe\n+\tAF_LINK                           = 0x12\n+\tAF_LOCAL                          = 0x1\n+\tAF_MAX                            = 0x24\n+\tAF_MPLS                           = 0x21\n+\tAF_NATM                           = 0x1b\n+\tAF_NS                             = 0x6\n+\tAF_OSI                            = 0x7\n+\tAF_PUP                            = 0x4\n+\tAF_ROUTE                          = 0x11\n+\tAF_SIP                            = 0x1d\n+\tAF_SNA                            = 0xb\n+\tAF_UNIX                           = 0x1\n+\tAF_UNSPEC                         = 0x0\n+\tALTWERASE                         = 0x200\n+\tARPHRD_ETHER                      = 0x1\n+\tARPHRD_FRELAY                     = 0xf\n+\tARPHRD_IEEE1394                   = 0x18\n+\tARPHRD_IEEE802                    = 0x6\n+\tB0                                = 0x0\n+\tB110                              = 0x6e\n+\tB115200                           = 0x1c200\n+\tB1200                             = 0x4b0\n+\tB134                              = 0x86\n+\tB14400                            = 0x3840\n+\tB150                              = 0x96\n+\tB1800                             = 0x708\n+\tB19200                            = 0x4b00\n+\tB200                              = 0xc8\n+\tB230400                           = 0x38400\n+\tB2400                             = 0x960\n+\tB28800                            = 0x7080\n+\tB300                              = 0x12c\n+\tB38400                            = 0x9600\n+\tB4800                             = 0x12c0\n+\tB50                               = 0x32\n+\tB57600                            = 0xe100\n+\tB600                              = 0x258\n+\tB7200                             = 0x1c20\n+\tB75                               = 0x4b\n+\tB76800                            = 0x12c00\n+\tB9600                             = 0x2580\n+\tBIOCFLUSH                         = 0x20004268\n+\tBIOCGBLEN                         = 0x40044266\n+\tBIOCGDIRFILT                      = 0x4004427c\n+\tBIOCGDLT                          = 0x4004426a\n+\tBIOCGDLTLIST                      = 0xc010427b\n+\tBIOCGETIF                         = 0x4020426b\n+\tBIOCGFILDROP                      = 0x40044278\n+\tBIOCGHDRCMPLT                     = 0x40044274\n+\tBIOCGRSIG                         = 0x40044273\n+\tBIOCGRTIMEOUT                     = 0x4010426e\n+\tBIOCGSTATS                        = 0x4008426f\n+\tBIOCIMMEDIATE                     = 0x80044270\n+\tBIOCLOCK                          = 0x20004276\n+\tBIOCPROMISC                       = 0x20004269\n+\tBIOCSBLEN                         = 0xc0044266\n+\tBIOCSDIRFILT                      = 0x8004427d\n+\tBIOCSDLT                          = 0x8004427a\n+\tBIOCSETF                          = 0x80104267\n+\tBIOCSETIF                         = 0x8020426c\n+\tBIOCSETWF                         = 0x80104277\n+\tBIOCSFILDROP                      = 0x80044279\n+\tBIOCSHDRCMPLT                     = 0x80044275\n+\tBIOCSRSIG                         = 0x80044272\n+\tBIOCSRTIMEOUT                     = 0x8010426d\n+\tBIOCVERSION                       = 0x40044271\n+\tBPF_A                             = 0x10\n+\tBPF_ABS                           = 0x20\n+\tBPF_ADD                           = 0x0\n+\tBPF_ALIGNMENT                     = 0x4\n+\tBPF_ALU                           = 0x4\n+\tBPF_AND                           = 0x50\n+\tBPF_B                             = 0x10\n+\tBPF_DIRECTION_IN                  = 0x1\n+\tBPF_DIRECTION_OUT                 = 0x2\n+\tBPF_DIV                           = 0x30\n+\tBPF_FILDROP_CAPTURE               = 0x1\n+\tBPF_FILDROP_DROP                  = 0x2\n+\tBPF_FILDROP_PASS                  = 0x0\n+\tBPF_H                             = 0x8\n+\tBPF_IMM                           = 0x0\n+\tBPF_IND                           = 0x40\n+\tBPF_JA                            = 0x0\n+\tBPF_JEQ                           = 0x10\n+\tBPF_JGE                           = 0x30\n+\tBPF_JGT                           = 0x20\n+\tBPF_JMP                           = 0x5\n+\tBPF_JSET                          = 0x40\n+\tBPF_K                             = 0x0\n+\tBPF_LD                            = 0x0\n+\tBPF_LDX                           = 0x1\n+\tBPF_LEN                           = 0x80\n+\tBPF_LSH                           = 0x60\n+\tBPF_MAJOR_VERSION                 = 0x1\n+\tBPF_MAXBUFSIZE                    = 0x200000\n+\tBPF_MAXINSNS                      = 0x200\n+\tBPF_MEM                           = 0x60\n+\tBPF_MEMWORDS                      = 0x10\n+\tBPF_MINBUFSIZE                    = 0x20\n+\tBPF_MINOR_VERSION                 = 0x1\n+\tBPF_MISC                          = 0x7\n+\tBPF_MSH                           = 0xa0\n+\tBPF_MUL                           = 0x20\n+\tBPF_NEG                           = 0x80\n+\tBPF_OR                            = 0x40\n+\tBPF_RELEASE                       = 0x30bb6\n+\tBPF_RET                           = 0x6\n+\tBPF_RSH                           = 0x70\n+\tBPF_ST                            = 0x2\n+\tBPF_STX                           = 0x3\n+\tBPF_SUB                           = 0x10\n+\tBPF_TAX                           = 0x0\n+\tBPF_TXA                           = 0x80\n+\tBPF_W                             = 0x0\n+\tBPF_X                             = 0x8\n+\tBRKINT                            = 0x2\n+\tCFLUSH                            = 0xf\n+\tCLOCAL                            = 0x8000\n+\tCLOCK_BOOTTIME                    = 0x6\n+\tCLOCK_MONOTONIC                   = 0x3\n+\tCLOCK_PROCESS_CPUTIME_ID          = 0x2\n+\tCLOCK_REALTIME                    = 0x0\n+\tCLOCK_THREAD_CPUTIME_ID           = 0x4\n+\tCLOCK_UPTIME                      = 0x5\n+\tCREAD                             = 0x800\n+\tCRTSCTS                           = 0x10000\n+\tCS5                               = 0x0\n+\tCS6                               = 0x100\n+\tCS7                               = 0x200\n+\tCS8                               = 0x300\n+\tCSIZE                             = 0x300\n+\tCSTART                            = 0x11\n+\tCSTATUS                           = 0xff\n+\tCSTOP                             = 0x13\n+\tCSTOPB                            = 0x400\n+\tCSUSP                             = 0x1a\n+\tCTL_HW                            = 0x6\n+\tCTL_KERN                          = 0x1\n+\tCTL_MAXNAME                       = 0xc\n+\tCTL_NET                           = 0x4\n+\tDIOCOSFPFLUSH                     = 0x2000444e\n+\tDLT_ARCNET                        = 0x7\n+\tDLT_ATM_RFC1483                   = 0xb\n+\tDLT_AX25                          = 0x3\n+\tDLT_CHAOS                         = 0x5\n+\tDLT_C_HDLC                        = 0x68\n+\tDLT_EN10MB                        = 0x1\n+\tDLT_EN3MB                         = 0x2\n+\tDLT_ENC                           = 0xd\n+\tDLT_FDDI                          = 0xa\n+\tDLT_IEEE802                       = 0x6\n+\tDLT_IEEE802_11                    = 0x69\n+\tDLT_IEEE802_11_RADIO              = 0x7f\n+\tDLT_LOOP                          = 0xc\n+\tDLT_MPLS                          = 0xdb\n+\tDLT_NULL                          = 0x0\n+\tDLT_OPENFLOW                      = 0x10b\n+\tDLT_PFLOG                         = 0x75\n+\tDLT_PFSYNC                        = 0x12\n+\tDLT_PPP                           = 0x9\n+\tDLT_PPP_BSDOS                     = 0x10\n+\tDLT_PPP_ETHER                     = 0x33\n+\tDLT_PPP_SERIAL                    = 0x32\n+\tDLT_PRONET                        = 0x4\n+\tDLT_RAW                           = 0xe\n+\tDLT_SLIP                          = 0x8\n+\tDLT_SLIP_BSDOS                    = 0xf\n+\tDLT_USBPCAP                       = 0xf9\n+\tDLT_USER0                         = 0x93\n+\tDLT_USER1                         = 0x94\n+\tDLT_USER10                        = 0x9d\n+\tDLT_USER11                        = 0x9e\n+\tDLT_USER12                        = 0x9f\n+\tDLT_USER13                        = 0xa0\n+\tDLT_USER14                        = 0xa1\n+\tDLT_USER15                        = 0xa2\n+\tDLT_USER2                         = 0x95\n+\tDLT_USER3                         = 0x96\n+\tDLT_USER4                         = 0x97\n+\tDLT_USER5                         = 0x98\n+\tDLT_USER6                         = 0x99\n+\tDLT_USER7                         = 0x9a\n+\tDLT_USER8                         = 0x9b\n+\tDLT_USER9                         = 0x9c\n+\tDT_BLK                            = 0x6\n+\tDT_CHR                            = 0x2\n+\tDT_DIR                            = 0x4\n+\tDT_FIFO                           = 0x1\n+\tDT_LNK                            = 0xa\n+\tDT_REG                            = 0x8\n+\tDT_SOCK                           = 0xc\n+\tDT_UNKNOWN                        = 0x0\n+\tECHO                              = 0x8\n+\tECHOCTL                           = 0x40\n+\tECHOE                             = 0x2\n+\tECHOK                             = 0x4\n+\tECHOKE                            = 0x1\n+\tECHONL                            = 0x10\n+\tECHOPRT                           = 0x20\n+\tEMT_TAGOVF                        = 0x1\n+\tEMUL_ENABLED                      = 0x1\n+\tEMUL_NATIVE                       = 0x2\n+\tENDRUNDISC                        = 0x9\n+\tETHERMIN                          = 0x2e\n+\tETHERMTU                          = 0x5dc\n+\tETHERTYPE_8023                    = 0x4\n+\tETHERTYPE_AARP                    = 0x80f3\n+\tETHERTYPE_ACCTON                  = 0x8390\n+\tETHERTYPE_AEONIC                  = 0x8036\n+\tETHERTYPE_ALPHA                   = 0x814a\n+\tETHERTYPE_AMBER                   = 0x6008\n+\tETHERTYPE_AMOEBA                  = 0x8145\n+\tETHERTYPE_AOE                     = 0x88a2\n+\tETHERTYPE_APOLLO                  = 0x80f7\n+\tETHERTYPE_APOLLODOMAIN            = 0x8019\n+\tETHERTYPE_APPLETALK               = 0x809b\n+\tETHERTYPE_APPLITEK                = 0x80c7\n+\tETHERTYPE_ARGONAUT                = 0x803a\n+\tETHERTYPE_ARP                     = 0x806\n+\tETHERTYPE_AT                      = 0x809b\n+\tETHERTYPE_ATALK                   = 0x809b\n+\tETHERTYPE_ATOMIC                  = 0x86df\n+\tETHERTYPE_ATT                     = 0x8069\n+\tETHERTYPE_ATTSTANFORD             = 0x8008\n+\tETHERTYPE_AUTOPHON                = 0x806a\n+\tETHERTYPE_AXIS                    = 0x8856\n+\tETHERTYPE_BCLOOP                  = 0x9003\n+\tETHERTYPE_BOFL                    = 0x8102\n+\tETHERTYPE_CABLETRON               = 0x7034\n+\tETHERTYPE_CHAOS                   = 0x804\n+\tETHERTYPE_COMDESIGN               = 0x806c\n+\tETHERTYPE_COMPUGRAPHIC            = 0x806d\n+\tETHERTYPE_COUNTERPOINT            = 0x8062\n+\tETHERTYPE_CRONUS                  = 0x8004\n+\tETHERTYPE_CRONUSVLN               = 0x8003\n+\tETHERTYPE_DCA                     = 0x1234\n+\tETHERTYPE_DDE                     = 0x807b\n+\tETHERTYPE_DEBNI                   = 0xaaaa\n+\tETHERTYPE_DECAM                   = 0x8048\n+\tETHERTYPE_DECCUST                 = 0x6006\n+\tETHERTYPE_DECDIAG                 = 0x6005\n+\tETHERTYPE_DECDNS                  = 0x803c\n+\tETHERTYPE_DECDTS                  = 0x803e\n+\tETHERTYPE_DECEXPER                = 0x6000\n+\tETHERTYPE_DECLAST                 = 0x8041\n+\tETHERTYPE_DECLTM                  = 0x803f\n+\tETHERTYPE_DECMUMPS                = 0x6009\n+\tETHERTYPE_DECNETBIOS              = 0x8040\n+\tETHERTYPE_DELTACON                = 0x86de\n+\tETHERTYPE_DIDDLE                  = 0x4321\n+\tETHERTYPE_DLOG1                   = 0x660\n+\tETHERTYPE_DLOG2                   = 0x661\n+\tETHERTYPE_DN                      = 0x6003\n+\tETHERTYPE_DOGFIGHT                = 0x1989\n+\tETHERTYPE_DSMD                    = 0x8039\n+\tETHERTYPE_ECMA                    = 0x803\n+\tETHERTYPE_ENCRYPT                 = 0x803d\n+\tETHERTYPE_ES                      = 0x805d\n+\tETHERTYPE_EXCELAN                 = 0x8010\n+\tETHERTYPE_EXPERDATA               = 0x8049\n+\tETHERTYPE_FLIP                    = 0x8146\n+\tETHERTYPE_FLOWCONTROL             = 0x8808\n+\tETHERTYPE_FRARP                   = 0x808\n+\tETHERTYPE_GENDYN                  = 0x8068\n+\tETHERTYPE_HAYES                   = 0x8130\n+\tETHERTYPE_HIPPI_FP                = 0x8180\n+\tETHERTYPE_HITACHI                 = 0x8820\n+\tETHERTYPE_HP                      = 0x8005\n+\tETHERTYPE_IEEEPUP                 = 0xa00\n+\tETHERTYPE_IEEEPUPAT               = 0xa01\n+\tETHERTYPE_IMLBL                   = 0x4c42\n+\tETHERTYPE_IMLBLDIAG               = 0x424c\n+\tETHERTYPE_IP                      = 0x800\n+\tETHERTYPE_IPAS                    = 0x876c\n+\tETHERTYPE_IPV6                    = 0x86dd\n+\tETHERTYPE_IPX                     = 0x8137\n+\tETHERTYPE_IPXNEW                  = 0x8037\n+\tETHERTYPE_KALPANA                 = 0x8582\n+\tETHERTYPE_LANBRIDGE               = 0x8038\n+\tETHERTYPE_LANPROBE                = 0x8888\n+\tETHERTYPE_LAT                     = 0x6004\n+\tETHERTYPE_LBACK                   = 0x9000\n+\tETHERTYPE_LITTLE                  = 0x8060\n+\tETHERTYPE_LLDP                    = 0x88cc\n+\tETHERTYPE_LOGICRAFT               = 0x8148\n+\tETHERTYPE_LOOPBACK                = 0x9000\n+\tETHERTYPE_MATRA                   = 0x807a\n+\tETHERTYPE_MAX                     = 0xffff\n+\tETHERTYPE_MERIT                   = 0x807c\n+\tETHERTYPE_MICP                    = 0x873a\n+\tETHERTYPE_MOPDL                   = 0x6001\n+\tETHERTYPE_MOPRC                   = 0x6002\n+\tETHERTYPE_MOTOROLA                = 0x818d\n+\tETHERTYPE_MPLS                    = 0x8847\n+\tETHERTYPE_MPLS_MCAST              = 0x8848\n+\tETHERTYPE_MUMPS                   = 0x813f\n+\tETHERTYPE_NBPCC                   = 0x3c04\n+\tETHERTYPE_NBPCLAIM                = 0x3c09\n+\tETHERTYPE_NBPCLREQ                = 0x3c05\n+\tETHERTYPE_NBPCLRSP                = 0x3c06\n+\tETHERTYPE_NBPCREQ                 = 0x3c02\n+\tETHERTYPE_NBPCRSP                 = 0x3c03\n+\tETHERTYPE_NBPDG                   = 0x3c07\n+\tETHERTYPE_NBPDGB                  = 0x3c08\n+\tETHERTYPE_NBPDLTE                 = 0x3c0a\n+\tETHERTYPE_NBPRAR                  = 0x3c0c\n+\tETHERTYPE_NBPRAS                  = 0x3c0b\n+\tETHERTYPE_NBPRST                  = 0x3c0d\n+\tETHERTYPE_NBPSCD                  = 0x3c01\n+\tETHERTYPE_NBPVCD                  = 0x3c00\n+\tETHERTYPE_NBS                     = 0x802\n+\tETHERTYPE_NCD                     = 0x8149\n+\tETHERTYPE_NESTAR                  = 0x8006\n+\tETHERTYPE_NETBEUI                 = 0x8191\n+\tETHERTYPE_NOVELL                  = 0x8138\n+\tETHERTYPE_NS                      = 0x600\n+\tETHERTYPE_NSAT                    = 0x601\n+\tETHERTYPE_NSCOMPAT                = 0x807\n+\tETHERTYPE_NTRAILER                = 0x10\n+\tETHERTYPE_OS9                     = 0x7007\n+\tETHERTYPE_OS9NET                  = 0x7009\n+\tETHERTYPE_PACER                   = 0x80c6\n+\tETHERTYPE_PAE                     = 0x888e\n+\tETHERTYPE_PBB                     = 0x88e7\n+\tETHERTYPE_PCS                     = 0x4242\n+\tETHERTYPE_PLANNING                = 0x8044\n+\tETHERTYPE_PPP                     = 0x880b\n+\tETHERTYPE_PPPOE                   = 0x8864\n+\tETHERTYPE_PPPOEDISC               = 0x8863\n+\tETHERTYPE_PRIMENTS                = 0x7031\n+\tETHERTYPE_PUP                     = 0x200\n+\tETHERTYPE_PUPAT                   = 0x200\n+\tETHERTYPE_QINQ                    = 0x88a8\n+\tETHERTYPE_RACAL                   = 0x7030\n+\tETHERTYPE_RATIONAL                = 0x8150\n+\tETHERTYPE_RAWFR                   = 0x6559\n+\tETHERTYPE_RCL                     = 0x1995\n+\tETHERTYPE_RDP                     = 0x8739\n+\tETHERTYPE_RETIX                   = 0x80f2\n+\tETHERTYPE_REVARP                  = 0x8035\n+\tETHERTYPE_SCA                     = 0x6007\n+\tETHERTYPE_SECTRA                  = 0x86db\n+\tETHERTYPE_SECUREDATA              = 0x876d\n+\tETHERTYPE_SGITW                   = 0x817e\n+\tETHERTYPE_SG_BOUNCE               = 0x8016\n+\tETHERTYPE_SG_DIAG                 = 0x8013\n+\tETHERTYPE_SG_NETGAMES             = 0x8014\n+\tETHERTYPE_SG_RESV                 = 0x8015\n+\tETHERTYPE_SIMNET                  = 0x5208\n+\tETHERTYPE_SLOW                    = 0x8809\n+\tETHERTYPE_SNA                     = 0x80d5\n+\tETHERTYPE_SNMP                    = 0x814c\n+\tETHERTYPE_SONIX                   = 0xfaf5\n+\tETHERTYPE_SPIDER                  = 0x809f\n+\tETHERTYPE_SPRITE                  = 0x500\n+\tETHERTYPE_STP                     = 0x8181\n+\tETHERTYPE_TALARIS                 = 0x812b\n+\tETHERTYPE_TALARISMC               = 0x852b\n+\tETHERTYPE_TCPCOMP                 = 0x876b\n+\tETHERTYPE_TCPSM                   = 0x9002\n+\tETHERTYPE_TEC                     = 0x814f\n+\tETHERTYPE_TIGAN                   = 0x802f\n+\tETHERTYPE_TRAIL                   = 0x1000\n+\tETHERTYPE_TRANSETHER              = 0x6558\n+\tETHERTYPE_TYMSHARE                = 0x802e\n+\tETHERTYPE_UBBST                   = 0x7005\n+\tETHERTYPE_UBDEBUG                 = 0x900\n+\tETHERTYPE_UBDIAGLOOP              = 0x7002\n+\tETHERTYPE_UBDL                    = 0x7000\n+\tETHERTYPE_UBNIU                   = 0x7001\n+\tETHERTYPE_UBNMC                   = 0x7003\n+\tETHERTYPE_VALID                   = 0x1600\n+\tETHERTYPE_VARIAN                  = 0x80dd\n+\tETHERTYPE_VAXELN                  = 0x803b\n+\tETHERTYPE_VEECO                   = 0x8067\n+\tETHERTYPE_VEXP                    = 0x805b\n+\tETHERTYPE_VGLAB                   = 0x8131\n+\tETHERTYPE_VINES                   = 0xbad\n+\tETHERTYPE_VINESECHO               = 0xbaf\n+\tETHERTYPE_VINESLOOP               = 0xbae\n+\tETHERTYPE_VITAL                   = 0xff00\n+\tETHERTYPE_VLAN                    = 0x8100\n+\tETHERTYPE_VLTLMAN                 = 0x8080\n+\tETHERTYPE_VPROD                   = 0x805c\n+\tETHERTYPE_VURESERVED              = 0x8147\n+\tETHERTYPE_WATERLOO                = 0x8130\n+\tETHERTYPE_WELLFLEET               = 0x8103\n+\tETHERTYPE_X25                     = 0x805\n+\tETHERTYPE_X75                     = 0x801\n+\tETHERTYPE_XNSSM                   = 0x9001\n+\tETHERTYPE_XTP                     = 0x817d\n+\tETHER_ADDR_LEN                    = 0x6\n+\tETHER_ALIGN                       = 0x2\n+\tETHER_CRC_LEN                     = 0x4\n+\tETHER_CRC_POLY_BE                 = 0x4c11db6\n+\tETHER_CRC_POLY_LE                 = 0xedb88320\n+\tETHER_HDR_LEN                     = 0xe\n+\tETHER_MAX_DIX_LEN                 = 0x600\n+\tETHER_MAX_HARDMTU_LEN             = 0xff9b\n+\tETHER_MAX_LEN                     = 0x5ee\n+\tETHER_MIN_LEN                     = 0x40\n+\tETHER_TYPE_LEN                    = 0x2\n+\tETHER_VLAN_ENCAP_LEN              = 0x4\n+\tEVFILT_AIO                        = -0x3\n+\tEVFILT_DEVICE                     = -0x8\n+\tEVFILT_PROC                       = -0x5\n+\tEVFILT_READ                       = -0x1\n+\tEVFILT_SIGNAL                     = -0x6\n+\tEVFILT_SYSCOUNT                   = 0x8\n+\tEVFILT_TIMER                      = -0x7\n+\tEVFILT_VNODE                      = -0x4\n+\tEVFILT_WRITE                      = -0x2\n+\tEVL_ENCAPLEN                      = 0x4\n+\tEVL_PRIO_BITS                     = 0xd\n+\tEVL_PRIO_MAX                      = 0x7\n+\tEVL_VLID_MASK                     = 0xfff\n+\tEVL_VLID_MAX                      = 0xffe\n+\tEVL_VLID_MIN                      = 0x1\n+\tEVL_VLID_NULL                     = 0x0\n+\tEV_ADD                            = 0x1\n+\tEV_CLEAR                          = 0x20\n+\tEV_DELETE                         = 0x2\n+\tEV_DISABLE                        = 0x8\n+\tEV_DISPATCH                       = 0x80\n+\tEV_ENABLE                         = 0x4\n+\tEV_EOF                            = 0x8000\n+\tEV_ERROR                          = 0x4000\n+\tEV_FLAG1                          = 0x2000\n+\tEV_ONESHOT                        = 0x10\n+\tEV_RECEIPT                        = 0x40\n+\tEV_SYSFLAGS                       = 0xf000\n+\tEXTA                              = 0x4b00\n+\tEXTB                              = 0x9600\n+\tEXTPROC                           = 0x800\n+\tFD_CLOEXEC                        = 0x1\n+\tFD_SETSIZE                        = 0x400\n+\tFLUSHO                            = 0x800000\n+\tF_DUPFD                           = 0x0\n+\tF_DUPFD_CLOEXEC                   = 0xa\n+\tF_GETFD                           = 0x1\n+\tF_GETFL                           = 0x3\n+\tF_GETLK                           = 0x7\n+\tF_GETOWN                          = 0x5\n+\tF_ISATTY                          = 0xb\n+\tF_OK                              = 0x0\n+\tF_RDLCK                           = 0x1\n+\tF_SETFD                           = 0x2\n+\tF_SETFL                           = 0x4\n+\tF_SETLK                           = 0x8\n+\tF_SETLKW                          = 0x9\n+\tF_SETOWN                          = 0x6\n+\tF_UNLCK                           = 0x2\n+\tF_WRLCK                           = 0x3\n+\tHUPCL                             = 0x4000\n+\tHW_MACHINE                        = 0x1\n+\tICANON                            = 0x100\n+\tICMP6_FILTER                      = 0x12\n+\tICRNL                             = 0x100\n+\tIEXTEN                            = 0x400\n+\tIFAN_ARRIVAL                      = 0x0\n+\tIFAN_DEPARTURE                    = 0x1\n+\tIFF_ALLMULTI                      = 0x200\n+\tIFF_BROADCAST                     = 0x2\n+\tIFF_CANTCHANGE                    = 0x8e52\n+\tIFF_DEBUG                         = 0x4\n+\tIFF_LINK0                         = 0x1000\n+\tIFF_LINK1                         = 0x2000\n+\tIFF_LINK2                         = 0x4000\n+\tIFF_LOOPBACK                      = 0x8\n+\tIFF_MULTICAST                     = 0x8000\n+\tIFF_NOARP                         = 0x80\n+\tIFF_OACTIVE                       = 0x400\n+\tIFF_POINTOPOINT                   = 0x10\n+\tIFF_PROMISC                       = 0x100\n+\tIFF_RUNNING                       = 0x40\n+\tIFF_SIMPLEX                       = 0x800\n+\tIFF_STATICARP                     = 0x20\n+\tIFF_UP                            = 0x1\n+\tIFNAMSIZ                          = 0x10\n+\tIFT_1822                          = 0x2\n+\tIFT_A12MPPSWITCH                  = 0x82\n+\tIFT_AAL2                          = 0xbb\n+\tIFT_AAL5                          = 0x31\n+\tIFT_ADSL                          = 0x5e\n+\tIFT_AFLANE8023                    = 0x3b\n+\tIFT_AFLANE8025                    = 0x3c\n+\tIFT_ARAP                          = 0x58\n+\tIFT_ARCNET                        = 0x23\n+\tIFT_ARCNETPLUS                    = 0x24\n+\tIFT_ASYNC                         = 0x54\n+\tIFT_ATM                           = 0x25\n+\tIFT_ATMDXI                        = 0x69\n+\tIFT_ATMFUNI                       = 0x6a\n+\tIFT_ATMIMA                        = 0x6b\n+\tIFT_ATMLOGICAL                    = 0x50\n+\tIFT_ATMRADIO                      = 0xbd\n+\tIFT_ATMSUBINTERFACE               = 0x86\n+\tIFT_ATMVCIENDPT                   = 0xc2\n+\tIFT_ATMVIRTUAL                    = 0x95\n+\tIFT_BGPPOLICYACCOUNTING           = 0xa2\n+\tIFT_BLUETOOTH                     = 0xf8\n+\tIFT_BRIDGE                        = 0xd1\n+\tIFT_BSC                           = 0x53\n+\tIFT_CARP                          = 0xf7\n+\tIFT_CCTEMUL                       = 0x3d\n+\tIFT_CEPT                          = 0x13\n+\tIFT_CES                           = 0x85\n+\tIFT_CHANNEL                       = 0x46\n+\tIFT_CNR                           = 0x55\n+\tIFT_COFFEE                        = 0x84\n+\tIFT_COMPOSITELINK                 = 0x9b\n+\tIFT_DCN                           = 0x8d\n+\tIFT_DIGITALPOWERLINE              = 0x8a\n+\tIFT_DIGITALWRAPPEROVERHEADCHANNEL = 0xba\n+\tIFT_DLSW                          = 0x4a\n+\tIFT_DOCSCABLEDOWNSTREAM           = 0x80\n+\tIFT_DOCSCABLEMACLAYER             = 0x7f\n+\tIFT_DOCSCABLEUPSTREAM             = 0x81\n+\tIFT_DOCSCABLEUPSTREAMCHANNEL      = 0xcd\n+\tIFT_DS0                           = 0x51\n+\tIFT_DS0BUNDLE                     = 0x52\n+\tIFT_DS1FDL                        = 0xaa\n+\tIFT_DS3                           = 0x1e\n+\tIFT_DTM                           = 0x8c\n+\tIFT_DUMMY                         = 0xf1\n+\tIFT_DVBASILN                      = 0xac\n+\tIFT_DVBASIOUT                     = 0xad\n+\tIFT_DVBRCCDOWNSTREAM              = 0x93\n+\tIFT_DVBRCCMACLAYER                = 0x92\n+\tIFT_DVBRCCUPSTREAM                = 0x94\n+\tIFT_ECONET                        = 0xce\n+\tIFT_ENC                           = 0xf4\n+\tIFT_EON                           = 0x19\n+\tIFT_EPLRS                         = 0x57\n+\tIFT_ESCON                         = 0x49\n+\tIFT_ETHER                         = 0x6\n+\tIFT_FAITH                         = 0xf3\n+\tIFT_FAST                          = 0x7d\n+\tIFT_FASTETHER                     = 0x3e\n+\tIFT_FASTETHERFX                   = 0x45\n+\tIFT_FDDI                          = 0xf\n+\tIFT_FIBRECHANNEL                  = 0x38\n+\tIFT_FRAMERELAYINTERCONNECT        = 0x3a\n+\tIFT_FRAMERELAYMPI                 = 0x5c\n+\tIFT_FRDLCIENDPT                   = 0xc1\n+\tIFT_FRELAY                        = 0x20\n+\tIFT_FRELAYDCE                     = 0x2c\n+\tIFT_FRF16MFRBUNDLE                = 0xa3\n+\tIFT_FRFORWARD                     = 0x9e\n+\tIFT_G703AT2MB                     = 0x43\n+\tIFT_G703AT64K                     = 0x42\n+\tIFT_GIF                           = 0xf0\n+\tIFT_GIGABITETHERNET               = 0x75\n+\tIFT_GR303IDT                      = 0xb2\n+\tIFT_GR303RDT                      = 0xb1\n+\tIFT_H323GATEKEEPER                = 0xa4\n+\tIFT_H323PROXY                     = 0xa5\n+\tIFT_HDH1822                       = 0x3\n+\tIFT_HDLC                          = 0x76\n+\tIFT_HDSL2                         = 0xa8\n+\tIFT_HIPERLAN2                     = 0xb7\n+\tIFT_HIPPI                         = 0x2f\n+\tIFT_HIPPIINTERFACE                = 0x39\n+\tIFT_HOSTPAD                       = 0x5a\n+\tIFT_HSSI                          = 0x2e\n+\tIFT_HY                            = 0xe\n+\tIFT_IBM370PARCHAN                 = 0x48\n+\tIFT_IDSL                          = 0x9a\n+\tIFT_IEEE1394                      = 0x90\n+\tIFT_IEEE80211                     = 0x47\n+\tIFT_IEEE80212                     = 0x37\n+\tIFT_IEEE8023ADLAG                 = 0xa1\n+\tIFT_IFGSN                         = 0x91\n+\tIFT_IMT                           = 0xbe\n+\tIFT_INFINIBAND                    = 0xc7\n+\tIFT_INTERLEAVE                    = 0x7c\n+\tIFT_IP                            = 0x7e\n+\tIFT_IPFORWARD                     = 0x8e\n+\tIFT_IPOVERATM                     = 0x72\n+\tIFT_IPOVERCDLC                    = 0x6d\n+\tIFT_IPOVERCLAW                    = 0x6e\n+\tIFT_IPSWITCH                      = 0x4e\n+\tIFT_ISDN                          = 0x3f\n+\tIFT_ISDNBASIC                     = 0x14\n+\tIFT_ISDNPRIMARY                   = 0x15\n+\tIFT_ISDNS                         = 0x4b\n+\tIFT_ISDNU                         = 0x4c\n+\tIFT_ISO88022LLC                   = 0x29\n+\tIFT_ISO88023                      = 0x7\n+\tIFT_ISO88024                      = 0x8\n+\tIFT_ISO88025                      = 0x9\n+\tIFT_ISO88025CRFPINT               = 0x62\n+\tIFT_ISO88025DTR                   = 0x56\n+\tIFT_ISO88025FIBER                 = 0x73\n+\tIFT_ISO88026                      = 0xa\n+\tIFT_ISUP                          = 0xb3\n+\tIFT_L2VLAN                        = 0x87\n+\tIFT_L3IPVLAN                      = 0x88\n+\tIFT_L3IPXVLAN                     = 0x89\n+\tIFT_LAPB                          = 0x10\n+\tIFT_LAPD                          = 0x4d\n+\tIFT_LAPF                          = 0x77\n+\tIFT_LINEGROUP                     = 0xd2\n+\tIFT_LOCALTALK                     = 0x2a\n+\tIFT_LOOP                          = 0x18\n+\tIFT_MBIM                          = 0xfa\n+\tIFT_MEDIAMAILOVERIP               = 0x8b\n+\tIFT_MFSIGLINK                     = 0xa7\n+\tIFT_MIOX25                        = 0x26\n+\tIFT_MODEM                         = 0x30\n+\tIFT_MPC                           = 0x71\n+\tIFT_MPLS                          = 0xa6\n+\tIFT_MPLSTUNNEL                    = 0x96\n+\tIFT_MSDSL                         = 0x8f\n+\tIFT_MVL                           = 0xbf\n+\tIFT_MYRINET                       = 0x63\n+\tIFT_NFAS                          = 0xaf\n+\tIFT_NSIP                          = 0x1b\n+\tIFT_OPTICALCHANNEL                = 0xc3\n+\tIFT_OPTICALTRANSPORT              = 0xc4\n+\tIFT_OTHER                         = 0x1\n+\tIFT_P10                           = 0xc\n+\tIFT_P80                           = 0xd\n+\tIFT_PARA                          = 0x22\n+\tIFT_PFLOG                         = 0xf5\n+\tIFT_PFLOW                         = 0xf9\n+\tIFT_PFSYNC                        = 0xf6\n+\tIFT_PLC                           = 0xae\n+\tIFT_PON155                        = 0xcf\n+\tIFT_PON622                        = 0xd0\n+\tIFT_POS                           = 0xab\n+\tIFT_PPP                           = 0x17\n+\tIFT_PPPMULTILINKBUNDLE            = 0x6c\n+\tIFT_PROPATM                       = 0xc5\n+\tIFT_PROPBWAP2MP                   = 0xb8\n+\tIFT_PROPCNLS                      = 0x59\n+\tIFT_PROPDOCSWIRELESSDOWNSTREAM    = 0xb5\n+\tIFT_PROPDOCSWIRELESSMACLAYER      = 0xb4\n+\tIFT_PROPDOCSWIRELESSUPSTREAM      = 0xb6\n+\tIFT_PROPMUX                       = 0x36\n+\tIFT_PROPVIRTUAL                   = 0x35\n+\tIFT_PROPWIRELESSP2P               = 0x9d\n+\tIFT_PTPSERIAL                     = 0x16\n+\tIFT_PVC                           = 0xf2\n+\tIFT_Q2931                         = 0xc9\n+\tIFT_QLLC                          = 0x44\n+\tIFT_RADIOMAC                      = 0xbc\n+\tIFT_RADSL                         = 0x5f\n+\tIFT_REACHDSL                      = 0xc0\n+\tIFT_RFC1483                       = 0x9f\n+\tIFT_RS232                         = 0x21\n+\tIFT_RSRB                          = 0x4f\n+\tIFT_SDLC                          = 0x11\n+\tIFT_SDSL                          = 0x60\n+\tIFT_SHDSL                         = 0xa9\n+\tIFT_SIP                           = 0x1f\n+\tIFT_SIPSIG                        = 0xcc\n+\tIFT_SIPTG                         = 0xcb\n+\tIFT_SLIP                          = 0x1c\n+\tIFT_SMDSDXI                       = 0x2b\n+\tIFT_SMDSICIP                      = 0x34\n+\tIFT_SONET                         = 0x27\n+\tIFT_SONETOVERHEADCHANNEL          = 0xb9\n+\tIFT_SONETPATH                     = 0x32\n+\tIFT_SONETVT                       = 0x33\n+\tIFT_SRP                           = 0x97\n+\tIFT_SS7SIGLINK                    = 0x9c\n+\tIFT_STACKTOSTACK                  = 0x6f\n+\tIFT_STARLAN                       = 0xb\n+\tIFT_T1                            = 0x12\n+\tIFT_TDLC                          = 0x74\n+\tIFT_TELINK                        = 0xc8\n+\tIFT_TERMPAD                       = 0x5b\n+\tIFT_TR008                         = 0xb0\n+\tIFT_TRANSPHDLC                    = 0x7b\n+\tIFT_TUNNEL                        = 0x83\n+\tIFT_ULTRA                         = 0x1d\n+\tIFT_USB                           = 0xa0\n+\tIFT_V11                           = 0x40\n+\tIFT_V35                           = 0x2d\n+\tIFT_V36                           = 0x41\n+\tIFT_V37                           = 0x78\n+\tIFT_VDSL                          = 0x61\n+\tIFT_VIRTUALIPADDRESS              = 0x70\n+\tIFT_VIRTUALTG                     = 0xca\n+\tIFT_VOICEDID                      = 0xd5\n+\tIFT_VOICEEM                       = 0x64\n+\tIFT_VOICEEMFGD                    = 0xd3\n+\tIFT_VOICEENCAP                    = 0x67\n+\tIFT_VOICEFGDEANA                  = 0xd4\n+\tIFT_VOICEFXO                      = 0x65\n+\tIFT_VOICEFXS                      = 0x66\n+\tIFT_VOICEOVERATM                  = 0x98\n+\tIFT_VOICEOVERCABLE                = 0xc6\n+\tIFT_VOICEOVERFRAMERELAY           = 0x99\n+\tIFT_VOICEOVERIP                   = 0x68\n+\tIFT_X213                          = 0x5d\n+\tIFT_X25                           = 0x5\n+\tIFT_X25DDN                        = 0x4\n+\tIFT_X25HUNTGROUP                  = 0x7a\n+\tIFT_X25MLP                        = 0x79\n+\tIFT_X25PLE                        = 0x28\n+\tIFT_XETHER                        = 0x1a\n+\tIGNBRK                            = 0x1\n+\tIGNCR                             = 0x80\n+\tIGNPAR                            = 0x4\n+\tIMAXBEL                           = 0x2000\n+\tINLCR                             = 0x40\n+\tINPCK                             = 0x10\n+\tIN_CLASSA_HOST                    = 0xffffff\n+\tIN_CLASSA_MAX                     = 0x80\n+\tIN_CLASSA_NET                     = 0xff000000\n+\tIN_CLASSA_NSHIFT                  = 0x18\n+\tIN_CLASSB_HOST                    = 0xffff\n+\tIN_CLASSB_MAX                     = 0x10000\n+\tIN_CLASSB_NET                     = 0xffff0000\n+\tIN_CLASSB_NSHIFT                  = 0x10\n+\tIN_CLASSC_HOST                    = 0xff\n+\tIN_CLASSC_NET                     = 0xffffff00\n+\tIN_CLASSC_NSHIFT                  = 0x8\n+\tIN_CLASSD_HOST                    = 0xfffffff\n+\tIN_CLASSD_NET                     = 0xf0000000\n+\tIN_CLASSD_NSHIFT                  = 0x1c\n+\tIN_LOOPBACKNET                    = 0x7f\n+\tIN_RFC3021_HOST                   = 0x1\n+\tIN_RFC3021_NET                    = 0xfffffffe\n+\tIN_RFC3021_NSHIFT                 = 0x1f\n+\tIPPROTO_AH                        = 0x33\n+\tIPPROTO_CARP                      = 0x70\n+\tIPPROTO_DIVERT                    = 0x102\n+\tIPPROTO_DONE                      = 0x101\n+\tIPPROTO_DSTOPTS                   = 0x3c\n+\tIPPROTO_EGP                       = 0x8\n+\tIPPROTO_ENCAP                     = 0x62\n+\tIPPROTO_EON                       = 0x50\n+\tIPPROTO_ESP                       = 0x32\n+\tIPPROTO_ETHERIP                   = 0x61\n+\tIPPROTO_FRAGMENT                  = 0x2c\n+\tIPPROTO_GGP                       = 0x3\n+\tIPPROTO_GRE                       = 0x2f\n+\tIPPROTO_HOPOPTS                   = 0x0\n+\tIPPROTO_ICMP                      = 0x1\n+\tIPPROTO_ICMPV6                    = 0x3a\n+\tIPPROTO_IDP                       = 0x16\n+\tIPPROTO_IGMP                      = 0x2\n+\tIPPROTO_IP                        = 0x0\n+\tIPPROTO_IPCOMP                    = 0x6c\n+\tIPPROTO_IPIP                      = 0x4\n+\tIPPROTO_IPV4                      = 0x4\n+\tIPPROTO_IPV6                      = 0x29\n+\tIPPROTO_MAX                       = 0x100\n+\tIPPROTO_MAXID                     = 0x103\n+\tIPPROTO_MOBILE                    = 0x37\n+\tIPPROTO_MPLS                      = 0x89\n+\tIPPROTO_NONE                      = 0x3b\n+\tIPPROTO_PFSYNC                    = 0xf0\n+\tIPPROTO_PIM                       = 0x67\n+\tIPPROTO_PUP                       = 0xc\n+\tIPPROTO_RAW                       = 0xff\n+\tIPPROTO_ROUTING                   = 0x2b\n+\tIPPROTO_RSVP                      = 0x2e\n+\tIPPROTO_TCP                       = 0x6\n+\tIPPROTO_TP                        = 0x1d\n+\tIPPROTO_UDP                       = 0x11\n+\tIPV6_AUTH_LEVEL                   = 0x35\n+\tIPV6_AUTOFLOWLABEL                = 0x3b\n+\tIPV6_CHECKSUM                     = 0x1a\n+\tIPV6_DEFAULT_MULTICAST_HOPS       = 0x1\n+\tIPV6_DEFAULT_MULTICAST_LOOP       = 0x1\n+\tIPV6_DEFHLIM                      = 0x40\n+\tIPV6_DONTFRAG                     = 0x3e\n+\tIPV6_DSTOPTS                      = 0x32\n+\tIPV6_ESP_NETWORK_LEVEL            = 0x37\n+\tIPV6_ESP_TRANS_LEVEL              = 0x36\n+\tIPV6_FAITH                        = 0x1d\n+\tIPV6_FLOWINFO_MASK                = 0xffffff0f\n+\tIPV6_FLOWLABEL_MASK               = 0xffff0f00\n+\tIPV6_FRAGTTL                      = 0x78\n+\tIPV6_HLIMDEC                      = 0x1\n+\tIPV6_HOPLIMIT                     = 0x2f\n+\tIPV6_HOPOPTS                      = 0x31\n+\tIPV6_IPCOMP_LEVEL                 = 0x3c\n+\tIPV6_JOIN_GROUP                   = 0xc\n+\tIPV6_LEAVE_GROUP                  = 0xd\n+\tIPV6_MAXHLIM                      = 0xff\n+\tIPV6_MAXPACKET                    = 0xffff\n+\tIPV6_MINHOPCOUNT                  = 0x41\n+\tIPV6_MMTU                         = 0x500\n+\tIPV6_MULTICAST_HOPS               = 0xa\n+\tIPV6_MULTICAST_IF                 = 0x9\n+\tIPV6_MULTICAST_LOOP               = 0xb\n+\tIPV6_NEXTHOP                      = 0x30\n+\tIPV6_OPTIONS                      = 0x1\n+\tIPV6_PATHMTU                      = 0x2c\n+\tIPV6_PIPEX                        = 0x3f\n+\tIPV6_PKTINFO                      = 0x2e\n+\tIPV6_PORTRANGE                    = 0xe\n+\tIPV6_PORTRANGE_DEFAULT            = 0x0\n+\tIPV6_PORTRANGE_HIGH               = 0x1\n+\tIPV6_PORTRANGE_LOW                = 0x2\n+\tIPV6_RECVDSTOPTS                  = 0x28\n+\tIPV6_RECVDSTPORT                  = 0x40\n+\tIPV6_RECVHOPLIMIT                 = 0x25\n+\tIPV6_RECVHOPOPTS                  = 0x27\n+\tIPV6_RECVPATHMTU                  = 0x2b\n+\tIPV6_RECVPKTINFO                  = 0x24\n+\tIPV6_RECVRTHDR                    = 0x26\n+\tIPV6_RECVTCLASS                   = 0x39\n+\tIPV6_RTABLE                       = 0x1021\n+\tIPV6_RTHDR                        = 0x33\n+\tIPV6_RTHDRDSTOPTS                 = 0x23\n+\tIPV6_RTHDR_LOOSE                  = 0x0\n+\tIPV6_RTHDR_STRICT                 = 0x1\n+\tIPV6_RTHDR_TYPE_0                 = 0x0\n+\tIPV6_SOCKOPT_RESERVED1            = 0x3\n+\tIPV6_TCLASS                       = 0x3d\n+\tIPV6_UNICAST_HOPS                 = 0x4\n+\tIPV6_USE_MIN_MTU                  = 0x2a\n+\tIPV6_V6ONLY                       = 0x1b\n+\tIPV6_VERSION                      = 0x60\n+\tIPV6_VERSION_MASK                 = 0xf0\n+\tIP_ADD_MEMBERSHIP                 = 0xc\n+\tIP_AUTH_LEVEL                     = 0x14\n+\tIP_DEFAULT_MULTICAST_LOOP         = 0x1\n+\tIP_DEFAULT_MULTICAST_TTL          = 0x1\n+\tIP_DF                             = 0x4000\n+\tIP_DROP_MEMBERSHIP                = 0xd\n+\tIP_ESP_NETWORK_LEVEL              = 0x16\n+\tIP_ESP_TRANS_LEVEL                = 0x15\n+\tIP_HDRINCL                        = 0x2\n+\tIP_IPCOMP_LEVEL                   = 0x1d\n+\tIP_IPDEFTTL                       = 0x25\n+\tIP_IPSECFLOWINFO                  = 0x24\n+\tIP_IPSEC_LOCAL_AUTH               = 0x1b\n+\tIP_IPSEC_LOCAL_CRED               = 0x19\n+\tIP_IPSEC_LOCAL_ID                 = 0x17\n+\tIP_IPSEC_REMOTE_AUTH              = 0x1c\n+\tIP_IPSEC_REMOTE_CRED              = 0x1a\n+\tIP_IPSEC_REMOTE_ID                = 0x18\n+\tIP_MAXPACKET                      = 0xffff\n+\tIP_MAX_MEMBERSHIPS                = 0xfff\n+\tIP_MF                             = 0x2000\n+\tIP_MINTTL                         = 0x20\n+\tIP_MIN_MEMBERSHIPS                = 0xf\n+\tIP_MSS                            = 0x240\n+\tIP_MULTICAST_IF                   = 0x9\n+\tIP_MULTICAST_LOOP                 = 0xb\n+\tIP_MULTICAST_TTL                  = 0xa\n+\tIP_OFFMASK                        = 0x1fff\n+\tIP_OPTIONS                        = 0x1\n+\tIP_PIPEX                          = 0x22\n+\tIP_PORTRANGE                      = 0x13\n+\tIP_PORTRANGE_DEFAULT              = 0x0\n+\tIP_PORTRANGE_HIGH                 = 0x1\n+\tIP_PORTRANGE_LOW                  = 0x2\n+\tIP_RECVDSTADDR                    = 0x7\n+\tIP_RECVDSTPORT                    = 0x21\n+\tIP_RECVIF                         = 0x1e\n+\tIP_RECVOPTS                       = 0x5\n+\tIP_RECVRETOPTS                    = 0x6\n+\tIP_RECVRTABLE                     = 0x23\n+\tIP_RECVTTL                        = 0x1f\n+\tIP_RETOPTS                        = 0x8\n+\tIP_RF                             = 0x8000\n+\tIP_RTABLE                         = 0x1021\n+\tIP_SENDSRCADDR                    = 0x7\n+\tIP_TOS                            = 0x3\n+\tIP_TTL                            = 0x4\n+\tISIG                              = 0x80\n+\tISTRIP                            = 0x20\n+\tIUCLC                             = 0x1000\n+\tIXANY                             = 0x800\n+\tIXOFF                             = 0x400\n+\tIXON                              = 0x200\n+\tKERN_HOSTNAME                     = 0xa\n+\tKERN_OSRELEASE                    = 0x2\n+\tKERN_OSTYPE                       = 0x1\n+\tKERN_VERSION                      = 0x4\n+\tLCNT_OVERLOAD_FLUSH               = 0x6\n+\tLOCK_EX                           = 0x2\n+\tLOCK_NB                           = 0x4\n+\tLOCK_SH                           = 0x1\n+\tLOCK_UN                           = 0x8\n+\tMADV_DONTNEED                     = 0x4\n+\tMADV_FREE                         = 0x6\n+\tMADV_NORMAL                       = 0x0\n+\tMADV_RANDOM                       = 0x1\n+\tMADV_SEQUENTIAL                   = 0x2\n+\tMADV_SPACEAVAIL                   = 0x5\n+\tMADV_WILLNEED                     = 0x3\n+\tMAP_ANON                          = 0x1000\n+\tMAP_ANONYMOUS                     = 0x1000\n+\tMAP_CONCEAL                       = 0x8000\n+\tMAP_COPY                          = 0x2\n+\tMAP_FILE                          = 0x0\n+\tMAP_FIXED                         = 0x10\n+\tMAP_FLAGMASK                      = 0xfff7\n+\tMAP_HASSEMAPHORE                  = 0x0\n+\tMAP_INHERIT                       = 0x0\n+\tMAP_INHERIT_COPY                  = 0x1\n+\tMAP_INHERIT_NONE                  = 0x2\n+\tMAP_INHERIT_SHARE                 = 0x0\n+\tMAP_INHERIT_ZERO                  = 0x3\n+\tMAP_NOEXTEND                      = 0x0\n+\tMAP_NORESERVE                     = 0x0\n+\tMAP_PRIVATE                       = 0x2\n+\tMAP_RENAME                        = 0x0\n+\tMAP_SHARED                        = 0x1\n+\tMAP_STACK                         = 0x4000\n+\tMAP_TRYFIXED                      = 0x0\n+\tMCL_CURRENT                       = 0x1\n+\tMCL_FUTURE                        = 0x2\n+\tMNT_ASYNC                         = 0x40\n+\tMNT_DEFEXPORTED                   = 0x200\n+\tMNT_DELEXPORT                     = 0x20000\n+\tMNT_DOOMED                        = 0x8000000\n+\tMNT_EXPORTANON                    = 0x400\n+\tMNT_EXPORTED                      = 0x100\n+\tMNT_EXRDONLY                      = 0x80\n+\tMNT_FORCE                         = 0x80000\n+\tMNT_LAZY                          = 0x3\n+\tMNT_LOCAL                         = 0x1000\n+\tMNT_NOATIME                       = 0x8000\n+\tMNT_NODEV                         = 0x10\n+\tMNT_NOEXEC                        = 0x4\n+\tMNT_NOPERM                        = 0x20\n+\tMNT_NOSUID                        = 0x8\n+\tMNT_NOWAIT                        = 0x2\n+\tMNT_QUOTA                         = 0x2000\n+\tMNT_RDONLY                        = 0x1\n+\tMNT_RELOAD                        = 0x40000\n+\tMNT_ROOTFS                        = 0x4000\n+\tMNT_SOFTDEP                       = 0x4000000\n+\tMNT_STALLED                       = 0x100000\n+\tMNT_SWAPPABLE                     = 0x200000\n+\tMNT_SYNCHRONOUS                   = 0x2\n+\tMNT_UPDATE                        = 0x10000\n+\tMNT_VISFLAGMASK                   = 0x400ffff\n+\tMNT_WAIT                          = 0x1\n+\tMNT_WANTRDWR                      = 0x2000000\n+\tMNT_WXALLOWED                     = 0x800\n+\tMSG_BCAST                         = 0x100\n+\tMSG_CMSG_CLOEXEC                  = 0x800\n+\tMSG_CTRUNC                        = 0x20\n+\tMSG_DONTROUTE                     = 0x4\n+\tMSG_DONTWAIT                      = 0x80\n+\tMSG_EOR                           = 0x8\n+\tMSG_MCAST                         = 0x200\n+\tMSG_NOSIGNAL                      = 0x400\n+\tMSG_OOB                           = 0x1\n+\tMSG_PEEK                          = 0x2\n+\tMSG_TRUNC                         = 0x10\n+\tMSG_WAITALL                       = 0x40\n+\tMS_ASYNC                          = 0x1\n+\tMS_INVALIDATE                     = 0x4\n+\tMS_SYNC                           = 0x2\n+\tNAME_MAX                          = 0xff\n+\tNET_RT_DUMP                       = 0x1\n+\tNET_RT_FLAGS                      = 0x2\n+\tNET_RT_IFLIST                     = 0x3\n+\tNET_RT_IFNAMES                    = 0x6\n+\tNET_RT_MAXID                      = 0x7\n+\tNET_RT_STATS                      = 0x4\n+\tNET_RT_TABLE                      = 0x5\n+\tNOFLSH                            = 0x80000000\n+\tNOKERNINFO                        = 0x2000000\n+\tNOTE_ATTRIB                       = 0x8\n+\tNOTE_CHANGE                       = 0x1\n+\tNOTE_CHILD                        = 0x4\n+\tNOTE_DELETE                       = 0x1\n+\tNOTE_EOF                          = 0x2\n+\tNOTE_EXEC                         = 0x20000000\n+\tNOTE_EXIT                         = 0x80000000\n+\tNOTE_EXTEND                       = 0x4\n+\tNOTE_FORK                         = 0x40000000\n+\tNOTE_LINK                         = 0x10\n+\tNOTE_LOWAT                        = 0x1\n+\tNOTE_PCTRLMASK                    = 0xf0000000\n+\tNOTE_PDATAMASK                    = 0xfffff\n+\tNOTE_RENAME                       = 0x20\n+\tNOTE_REVOKE                       = 0x40\n+\tNOTE_TRACK                        = 0x1\n+\tNOTE_TRACKERR                     = 0x2\n+\tNOTE_TRUNCATE                     = 0x80\n+\tNOTE_WRITE                        = 0x2\n+\tOCRNL                             = 0x10\n+\tOLCUC                             = 0x20\n+\tONLCR                             = 0x2\n+\tONLRET                            = 0x80\n+\tONOCR                             = 0x40\n+\tONOEOT                            = 0x8\n+\tOPOST                             = 0x1\n+\tOXTABS                            = 0x4\n+\tO_ACCMODE                         = 0x3\n+\tO_APPEND                          = 0x8\n+\tO_ASYNC                           = 0x40\n+\tO_CLOEXEC                         = 0x10000\n+\tO_CREAT                           = 0x200\n+\tO_DIRECTORY                       = 0x20000\n+\tO_DSYNC                           = 0x80\n+\tO_EXCL                            = 0x800\n+\tO_EXLOCK                          = 0x20\n+\tO_FSYNC                           = 0x80\n+\tO_NDELAY                          = 0x4\n+\tO_NOCTTY                          = 0x8000\n+\tO_NOFOLLOW                        = 0x100\n+\tO_NONBLOCK                        = 0x4\n+\tO_RDONLY                          = 0x0\n+\tO_RDWR                            = 0x2\n+\tO_RSYNC                           = 0x80\n+\tO_SHLOCK                          = 0x10\n+\tO_SYNC                            = 0x80\n+\tO_TRUNC                           = 0x400\n+\tO_WRONLY                          = 0x1\n+\tPARENB                            = 0x1000\n+\tPARMRK                            = 0x8\n+\tPARODD                            = 0x2000\n+\tPENDIN                            = 0x20000000\n+\tPF_FLUSH                          = 0x1\n+\tPRIO_PGRP                         = 0x1\n+\tPRIO_PROCESS                      = 0x0\n+\tPRIO_USER                         = 0x2\n+\tPROT_EXEC                         = 0x4\n+\tPROT_NONE                         = 0x0\n+\tPROT_READ                         = 0x1\n+\tPROT_WRITE                        = 0x2\n+\tRLIMIT_CORE                       = 0x4\n+\tRLIMIT_CPU                        = 0x0\n+\tRLIMIT_DATA                       = 0x2\n+\tRLIMIT_FSIZE                      = 0x1\n+\tRLIMIT_MEMLOCK                    = 0x6\n+\tRLIMIT_NOFILE                     = 0x8\n+\tRLIMIT_NPROC                      = 0x7\n+\tRLIMIT_RSS                        = 0x5\n+\tRLIMIT_STACK                      = 0x3\n+\tRLIM_INFINITY                     = 0x7fffffffffffffff\n+\tRTAX_AUTHOR                       = 0x6\n+\tRTAX_BFD                          = 0xb\n+\tRTAX_BRD                          = 0x7\n+\tRTAX_DNS                          = 0xc\n+\tRTAX_DST                          = 0x0\n+\tRTAX_GATEWAY                      = 0x1\n+\tRTAX_GENMASK                      = 0x3\n+\tRTAX_IFA                          = 0x5\n+\tRTAX_IFP                          = 0x4\n+\tRTAX_LABEL                        = 0xa\n+\tRTAX_MAX                          = 0xf\n+\tRTAX_NETMASK                      = 0x2\n+\tRTAX_SEARCH                       = 0xe\n+\tRTAX_SRC                          = 0x8\n+\tRTAX_SRCMASK                      = 0x9\n+\tRTAX_STATIC                       = 0xd\n+\tRTA_AUTHOR                        = 0x40\n+\tRTA_BFD                           = 0x800\n+\tRTA_BRD                           = 0x80\n+\tRTA_DNS                           = 0x1000\n+\tRTA_DST                           = 0x1\n+\tRTA_GATEWAY                       = 0x2\n+\tRTA_GENMASK                       = 0x8\n+\tRTA_IFA                           = 0x20\n+\tRTA_IFP                           = 0x10\n+\tRTA_LABEL                         = 0x400\n+\tRTA_NETMASK                       = 0x4\n+\tRTA_SEARCH                        = 0x4000\n+\tRTA_SRC                           = 0x100\n+\tRTA_SRCMASK                       = 0x200\n+\tRTA_STATIC                        = 0x2000\n+\tRTF_ANNOUNCE                      = 0x4000\n+\tRTF_BFD                           = 0x1000000\n+\tRTF_BLACKHOLE                     = 0x1000\n+\tRTF_BROADCAST                     = 0x400000\n+\tRTF_CACHED                        = 0x20000\n+\tRTF_CLONED                        = 0x10000\n+\tRTF_CLONING                       = 0x100\n+\tRTF_CONNECTED                     = 0x800000\n+\tRTF_DONE                          = 0x40\n+\tRTF_DYNAMIC                       = 0x10\n+\tRTF_FMASK                         = 0x110fc08\n+\tRTF_GATEWAY                       = 0x2\n+\tRTF_HOST                          = 0x4\n+\tRTF_LLINFO                        = 0x400\n+\tRTF_LOCAL                         = 0x200000\n+\tRTF_MODIFIED                      = 0x20\n+\tRTF_MPATH                         = 0x40000\n+\tRTF_MPLS                          = 0x100000\n+\tRTF_MULTICAST                     = 0x200\n+\tRTF_PERMANENT_ARP                 = 0x2000\n+\tRTF_PROTO1                        = 0x8000\n+\tRTF_PROTO2                        = 0x4000\n+\tRTF_PROTO3                        = 0x2000\n+\tRTF_REJECT                        = 0x8\n+\tRTF_STATIC                        = 0x800\n+\tRTF_UP                            = 0x1\n+\tRTF_USETRAILERS                   = 0x8000\n+\tRTM_80211INFO                     = 0x15\n+\tRTM_ADD                           = 0x1\n+\tRTM_BFD                           = 0x12\n+\tRTM_CHANGE                        = 0x3\n+\tRTM_CHGADDRATTR                   = 0x14\n+\tRTM_DELADDR                       = 0xd\n+\tRTM_DELETE                        = 0x2\n+\tRTM_DESYNC                        = 0x10\n+\tRTM_GET                           = 0x4\n+\tRTM_IFANNOUNCE                    = 0xf\n+\tRTM_IFINFO                        = 0xe\n+\tRTM_INVALIDATE                    = 0x11\n+\tRTM_LOSING                        = 0x5\n+\tRTM_MAXSIZE                       = 0x800\n+\tRTM_MISS                          = 0x7\n+\tRTM_NEWADDR                       = 0xc\n+\tRTM_PROPOSAL                      = 0x13\n+\tRTM_REDIRECT                      = 0x6\n+\tRTM_RESOLVE                       = 0xb\n+\tRTM_RTTUNIT                       = 0xf4240\n+\tRTM_VERSION                       = 0x5\n+\tRTV_EXPIRE                        = 0x4\n+\tRTV_HOPCOUNT                      = 0x2\n+\tRTV_MTU                           = 0x1\n+\tRTV_RPIPE                         = 0x8\n+\tRTV_RTT                           = 0x40\n+\tRTV_RTTVAR                        = 0x80\n+\tRTV_SPIPE                         = 0x10\n+\tRTV_SSTHRESH                      = 0x20\n+\tRT_TABLEID_BITS                   = 0x8\n+\tRT_TABLEID_MASK                   = 0xff\n+\tRT_TABLEID_MAX                    = 0xff\n+\tRUSAGE_CHILDREN                   = -0x1\n+\tRUSAGE_SELF                       = 0x0\n+\tRUSAGE_THREAD                     = 0x1\n+\tSCM_RIGHTS                        = 0x1\n+\tSCM_TIMESTAMP                     = 0x4\n+\tSHUT_RD                           = 0x0\n+\tSHUT_RDWR                         = 0x2\n+\tSHUT_WR                           = 0x1\n+\tSIOCADDMULTI                      = 0x80206931\n+\tSIOCAIFADDR                       = 0x8040691a\n+\tSIOCAIFGROUP                      = 0x80286987\n+\tSIOCATMARK                        = 0x40047307\n+\tSIOCBRDGADD                       = 0x8060693c\n+\tSIOCBRDGADDL                      = 0x80606949\n+\tSIOCBRDGADDS                      = 0x80606941\n+\tSIOCBRDGARL                       = 0x808c694d\n+\tSIOCBRDGDADDR                     = 0x81286947\n+\tSIOCBRDGDEL                       = 0x8060693d\n+\tSIOCBRDGDELS                      = 0x80606942\n+\tSIOCBRDGFLUSH                     = 0x80606948\n+\tSIOCBRDGFRL                       = 0x808c694e\n+\tSIOCBRDGGCACHE                    = 0xc0186941\n+\tSIOCBRDGGFD                       = 0xc0186952\n+\tSIOCBRDGGHT                       = 0xc0186951\n+\tSIOCBRDGGIFFLGS                   = 0xc060693e\n+\tSIOCBRDGGMA                       = 0xc0186953\n+\tSIOCBRDGGPARAM                    = 0xc0406958\n+\tSIOCBRDGGPRI                      = 0xc0186950\n+\tSIOCBRDGGRL                       = 0xc030694f\n+\tSIOCBRDGGTO                       = 0xc0186946\n+\tSIOCBRDGIFS                       = 0xc0606942\n+\tSIOCBRDGRTS                       = 0xc0206943\n+\tSIOCBRDGSADDR                     = 0xc1286944\n+\tSIOCBRDGSCACHE                    = 0x80186940\n+\tSIOCBRDGSFD                       = 0x80186952\n+\tSIOCBRDGSHT                       = 0x80186951\n+\tSIOCBRDGSIFCOST                   = 0x80606955\n+\tSIOCBRDGSIFFLGS                   = 0x8060693f\n+\tSIOCBRDGSIFPRIO                   = 0x80606954\n+\tSIOCBRDGSIFPROT                   = 0x8060694a\n+\tSIOCBRDGSMA                       = 0x80186953\n+\tSIOCBRDGSPRI                      = 0x80186950\n+\tSIOCBRDGSPROTO                    = 0x8018695a\n+\tSIOCBRDGSTO                       = 0x80186945\n+\tSIOCBRDGSTXHC                     = 0x80186959\n+\tSIOCDELLABEL                      = 0x80206997\n+\tSIOCDELMULTI                      = 0x80206932\n+\tSIOCDIFADDR                       = 0x80206919\n+\tSIOCDIFGROUP                      = 0x80286989\n+\tSIOCDIFPARENT                     = 0x802069b4\n+\tSIOCDIFPHYADDR                    = 0x80206949\n+\tSIOCDPWE3NEIGHBOR                 = 0x802069de\n+\tSIOCDVNETID                       = 0x802069af\n+\tSIOCGETKALIVE                     = 0xc01869a4\n+\tSIOCGETLABEL                      = 0x8020699a\n+\tSIOCGETMPWCFG                     = 0xc02069ae\n+\tSIOCGETPFLOW                      = 0xc02069fe\n+\tSIOCGETPFSYNC                     = 0xc02069f8\n+\tSIOCGETSGCNT                      = 0xc0207534\n+\tSIOCGETVIFCNT                     = 0xc0287533\n+\tSIOCGETVLAN                       = 0xc0206990\n+\tSIOCGIFADDR                       = 0xc0206921\n+\tSIOCGIFBRDADDR                    = 0xc0206923\n+\tSIOCGIFCONF                       = 0xc0106924\n+\tSIOCGIFDATA                       = 0xc020691b\n+\tSIOCGIFDESCR                      = 0xc0206981\n+\tSIOCGIFDSTADDR                    = 0xc0206922\n+\tSIOCGIFFLAGS                      = 0xc0206911\n+\tSIOCGIFGATTR                      = 0xc028698b\n+\tSIOCGIFGENERIC                    = 0xc020693a\n+\tSIOCGIFGLIST                      = 0xc028698d\n+\tSIOCGIFGMEMB                      = 0xc028698a\n+\tSIOCGIFGROUP                      = 0xc0286988\n+\tSIOCGIFHARDMTU                    = 0xc02069a5\n+\tSIOCGIFLLPRIO                     = 0xc02069b6\n+\tSIOCGIFMEDIA                      = 0xc0406938\n+\tSIOCGIFMETRIC                     = 0xc0206917\n+\tSIOCGIFMTU                        = 0xc020697e\n+\tSIOCGIFNETMASK                    = 0xc0206925\n+\tSIOCGIFPAIR                       = 0xc02069b1\n+\tSIOCGIFPARENT                     = 0xc02069b3\n+\tSIOCGIFPRIORITY                   = 0xc020699c\n+\tSIOCGIFRDOMAIN                    = 0xc02069a0\n+\tSIOCGIFRTLABEL                    = 0xc0206983\n+\tSIOCGIFRXR                        = 0x802069aa\n+\tSIOCGIFSFFPAGE                    = 0xc1126939\n+\tSIOCGIFXFLAGS                     = 0xc020699e\n+\tSIOCGLIFPHYADDR                   = 0xc218694b\n+\tSIOCGLIFPHYDF                     = 0xc02069c2\n+\tSIOCGLIFPHYECN                    = 0xc02069c8\n+\tSIOCGLIFPHYRTABLE                 = 0xc02069a2\n+\tSIOCGLIFPHYTTL                    = 0xc02069a9\n+\tSIOCGPGRP                         = 0x40047309\n+\tSIOCGPWE3                         = 0xc0206998\n+\tSIOCGPWE3CTRLWORD                 = 0xc02069dc\n+\tSIOCGPWE3FAT                      = 0xc02069dd\n+\tSIOCGPWE3NEIGHBOR                 = 0xc21869de\n+\tSIOCGSPPPPARAMS                   = 0xc0206994\n+\tSIOCGTXHPRIO                      = 0xc02069c6\n+\tSIOCGUMBINFO                      = 0xc02069be\n+\tSIOCGUMBPARAM                     = 0xc02069c0\n+\tSIOCGVH                           = 0xc02069f6\n+\tSIOCGVNETFLOWID                   = 0xc02069c4\n+\tSIOCGVNETID                       = 0xc02069a7\n+\tSIOCIFAFATTACH                    = 0x801169ab\n+\tSIOCIFAFDETACH                    = 0x801169ac\n+\tSIOCIFCREATE                      = 0x8020697a\n+\tSIOCIFDESTROY                     = 0x80206979\n+\tSIOCIFGCLONERS                    = 0xc0106978\n+\tSIOCSETKALIVE                     = 0x801869a3\n+\tSIOCSETLABEL                      = 0x80206999\n+\tSIOCSETMPWCFG                     = 0x802069ad\n+\tSIOCSETPFLOW                      = 0x802069fd\n+\tSIOCSETPFSYNC                     = 0x802069f7\n+\tSIOCSETVLAN                       = 0x8020698f\n+\tSIOCSIFADDR                       = 0x8020690c\n+\tSIOCSIFBRDADDR                    = 0x80206913\n+\tSIOCSIFDESCR                      = 0x80206980\n+\tSIOCSIFDSTADDR                    = 0x8020690e\n+\tSIOCSIFFLAGS                      = 0x80206910\n+\tSIOCSIFGATTR                      = 0x8028698c\n+\tSIOCSIFGENERIC                    = 0x80206939\n+\tSIOCSIFLLADDR                     = 0x8020691f\n+\tSIOCSIFLLPRIO                     = 0x802069b5\n+\tSIOCSIFMEDIA                      = 0xc0206937\n+\tSIOCSIFMETRIC                     = 0x80206918\n+\tSIOCSIFMTU                        = 0x8020697f\n+\tSIOCSIFNETMASK                    = 0x80206916\n+\tSIOCSIFPAIR                       = 0x802069b0\n+\tSIOCSIFPARENT                     = 0x802069b2\n+\tSIOCSIFPRIORITY                   = 0x8020699b\n+\tSIOCSIFRDOMAIN                    = 0x8020699f\n+\tSIOCSIFRTLABEL                    = 0x80206982\n+\tSIOCSIFXFLAGS                     = 0x8020699d\n+\tSIOCSLIFPHYADDR                   = 0x8218694a\n+\tSIOCSLIFPHYDF                     = 0x802069c1\n+\tSIOCSLIFPHYECN                    = 0x802069c7\n+\tSIOCSLIFPHYRTABLE                 = 0x802069a1\n+\tSIOCSLIFPHYTTL                    = 0x802069a8\n+\tSIOCSPGRP                         = 0x80047308\n+\tSIOCSPWE3CTRLWORD                 = 0x802069dc\n+\tSIOCSPWE3FAT                      = 0x802069dd\n+\tSIOCSPWE3NEIGHBOR                 = 0x821869de\n+\tSIOCSSPPPPARAMS                   = 0x80206993\n+\tSIOCSTXHPRIO                      = 0x802069c5\n+\tSIOCSUMBPARAM                     = 0x802069bf\n+\tSIOCSVH                           = 0xc02069f5\n+\tSIOCSVNETFLOWID                   = 0x802069c3\n+\tSIOCSVNETID                       = 0x802069a6\n+\tSIOCSWGDPID                       = 0xc018695b\n+\tSIOCSWGMAXFLOW                    = 0xc0186960\n+\tSIOCSWGMAXGROUP                   = 0xc018695d\n+\tSIOCSWSDPID                       = 0x8018695c\n+\tSIOCSWSPORTNO                     = 0xc060695f\n+\tSOCK_CLOEXEC                      = 0x8000\n+\tSOCK_DGRAM                        = 0x2\n+\tSOCK_DNS                          = 0x1000\n+\tSOCK_NONBLOCK                     = 0x4000\n+\tSOCK_RAW                          = 0x3\n+\tSOCK_RDM                          = 0x4\n+\tSOCK_SEQPACKET                    = 0x5\n+\tSOCK_STREAM                       = 0x1\n+\tSOL_SOCKET                        = 0xffff\n+\tSOMAXCONN                         = 0x80\n+\tSO_ACCEPTCONN                     = 0x2\n+\tSO_BINDANY                        = 0x1000\n+\tSO_BROADCAST                      = 0x20\n+\tSO_DEBUG                          = 0x1\n+\tSO_DONTROUTE                      = 0x10\n+\tSO_ERROR                          = 0x1007\n+\tSO_KEEPALIVE                      = 0x8\n+\tSO_LINGER                         = 0x80\n+\tSO_NETPROC                        = 0x1020\n+\tSO_OOBINLINE                      = 0x100\n+\tSO_PEERCRED                       = 0x1022\n+\tSO_RCVBUF                         = 0x1002\n+\tSO_RCVLOWAT                       = 0x1004\n+\tSO_RCVTIMEO                       = 0x1006\n+\tSO_REUSEADDR                      = 0x4\n+\tSO_REUSEPORT                      = 0x200\n+\tSO_RTABLE                         = 0x1021\n+\tSO_SNDBUF                         = 0x1001\n+\tSO_SNDLOWAT                       = 0x1003\n+\tSO_SNDTIMEO                       = 0x1005\n+\tSO_SPLICE                         = 0x1023\n+\tSO_TIMESTAMP                      = 0x800\n+\tSO_TYPE                           = 0x1008\n+\tSO_USELOOPBACK                    = 0x40\n+\tSO_ZEROIZE                        = 0x2000\n+\tS_BLKSIZE                         = 0x200\n+\tS_IEXEC                           = 0x40\n+\tS_IFBLK                           = 0x6000\n+\tS_IFCHR                           = 0x2000\n+\tS_IFDIR                           = 0x4000\n+\tS_IFIFO                           = 0x1000\n+\tS_IFLNK                           = 0xa000\n+\tS_IFMT                            = 0xf000\n+\tS_IFREG                           = 0x8000\n+\tS_IFSOCK                          = 0xc000\n+\tS_IREAD                           = 0x100\n+\tS_IRGRP                           = 0x20\n+\tS_IROTH                           = 0x4\n+\tS_IRUSR                           = 0x100\n+\tS_IRWXG                           = 0x38\n+\tS_IRWXO                           = 0x7\n+\tS_IRWXU                           = 0x1c0\n+\tS_ISGID                           = 0x400\n+\tS_ISTXT                           = 0x200\n+\tS_ISUID                           = 0x800\n+\tS_ISVTX                           = 0x200\n+\tS_IWGRP                           = 0x10\n+\tS_IWOTH                           = 0x2\n+\tS_IWRITE                          = 0x80\n+\tS_IWUSR                           = 0x80\n+\tS_IXGRP                           = 0x8\n+\tS_IXOTH                           = 0x1\n+\tS_IXUSR                           = 0x40\n+\tTCIFLUSH                          = 0x1\n+\tTCIOFF                            = 0x3\n+\tTCIOFLUSH                         = 0x3\n+\tTCION                             = 0x4\n+\tTCOFLUSH                          = 0x2\n+\tTCOOFF                            = 0x1\n+\tTCOON                             = 0x2\n+\tTCP_MAXBURST                      = 0x4\n+\tTCP_MAXSEG                        = 0x2\n+\tTCP_MAXWIN                        = 0xffff\n+\tTCP_MAX_SACK                      = 0x3\n+\tTCP_MAX_WINSHIFT                  = 0xe\n+\tTCP_MD5SIG                        = 0x4\n+\tTCP_MSS                           = 0x200\n+\tTCP_NODELAY                       = 0x1\n+\tTCP_NOPUSH                        = 0x10\n+\tTCP_SACK_ENABLE                   = 0x8\n+\tTCSAFLUSH                         = 0x2\n+\tTIMER_ABSTIME                     = 0x1\n+\tTIMER_RELTIME                     = 0x0\n+\tTIOCCBRK                          = 0x2000747a\n+\tTIOCCDTR                          = 0x20007478\n+\tTIOCCHKVERAUTH                    = 0x2000741e\n+\tTIOCCLRVERAUTH                    = 0x2000741d\n+\tTIOCCONS                          = 0x80047462\n+\tTIOCDRAIN                         = 0x2000745e\n+\tTIOCEXCL                          = 0x2000740d\n+\tTIOCEXT                           = 0x80047460\n+\tTIOCFLAG_CLOCAL                   = 0x2\n+\tTIOCFLAG_CRTSCTS                  = 0x4\n+\tTIOCFLAG_MDMBUF                   = 0x8\n+\tTIOCFLAG_PPS                      = 0x10\n+\tTIOCFLAG_SOFTCAR                  = 0x1\n+\tTIOCFLUSH                         = 0x80047410\n+\tTIOCGETA                          = 0x402c7413\n+\tTIOCGETD                          = 0x4004741a\n+\tTIOCGFLAGS                        = 0x4004745d\n+\tTIOCGPGRP                         = 0x40047477\n+\tTIOCGSID                          = 0x40047463\n+\tTIOCGTSTAMP                       = 0x4010745b\n+\tTIOCGWINSZ                        = 0x40087468\n+\tTIOCMBIC                          = 0x8004746b\n+\tTIOCMBIS                          = 0x8004746c\n+\tTIOCMGET                          = 0x4004746a\n+\tTIOCMODG                          = 0x4004746a\n+\tTIOCMODS                          = 0x8004746d\n+\tTIOCMSET                          = 0x8004746d\n+\tTIOCM_CAR                         = 0x40\n+\tTIOCM_CD                          = 0x40\n+\tTIOCM_CTS                         = 0x20\n+\tTIOCM_DSR                         = 0x100\n+\tTIOCM_DTR                         = 0x2\n+\tTIOCM_LE                          = 0x1\n+\tTIOCM_RI                          = 0x80\n+\tTIOCM_RNG                         = 0x80\n+\tTIOCM_RTS                         = 0x4\n+\tTIOCM_SR                          = 0x10\n+\tTIOCM_ST                          = 0x8\n+\tTIOCNOTTY                         = 0x20007471\n+\tTIOCNXCL                          = 0x2000740e\n+\tTIOCOUTQ                          = 0x40047473\n+\tTIOCPKT                           = 0x80047470\n+\tTIOCPKT_DATA                      = 0x0\n+\tTIOCPKT_DOSTOP                    = 0x20\n+\tTIOCPKT_FLUSHREAD                 = 0x1\n+\tTIOCPKT_FLUSHWRITE                = 0x2\n+\tTIOCPKT_IOCTL                     = 0x40\n+\tTIOCPKT_NOSTOP                    = 0x10\n+\tTIOCPKT_START                     = 0x8\n+\tTIOCPKT_STOP                      = 0x4\n+\tTIOCREMOTE                        = 0x80047469\n+\tTIOCSBRK                          = 0x2000747b\n+\tTIOCSCTTY                         = 0x20007461\n+\tTIOCSDTR                          = 0x20007479\n+\tTIOCSETA                          = 0x802c7414\n+\tTIOCSETAF                         = 0x802c7416\n+\tTIOCSETAW                         = 0x802c7415\n+\tTIOCSETD                          = 0x8004741b\n+\tTIOCSETVERAUTH                    = 0x8004741c\n+\tTIOCSFLAGS                        = 0x8004745c\n+\tTIOCSIG                           = 0x8004745f\n+\tTIOCSPGRP                         = 0x80047476\n+\tTIOCSTART                         = 0x2000746e\n+\tTIOCSTAT                          = 0x20007465\n+\tTIOCSTOP                          = 0x2000746f\n+\tTIOCSTSTAMP                       = 0x8008745a\n+\tTIOCSWINSZ                        = 0x80087467\n+\tTIOCUCNTL                         = 0x80047466\n+\tTIOCUCNTL_CBRK                    = 0x7a\n+\tTIOCUCNTL_SBRK                    = 0x7b\n+\tTOSTOP                            = 0x400000\n+\tUTIME_NOW                         = -0x2\n+\tUTIME_OMIT                        = -0x1\n+\tVDISCARD                          = 0xf\n+\tVDSUSP                            = 0xb\n+\tVEOF                              = 0x0\n+\tVEOL                              = 0x1\n+\tVEOL2                             = 0x2\n+\tVERASE                            = 0x3\n+\tVINTR                             = 0x8\n+\tVKILL                             = 0x5\n+\tVLNEXT                            = 0xe\n+\tVMIN                              = 0x10\n+\tVM_ANONMIN                        = 0x7\n+\tVM_LOADAVG                        = 0x2\n+\tVM_MALLOC_CONF                    = 0xc\n+\tVM_MAXID                          = 0xd\n+\tVM_MAXSLP                         = 0xa\n+\tVM_METER                          = 0x1\n+\tVM_NKMEMPAGES                     = 0x6\n+\tVM_PSSTRINGS                      = 0x3\n+\tVM_SWAPENCRYPT                    = 0x5\n+\tVM_USPACE                         = 0xb\n+\tVM_UVMEXP                         = 0x4\n+\tVM_VNODEMIN                       = 0x9\n+\tVM_VTEXTMIN                       = 0x8\n+\tVQUIT                             = 0x9\n+\tVREPRINT                          = 0x6\n+\tVSTART                            = 0xc\n+\tVSTATUS                           = 0x12\n+\tVSTOP                             = 0xd\n+\tVSUSP                             = 0xa\n+\tVTIME                             = 0x11\n+\tVWERASE                           = 0x4\n+\tWALTSIG                           = 0x4\n+\tWCONTINUED                        = 0x8\n+\tWCOREFLAG                         = 0x80\n+\tWNOHANG                           = 0x1\n+\tWUNTRACED                         = 0x2\n+\tXCASE                             = 0x1000000\n+)\n+\n+// Errors\n+const (\n+\tE2BIG           = syscall.Errno(0x7)\n+\tEACCES          = syscall.Errno(0xd)\n+\tEADDRINUSE      = syscall.Errno(0x30)\n+\tEADDRNOTAVAIL   = syscall.Errno(0x31)\n+\tEAFNOSUPPORT    = syscall.Errno(0x2f)\n+\tEAGAIN          = syscall.Errno(0x23)\n+\tEALREADY        = syscall.Errno(0x25)\n+\tEAUTH           = syscall.Errno(0x50)\n+\tEBADF           = syscall.Errno(0x9)\n+\tEBADMSG         = syscall.Errno(0x5c)\n+\tEBADRPC         = syscall.Errno(0x48)\n+\tEBUSY           = syscall.Errno(0x10)\n+\tECANCELED       = syscall.Errno(0x58)\n+\tECHILD          = syscall.Errno(0xa)\n+\tECONNABORTED    = syscall.Errno(0x35)\n+\tECONNREFUSED    = syscall.Errno(0x3d)\n+\tECONNRESET      = syscall.Errno(0x36)\n+\tEDEADLK         = syscall.Errno(0xb)\n+\tEDESTADDRREQ    = syscall.Errno(0x27)\n+\tEDOM            = syscall.Errno(0x21)\n+\tEDQUOT          = syscall.Errno(0x45)\n+\tEEXIST          = syscall.Errno(0x11)\n+\tEFAULT          = syscall.Errno(0xe)\n+\tEFBIG           = syscall.Errno(0x1b)\n+\tEFTYPE          = syscall.Errno(0x4f)\n+\tEHOSTDOWN       = syscall.Errno(0x40)\n+\tEHOSTUNREACH    = syscall.Errno(0x41)\n+\tEIDRM           = syscall.Errno(0x59)\n+\tEILSEQ          = syscall.Errno(0x54)\n+\tEINPROGRESS     = syscall.Errno(0x24)\n+\tEINTR           = syscall.Errno(0x4)\n+\tEINVAL          = syscall.Errno(0x16)\n+\tEIO             = syscall.Errno(0x5)\n+\tEIPSEC          = syscall.Errno(0x52)\n+\tEISCONN         = syscall.Errno(0x38)\n+\tEISDIR          = syscall.Errno(0x15)\n+\tELAST           = syscall.Errno(0x5f)\n+\tELOOP           = syscall.Errno(0x3e)\n+\tEMEDIUMTYPE     = syscall.Errno(0x56)\n+\tEMFILE          = syscall.Errno(0x18)\n+\tEMLINK          = syscall.Errno(0x1f)\n+\tEMSGSIZE        = syscall.Errno(0x28)\n+\tENAMETOOLONG    = syscall.Errno(0x3f)\n+\tENEEDAUTH       = syscall.Errno(0x51)\n+\tENETDOWN        = syscall.Errno(0x32)\n+\tENETRESET       = syscall.Errno(0x34)\n+\tENETUNREACH     = syscall.Errno(0x33)\n+\tENFILE          = syscall.Errno(0x17)\n+\tENOATTR         = syscall.Errno(0x53)\n+\tENOBUFS         = syscall.Errno(0x37)\n+\tENODEV          = syscall.Errno(0x13)\n+\tENOENT          = syscall.Errno(0x2)\n+\tENOEXEC         = syscall.Errno(0x8)\n+\tENOLCK          = syscall.Errno(0x4d)\n+\tENOMEDIUM       = syscall.Errno(0x55)\n+\tENOMEM          = syscall.Errno(0xc)\n+\tENOMSG          = syscall.Errno(0x5a)\n+\tENOPROTOOPT     = syscall.Errno(0x2a)\n+\tENOSPC          = syscall.Errno(0x1c)\n+\tENOSYS          = syscall.Errno(0x4e)\n+\tENOTBLK         = syscall.Errno(0xf)\n+\tENOTCONN        = syscall.Errno(0x39)\n+\tENOTDIR         = syscall.Errno(0x14)\n+\tENOTEMPTY       = syscall.Errno(0x42)\n+\tENOTRECOVERABLE = syscall.Errno(0x5d)\n+\tENOTSOCK        = syscall.Errno(0x26)\n+\tENOTSUP         = syscall.Errno(0x5b)\n+\tENOTTY          = syscall.Errno(0x19)\n+\tENXIO           = syscall.Errno(0x6)\n+\tEOPNOTSUPP      = syscall.Errno(0x2d)\n+\tEOVERFLOW       = syscall.Errno(0x57)\n+\tEOWNERDEAD      = syscall.Errno(0x5e)\n+\tEPERM           = syscall.Errno(0x1)\n+\tEPFNOSUPPORT    = syscall.Errno(0x2e)\n+\tEPIPE           = syscall.Errno(0x20)\n+\tEPROCLIM        = syscall.Errno(0x43)\n+\tEPROCUNAVAIL    = syscall.Errno(0x4c)\n+\tEPROGMISMATCH   = syscall.Errno(0x4b)\n+\tEPROGUNAVAIL    = syscall.Errno(0x4a)\n+\tEPROTO          = syscall.Errno(0x5f)\n+\tEPROTONOSUPPORT = syscall.Errno(0x2b)\n+\tEPROTOTYPE      = syscall.Errno(0x29)\n+\tERANGE          = syscall.Errno(0x22)\n+\tEREMOTE         = syscall.Errno(0x47)\n+\tEROFS           = syscall.Errno(0x1e)\n+\tERPCMISMATCH    = syscall.Errno(0x49)\n+\tESHUTDOWN       = syscall.Errno(0x3a)\n+\tESOCKTNOSUPPORT = syscall.Errno(0x2c)\n+\tESPIPE          = syscall.Errno(0x1d)\n+\tESRCH           = syscall.Errno(0x3)\n+\tESTALE          = syscall.Errno(0x46)\n+\tETIMEDOUT       = syscall.Errno(0x3c)\n+\tETOOMANYREFS    = syscall.Errno(0x3b)\n+\tETXTBSY         = syscall.Errno(0x1a)\n+\tEUSERS          = syscall.Errno(0x44)\n+\tEWOULDBLOCK     = syscall.Errno(0x23)\n+\tEXDEV           = syscall.Errno(0x12)\n+)\n+\n+// Signals\n+const (\n+\tSIGABRT   = syscall.Signal(0x6)\n+\tSIGALRM   = syscall.Signal(0xe)\n+\tSIGBUS    = syscall.Signal(0xa)\n+\tSIGCHLD   = syscall.Signal(0x14)\n+\tSIGCONT   = syscall.Signal(0x13)\n+\tSIGEMT    = syscall.Signal(0x7)\n+\tSIGFPE    = syscall.Signal(0x8)\n+\tSIGHUP    = syscall.Signal(0x1)\n+\tSIGILL    = syscall.Signal(0x4)\n+\tSIGINFO   = syscall.Signal(0x1d)\n+\tSIGINT    = syscall.Signal(0x2)\n+\tSIGIO     = syscall.Signal(0x17)\n+\tSIGIOT    = syscall.Signal(0x6)\n+\tSIGKILL   = syscall.Signal(0x9)\n+\tSIGPIPE   = syscall.Signal(0xd)\n+\tSIGPROF   = syscall.Signal(0x1b)\n+\tSIGQUIT   = syscall.Signal(0x3)\n+\tSIGSEGV   = syscall.Signal(0xb)\n+\tSIGSTOP   = syscall.Signal(0x11)\n+\tSIGSYS    = syscall.Signal(0xc)\n+\tSIGTERM   = syscall.Signal(0xf)\n+\tSIGTHR    = syscall.Signal(0x20)\n+\tSIGTRAP   = syscall.Signal(0x5)\n+\tSIGTSTP   = syscall.Signal(0x12)\n+\tSIGTTIN   = syscall.Signal(0x15)\n+\tSIGTTOU   = syscall.Signal(0x16)\n+\tSIGURG    = syscall.Signal(0x10)\n+\tSIGUSR1   = syscall.Signal(0x1e)\n+\tSIGUSR2   = syscall.Signal(0x1f)\n+\tSIGVTALRM = syscall.Signal(0x1a)\n+\tSIGWINCH  = syscall.Signal(0x1c)\n+\tSIGXCPU   = syscall.Signal(0x18)\n+\tSIGXFSZ   = syscall.Signal(0x19)\n+)\n+\n+// Error table\n+var errorList = [...]struct {\n+\tnum  syscall.Errno\n+\tname string\n+\tdesc string\n+}{\n+\t{1, \"EPERM\", \"operation not permitted\"},\n+\t{2, \"ENOENT\", \"no such file or directory\"},\n+\t{3, \"ESRCH\", \"no such process\"},\n+\t{4, \"EINTR\", \"interrupted system call\"},\n+\t{5, \"EIO\", \"input/output error\"},\n+\t{6, \"ENXIO\", \"device not configured\"},\n+\t{7, \"E2BIG\", \"argument list too long\"},\n+\t{8, \"ENOEXEC\", \"exec format error\"},\n+\t{9, \"EBADF\", \"bad file descriptor\"},\n+\t{10, \"ECHILD\", \"no child processes\"},\n+\t{11, \"EDEADLK\", \"resource deadlock avoided\"},\n+\t{12, \"ENOMEM\", \"cannot allocate memory\"},\n+\t{13, \"EACCES\", \"permission denied\"},\n+\t{14, \"EFAULT\", \"bad address\"},\n+\t{15, \"ENOTBLK\", \"block device required\"},\n+\t{16, \"EBUSY\", \"device busy\"},\n+\t{17, \"EEXIST\", \"file exists\"},\n+\t{18, \"EXDEV\", \"cross-device link\"},\n+\t{19, \"ENODEV\", \"operation not supported by device\"},\n+\t{20, \"ENOTDIR\", \"not a directory\"},\n+\t{21, \"EISDIR\", \"is a directory\"},\n+\t{22, \"EINVAL\", \"invalid argument\"},\n+\t{23, \"ENFILE\", \"too many open files in system\"},\n+\t{24, \"EMFILE\", \"too many open files\"},\n+\t{25, \"ENOTTY\", \"inappropriate ioctl for device\"},\n+\t{26, \"ETXTBSY\", \"text file busy\"},\n+\t{27, \"EFBIG\", \"file too large\"},\n+\t{28, \"ENOSPC\", \"no space left on device\"},\n+\t{29, \"ESPIPE\", \"illegal seek\"},\n+\t{30, \"EROFS\", \"read-only file system\"},\n+\t{31, \"EMLINK\", \"too many links\"},\n+\t{32, \"EPIPE\", \"broken pipe\"},\n+\t{33, \"EDOM\", \"numerical argument out of domain\"},\n+\t{34, \"ERANGE\", \"result too large\"},\n+\t{35, \"EAGAIN\", \"resource temporarily unavailable\"},\n+\t{36, \"EINPROGRESS\", \"operation now in progress\"},\n+\t{37, \"EALREADY\", \"operation already in progress\"},\n+\t{38, \"ENOTSOCK\", \"socket operation on non-socket\"},\n+\t{39, \"EDESTADDRREQ\", \"destination address required\"},\n+\t{40, \"EMSGSIZE\", \"message too long\"},\n+\t{41, \"EPROTOTYPE\", \"protocol wrong type for socket\"},\n+\t{42, \"ENOPROTOOPT\", \"protocol not available\"},\n+\t{43, \"EPROTONOSUPPORT\", \"protocol not supported\"},\n+\t{44, \"ESOCKTNOSUPPORT\", \"socket type not supported\"},\n+\t{45, \"EOPNOTSUPP\", \"operation not supported\"},\n+\t{46, \"EPFNOSUPPORT\", \"protocol family not supported\"},\n+\t{47, \"EAFNOSUPPORT\", \"address family not supported by protocol family\"},\n+\t{48, \"EADDRINUSE\", \"address already in use\"},\n+\t{49, \"EADDRNOTAVAIL\", \"can't assign requested address\"},\n+\t{50, \"ENETDOWN\", \"network is down\"},\n+\t{51, \"ENETUNREACH\", \"network is unreachable\"},\n+\t{52, \"ENETRESET\", \"network dropped connection on reset\"},\n+\t{53, \"ECONNABORTED\", \"software caused connection abort\"},\n+\t{54, \"ECONNRESET\", \"connection reset by peer\"},\n+\t{55, \"ENOBUFS\", \"no buffer space available\"},\n+\t{56, \"EISCONN\", \"socket is already connected\"},\n+\t{57, \"ENOTCONN\", \"socket is not connected\"},\n+\t{58, \"ESHUTDOWN\", \"can't send after socket shutdown\"},\n+\t{59, \"ETOOMANYREFS\", \"too many references: can't splice\"},\n+\t{60, \"ETIMEDOUT\", \"operation timed out\"},\n+\t{61, \"ECONNREFUSED\", \"connection refused\"},\n+\t{62, \"ELOOP\", \"too many levels of symbolic links\"},\n+\t{63, \"ENAMETOOLONG\", \"file name too long\"},\n+\t{64, \"EHOSTDOWN\", \"host is down\"},\n+\t{65, \"EHOSTUNREACH\", \"no route to host\"},\n+\t{66, \"ENOTEMPTY\", \"directory not empty\"},\n+\t{67, \"EPROCLIM\", \"too many processes\"},\n+\t{68, \"EUSERS\", \"too many users\"},\n+\t{69, \"EDQUOT\", \"disk quota exceeded\"},\n+\t{70, \"ESTALE\", \"stale NFS file handle\"},\n+\t{71, \"EREMOTE\", \"too many levels of remote in path\"},\n+\t{72, \"EBADRPC\", \"RPC struct is bad\"},\n+\t{73, \"ERPCMISMATCH\", \"RPC version wrong\"},\n+\t{74, \"EPROGUNAVAIL\", \"RPC program not available\"},\n+\t{75, \"EPROGMISMATCH\", \"program version wrong\"},\n+\t{76, \"EPROCUNAVAIL\", \"bad procedure for program\"},\n+\t{77, \"ENOLCK\", \"no locks available\"},\n+\t{78, \"ENOSYS\", \"function not implemented\"},\n+\t{79, \"EFTYPE\", \"inappropriate file type or format\"},\n+\t{80, \"EAUTH\", \"authentication error\"},\n+\t{81, \"ENEEDAUTH\", \"need authenticator\"},\n+\t{82, \"EIPSEC\", \"IPsec processing failure\"},\n+\t{83, \"ENOATTR\", \"attribute not found\"},\n+\t{84, \"EILSEQ\", \"illegal byte sequence\"},\n+\t{85, \"ENOMEDIUM\", \"no medium found\"},\n+\t{86, \"EMEDIUMTYPE\", \"wrong medium type\"},\n+\t{87, \"EOVERFLOW\", \"value too large to be stored in data type\"},\n+\t{88, \"ECANCELED\", \"operation canceled\"},\n+\t{89, \"EIDRM\", \"identifier removed\"},\n+\t{90, \"ENOMSG\", \"no message of desired type\"},\n+\t{91, \"ENOTSUP\", \"not supported\"},\n+\t{92, \"EBADMSG\", \"bad message\"},\n+\t{93, \"ENOTRECOVERABLE\", \"state not recoverable\"},\n+\t{94, \"EOWNERDEAD\", \"previous owner died\"},\n+\t{95, \"ELAST\", \"protocol error\"},\n+}\n+\n+// Signal table\n+var signalList = [...]struct {\n+\tnum  syscall.Signal\n+\tname string\n+\tdesc string\n+}{\n+\t{1, \"SIGHUP\", \"hangup\"},\n+\t{2, \"SIGINT\", \"interrupt\"},\n+\t{3, \"SIGQUIT\", \"quit\"},\n+\t{4, \"SIGILL\", \"illegal instruction\"},\n+\t{5, \"SIGTRAP\", \"trace/BPT trap\"},\n+\t{6, \"SIGABRT\", \"abort trap\"},\n+\t{7, \"SIGEMT\", \"EMT trap\"},\n+\t{8, \"SIGFPE\", \"floating point exception\"},\n+\t{9, \"SIGKILL\", \"killed\"},\n+\t{10, \"SIGBUS\", \"bus error\"},\n+\t{11, \"SIGSEGV\", \"segmentation fault\"},\n+\t{12, \"SIGSYS\", \"bad system call\"},\n+\t{13, \"SIGPIPE\", \"broken pipe\"},\n+\t{14, \"SIGALRM\", \"alarm clock\"},\n+\t{15, \"SIGTERM\", \"terminated\"},\n+\t{16, \"SIGURG\", \"urgent I/O condition\"},\n+\t{17, \"SIGSTOP\", \"suspended (signal)\"},\n+\t{18, \"SIGTSTP\", \"suspended\"},\n+\t{19, \"SIGCONT\", \"continued\"},\n+\t{20, \"SIGCHLD\", \"child exited\"},\n+\t{21, \"SIGTTIN\", \"stopped (tty input)\"},\n+\t{22, \"SIGTTOU\", \"stopped (tty output)\"},\n+\t{23, \"SIGIO\", \"I/O possible\"},\n+\t{24, \"SIGXCPU\", \"cputime limit exceeded\"},\n+\t{25, \"SIGXFSZ\", \"filesize limit exceeded\"},\n+\t{26, \"SIGVTALRM\", \"virtual timer expired\"},\n+\t{27, \"SIGPROF\", \"profiling timer expired\"},\n+\t{28, \"SIGWINCH\", \"window size changes\"},\n+\t{29, \"SIGINFO\", \"information request\"},\n+\t{30, \"SIGUSR1\", \"user defined signal 1\"},\n+\t{31, \"SIGUSR2\", \"user defined signal 2\"},\n+\t{32, \"SIGTHR\", \"thread AST\"},\n+}"
    },
    {
      "sha": "4a9e99a0e123fad5719448e00288e6a1411c6ebf",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go",
      "status": "modified",
      "additions": 38,
      "deletions": 4,
      "changes": 42,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -83,6 +83,8 @@ int lstat(uintptr_t, uintptr_t);\n int pause();\n int pread64(int, uintptr_t, size_t, long long);\n int pwrite64(int, uintptr_t, size_t, long long);\n+#define c_select select\n+int select(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t);\n int pselect(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);\n int setregid(int, int);\n int setreuid(int, int);\n@@ -103,8 +105,8 @@ int getpeername(int, uintptr_t, uintptr_t);\n int getsockname(int, uintptr_t, uintptr_t);\n int recvfrom(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);\n int sendto(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);\n-int recvmsg(int, uintptr_t, int);\n-int sendmsg(int, uintptr_t, int);\n+int nrecvmsg(int, uintptr_t, int);\n+int nsendmsg(int, uintptr_t, int);\n int munmap(uintptr_t, uintptr_t);\n int madvise(uintptr_t, size_t, int);\n int mprotect(uintptr_t, size_t, int);\n@@ -118,6 +120,8 @@ int poll(uintptr_t, int, int);\n int gettimeofday(uintptr_t, uintptr_t);\n int time(uintptr_t);\n int utime(uintptr_t, uintptr_t);\n+unsigned long long getsystemcfg(int);\n+int umount(uintptr_t);\n int getrlimit64(int, uintptr_t);\n int setrlimit64(int, uintptr_t);\n long long lseek64(int, long long, int);\n@@ -1004,6 +1008,17 @@ func Pwrite(fd int, p []byte, offset int64) (n int, err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {\n+\tr0, er := C.c_select(C.int(nfd), C.uintptr_t(uintptr(unsafe.Pointer(r))), C.uintptr_t(uintptr(unsafe.Pointer(w))), C.uintptr_t(uintptr(unsafe.Pointer(e))), C.uintptr_t(uintptr(unsafe.Pointer(timeout))))\n+\tn = int(r0)\n+\tif r0 == -1 && er != nil {\n+\t\terr = er\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Pselect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timespec, sigmask *Sigset_t) (n int, err error) {\n \tr0, er := C.pselect(C.int(nfd), C.uintptr_t(uintptr(unsafe.Pointer(r))), C.uintptr_t(uintptr(unsafe.Pointer(w))), C.uintptr_t(uintptr(unsafe.Pointer(e))), C.uintptr_t(uintptr(unsafe.Pointer(timeout))), C.uintptr_t(uintptr(unsafe.Pointer(sigmask))))\n \tn = int(r0)\n@@ -1225,7 +1240,7 @@ func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (\n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n-\tr0, er := C.recvmsg(C.int(s), C.uintptr_t(uintptr(unsafe.Pointer(msg))), C.int(flags))\n+\tr0, er := C.nrecvmsg(C.int(s), C.uintptr_t(uintptr(unsafe.Pointer(msg))), C.int(flags))\n \tn = int(r0)\n \tif r0 == -1 && er != nil {\n \t\terr = er\n@@ -1236,7 +1251,7 @@ func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n-\tr0, er := C.sendmsg(C.int(s), C.uintptr_t(uintptr(unsafe.Pointer(msg))), C.int(flags))\n+\tr0, er := C.nsendmsg(C.int(s), C.uintptr_t(uintptr(unsafe.Pointer(msg))), C.int(flags))\n \tn = int(r0)\n \tif r0 == -1 && er != nil {\n \t\terr = er\n@@ -1409,6 +1424,25 @@ func Utime(path string, buf *Utimbuf) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func Getsystemcfg(label int) (n uint64) {\n+\tr0, _ := C.getsystemcfg(C.int(label))\n+\tn = uint64(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func umount(target string) (err error) {\n+\t_p0 := uintptr(unsafe.Pointer(C.CString(target)))\n+\tr0, er := C.umount(C.uintptr_t(_p0))\n+\tif r0 == -1 && er != nil {\n+\t\terr = er\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Getrlimit(resource int, rlim *Rlimit) (err error) {\n \tr0, er := C.getrlimit64(C.int(resource), C.uintptr_t(uintptr(unsafe.Pointer(rlim))))\n \tif r0 == -1 && er != nil {"
    },
    {
      "sha": "c3371ddc2fff488a3b725903a59ecc4d0709a8e7",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go",
      "status": "modified",
      "additions": 36,
      "deletions": 2,
      "changes": 38,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -960,6 +960,17 @@ func Pwrite(fd int, p []byte, offset int64) (n int, err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func Select(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (n int, err error) {\n+\tr0, e1 := callselect(nfd, uintptr(unsafe.Pointer(r)), uintptr(unsafe.Pointer(w)), uintptr(unsafe.Pointer(e)), uintptr(unsafe.Pointer(timeout)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Pselect(nfd int, r *FdSet, w *FdSet, e *FdSet, timeout *Timespec, sigmask *Sigset_t) (n int, err error) {\n \tr0, e1 := callpselect(nfd, uintptr(unsafe.Pointer(r)), uintptr(unsafe.Pointer(w)), uintptr(unsafe.Pointer(e)), uintptr(unsafe.Pointer(timeout)), uintptr(unsafe.Pointer(sigmask)))\n \tn = int(r0)\n@@ -1189,7 +1200,7 @@ func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (\n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n-\tr0, e1 := callrecvmsg(s, uintptr(unsafe.Pointer(msg)), flags)\n+\tr0, e1 := callnrecvmsg(s, uintptr(unsafe.Pointer(msg)), flags)\n \tn = int(r0)\n \tif e1 != 0 {\n \t\terr = errnoErr(e1)\n@@ -1200,7 +1211,7 @@ func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n-\tr0, e1 := callsendmsg(s, uintptr(unsafe.Pointer(msg)), flags)\n+\tr0, e1 := callnsendmsg(s, uintptr(unsafe.Pointer(msg)), flags)\n \tn = int(r0)\n \tif e1 != 0 {\n \t\terr = errnoErr(e1)\n@@ -1367,6 +1378,29 @@ func Utime(path string, buf *Utimbuf) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func Getsystemcfg(label int) (n uint64) {\n+\tr0, _ := callgetsystemcfg(label)\n+\tn = uint64(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func umount(target string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(target)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, e1 := callumount(uintptr(unsafe.Pointer(_p0)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Getrlimit(resource int, rlim *Rlimit) (err error) {\n \t_, e1 := callgetrlimit(resource, uintptr(unsafe.Pointer(rlim)))\n \tif e1 != 0 {"
    },
    {
      "sha": "4eda723234702271f99ff38987c6bbe53944ef81",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go",
      "status": "modified",
      "additions": 40,
      "deletions": 10,
      "changes": 50,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gc.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -85,6 +85,7 @@ import (\n //go:cgo_import_dynamic libc_pause pause \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_pread64 pread64 \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_pwrite64 pwrite64 \"libc.a/shr_64.o\"\n+//go:cgo_import_dynamic libc_select select \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_pselect pselect \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_setregid setregid \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_setreuid setreuid \"libc.a/shr_64.o\"\n@@ -105,8 +106,8 @@ import (\n //go:cgo_import_dynamic libc_getsockname getsockname \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_recvfrom recvfrom \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_sendto sendto \"libc.a/shr_64.o\"\n-//go:cgo_import_dynamic libc_recvmsg recvmsg \"libc.a/shr_64.o\"\n-//go:cgo_import_dynamic libc_sendmsg sendmsg \"libc.a/shr_64.o\"\n+//go:cgo_import_dynamic libc_nrecvmsg nrecvmsg \"libc.a/shr_64.o\"\n+//go:cgo_import_dynamic libc_nsendmsg nsendmsg \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_munmap munmap \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_madvise madvise \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_mprotect mprotect \"libc.a/shr_64.o\"\n@@ -120,6 +121,8 @@ import (\n //go:cgo_import_dynamic libc_gettimeofday gettimeofday \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_time time \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_utime utime \"libc.a/shr_64.o\"\n+//go:cgo_import_dynamic libc_getsystemcfg getsystemcfg \"libc.a/shr_64.o\"\n+//go:cgo_import_dynamic libc_umount umount \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_getrlimit getrlimit \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_setrlimit setrlimit \"libc.a/shr_64.o\"\n //go:cgo_import_dynamic libc_lseek lseek \"libc.a/shr_64.o\"\n@@ -200,6 +203,7 @@ import (\n //go:linkname libc_pause libc_pause\n //go:linkname libc_pread64 libc_pread64\n //go:linkname libc_pwrite64 libc_pwrite64\n+//go:linkname libc_select libc_select\n //go:linkname libc_pselect libc_pselect\n //go:linkname libc_setregid libc_setregid\n //go:linkname libc_setreuid libc_setreuid\n@@ -220,8 +224,8 @@ import (\n //go:linkname libc_getsockname libc_getsockname\n //go:linkname libc_recvfrom libc_recvfrom\n //go:linkname libc_sendto libc_sendto\n-//go:linkname libc_recvmsg libc_recvmsg\n-//go:linkname libc_sendmsg libc_sendmsg\n+//go:linkname libc_nrecvmsg libc_nrecvmsg\n+//go:linkname libc_nsendmsg libc_nsendmsg\n //go:linkname libc_munmap libc_munmap\n //go:linkname libc_madvise libc_madvise\n //go:linkname libc_mprotect libc_mprotect\n@@ -235,6 +239,8 @@ import (\n //go:linkname libc_gettimeofday libc_gettimeofday\n //go:linkname libc_time libc_time\n //go:linkname libc_utime libc_utime\n+//go:linkname libc_getsystemcfg libc_getsystemcfg\n+//go:linkname libc_umount libc_umount\n //go:linkname libc_getrlimit libc_getrlimit\n //go:linkname libc_setrlimit libc_setrlimit\n //go:linkname libc_lseek libc_lseek\n@@ -318,6 +324,7 @@ var (\n \tlibc_pause,\n \tlibc_pread64,\n \tlibc_pwrite64,\n+\tlibc_select,\n \tlibc_pselect,\n \tlibc_setregid,\n \tlibc_setreuid,\n@@ -338,8 +345,8 @@ var (\n \tlibc_getsockname,\n \tlibc_recvfrom,\n \tlibc_sendto,\n-\tlibc_recvmsg,\n-\tlibc_sendmsg,\n+\tlibc_nrecvmsg,\n+\tlibc_nsendmsg,\n \tlibc_munmap,\n \tlibc_madvise,\n \tlibc_mprotect,\n@@ -353,6 +360,8 @@ var (\n \tlibc_gettimeofday,\n \tlibc_time,\n \tlibc_utime,\n+\tlibc_getsystemcfg,\n+\tlibc_umount,\n \tlibc_getrlimit,\n \tlibc_setrlimit,\n \tlibc_lseek,\n@@ -890,6 +899,13 @@ func callpwrite64(fd int, _p0 uintptr, _lenp0 int, offset int64) (r1 uintptr, e1\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callselect(nfd int, r uintptr, w uintptr, e uintptr, timeout uintptr) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_select)), 5, uintptr(nfd), r, w, e, timeout, 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callpselect(nfd int, r uintptr, w uintptr, e uintptr, timeout uintptr, sigmask uintptr) (r1 uintptr, e1 Errno) {\n \tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_pselect)), 6, uintptr(nfd), r, w, e, timeout, sigmask)\n \treturn\n@@ -1030,15 +1046,15 @@ func callsendto(s int, _p0 uintptr, _lenp0 int, flags int, to uintptr, addrlen u\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n-func callrecvmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n-\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_recvmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)\n+func callnrecvmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_nrecvmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)\n \treturn\n }\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n-func callsendmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n-\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_sendmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)\n+func callnsendmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_nsendmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)\n \treturn\n }\n \n@@ -1135,6 +1151,20 @@ func callutime(_p0 uintptr, buf uintptr) (r1 uintptr, e1 Errno) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callgetsystemcfg(label int) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_getsystemcfg)), 1, uintptr(label), 0, 0, 0, 0, 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func callumount(_p0 uintptr) (r1 uintptr, e1 Errno) {\n+\tr1, _, e1 = syscall6(uintptr(unsafe.Pointer(&libc_umount)), 1, _p0, 0, 0, 0, 0, 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callgetrlimit(resource int, rlim uintptr) (r1 uintptr, e1 Errno) {\n \tr1, _, e1 = rawSyscall6(uintptr(unsafe.Pointer(&libc_getrlimit)), 2, uintptr(resource), rlim, 0, 0, 0, 0)\n \treturn"
    },
    {
      "sha": "e5c4cbdd6c97fc2b0814b6da9824dba7cef5e023",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go",
      "status": "modified",
      "additions": 34,
      "deletions": 6,
      "changes": 40,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_aix_ppc64_gccgo.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -83,6 +83,8 @@ int lstat(uintptr_t, uintptr_t);\n int pause();\n int pread64(int, uintptr_t, size_t, long long);\n int pwrite64(int, uintptr_t, size_t, long long);\n+#define c_select select\n+int select(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t);\n int pselect(int, uintptr_t, uintptr_t, uintptr_t, uintptr_t, uintptr_t);\n int setregid(int, int);\n int setreuid(int, int);\n@@ -103,8 +105,8 @@ int getpeername(int, uintptr_t, uintptr_t);\n int getsockname(int, uintptr_t, uintptr_t);\n int recvfrom(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);\n int sendto(int, uintptr_t, size_t, int, uintptr_t, uintptr_t);\n-int recvmsg(int, uintptr_t, int);\n-int sendmsg(int, uintptr_t, int);\n+int nrecvmsg(int, uintptr_t, int);\n+int nsendmsg(int, uintptr_t, int);\n int munmap(uintptr_t, uintptr_t);\n int madvise(uintptr_t, size_t, int);\n int mprotect(uintptr_t, size_t, int);\n@@ -118,6 +120,8 @@ int poll(uintptr_t, int, int);\n int gettimeofday(uintptr_t, uintptr_t);\n int time(uintptr_t);\n int utime(uintptr_t, uintptr_t);\n+unsigned long long getsystemcfg(int);\n+int umount(uintptr_t);\n int getrlimit(int, uintptr_t);\n int setrlimit(int, uintptr_t);\n long long lseek(int, long long, int);\n@@ -731,6 +735,14 @@ func callpwrite64(fd int, _p0 uintptr, _lenp0 int, offset int64) (r1 uintptr, e1\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callselect(nfd int, r uintptr, w uintptr, e uintptr, timeout uintptr) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.c_select(C.int(nfd), C.uintptr_t(r), C.uintptr_t(w), C.uintptr_t(e), C.uintptr_t(timeout)))\n+\te1 = syscall.GetErrno()\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callpselect(nfd int, r uintptr, w uintptr, e uintptr, timeout uintptr, sigmask uintptr) (r1 uintptr, e1 Errno) {\n \tr1 = uintptr(C.pselect(C.int(nfd), C.uintptr_t(r), C.uintptr_t(w), C.uintptr_t(e), C.uintptr_t(timeout), C.uintptr_t(sigmask)))\n \te1 = syscall.GetErrno()\n@@ -891,16 +903,16 @@ func callsendto(s int, _p0 uintptr, _lenp0 int, flags int, to uintptr, addrlen u\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n-func callrecvmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n-\tr1 = uintptr(C.recvmsg(C.int(s), C.uintptr_t(msg), C.int(flags)))\n+func callnrecvmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.nrecvmsg(C.int(s), C.uintptr_t(msg), C.int(flags)))\n \te1 = syscall.GetErrno()\n \treturn\n }\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n-func callsendmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n-\tr1 = uintptr(C.sendmsg(C.int(s), C.uintptr_t(msg), C.int(flags)))\n+func callnsendmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.nsendmsg(C.int(s), C.uintptr_t(msg), C.int(flags)))\n \te1 = syscall.GetErrno()\n \treturn\n }\n@@ -1011,6 +1023,22 @@ func callutime(_p0 uintptr, buf uintptr) (r1 uintptr, e1 Errno) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func callgetsystemcfg(label int) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.getsystemcfg(C.int(label)))\n+\te1 = syscall.GetErrno()\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func callumount(_p0 uintptr) (r1 uintptr, e1 Errno) {\n+\tr1 = uintptr(C.umount(C.uintptr_t(_p0)))\n+\te1 = syscall.GetErrno()\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func callgetrlimit(resource int, rlim uintptr) (r1 uintptr, e1 Errno) {\n \tr1 = uintptr(C.getrlimit(C.int(resource), C.uintptr_t(rlim)))\n \te1 = syscall.GetErrno()"
    },
    {
      "sha": "feb3c03933cb5a820ac4602f719fb4cba96a1b43",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(mask>>32), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func pipe(p *[2]_C_int) (err error) {\n \t_, _, e1 := RawSyscall(SYS_PIPE, uintptr(unsafe.Pointer(p)), 0, 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "fa0cb252a915daaebfd753e9a808da7b2e06dc71",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "daec1d5d2c812f86a40f11d5c1b7d5849e8e1f03",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go",
      "status": "modified",
      "additions": 57,
      "deletions": 0,
      "changes": 57,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(mask>>32), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,42 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func pipe(p *[2]_C_int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_PIPE, uintptr(unsafe.Pointer(p)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func pipe2(p *[2]_C_int, flags int) (err error) {\n \t_, _, e1 := RawSyscall(SYS_PIPE2, uintptr(unsafe.Pointer(p)), uintptr(flags), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "ad9820b598ed04eb346431330cba559d4735a1b6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go",
      "status": "modified",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(events) > 0 {\n@@ -2206,3 +2253,18 @@ func pipe2(p *[2]_C_int, flags int) (err error) {\n \t}\n \treturn\n }\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func kexecFileLoad(kernelFd int, initrdFd int, cmdlineLen int, cmdline string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(cmdline)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_KEXEC_FILE_LOAD, uintptr(kernelFd), uintptr(initrdFd), uintptr(cmdlineLen), uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}"
    },
    {
      "sha": "c82ce7d299403150894a15aaca08ffbd853fd524",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask>>32), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "d1b77c193497ff576543ba7f905ad2318d793fd9",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "b8e45f98c7c512a70f1d897635e3fb33675567fe",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mips64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "e26c748d4e080190ffe4645555750afcba1d4fbf",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_mipsle.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(mask>>32), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "0a958ca0b3685ae70f75be83d3ff85f93116b6e8",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "658f361e7738bb11c9e8391db6adad41899b5277",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_ppc64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "daff300399a3dd8ac2a5fcc9591ca33314937f3d",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go",
      "status": "modified",
      "additions": 62,
      "deletions": 0,
      "changes": 62,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_riscv64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(events) > 0 {\n@@ -2186,3 +2233,18 @@ func pipe2(p *[2]_C_int, flags int) (err error) {\n \t}\n \treturn\n }\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func kexecFileLoad(kernelFd int, initrdFd int, cmdlineLen int, cmdline string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(cmdline)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_KEXEC_FILE_LOAD, uintptr(kernelFd), uintptr(initrdFd), uintptr(cmdlineLen), uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}"
    },
    {
      "sha": "caf6ea866352d91ac084742be3d2d6ae4382f9dc",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_s390x.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func Dup2(oldfd int, newfd int) (err error) {\n \t_, _, e1 := Syscall(SYS_DUP2, uintptr(oldfd), uintptr(newfd), 0)\n \tif e1 != 0 {"
    },
    {
      "sha": "369a04b57db4d8be69aab935780716c5f6fbe0e6",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go",
      "status": "modified",
      "additions": 47,
      "deletions": 0,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_linux_sparc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -14,6 +14,27 @@ var _ syscall.Errno\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func FanotifyInit(flags uint, event_f_flags uint) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FANOTIFY_INIT, uintptr(flags), uintptr(event_f_flags), 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fanotifyMark(fd int, flags uint, mask uint64, dirFd int, pathname *byte) (err error) {\n+\t_, _, e1 := Syscall6(SYS_FANOTIFY_MARK, uintptr(fd), uintptr(flags), uintptr(mask), uintptr(dirFd), uintptr(unsafe.Pointer(pathname)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func fchmodat(dirfd int, path string, mode uint32) (err error) {\n \tvar _p0 *byte\n \t_p0, err = BytePtrFromString(path)\n@@ -1658,6 +1679,32 @@ func faccessat(dirfd int, path string, mode uint32) (err error) {\n \n // THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n \n+func nameToHandleAt(dirFD int, pathname string, fh *fileHandle, mountID *_C_int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(pathname)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_NAME_TO_HANDLE_AT, uintptr(dirFD), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(fh)), uintptr(unsafe.Pointer(mountID)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func openByHandleAt(mountFD int, fh *fileHandle, flags int) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_OPEN_BY_HANDLE_AT, uintptr(mountFD), uintptr(unsafe.Pointer(fh)), uintptr(flags))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n func EpollWait(epfd int, events []EpollEvent, msec int) (n int, err error) {\n \tvar _p0 unsafe.Pointer\n \tif len(events) > 0 {"
    },
    {
      "sha": "eb589904614b2c0c29f7a017aeee320b21aab607",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go",
      "status": "added",
      "additions": 1692,
      "deletions": 0,
      "changes": 1692,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsyscall_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,1692 @@\n+// go run mksyscall.go -openbsd -tags openbsd,arm64 syscall_bsd.go syscall_openbsd.go syscall_openbsd_arm64.go\n+// Code generated by the command above; see README.md. DO NOT EDIT.\n+\n+// +build openbsd,arm64\n+\n+package unix\n+\n+import (\n+\t\"syscall\"\n+\t\"unsafe\"\n+)\n+\n+var _ syscall.Errno\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func getgroups(ngid int, gid *_Gid_t) (n int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_GETGROUPS, uintptr(ngid), uintptr(unsafe.Pointer(gid)), 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func setgroups(ngid int, gid *_Gid_t) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETGROUPS, uintptr(ngid), uintptr(unsafe.Pointer(gid)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func wait4(pid int, wstatus *_C_int, options int, rusage *Rusage) (wpid int, err error) {\n+\tr0, _, e1 := Syscall6(SYS_WAIT4, uintptr(pid), uintptr(unsafe.Pointer(wstatus)), uintptr(options), uintptr(unsafe.Pointer(rusage)), 0, 0)\n+\twpid = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func accept(s int, rsa *RawSockaddrAny, addrlen *_Socklen) (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_ACCEPT, uintptr(s), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func bind(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {\n+\t_, _, e1 := Syscall(SYS_BIND, uintptr(s), uintptr(addr), uintptr(addrlen))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func connect(s int, addr unsafe.Pointer, addrlen _Socklen) (err error) {\n+\t_, _, e1 := Syscall(SYS_CONNECT, uintptr(s), uintptr(addr), uintptr(addrlen))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func socket(domain int, typ int, proto int) (fd int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_SOCKET, uintptr(domain), uintptr(typ), uintptr(proto))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func getsockopt(s int, level int, name int, val unsafe.Pointer, vallen *_Socklen) (err error) {\n+\t_, _, e1 := Syscall6(SYS_GETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(unsafe.Pointer(vallen)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func setsockopt(s int, level int, name int, val unsafe.Pointer, vallen uintptr) (err error) {\n+\t_, _, e1 := Syscall6(SYS_SETSOCKOPT, uintptr(s), uintptr(level), uintptr(name), uintptr(val), uintptr(vallen), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func getpeername(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_GETPEERNAME, uintptr(fd), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func getsockname(fd int, rsa *RawSockaddrAny, addrlen *_Socklen) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_GETSOCKNAME, uintptr(fd), uintptr(unsafe.Pointer(rsa)), uintptr(unsafe.Pointer(addrlen)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Shutdown(s int, how int) (err error) {\n+\t_, _, e1 := Syscall(SYS_SHUTDOWN, uintptr(s), uintptr(how), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func socketpair(domain int, typ int, proto int, fd *[2]int32) (err error) {\n+\t_, _, e1 := RawSyscall6(SYS_SOCKETPAIR, uintptr(domain), uintptr(typ), uintptr(proto), uintptr(unsafe.Pointer(fd)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func recvfrom(fd int, p []byte, flags int, from *RawSockaddrAny, fromlen *_Socklen) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(p) > 0 {\n+\t\t_p0 = unsafe.Pointer(&p[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall6(SYS_RECVFROM, uintptr(fd), uintptr(_p0), uintptr(len(p)), uintptr(flags), uintptr(unsafe.Pointer(from)), uintptr(unsafe.Pointer(fromlen)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func sendto(s int, buf []byte, flags int, to unsafe.Pointer, addrlen _Socklen) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p0 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall6(SYS_SENDTO, uintptr(s), uintptr(_p0), uintptr(len(buf)), uintptr(flags), uintptr(to), uintptr(addrlen))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func recvmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n+\tr0, _, e1 := Syscall(SYS_RECVMSG, uintptr(s), uintptr(unsafe.Pointer(msg)), uintptr(flags))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func sendmsg(s int, msg *Msghdr, flags int) (n int, err error) {\n+\tr0, _, e1 := Syscall(SYS_SENDMSG, uintptr(s), uintptr(unsafe.Pointer(msg)), uintptr(flags))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func kevent(kq int, change unsafe.Pointer, nchange int, event unsafe.Pointer, nevent int, timeout *Timespec) (n int, err error) {\n+\tr0, _, e1 := Syscall6(SYS_KEVENT, uintptr(kq), uintptr(change), uintptr(nchange), uintptr(event), uintptr(nevent), uintptr(unsafe.Pointer(timeout)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func sysctl(mib []_C_int, old *byte, oldlen *uintptr, new *byte, newlen uintptr) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(mib) > 0 {\n+\t\t_p0 = unsafe.Pointer(&mib[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall6(SYS___SYSCTL, uintptr(_p0), uintptr(len(mib)), uintptr(unsafe.Pointer(old)), uintptr(unsafe.Pointer(oldlen)), uintptr(unsafe.Pointer(new)), uintptr(newlen))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func utimes(path string, timeval *[2]Timeval) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_UTIMES, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(timeval)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func futimes(fd int, timeval *[2]Timeval) (err error) {\n+\t_, _, e1 := Syscall(SYS_FUTIMES, uintptr(fd), uintptr(unsafe.Pointer(timeval)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func fcntl(fd int, cmd int, arg int) (val int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FCNTL, uintptr(fd), uintptr(cmd), uintptr(arg))\n+\tval = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func poll(fds *PollFd, nfds int, timeout int) (n int, err error) {\n+\tr0, _, e1 := Syscall(SYS_POLL, uintptr(unsafe.Pointer(fds)), uintptr(nfds), uintptr(timeout))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Madvise(b []byte, behav int) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(b) > 0 {\n+\t\t_p0 = unsafe.Pointer(&b[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall(SYS_MADVISE, uintptr(_p0), uintptr(len(b)), uintptr(behav))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mlock(b []byte) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(b) > 0 {\n+\t\t_p0 = unsafe.Pointer(&b[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall(SYS_MLOCK, uintptr(_p0), uintptr(len(b)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mlockall(flags int) (err error) {\n+\t_, _, e1 := Syscall(SYS_MLOCKALL, uintptr(flags), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mprotect(b []byte, prot int) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(b) > 0 {\n+\t\t_p0 = unsafe.Pointer(&b[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall(SYS_MPROTECT, uintptr(_p0), uintptr(len(b)), uintptr(prot))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Msync(b []byte, flags int) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(b) > 0 {\n+\t\t_p0 = unsafe.Pointer(&b[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall(SYS_MSYNC, uintptr(_p0), uintptr(len(b)), uintptr(flags))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Munlock(b []byte) (err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(b) > 0 {\n+\t\t_p0 = unsafe.Pointer(&b[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\t_, _, e1 := Syscall(SYS_MUNLOCK, uintptr(_p0), uintptr(len(b)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Munlockall() (err error) {\n+\t_, _, e1 := Syscall(SYS_MUNLOCKALL, 0, 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func pipe(p *[2]_C_int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_PIPE, uintptr(unsafe.Pointer(p)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func getdents(fd int, buf []byte) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p0 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall(SYS_GETDENTS, uintptr(fd), uintptr(_p0), uintptr(len(buf)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getcwd(buf []byte) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p0 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall(SYS___GETCWD, uintptr(_p0), uintptr(len(buf)), 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func ioctl(fd int, req uint, arg uintptr) (err error) {\n+\t_, _, e1 := Syscall(SYS_IOCTL, uintptr(fd), uintptr(req), uintptr(arg))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func ppoll(fds *PollFd, nfds int, timeout *Timespec, sigmask *Sigset_t) (n int, err error) {\n+\tr0, _, e1 := Syscall6(SYS_PPOLL, uintptr(unsafe.Pointer(fds)), uintptr(nfds), uintptr(unsafe.Pointer(timeout)), uintptr(unsafe.Pointer(sigmask)), 0, 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Access(path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_ACCESS, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Adjtime(delta *Timeval, olddelta *Timeval) (err error) {\n+\t_, _, e1 := Syscall(SYS_ADJTIME, uintptr(unsafe.Pointer(delta)), uintptr(unsafe.Pointer(olddelta)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Chdir(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_CHDIR, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Chflags(path string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_CHFLAGS, uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Chmod(path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_CHMOD, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Chown(path string, uid int, gid int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_CHOWN, uintptr(unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Chroot(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_CHROOT, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Close(fd int) (err error) {\n+\t_, _, e1 := Syscall(SYS_CLOSE, uintptr(fd), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Dup(fd int) (nfd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_DUP, uintptr(fd), 0, 0)\n+\tnfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Dup2(from int, to int) (err error) {\n+\t_, _, e1 := Syscall(SYS_DUP2, uintptr(from), uintptr(to), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Exit(code int) {\n+\tSyscall(SYS_EXIT, uintptr(code), 0, 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Faccessat(dirfd int, path string, mode uint32, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_FACCESSAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(flags), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchdir(fd int) (err error) {\n+\t_, _, e1 := Syscall(SYS_FCHDIR, uintptr(fd), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchflags(fd int, flags int) (err error) {\n+\t_, _, e1 := Syscall(SYS_FCHFLAGS, uintptr(fd), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchmod(fd int, mode uint32) (err error) {\n+\t_, _, e1 := Syscall(SYS_FCHMOD, uintptr(fd), uintptr(mode), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchmodat(dirfd int, path string, mode uint32, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_FCHMODAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(flags), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchown(fd int, uid int, gid int) (err error) {\n+\t_, _, e1 := Syscall(SYS_FCHOWN, uintptr(fd), uintptr(uid), uintptr(gid))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fchownat(dirfd int, path string, uid int, gid int, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_FCHOWNAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Flock(fd int, how int) (err error) {\n+\t_, _, e1 := Syscall(SYS_FLOCK, uintptr(fd), uintptr(how), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fpathconf(fd int, name int) (val int, err error) {\n+\tr0, _, e1 := Syscall(SYS_FPATHCONF, uintptr(fd), uintptr(name), 0)\n+\tval = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fstat(fd int, stat *Stat_t) (err error) {\n+\t_, _, e1 := Syscall(SYS_FSTAT, uintptr(fd), uintptr(unsafe.Pointer(stat)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fstatat(fd int, path string, stat *Stat_t, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_FSTATAT, uintptr(fd), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), uintptr(flags), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fstatfs(fd int, stat *Statfs_t) (err error) {\n+\t_, _, e1 := Syscall(SYS_FSTATFS, uintptr(fd), uintptr(unsafe.Pointer(stat)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Fsync(fd int) (err error) {\n+\t_, _, e1 := Syscall(SYS_FSYNC, uintptr(fd), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Ftruncate(fd int, length int64) (err error) {\n+\t_, _, e1 := Syscall(SYS_FTRUNCATE, uintptr(fd), 0, uintptr(length))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getegid() (egid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETEGID, 0, 0, 0)\n+\tegid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Geteuid() (uid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETEUID, 0, 0, 0)\n+\tuid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getgid() (gid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETGID, 0, 0, 0)\n+\tgid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getpgid(pid int) (pgid int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_GETPGID, uintptr(pid), 0, 0)\n+\tpgid = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getpgrp() (pgrp int) {\n+\tr0, _, _ := RawSyscall(SYS_GETPGRP, 0, 0, 0)\n+\tpgrp = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getpid() (pid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETPID, 0, 0, 0)\n+\tpid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getppid() (ppid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETPPID, 0, 0, 0)\n+\tppid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getpriority(which int, who int) (prio int, err error) {\n+\tr0, _, e1 := Syscall(SYS_GETPRIORITY, uintptr(which), uintptr(who), 0)\n+\tprio = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getrlimit(which int, lim *Rlimit) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_GETRLIMIT, uintptr(which), uintptr(unsafe.Pointer(lim)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getrtable() (rtable int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_GETRTABLE, 0, 0, 0)\n+\trtable = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getrusage(who int, rusage *Rusage) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_GETRUSAGE, uintptr(who), uintptr(unsafe.Pointer(rusage)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getsid(pid int) (sid int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_GETSID, uintptr(pid), 0, 0)\n+\tsid = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Gettimeofday(tv *Timeval) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_GETTIMEOFDAY, uintptr(unsafe.Pointer(tv)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Getuid() (uid int) {\n+\tr0, _, _ := RawSyscall(SYS_GETUID, 0, 0, 0)\n+\tuid = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Issetugid() (tainted bool) {\n+\tr0, _, _ := Syscall(SYS_ISSETUGID, 0, 0, 0)\n+\ttainted = bool(r0 != 0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Kill(pid int, signum syscall.Signal) (err error) {\n+\t_, _, e1 := Syscall(SYS_KILL, uintptr(pid), uintptr(signum), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Kqueue() (fd int, err error) {\n+\tr0, _, e1 := Syscall(SYS_KQUEUE, 0, 0, 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Lchown(path string, uid int, gid int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_LCHOWN, uintptr(unsafe.Pointer(_p0)), uintptr(uid), uintptr(gid))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Link(path string, link string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(link)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_LINK, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Linkat(pathfd int, path string, linkfd int, link string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(link)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_LINKAT, uintptr(pathfd), uintptr(unsafe.Pointer(_p0)), uintptr(linkfd), uintptr(unsafe.Pointer(_p1)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Listen(s int, backlog int) (err error) {\n+\t_, _, e1 := Syscall(SYS_LISTEN, uintptr(s), uintptr(backlog), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Lstat(path string, stat *Stat_t) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_LSTAT, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mkdir(path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_MKDIR, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mkdirat(dirfd int, path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_MKDIRAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mkfifo(path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_MKFIFO, uintptr(unsafe.Pointer(_p0)), uintptr(mode), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mkfifoat(dirfd int, path string, mode uint32) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_MKFIFOAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mknod(path string, mode uint32, dev int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_MKNOD, uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Mknodat(dirfd int, path string, mode uint32, dev int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_MKNODAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(dev), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Nanosleep(time *Timespec, leftover *Timespec) (err error) {\n+\t_, _, e1 := Syscall(SYS_NANOSLEEP, uintptr(unsafe.Pointer(time)), uintptr(unsafe.Pointer(leftover)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Open(path string, mode int, perm uint32) (fd int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tr0, _, e1 := Syscall(SYS_OPEN, uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm))\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Openat(dirfd int, path string, mode int, perm uint32) (fd int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tr0, _, e1 := Syscall6(SYS_OPENAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(mode), uintptr(perm), 0, 0)\n+\tfd = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Pathconf(path string, name int) (val int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tr0, _, e1 := Syscall(SYS_PATHCONF, uintptr(unsafe.Pointer(_p0)), uintptr(name), 0)\n+\tval = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Pread(fd int, p []byte, offset int64) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(p) > 0 {\n+\t\t_p0 = unsafe.Pointer(&p[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall6(SYS_PREAD, uintptr(fd), uintptr(_p0), uintptr(len(p)), 0, uintptr(offset), 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Pwrite(fd int, p []byte, offset int64) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(p) > 0 {\n+\t\t_p0 = unsafe.Pointer(&p[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall6(SYS_PWRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)), 0, uintptr(offset), 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func read(fd int, p []byte) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(p) > 0 {\n+\t\t_p0 = unsafe.Pointer(&p[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall(SYS_READ, uintptr(fd), uintptr(_p0), uintptr(len(p)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Readlink(path string, buf []byte) (n int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p1 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p1 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall(SYS_READLINK, uintptr(unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Readlinkat(dirfd int, path string, buf []byte) (n int, err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 unsafe.Pointer\n+\tif len(buf) > 0 {\n+\t\t_p1 = unsafe.Pointer(&buf[0])\n+\t} else {\n+\t\t_p1 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall6(SYS_READLINKAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(_p1), uintptr(len(buf)), 0, 0)\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Rename(from string, to string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(from)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(to)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_RENAME, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Renameat(fromfd int, from string, tofd int, to string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(from)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(to)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_RENAMEAT, uintptr(fromfd), uintptr(unsafe.Pointer(_p0)), uintptr(tofd), uintptr(unsafe.Pointer(_p1)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Revoke(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_REVOKE, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Rmdir(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_RMDIR, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Seek(fd int, offset int64, whence int) (newoffset int64, err error) {\n+\tr0, _, e1 := Syscall6(SYS_LSEEK, uintptr(fd), 0, uintptr(offset), uintptr(whence), 0, 0)\n+\tnewoffset = int64(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Select(n int, r *FdSet, w *FdSet, e *FdSet, timeout *Timeval) (err error) {\n+\t_, _, e1 := Syscall6(SYS_SELECT, uintptr(n), uintptr(unsafe.Pointer(r)), uintptr(unsafe.Pointer(w)), uintptr(unsafe.Pointer(e)), uintptr(unsafe.Pointer(timeout)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setegid(egid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETEGID, uintptr(egid), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Seteuid(euid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETEUID, uintptr(euid), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setgid(gid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETGID, uintptr(gid), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setlogin(name string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(name)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_SETLOGIN, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setpgid(pid int, pgid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETPGID, uintptr(pid), uintptr(pgid), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setpriority(which int, who int, prio int) (err error) {\n+\t_, _, e1 := Syscall(SYS_SETPRIORITY, uintptr(which), uintptr(who), uintptr(prio))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setregid(rgid int, egid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETREGID, uintptr(rgid), uintptr(egid), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setreuid(ruid int, euid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETREUID, uintptr(ruid), uintptr(euid), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setresgid(rgid int, egid int, sgid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETRESGID, uintptr(rgid), uintptr(egid), uintptr(sgid))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setresuid(ruid int, euid int, suid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETRESUID, uintptr(ruid), uintptr(euid), uintptr(suid))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setrlimit(which int, lim *Rlimit) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETRLIMIT, uintptr(which), uintptr(unsafe.Pointer(lim)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setrtable(rtable int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETRTABLE, uintptr(rtable), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setsid() (pid int, err error) {\n+\tr0, _, e1 := RawSyscall(SYS_SETSID, 0, 0, 0)\n+\tpid = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Settimeofday(tp *Timeval) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETTIMEOFDAY, uintptr(unsafe.Pointer(tp)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Setuid(uid int) (err error) {\n+\t_, _, e1 := RawSyscall(SYS_SETUID, uintptr(uid), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Stat(path string, stat *Stat_t) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_STAT, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Statfs(path string, stat *Statfs_t) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_STATFS, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(stat)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Symlink(path string, link string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(link)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_SYMLINK, uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(_p1)), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Symlinkat(oldpath string, newdirfd int, newpath string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(oldpath)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\tvar _p1 *byte\n+\t_p1, err = BytePtrFromString(newpath)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_SYMLINKAT, uintptr(unsafe.Pointer(_p0)), uintptr(newdirfd), uintptr(unsafe.Pointer(_p1)))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Sync() (err error) {\n+\t_, _, e1 := Syscall(SYS_SYNC, 0, 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Truncate(path string, length int64) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_TRUNCATE, uintptr(unsafe.Pointer(_p0)), 0, uintptr(length))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Umask(newmask int) (oldmask int) {\n+\tr0, _, _ := Syscall(SYS_UMASK, uintptr(newmask), 0, 0)\n+\toldmask = int(r0)\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Unlink(path string) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_UNLINK, uintptr(unsafe.Pointer(_p0)), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Unlinkat(dirfd int, path string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_UNLINKAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(flags))\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func Unmount(path string, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall(SYS_UNMOUNT, uintptr(unsafe.Pointer(_p0)), uintptr(flags), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func write(fd int, p []byte) (n int, err error) {\n+\tvar _p0 unsafe.Pointer\n+\tif len(p) > 0 {\n+\t\t_p0 = unsafe.Pointer(&p[0])\n+\t} else {\n+\t\t_p0 = unsafe.Pointer(&_zero)\n+\t}\n+\tr0, _, e1 := Syscall(SYS_WRITE, uintptr(fd), uintptr(_p0), uintptr(len(p)))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func mmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (ret uintptr, err error) {\n+\tr0, _, e1 := Syscall9(SYS_MMAP, uintptr(addr), uintptr(length), uintptr(prot), uintptr(flag), uintptr(fd), 0, uintptr(pos), 0, 0)\n+\tret = uintptr(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func munmap(addr uintptr, length uintptr) (err error) {\n+\t_, _, e1 := Syscall(SYS_MUNMAP, uintptr(addr), uintptr(length), 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func readlen(fd int, buf *byte, nbuf int) (n int, err error) {\n+\tr0, _, e1 := Syscall(SYS_READ, uintptr(fd), uintptr(unsafe.Pointer(buf)), uintptr(nbuf))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func writelen(fd int, buf *byte, nbuf int) (n int, err error) {\n+\tr0, _, e1 := Syscall(SYS_WRITE, uintptr(fd), uintptr(unsafe.Pointer(buf)), uintptr(nbuf))\n+\tn = int(r0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}\n+\n+// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n+\n+func utimensat(dirfd int, path string, times *[2]Timespec, flags int) (err error) {\n+\tvar _p0 *byte\n+\t_p0, err = BytePtrFromString(path)\n+\tif err != nil {\n+\t\treturn\n+\t}\n+\t_, _, e1 := Syscall6(SYS_UTIMENSAT, uintptr(dirfd), uintptr(unsafe.Pointer(_p0)), uintptr(unsafe.Pointer(times)), uintptr(flags), 0, 0)\n+\tif e1 != 0 {\n+\t\terr = errnoErr(e1)\n+\t}\n+\treturn\n+}"
    },
    {
      "sha": "37dcc74c2de5222de9296872f19deb332b04b3ee",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,6 +1,8 @@\n // mksysctl_openbsd.pl\n // Code generated by the command above; DO NOT EDIT.\n \n+// +build 386,openbsd\n+\n package unix\n \n type mibentry struct {"
    },
    {
      "sha": "fe6caa6eb7f2f47eb2be49c51814a65fc2899905",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,4 +1,4 @@\n-// mksysctl_openbsd.pl\n+// go run mksysctl_openbsd.go\n // Code generated by the command above; DO NOT EDIT.\n \n // +build amd64,openbsd"
    },
    {
      "sha": "6eb8c0b086a6281809a069bf304412412e4940ab",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -1,6 +1,8 @@\n-// mksysctl_openbsd.pl\n+// go run mksysctl_openbsd.go\n // Code generated by the command above; DO NOT EDIT.\n \n+// +build arm,openbsd\n+\n package unix\n \n type mibentry struct {"
    },
    {
      "sha": "ba4304fd233880953d28ab4a05ceac139f6979c2",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go",
      "status": "added",
      "additions": 275,
      "deletions": 0,
      "changes": 275,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysctl_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,275 @@\n+// go run mksysctl_openbsd.go\n+// Code generated by the command above; DO NOT EDIT.\n+\n+// +build arm64,openbsd\n+\n+package unix\n+\n+type mibentry struct {\n+\tctlname string\n+\tctloid  []_C_int\n+}\n+\n+var sysctlMib = []mibentry{\n+\t{\"ddb.console\", []_C_int{9, 6}},\n+\t{\"ddb.log\", []_C_int{9, 7}},\n+\t{\"ddb.max_line\", []_C_int{9, 3}},\n+\t{\"ddb.max_width\", []_C_int{9, 2}},\n+\t{\"ddb.panic\", []_C_int{9, 5}},\n+\t{\"ddb.profile\", []_C_int{9, 9}},\n+\t{\"ddb.radix\", []_C_int{9, 1}},\n+\t{\"ddb.tab_stop_width\", []_C_int{9, 4}},\n+\t{\"ddb.trigger\", []_C_int{9, 8}},\n+\t{\"fs.posix.setuid\", []_C_int{3, 1, 1}},\n+\t{\"hw.allowpowerdown\", []_C_int{6, 22}},\n+\t{\"hw.byteorder\", []_C_int{6, 4}},\n+\t{\"hw.cpuspeed\", []_C_int{6, 12}},\n+\t{\"hw.diskcount\", []_C_int{6, 10}},\n+\t{\"hw.disknames\", []_C_int{6, 8}},\n+\t{\"hw.diskstats\", []_C_int{6, 9}},\n+\t{\"hw.machine\", []_C_int{6, 1}},\n+\t{\"hw.model\", []_C_int{6, 2}},\n+\t{\"hw.ncpu\", []_C_int{6, 3}},\n+\t{\"hw.ncpufound\", []_C_int{6, 21}},\n+\t{\"hw.ncpuonline\", []_C_int{6, 25}},\n+\t{\"hw.pagesize\", []_C_int{6, 7}},\n+\t{\"hw.perfpolicy\", []_C_int{6, 23}},\n+\t{\"hw.physmem\", []_C_int{6, 19}},\n+\t{\"hw.product\", []_C_int{6, 15}},\n+\t{\"hw.serialno\", []_C_int{6, 17}},\n+\t{\"hw.setperf\", []_C_int{6, 13}},\n+\t{\"hw.smt\", []_C_int{6, 24}},\n+\t{\"hw.usermem\", []_C_int{6, 20}},\n+\t{\"hw.uuid\", []_C_int{6, 18}},\n+\t{\"hw.vendor\", []_C_int{6, 14}},\n+\t{\"hw.version\", []_C_int{6, 16}},\n+\t{\"kern.allowkmem\", []_C_int{1, 52}},\n+\t{\"kern.argmax\", []_C_int{1, 8}},\n+\t{\"kern.audio\", []_C_int{1, 84}},\n+\t{\"kern.boottime\", []_C_int{1, 21}},\n+\t{\"kern.bufcachepercent\", []_C_int{1, 72}},\n+\t{\"kern.ccpu\", []_C_int{1, 45}},\n+\t{\"kern.clockrate\", []_C_int{1, 12}},\n+\t{\"kern.consdev\", []_C_int{1, 75}},\n+\t{\"kern.cp_time\", []_C_int{1, 40}},\n+\t{\"kern.cp_time2\", []_C_int{1, 71}},\n+\t{\"kern.cpustats\", []_C_int{1, 85}},\n+\t{\"kern.domainname\", []_C_int{1, 22}},\n+\t{\"kern.file\", []_C_int{1, 73}},\n+\t{\"kern.forkstat\", []_C_int{1, 42}},\n+\t{\"kern.fscale\", []_C_int{1, 46}},\n+\t{\"kern.fsync\", []_C_int{1, 33}},\n+\t{\"kern.global_ptrace\", []_C_int{1, 81}},\n+\t{\"kern.hostid\", []_C_int{1, 11}},\n+\t{\"kern.hostname\", []_C_int{1, 10}},\n+\t{\"kern.intrcnt.nintrcnt\", []_C_int{1, 63, 1}},\n+\t{\"kern.job_control\", []_C_int{1, 19}},\n+\t{\"kern.malloc.buckets\", []_C_int{1, 39, 1}},\n+\t{\"kern.malloc.kmemnames\", []_C_int{1, 39, 3}},\n+\t{\"kern.maxclusters\", []_C_int{1, 67}},\n+\t{\"kern.maxfiles\", []_C_int{1, 7}},\n+\t{\"kern.maxlocksperuid\", []_C_int{1, 70}},\n+\t{\"kern.maxpartitions\", []_C_int{1, 23}},\n+\t{\"kern.maxproc\", []_C_int{1, 6}},\n+\t{\"kern.maxthread\", []_C_int{1, 25}},\n+\t{\"kern.maxvnodes\", []_C_int{1, 5}},\n+\t{\"kern.mbstat\", []_C_int{1, 59}},\n+\t{\"kern.msgbuf\", []_C_int{1, 48}},\n+\t{\"kern.msgbufsize\", []_C_int{1, 38}},\n+\t{\"kern.nchstats\", []_C_int{1, 41}},\n+\t{\"kern.netlivelocks\", []_C_int{1, 76}},\n+\t{\"kern.nfiles\", []_C_int{1, 56}},\n+\t{\"kern.ngroups\", []_C_int{1, 18}},\n+\t{\"kern.nosuidcoredump\", []_C_int{1, 32}},\n+\t{\"kern.nprocs\", []_C_int{1, 47}},\n+\t{\"kern.nselcoll\", []_C_int{1, 43}},\n+\t{\"kern.nthreads\", []_C_int{1, 26}},\n+\t{\"kern.numvnodes\", []_C_int{1, 58}},\n+\t{\"kern.osrelease\", []_C_int{1, 2}},\n+\t{\"kern.osrevision\", []_C_int{1, 3}},\n+\t{\"kern.ostype\", []_C_int{1, 1}},\n+\t{\"kern.osversion\", []_C_int{1, 27}},\n+\t{\"kern.pool_debug\", []_C_int{1, 77}},\n+\t{\"kern.posix1version\", []_C_int{1, 17}},\n+\t{\"kern.proc\", []_C_int{1, 66}},\n+\t{\"kern.rawpartition\", []_C_int{1, 24}},\n+\t{\"kern.saved_ids\", []_C_int{1, 20}},\n+\t{\"kern.securelevel\", []_C_int{1, 9}},\n+\t{\"kern.seminfo\", []_C_int{1, 61}},\n+\t{\"kern.shminfo\", []_C_int{1, 62}},\n+\t{\"kern.somaxconn\", []_C_int{1, 28}},\n+\t{\"kern.sominconn\", []_C_int{1, 29}},\n+\t{\"kern.splassert\", []_C_int{1, 54}},\n+\t{\"kern.stackgap_random\", []_C_int{1, 50}},\n+\t{\"kern.sysvipc_info\", []_C_int{1, 51}},\n+\t{\"kern.sysvmsg\", []_C_int{1, 34}},\n+\t{\"kern.sysvsem\", []_C_int{1, 35}},\n+\t{\"kern.sysvshm\", []_C_int{1, 36}},\n+\t{\"kern.timecounter.choice\", []_C_int{1, 69, 4}},\n+\t{\"kern.timecounter.hardware\", []_C_int{1, 69, 3}},\n+\t{\"kern.timecounter.tick\", []_C_int{1, 69, 1}},\n+\t{\"kern.timecounter.timestepwarnings\", []_C_int{1, 69, 2}},\n+\t{\"kern.tty.tk_cancc\", []_C_int{1, 44, 4}},\n+\t{\"kern.tty.tk_nin\", []_C_int{1, 44, 1}},\n+\t{\"kern.tty.tk_nout\", []_C_int{1, 44, 2}},\n+\t{\"kern.tty.tk_rawcc\", []_C_int{1, 44, 3}},\n+\t{\"kern.tty.ttyinfo\", []_C_int{1, 44, 5}},\n+\t{\"kern.ttycount\", []_C_int{1, 57}},\n+\t{\"kern.version\", []_C_int{1, 4}},\n+\t{\"kern.watchdog.auto\", []_C_int{1, 64, 2}},\n+\t{\"kern.watchdog.period\", []_C_int{1, 64, 1}},\n+\t{\"kern.witnesswatch\", []_C_int{1, 53}},\n+\t{\"kern.wxabort\", []_C_int{1, 74}},\n+\t{\"net.bpf.bufsize\", []_C_int{4, 31, 1}},\n+\t{\"net.bpf.maxbufsize\", []_C_int{4, 31, 2}},\n+\t{\"net.inet.ah.enable\", []_C_int{4, 2, 51, 1}},\n+\t{\"net.inet.ah.stats\", []_C_int{4, 2, 51, 2}},\n+\t{\"net.inet.carp.allow\", []_C_int{4, 2, 112, 1}},\n+\t{\"net.inet.carp.log\", []_C_int{4, 2, 112, 3}},\n+\t{\"net.inet.carp.preempt\", []_C_int{4, 2, 112, 2}},\n+\t{\"net.inet.carp.stats\", []_C_int{4, 2, 112, 4}},\n+\t{\"net.inet.divert.recvspace\", []_C_int{4, 2, 258, 1}},\n+\t{\"net.inet.divert.sendspace\", []_C_int{4, 2, 258, 2}},\n+\t{\"net.inet.divert.stats\", []_C_int{4, 2, 258, 3}},\n+\t{\"net.inet.esp.enable\", []_C_int{4, 2, 50, 1}},\n+\t{\"net.inet.esp.stats\", []_C_int{4, 2, 50, 4}},\n+\t{\"net.inet.esp.udpencap\", []_C_int{4, 2, 50, 2}},\n+\t{\"net.inet.esp.udpencap_port\", []_C_int{4, 2, 50, 3}},\n+\t{\"net.inet.etherip.allow\", []_C_int{4, 2, 97, 1}},\n+\t{\"net.inet.etherip.stats\", []_C_int{4, 2, 97, 2}},\n+\t{\"net.inet.gre.allow\", []_C_int{4, 2, 47, 1}},\n+\t{\"net.inet.gre.wccp\", []_C_int{4, 2, 47, 2}},\n+\t{\"net.inet.icmp.bmcastecho\", []_C_int{4, 2, 1, 2}},\n+\t{\"net.inet.icmp.errppslimit\", []_C_int{4, 2, 1, 3}},\n+\t{\"net.inet.icmp.maskrepl\", []_C_int{4, 2, 1, 1}},\n+\t{\"net.inet.icmp.rediraccept\", []_C_int{4, 2, 1, 4}},\n+\t{\"net.inet.icmp.redirtimeout\", []_C_int{4, 2, 1, 5}},\n+\t{\"net.inet.icmp.stats\", []_C_int{4, 2, 1, 7}},\n+\t{\"net.inet.icmp.tstamprepl\", []_C_int{4, 2, 1, 6}},\n+\t{\"net.inet.igmp.stats\", []_C_int{4, 2, 2, 1}},\n+\t{\"net.inet.ip.arpdown\", []_C_int{4, 2, 0, 40}},\n+\t{\"net.inet.ip.arpqueued\", []_C_int{4, 2, 0, 36}},\n+\t{\"net.inet.ip.arptimeout\", []_C_int{4, 2, 0, 39}},\n+\t{\"net.inet.ip.encdebug\", []_C_int{4, 2, 0, 12}},\n+\t{\"net.inet.ip.forwarding\", []_C_int{4, 2, 0, 1}},\n+\t{\"net.inet.ip.ifq.congestion\", []_C_int{4, 2, 0, 30, 4}},\n+\t{\"net.inet.ip.ifq.drops\", []_C_int{4, 2, 0, 30, 3}},\n+\t{\"net.inet.ip.ifq.len\", []_C_int{4, 2, 0, 30, 1}},\n+\t{\"net.inet.ip.ifq.maxlen\", []_C_int{4, 2, 0, 30, 2}},\n+\t{\"net.inet.ip.maxqueue\", []_C_int{4, 2, 0, 11}},\n+\t{\"net.inet.ip.mforwarding\", []_C_int{4, 2, 0, 31}},\n+\t{\"net.inet.ip.mrtmfc\", []_C_int{4, 2, 0, 37}},\n+\t{\"net.inet.ip.mrtproto\", []_C_int{4, 2, 0, 34}},\n+\t{\"net.inet.ip.mrtstats\", []_C_int{4, 2, 0, 35}},\n+\t{\"net.inet.ip.mrtvif\", []_C_int{4, 2, 0, 38}},\n+\t{\"net.inet.ip.mtu\", []_C_int{4, 2, 0, 4}},\n+\t{\"net.inet.ip.mtudisc\", []_C_int{4, 2, 0, 27}},\n+\t{\"net.inet.ip.mtudisctimeout\", []_C_int{4, 2, 0, 28}},\n+\t{\"net.inet.ip.multipath\", []_C_int{4, 2, 0, 32}},\n+\t{\"net.inet.ip.portfirst\", []_C_int{4, 2, 0, 7}},\n+\t{\"net.inet.ip.porthifirst\", []_C_int{4, 2, 0, 9}},\n+\t{\"net.inet.ip.porthilast\", []_C_int{4, 2, 0, 10}},\n+\t{\"net.inet.ip.portlast\", []_C_int{4, 2, 0, 8}},\n+\t{\"net.inet.ip.redirect\", []_C_int{4, 2, 0, 2}},\n+\t{\"net.inet.ip.sourceroute\", []_C_int{4, 2, 0, 5}},\n+\t{\"net.inet.ip.stats\", []_C_int{4, 2, 0, 33}},\n+\t{\"net.inet.ip.ttl\", []_C_int{4, 2, 0, 3}},\n+\t{\"net.inet.ipcomp.enable\", []_C_int{4, 2, 108, 1}},\n+\t{\"net.inet.ipcomp.stats\", []_C_int{4, 2, 108, 2}},\n+\t{\"net.inet.ipip.allow\", []_C_int{4, 2, 4, 1}},\n+\t{\"net.inet.ipip.stats\", []_C_int{4, 2, 4, 2}},\n+\t{\"net.inet.mobileip.allow\", []_C_int{4, 2, 55, 1}},\n+\t{\"net.inet.pfsync.stats\", []_C_int{4, 2, 240, 1}},\n+\t{\"net.inet.tcp.ackonpush\", []_C_int{4, 2, 6, 13}},\n+\t{\"net.inet.tcp.always_keepalive\", []_C_int{4, 2, 6, 22}},\n+\t{\"net.inet.tcp.baddynamic\", []_C_int{4, 2, 6, 6}},\n+\t{\"net.inet.tcp.drop\", []_C_int{4, 2, 6, 19}},\n+\t{\"net.inet.tcp.ecn\", []_C_int{4, 2, 6, 14}},\n+\t{\"net.inet.tcp.ident\", []_C_int{4, 2, 6, 9}},\n+\t{\"net.inet.tcp.keepidle\", []_C_int{4, 2, 6, 3}},\n+\t{\"net.inet.tcp.keepinittime\", []_C_int{4, 2, 6, 2}},\n+\t{\"net.inet.tcp.keepintvl\", []_C_int{4, 2, 6, 4}},\n+\t{\"net.inet.tcp.mssdflt\", []_C_int{4, 2, 6, 11}},\n+\t{\"net.inet.tcp.reasslimit\", []_C_int{4, 2, 6, 18}},\n+\t{\"net.inet.tcp.rfc1323\", []_C_int{4, 2, 6, 1}},\n+\t{\"net.inet.tcp.rfc3390\", []_C_int{4, 2, 6, 17}},\n+\t{\"net.inet.tcp.rootonly\", []_C_int{4, 2, 6, 24}},\n+\t{\"net.inet.tcp.rstppslimit\", []_C_int{4, 2, 6, 12}},\n+\t{\"net.inet.tcp.sack\", []_C_int{4, 2, 6, 10}},\n+\t{\"net.inet.tcp.sackholelimit\", []_C_int{4, 2, 6, 20}},\n+\t{\"net.inet.tcp.slowhz\", []_C_int{4, 2, 6, 5}},\n+\t{\"net.inet.tcp.stats\", []_C_int{4, 2, 6, 21}},\n+\t{\"net.inet.tcp.synbucketlimit\", []_C_int{4, 2, 6, 16}},\n+\t{\"net.inet.tcp.syncachelimit\", []_C_int{4, 2, 6, 15}},\n+\t{\"net.inet.tcp.synhashsize\", []_C_int{4, 2, 6, 25}},\n+\t{\"net.inet.tcp.synuselimit\", []_C_int{4, 2, 6, 23}},\n+\t{\"net.inet.udp.baddynamic\", []_C_int{4, 2, 17, 2}},\n+\t{\"net.inet.udp.checksum\", []_C_int{4, 2, 17, 1}},\n+\t{\"net.inet.udp.recvspace\", []_C_int{4, 2, 17, 3}},\n+\t{\"net.inet.udp.rootonly\", []_C_int{4, 2, 17, 6}},\n+\t{\"net.inet.udp.sendspace\", []_C_int{4, 2, 17, 4}},\n+\t{\"net.inet.udp.stats\", []_C_int{4, 2, 17, 5}},\n+\t{\"net.inet6.divert.recvspace\", []_C_int{4, 24, 86, 1}},\n+\t{\"net.inet6.divert.sendspace\", []_C_int{4, 24, 86, 2}},\n+\t{\"net.inet6.divert.stats\", []_C_int{4, 24, 86, 3}},\n+\t{\"net.inet6.icmp6.errppslimit\", []_C_int{4, 24, 30, 14}},\n+\t{\"net.inet6.icmp6.mtudisc_hiwat\", []_C_int{4, 24, 30, 16}},\n+\t{\"net.inet6.icmp6.mtudisc_lowat\", []_C_int{4, 24, 30, 17}},\n+\t{\"net.inet6.icmp6.nd6_debug\", []_C_int{4, 24, 30, 18}},\n+\t{\"net.inet6.icmp6.nd6_delay\", []_C_int{4, 24, 30, 8}},\n+\t{\"net.inet6.icmp6.nd6_maxnudhint\", []_C_int{4, 24, 30, 15}},\n+\t{\"net.inet6.icmp6.nd6_mmaxtries\", []_C_int{4, 24, 30, 10}},\n+\t{\"net.inet6.icmp6.nd6_umaxtries\", []_C_int{4, 24, 30, 9}},\n+\t{\"net.inet6.icmp6.redirtimeout\", []_C_int{4, 24, 30, 3}},\n+\t{\"net.inet6.ip6.auto_flowlabel\", []_C_int{4, 24, 17, 17}},\n+\t{\"net.inet6.ip6.dad_count\", []_C_int{4, 24, 17, 16}},\n+\t{\"net.inet6.ip6.dad_pending\", []_C_int{4, 24, 17, 49}},\n+\t{\"net.inet6.ip6.defmcasthlim\", []_C_int{4, 24, 17, 18}},\n+\t{\"net.inet6.ip6.forwarding\", []_C_int{4, 24, 17, 1}},\n+\t{\"net.inet6.ip6.forwsrcrt\", []_C_int{4, 24, 17, 5}},\n+\t{\"net.inet6.ip6.hdrnestlimit\", []_C_int{4, 24, 17, 15}},\n+\t{\"net.inet6.ip6.hlim\", []_C_int{4, 24, 17, 3}},\n+\t{\"net.inet6.ip6.log_interval\", []_C_int{4, 24, 17, 14}},\n+\t{\"net.inet6.ip6.maxdynroutes\", []_C_int{4, 24, 17, 48}},\n+\t{\"net.inet6.ip6.maxfragpackets\", []_C_int{4, 24, 17, 9}},\n+\t{\"net.inet6.ip6.maxfrags\", []_C_int{4, 24, 17, 41}},\n+\t{\"net.inet6.ip6.mforwarding\", []_C_int{4, 24, 17, 42}},\n+\t{\"net.inet6.ip6.mrtmfc\", []_C_int{4, 24, 17, 53}},\n+\t{\"net.inet6.ip6.mrtmif\", []_C_int{4, 24, 17, 52}},\n+\t{\"net.inet6.ip6.mrtproto\", []_C_int{4, 24, 17, 8}},\n+\t{\"net.inet6.ip6.mtudisctimeout\", []_C_int{4, 24, 17, 50}},\n+\t{\"net.inet6.ip6.multicast_mtudisc\", []_C_int{4, 24, 17, 44}},\n+\t{\"net.inet6.ip6.multipath\", []_C_int{4, 24, 17, 43}},\n+\t{\"net.inet6.ip6.neighborgcthresh\", []_C_int{4, 24, 17, 45}},\n+\t{\"net.inet6.ip6.redirect\", []_C_int{4, 24, 17, 2}},\n+\t{\"net.inet6.ip6.soiikey\", []_C_int{4, 24, 17, 54}},\n+\t{\"net.inet6.ip6.sourcecheck\", []_C_int{4, 24, 17, 10}},\n+\t{\"net.inet6.ip6.sourcecheck_logint\", []_C_int{4, 24, 17, 11}},\n+\t{\"net.inet6.ip6.use_deprecated\", []_C_int{4, 24, 17, 21}},\n+\t{\"net.key.sadb_dump\", []_C_int{4, 30, 1}},\n+\t{\"net.key.spd_dump\", []_C_int{4, 30, 2}},\n+\t{\"net.mpls.ifq.congestion\", []_C_int{4, 33, 3, 4}},\n+\t{\"net.mpls.ifq.drops\", []_C_int{4, 33, 3, 3}},\n+\t{\"net.mpls.ifq.len\", []_C_int{4, 33, 3, 1}},\n+\t{\"net.mpls.ifq.maxlen\", []_C_int{4, 33, 3, 2}},\n+\t{\"net.mpls.mapttl_ip\", []_C_int{4, 33, 5}},\n+\t{\"net.mpls.mapttl_ip6\", []_C_int{4, 33, 6}},\n+\t{\"net.mpls.maxloop_inkernel\", []_C_int{4, 33, 4}},\n+\t{\"net.mpls.ttl\", []_C_int{4, 33, 2}},\n+\t{\"net.pflow.stats\", []_C_int{4, 34, 1}},\n+\t{\"net.pipex.enable\", []_C_int{4, 35, 1}},\n+\t{\"vm.anonmin\", []_C_int{2, 7}},\n+\t{\"vm.loadavg\", []_C_int{2, 2}},\n+\t{\"vm.malloc_conf\", []_C_int{2, 12}},\n+\t{\"vm.maxslp\", []_C_int{2, 10}},\n+\t{\"vm.nkmempages\", []_C_int{2, 6}},\n+\t{\"vm.psstrings\", []_C_int{2, 3}},\n+\t{\"vm.swapencrypt.enable\", []_C_int{2, 5, 0}},\n+\t{\"vm.swapencrypt.keyscreated\", []_C_int{2, 5, 1}},\n+\t{\"vm.swapencrypt.keysdeleted\", []_C_int{2, 5, 2}},\n+\t{\"vm.uspace\", []_C_int{2, 11}},\n+\t{\"vm.uvmexp\", []_C_int{2, 4}},\n+\t{\"vm.vmmeter\", []_C_int{2, 1}},\n+\t{\"vm.vnodemin\", []_C_int{2, 9}},\n+\t{\"vm.vtextmin\", []_C_int{2, 8}},\n+}"
    },
    {
      "sha": "b81d508a730facc48b8a8111a766dcf1f37706a4",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -285,4 +285,5 @@ const (\n \tSYS_STATX                  = 291\n \tSYS_IO_PGETEVENTS          = 292\n \tSYS_RSEQ                   = 293\n+\tSYS_KEXEC_FILE_LOAD        = 294\n )"
    },
    {
      "sha": "2c8c46a2fc15b0f7eb17b81091fe4f62a00f5b30",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_riscv64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -284,4 +284,5 @@ const (\n \tSYS_STATX                  = 291\n \tSYS_IO_PGETEVENTS          = 292\n \tSYS_RSEQ                   = 293\n+\tSYS_KEXEC_FILE_LOAD        = 294\n )"
    },
    {
      "sha": "6ed306370a5e5cd15add61219fbe6e69a6259f47",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysnum_linux_sparc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -253,6 +253,7 @@ const (\n \tSYS_TIMER_GETOVERRUN       = 264\n \tSYS_TIMER_DELETE           = 265\n \tSYS_TIMER_CREATE           = 266\n+\tSYS_VSERVER                = 267\n \tSYS_IO_SETUP               = 268\n \tSYS_IO_DESTROY             = 269\n \tSYS_IO_SUBMIT              = 270"
    },
    {
      "sha": "fe2b689b6375bcf8b7bc94a9c77c94bad199b4af",
      "filename": "backend/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go",
      "status": "added",
      "additions": 217,
      "deletions": 0,
      "changes": 217,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/zsysnum_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -0,0 +1,217 @@\n+// go run mksysnum.go https://cvsweb.openbsd.org/cgi-bin/cvsweb/~checkout~/src/sys/kern/syscalls.master\n+// Code generated by the command above; see README.md. DO NOT EDIT.\n+\n+// +build arm64,openbsd\n+\n+package unix\n+\n+const (\n+\tSYS_EXIT           = 1   // { void sys_exit(int rval); }\n+\tSYS_FORK           = 2   // { int sys_fork(void); }\n+\tSYS_READ           = 3   // { ssize_t sys_read(int fd, void *buf, size_t nbyte); }\n+\tSYS_WRITE          = 4   // { ssize_t sys_write(int fd, const void *buf, size_t nbyte); }\n+\tSYS_OPEN           = 5   // { int sys_open(const char *path, int flags, ... mode_t mode); }\n+\tSYS_CLOSE          = 6   // { int sys_close(int fd); }\n+\tSYS_GETENTROPY     = 7   // { int sys_getentropy(void *buf, size_t nbyte); }\n+\tSYS___TFORK        = 8   // { int sys___tfork(const struct __tfork *param, size_t psize); }\n+\tSYS_LINK           = 9   // { int sys_link(const char *path, const char *link); }\n+\tSYS_UNLINK         = 10  // { int sys_unlink(const char *path); }\n+\tSYS_WAIT4          = 11  // { pid_t sys_wait4(pid_t pid, int *status, int options, struct rusage *rusage); }\n+\tSYS_CHDIR          = 12  // { int sys_chdir(const char *path); }\n+\tSYS_FCHDIR         = 13  // { int sys_fchdir(int fd); }\n+\tSYS_MKNOD          = 14  // { int sys_mknod(const char *path, mode_t mode, dev_t dev); }\n+\tSYS_CHMOD          = 15  // { int sys_chmod(const char *path, mode_t mode); }\n+\tSYS_CHOWN          = 16  // { int sys_chown(const char *path, uid_t uid, gid_t gid); }\n+\tSYS_OBREAK         = 17  // { int sys_obreak(char *nsize); } break\n+\tSYS_GETDTABLECOUNT = 18  // { int sys_getdtablecount(void); }\n+\tSYS_GETRUSAGE      = 19  // { int sys_getrusage(int who, struct rusage *rusage); }\n+\tSYS_GETPID         = 20  // { pid_t sys_getpid(void); }\n+\tSYS_MOUNT          = 21  // { int sys_mount(const char *type, const char *path, int flags, void *data); }\n+\tSYS_UNMOUNT        = 22  // { int sys_unmount(const char *path, int flags); }\n+\tSYS_SETUID         = 23  // { int sys_setuid(uid_t uid); }\n+\tSYS_GETUID         = 24  // { uid_t sys_getuid(void); }\n+\tSYS_GETEUID        = 25  // { uid_t sys_geteuid(void); }\n+\tSYS_PTRACE         = 26  // { int sys_ptrace(int req, pid_t pid, caddr_t addr, int data); }\n+\tSYS_RECVMSG        = 27  // { ssize_t sys_recvmsg(int s, struct msghdr *msg, int flags); }\n+\tSYS_SENDMSG        = 28  // { ssize_t sys_sendmsg(int s, const struct msghdr *msg, int flags); }\n+\tSYS_RECVFROM       = 29  // { ssize_t sys_recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, socklen_t *fromlenaddr); }\n+\tSYS_ACCEPT         = 30  // { int sys_accept(int s, struct sockaddr *name, socklen_t *anamelen); }\n+\tSYS_GETPEERNAME    = 31  // { int sys_getpeername(int fdes, struct sockaddr *asa, socklen_t *alen); }\n+\tSYS_GETSOCKNAME    = 32  // { int sys_getsockname(int fdes, struct sockaddr *asa, socklen_t *alen); }\n+\tSYS_ACCESS         = 33  // { int sys_access(const char *path, int amode); }\n+\tSYS_CHFLAGS        = 34  // { int sys_chflags(const char *path, u_int flags); }\n+\tSYS_FCHFLAGS       = 35  // { int sys_fchflags(int fd, u_int flags); }\n+\tSYS_SYNC           = 36  // { void sys_sync(void); }\n+\tSYS_STAT           = 38  // { int sys_stat(const char *path, struct stat *ub); }\n+\tSYS_GETPPID        = 39  // { pid_t sys_getppid(void); }\n+\tSYS_LSTAT          = 40  // { int sys_lstat(const char *path, struct stat *ub); }\n+\tSYS_DUP            = 41  // { int sys_dup(int fd); }\n+\tSYS_FSTATAT        = 42  // { int sys_fstatat(int fd, const char *path, struct stat *buf, int flag); }\n+\tSYS_GETEGID        = 43  // { gid_t sys_getegid(void); }\n+\tSYS_PROFIL         = 44  // { int sys_profil(caddr_t samples, size_t size, u_long offset, u_int scale); }\n+\tSYS_KTRACE         = 45  // { int sys_ktrace(const char *fname, int ops, int facs, pid_t pid); }\n+\tSYS_SIGACTION      = 46  // { int sys_sigaction(int signum, const struct sigaction *nsa, struct sigaction *osa); }\n+\tSYS_GETGID         = 47  // { gid_t sys_getgid(void); }\n+\tSYS_SIGPROCMASK    = 48  // { int sys_sigprocmask(int how, sigset_t mask); }\n+\tSYS_SETLOGIN       = 50  // { int sys_setlogin(const char *namebuf); }\n+\tSYS_ACCT           = 51  // { int sys_acct(const char *path); }\n+\tSYS_SIGPENDING     = 52  // { int sys_sigpending(void); }\n+\tSYS_FSTAT          = 53  // { int sys_fstat(int fd, struct stat *sb); }\n+\tSYS_IOCTL          = 54  // { int sys_ioctl(int fd, u_long com, ... void *data); }\n+\tSYS_REBOOT         = 55  // { int sys_reboot(int opt); }\n+\tSYS_REVOKE         = 56  // { int sys_revoke(const char *path); }\n+\tSYS_SYMLINK        = 57  // { int sys_symlink(const char *path, const char *link); }\n+\tSYS_READLINK       = 58  // { ssize_t sys_readlink(const char *path, char *buf, size_t count); }\n+\tSYS_EXECVE         = 59  // { int sys_execve(const char *path, char * const *argp, char * const *envp); }\n+\tSYS_UMASK          = 60  // { mode_t sys_umask(mode_t newmask); }\n+\tSYS_CHROOT         = 61  // { int sys_chroot(const char *path); }\n+\tSYS_GETFSSTAT      = 62  // { int sys_getfsstat(struct statfs *buf, size_t bufsize, int flags); }\n+\tSYS_STATFS         = 63  // { int sys_statfs(const char *path, struct statfs *buf); }\n+\tSYS_FSTATFS        = 64  // { int sys_fstatfs(int fd, struct statfs *buf); }\n+\tSYS_FHSTATFS       = 65  // { int sys_fhstatfs(const fhandle_t *fhp, struct statfs *buf); }\n+\tSYS_VFORK          = 66  // { int sys_vfork(void); }\n+\tSYS_GETTIMEOFDAY   = 67  // { int sys_gettimeofday(struct timeval *tp, struct timezone *tzp); }\n+\tSYS_SETTIMEOFDAY   = 68  // { int sys_settimeofday(const struct timeval *tv, const struct timezone *tzp); }\n+\tSYS_SETITIMER      = 69  // { int sys_setitimer(int which, const struct itimerval *itv, struct itimerval *oitv); }\n+\tSYS_GETITIMER      = 70  // { int sys_getitimer(int which, struct itimerval *itv); }\n+\tSYS_SELECT         = 71  // { int sys_select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv); }\n+\tSYS_KEVENT         = 72  // { int sys_kevent(int fd, const struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout); }\n+\tSYS_MUNMAP         = 73  // { int sys_munmap(void *addr, size_t len); }\n+\tSYS_MPROTECT       = 74  // { int sys_mprotect(void *addr, size_t len, int prot); }\n+\tSYS_MADVISE        = 75  // { int sys_madvise(void *addr, size_t len, int behav); }\n+\tSYS_UTIMES         = 76  // { int sys_utimes(const char *path, const struct timeval *tptr); }\n+\tSYS_FUTIMES        = 77  // { int sys_futimes(int fd, const struct timeval *tptr); }\n+\tSYS_GETGROUPS      = 79  // { int sys_getgroups(int gidsetsize, gid_t *gidset); }\n+\tSYS_SETGROUPS      = 80  // { int sys_setgroups(int gidsetsize, const gid_t *gidset); }\n+\tSYS_GETPGRP        = 81  // { int sys_getpgrp(void); }\n+\tSYS_SETPGID        = 82  // { int sys_setpgid(pid_t pid, pid_t pgid); }\n+\tSYS_FUTEX          = 83  // { int sys_futex(uint32_t *f, int op, int val, const struct timespec *timeout, uint32_t *g); }\n+\tSYS_UTIMENSAT      = 84  // { int sys_utimensat(int fd, const char *path, const struct timespec *times, int flag); }\n+\tSYS_FUTIMENS       = 85  // { int sys_futimens(int fd, const struct timespec *times); }\n+\tSYS_KBIND          = 86  // { int sys_kbind(const struct __kbind *param, size_t psize, int64_t proc_cookie); }\n+\tSYS_CLOCK_GETTIME  = 87  // { int sys_clock_gettime(clockid_t clock_id, struct timespec *tp); }\n+\tSYS_CLOCK_SETTIME  = 88  // { int sys_clock_settime(clockid_t clock_id, const struct timespec *tp); }\n+\tSYS_CLOCK_GETRES   = 89  // { int sys_clock_getres(clockid_t clock_id, struct timespec *tp); }\n+\tSYS_DUP2           = 90  // { int sys_dup2(int from, int to); }\n+\tSYS_NANOSLEEP      = 91  // { int sys_nanosleep(const struct timespec *rqtp, struct timespec *rmtp); }\n+\tSYS_FCNTL          = 92  // { int sys_fcntl(int fd, int cmd, ... void *arg); }\n+\tSYS_ACCEPT4        = 93  // { int sys_accept4(int s, struct sockaddr *name, socklen_t *anamelen, int flags); }\n+\tSYS___THRSLEEP     = 94  // { int sys___thrsleep(const volatile void *ident, clockid_t clock_id, const struct timespec *tp, void *lock, const int *abort); }\n+\tSYS_FSYNC          = 95  // { int sys_fsync(int fd); }\n+\tSYS_SETPRIORITY    = 96  // { int sys_setpriority(int which, id_t who, int prio); }\n+\tSYS_SOCKET         = 97  // { int sys_socket(int domain, int type, int protocol); }\n+\tSYS_CONNECT        = 98  // { int sys_connect(int s, const struct sockaddr *name, socklen_t namelen); }\n+\tSYS_GETDENTS       = 99  // { int sys_getdents(int fd, void *buf, size_t buflen); }\n+\tSYS_GETPRIORITY    = 100 // { int sys_getpriority(int which, id_t who); }\n+\tSYS_PIPE2          = 101 // { int sys_pipe2(int *fdp, int flags); }\n+\tSYS_DUP3           = 102 // { int sys_dup3(int from, int to, int flags); }\n+\tSYS_SIGRETURN      = 103 // { int sys_sigreturn(struct sigcontext *sigcntxp); }\n+\tSYS_BIND           = 104 // { int sys_bind(int s, const struct sockaddr *name, socklen_t namelen); }\n+\tSYS_SETSOCKOPT     = 105 // { int sys_setsockopt(int s, int level, int name, const void *val, socklen_t valsize); }\n+\tSYS_LISTEN         = 106 // { int sys_listen(int s, int backlog); }\n+\tSYS_CHFLAGSAT      = 107 // { int sys_chflagsat(int fd, const char *path, u_int flags, int atflags); }\n+\tSYS_PLEDGE         = 108 // { int sys_pledge(const char *promises, const char *execpromises); }\n+\tSYS_PPOLL          = 109 // { int sys_ppoll(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *mask); }\n+\tSYS_PSELECT        = 110 // { int sys_pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *mask); }\n+\tSYS_SIGSUSPEND     = 111 // { int sys_sigsuspend(int mask); }\n+\tSYS_SENDSYSLOG     = 112 // { int sys_sendsyslog(const char *buf, size_t nbyte, int flags); }\n+\tSYS_UNVEIL         = 114 // { int sys_unveil(const char *path, const char *permissions); }\n+\tSYS_GETSOCKOPT     = 118 // { int sys_getsockopt(int s, int level, int name, void *val, socklen_t *avalsize); }\n+\tSYS_THRKILL        = 119 // { int sys_thrkill(pid_t tid, int signum, void *tcb); }\n+\tSYS_READV          = 120 // { ssize_t sys_readv(int fd, const struct iovec *iovp, int iovcnt); }\n+\tSYS_WRITEV         = 121 // { ssize_t sys_writev(int fd, const struct iovec *iovp, int iovcnt); }\n+\tSYS_KILL           = 122 // { int sys_kill(int pid, int signum); }\n+\tSYS_FCHOWN         = 123 // { int sys_fchown(int fd, uid_t uid, gid_t gid); }\n+\tSYS_FCHMOD         = 124 // { int sys_fchmod(int fd, mode_t mode); }\n+\tSYS_SETREUID       = 126 // { int sys_setreuid(uid_t ruid, uid_t euid); }\n+\tSYS_SETREGID       = 127 // { int sys_setregid(gid_t rgid, gid_t egid); }\n+\tSYS_RENAME         = 128 // { int sys_rename(const char *from, const char *to); }\n+\tSYS_FLOCK          = 131 // { int sys_flock(int fd, int how); }\n+\tSYS_MKFIFO         = 132 // { int sys_mkfifo(const char *path, mode_t mode); }\n+\tSYS_SENDTO         = 133 // { ssize_t sys_sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, socklen_t tolen); }\n+\tSYS_SHUTDOWN       = 134 // { int sys_shutdown(int s, int how); }\n+\tSYS_SOCKETPAIR     = 135 // { int sys_socketpair(int domain, int type, int protocol, int *rsv); }\n+\tSYS_MKDIR          = 136 // { int sys_mkdir(const char *path, mode_t mode); }\n+\tSYS_RMDIR          = 137 // { int sys_rmdir(const char *path); }\n+\tSYS_ADJTIME        = 140 // { int sys_adjtime(const struct timeval *delta, struct timeval *olddelta); }\n+\tSYS_GETLOGIN_R     = 141 // { int sys_getlogin_r(char *namebuf, u_int namelen); }\n+\tSYS_SETSID         = 147 // { int sys_setsid(void); }\n+\tSYS_QUOTACTL       = 148 // { int sys_quotactl(const char *path, int cmd, int uid, char *arg); }\n+\tSYS_NFSSVC         = 155 // { int sys_nfssvc(int flag, void *argp); }\n+\tSYS_GETFH          = 161 // { int sys_getfh(const char *fname, fhandle_t *fhp); }\n+\tSYS_SYSARCH        = 165 // { int sys_sysarch(int op, void *parms); }\n+\tSYS_PREAD          = 173 // { ssize_t sys_pread(int fd, void *buf, size_t nbyte, int pad, off_t offset); }\n+\tSYS_PWRITE         = 174 // { ssize_t sys_pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset); }\n+\tSYS_SETGID         = 181 // { int sys_setgid(gid_t gid); }\n+\tSYS_SETEGID        = 182 // { int sys_setegid(gid_t egid); }\n+\tSYS_SETEUID        = 183 // { int sys_seteuid(uid_t euid); }\n+\tSYS_PATHCONF       = 191 // { long sys_pathconf(const char *path, int name); }\n+\tSYS_FPATHCONF      = 192 // { long sys_fpathconf(int fd, int name); }\n+\tSYS_SWAPCTL        = 193 // { int sys_swapctl(int cmd, const void *arg, int misc); }\n+\tSYS_GETRLIMIT      = 194 // { int sys_getrlimit(int which, struct rlimit *rlp); }\n+\tSYS_SETRLIMIT      = 195 // { int sys_setrlimit(int which, const struct rlimit *rlp); }\n+\tSYS_MMAP           = 197 // { void *sys_mmap(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }\n+\tSYS_LSEEK          = 199 // { off_t sys_lseek(int fd, int pad, off_t offset, int whence); }\n+\tSYS_TRUNCATE       = 200 // { int sys_truncate(const char *path, int pad, off_t length); }\n+\tSYS_FTRUNCATE      = 201 // { int sys_ftruncate(int fd, int pad, off_t length); }\n+\tSYS_SYSCTL         = 202 // { int sys_sysctl(const int *name, u_int namelen, void *old, size_t *oldlenp, void *new, size_t newlen); }\n+\tSYS_MLOCK          = 203 // { int sys_mlock(const void *addr, size_t len); }\n+\tSYS_MUNLOCK        = 204 // { int sys_munlock(const void *addr, size_t len); }\n+\tSYS_GETPGID        = 207 // { pid_t sys_getpgid(pid_t pid); }\n+\tSYS_UTRACE         = 209 // { int sys_utrace(const char *label, const void *addr, size_t len); }\n+\tSYS_SEMGET         = 221 // { int sys_semget(key_t key, int nsems, int semflg); }\n+\tSYS_MSGGET         = 225 // { int sys_msgget(key_t key, int msgflg); }\n+\tSYS_MSGSND         = 226 // { int sys_msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg); }\n+\tSYS_MSGRCV         = 227 // { int sys_msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg); }\n+\tSYS_SHMAT          = 228 // { void *sys_shmat(int shmid, const void *shmaddr, int shmflg); }\n+\tSYS_SHMDT          = 230 // { int sys_shmdt(const void *shmaddr); }\n+\tSYS_MINHERIT       = 250 // { int sys_minherit(void *addr, size_t len, int inherit); }\n+\tSYS_POLL           = 252 // { int sys_poll(struct pollfd *fds, u_int nfds, int timeout); }\n+\tSYS_ISSETUGID      = 253 // { int sys_issetugid(void); }\n+\tSYS_LCHOWN         = 254 // { int sys_lchown(const char *path, uid_t uid, gid_t gid); }\n+\tSYS_GETSID         = 255 // { pid_t sys_getsid(pid_t pid); }\n+\tSYS_MSYNC          = 256 // { int sys_msync(void *addr, size_t len, int flags); }\n+\tSYS_PIPE           = 263 // { int sys_pipe(int *fdp); }\n+\tSYS_FHOPEN         = 264 // { int sys_fhopen(const fhandle_t *fhp, int flags); }\n+\tSYS_PREADV         = 267 // { ssize_t sys_preadv(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }\n+\tSYS_PWRITEV        = 268 // { ssize_t sys_pwritev(int fd, const struct iovec *iovp, int iovcnt, int pad, off_t offset); }\n+\tSYS_KQUEUE         = 269 // { int sys_kqueue(void); }\n+\tSYS_MLOCKALL       = 271 // { int sys_mlockall(int flags); }\n+\tSYS_MUNLOCKALL     = 272 // { int sys_munlockall(void); }\n+\tSYS_GETRESUID      = 281 // { int sys_getresuid(uid_t *ruid, uid_t *euid, uid_t *suid); }\n+\tSYS_SETRESUID      = 282 // { int sys_setresuid(uid_t ruid, uid_t euid, uid_t suid); }\n+\tSYS_GETRESGID      = 283 // { int sys_getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid); }\n+\tSYS_SETRESGID      = 284 // { int sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid); }\n+\tSYS_MQUERY         = 286 // { void *sys_mquery(void *addr, size_t len, int prot, int flags, int fd, long pad, off_t pos); }\n+\tSYS_CLOSEFROM      = 287 // { int sys_closefrom(int fd); }\n+\tSYS_SIGALTSTACK    = 288 // { int sys_sigaltstack(const struct sigaltstack *nss, struct sigaltstack *oss); }\n+\tSYS_SHMGET         = 289 // { int sys_shmget(key_t key, size_t size, int shmflg); }\n+\tSYS_SEMOP          = 290 // { int sys_semop(int semid, struct sembuf *sops, size_t nsops); }\n+\tSYS_FHSTAT         = 294 // { int sys_fhstat(const fhandle_t *fhp, struct stat *sb); }\n+\tSYS___SEMCTL       = 295 // { int sys___semctl(int semid, int semnum, int cmd, union semun *arg); }\n+\tSYS_SHMCTL         = 296 // { int sys_shmctl(int shmid, int cmd, struct shmid_ds *buf); }\n+\tSYS_MSGCTL         = 297 // { int sys_msgctl(int msqid, int cmd, struct msqid_ds *buf); }\n+\tSYS_SCHED_YIELD    = 298 // { int sys_sched_yield(void); }\n+\tSYS_GETTHRID       = 299 // { pid_t sys_getthrid(void); }\n+\tSYS___THRWAKEUP    = 301 // { int sys___thrwakeup(const volatile void *ident, int n); }\n+\tSYS___THREXIT      = 302 // { void sys___threxit(pid_t *notdead); }\n+\tSYS___THRSIGDIVERT = 303 // { int sys___thrsigdivert(sigset_t sigmask, siginfo_t *info, const struct timespec *timeout); }\n+\tSYS___GETCWD       = 304 // { int sys___getcwd(char *buf, size_t len); }\n+\tSYS_ADJFREQ        = 305 // { int sys_adjfreq(const int64_t *freq, int64_t *oldfreq); }\n+\tSYS_SETRTABLE      = 310 // { int sys_setrtable(int rtableid); }\n+\tSYS_GETRTABLE      = 311 // { int sys_getrtable(void); }\n+\tSYS_FACCESSAT      = 313 // { int sys_faccessat(int fd, const char *path, int amode, int flag); }\n+\tSYS_FCHMODAT       = 314 // { int sys_fchmodat(int fd, const char *path, mode_t mode, int flag); }\n+\tSYS_FCHOWNAT       = 315 // { int sys_fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag); }\n+\tSYS_LINKAT         = 317 // { int sys_linkat(int fd1, const char *path1, int fd2, const char *path2, int flag); }\n+\tSYS_MKDIRAT        = 318 // { int sys_mkdirat(int fd, const char *path, mode_t mode); }\n+\tSYS_MKFIFOAT       = 319 // { int sys_mkfifoat(int fd, const char *path, mode_t mode); }\n+\tSYS_MKNODAT        = 320 // { int sys_mknodat(int fd, const char *path, mode_t mode, dev_t dev); }\n+\tSYS_OPENAT         = 321 // { int sys_openat(int fd, const char *path, int flags, ... mode_t mode); }\n+\tSYS_READLINKAT     = 322 // { ssize_t sys_readlinkat(int fd, const char *path, char *buf, size_t count); }\n+\tSYS_RENAMEAT       = 323 // { int sys_renameat(int fromfd, const char *from, int tofd, const char *to); }\n+\tSYS_SYMLINKAT      = 324 // { int sys_symlinkat(const char *path, int fd, const char *link); }\n+\tSYS_UNLINKAT       = 325 // { int sys_unlinkat(int fd, const char *path, int flag); }\n+\tSYS___SET_TCB      = 329 // { void sys___set_tcb(void *tcb); }\n+\tSYS___GET_TCB      = 330 // { void *sys___get_tcb(void); }\n+)"
    },
    {
      "sha": "904359f69f31ab3bfe8b63c8f8ffdc62f7c27279",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_aix_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -103,7 +103,6 @@ type Stat_t struct {\n \tGid      uint32\n \tRdev     uint64\n \tSsize    int32\n-\t_        [4]byte\n \tAtim     StTimespec\n \tMtim     StTimespec\n \tCtim     StTimespec\n@@ -205,10 +204,8 @@ type Linger struct {\n type Msghdr struct {\n \tName       *byte\n \tNamelen    uint32\n-\t_          [4]byte\n \tIov        *Iovec\n \tIovlen     int32\n-\t_          [4]byte\n \tControl    *byte\n \tControllen uint32\n \tFlags      int32\n@@ -339,7 +336,6 @@ type Statfs_t struct {\n \tFfree     uint64\n \tFsid      Fsid64_t\n \tVfstype   int32\n-\t_         [4]byte\n \tFsize     uint64\n \tVfsnumber int32\n \tVfsoff    int32"
    },
    {
      "sha": "cefe2f8eaeb107949d83213be254dbb14e20fa3e",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_darwin_386.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -487,3 +487,13 @@ type Utsname struct {\n \tVersion  [256]byte\n \tMachine  [256]byte\n }\n+\n+const SizeofClockinfo = 0x14\n+\n+type Clockinfo struct {\n+\tHz      int32\n+\tTick    int32\n+\tTickadj int32\n+\tStathz  int32\n+\tProfhz  int32\n+}"
    },
    {
      "sha": "c6bb883c3962dcc7534609de9a2657a05fb931e1",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -497,3 +497,13 @@ type Utsname struct {\n \tVersion  [256]byte\n \tMachine  [256]byte\n }\n+\n+const SizeofClockinfo = 0x14\n+\n+type Clockinfo struct {\n+\tHz      int32\n+\tTick    int32\n+\tTickadj int32\n+\tStathz  int32\n+\tProfhz  int32\n+}"
    },
    {
      "sha": "94c23bc2d4ae831bbeaabe0f9d1b15ab6ba8a164",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -488,3 +488,13 @@ type Utsname struct {\n \tVersion  [256]byte\n \tMachine  [256]byte\n }\n+\n+const SizeofClockinfo = 0x14\n+\n+type Clockinfo struct {\n+\tHz      int32\n+\tTick    int32\n+\tTickadj int32\n+\tStathz  int32\n+\tProfhz  int32\n+}"
    },
    {
      "sha": "c82a930cdc59b5eefca5eddabc3d65e4d1c2881a",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_darwin_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -497,3 +497,13 @@ type Utsname struct {\n \tVersion  [256]byte\n \tMachine  [256]byte\n }\n+\n+const SizeofClockinfo = 0x14\n+\n+type Clockinfo struct {\n+\tHz      int32\n+\tTick    int32\n+\tTickadj int32\n+\tStathz  int32\n+\tProfhz  int32\n+}"
    },
    {
      "sha": "06471afa360cebdf89ef0c4b4a8f364438cef374",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go",
      "status": "modified",
      "additions": 430,
      "deletions": 142,
      "changes": 572,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -405,6 +405,11 @@ type TCPInfo struct {\n \tTotal_retrans  uint32\n }\n \n+type CanFilter struct {\n+\tId   uint32\n+\tMask uint32\n+}\n+\n const (\n \tSizeofSockaddrInet4     = 0x10\n \tSizeofSockaddrInet6     = 0x1c\n@@ -434,141 +439,185 @@ const (\n \tSizeofICMPv6Filter      = 0x20\n \tSizeofUcred             = 0xc\n \tSizeofTCPInfo           = 0x68\n+\tSizeofCanFilter         = 0x8\n )\n \n const (\n-\tIFA_UNSPEC           = 0x0\n-\tIFA_ADDRESS          = 0x1\n-\tIFA_LOCAL            = 0x2\n-\tIFA_LABEL            = 0x3\n-\tIFA_BROADCAST        = 0x4\n-\tIFA_ANYCAST          = 0x5\n-\tIFA_CACHEINFO        = 0x6\n-\tIFA_MULTICAST        = 0x7\n-\tIFLA_UNSPEC          = 0x0\n-\tIFLA_ADDRESS         = 0x1\n-\tIFLA_BROADCAST       = 0x2\n-\tIFLA_IFNAME          = 0x3\n-\tIFLA_INFO_KIND       = 0x1\n-\tIFLA_MTU             = 0x4\n-\tIFLA_LINK            = 0x5\n-\tIFLA_QDISC           = 0x6\n-\tIFLA_STATS           = 0x7\n-\tIFLA_COST            = 0x8\n-\tIFLA_PRIORITY        = 0x9\n-\tIFLA_MASTER          = 0xa\n-\tIFLA_WIRELESS        = 0xb\n-\tIFLA_PROTINFO        = 0xc\n-\tIFLA_TXQLEN          = 0xd\n-\tIFLA_MAP             = 0xe\n-\tIFLA_WEIGHT          = 0xf\n-\tIFLA_OPERSTATE       = 0x10\n-\tIFLA_LINKMODE        = 0x11\n-\tIFLA_LINKINFO        = 0x12\n-\tIFLA_NET_NS_PID      = 0x13\n-\tIFLA_IFALIAS         = 0x14\n-\tIFLA_NUM_VF          = 0x15\n-\tIFLA_VFINFO_LIST     = 0x16\n-\tIFLA_STATS64         = 0x17\n-\tIFLA_VF_PORTS        = 0x18\n-\tIFLA_PORT_SELF       = 0x19\n-\tIFLA_AF_SPEC         = 0x1a\n-\tIFLA_GROUP           = 0x1b\n-\tIFLA_NET_NS_FD       = 0x1c\n-\tIFLA_EXT_MASK        = 0x1d\n-\tIFLA_PROMISCUITY     = 0x1e\n-\tIFLA_NUM_TX_QUEUES   = 0x1f\n-\tIFLA_NUM_RX_QUEUES   = 0x20\n-\tIFLA_CARRIER         = 0x21\n-\tIFLA_PHYS_PORT_ID    = 0x22\n-\tIFLA_CARRIER_CHANGES = 0x23\n-\tIFLA_PHYS_SWITCH_ID  = 0x24\n-\tIFLA_LINK_NETNSID    = 0x25\n-\tIFLA_PHYS_PORT_NAME  = 0x26\n-\tIFLA_PROTO_DOWN      = 0x27\n-\tIFLA_GSO_MAX_SEGS    = 0x28\n-\tIFLA_GSO_MAX_SIZE    = 0x29\n-\tIFLA_PAD             = 0x2a\n-\tIFLA_XDP             = 0x2b\n-\tIFLA_EVENT           = 0x2c\n-\tIFLA_NEW_NETNSID     = 0x2d\n-\tIFLA_IF_NETNSID      = 0x2e\n-\tIFLA_MAX             = 0x33\n-\tRT_SCOPE_UNIVERSE    = 0x0\n-\tRT_SCOPE_SITE        = 0xc8\n-\tRT_SCOPE_LINK        = 0xfd\n-\tRT_SCOPE_HOST        = 0xfe\n-\tRT_SCOPE_NOWHERE     = 0xff\n-\tRT_TABLE_UNSPEC      = 0x0\n-\tRT_TABLE_COMPAT      = 0xfc\n-\tRT_TABLE_DEFAULT     = 0xfd\n-\tRT_TABLE_MAIN        = 0xfe\n-\tRT_TABLE_LOCAL       = 0xff\n-\tRT_TABLE_MAX         = 0xffffffff\n-\tRTA_UNSPEC           = 0x0\n-\tRTA_DST              = 0x1\n-\tRTA_SRC              = 0x2\n-\tRTA_IIF              = 0x3\n-\tRTA_OIF              = 0x4\n-\tRTA_GATEWAY          = 0x5\n-\tRTA_PRIORITY         = 0x6\n-\tRTA_PREFSRC          = 0x7\n-\tRTA_METRICS          = 0x8\n-\tRTA_MULTIPATH        = 0x9\n-\tRTA_FLOW             = 0xb\n-\tRTA_CACHEINFO        = 0xc\n-\tRTA_TABLE            = 0xf\n-\tRTA_MARK             = 0x10\n-\tRTA_MFC_STATS        = 0x11\n-\tRTA_VIA              = 0x12\n-\tRTA_NEWDST           = 0x13\n-\tRTA_PREF             = 0x14\n-\tRTA_ENCAP_TYPE       = 0x15\n-\tRTA_ENCAP            = 0x16\n-\tRTA_EXPIRES          = 0x17\n-\tRTA_PAD              = 0x18\n-\tRTA_UID              = 0x19\n-\tRTA_TTL_PROPAGATE    = 0x1a\n-\tRTA_IP_PROTO         = 0x1b\n-\tRTA_SPORT            = 0x1c\n-\tRTA_DPORT            = 0x1d\n-\tRTN_UNSPEC           = 0x0\n-\tRTN_UNICAST          = 0x1\n-\tRTN_LOCAL            = 0x2\n-\tRTN_BROADCAST        = 0x3\n-\tRTN_ANYCAST          = 0x4\n-\tRTN_MULTICAST        = 0x5\n-\tRTN_BLACKHOLE        = 0x6\n-\tRTN_UNREACHABLE      = 0x7\n-\tRTN_PROHIBIT         = 0x8\n-\tRTN_THROW            = 0x9\n-\tRTN_NAT              = 0xa\n-\tRTN_XRESOLVE         = 0xb\n-\tRTNLGRP_NONE         = 0x0\n-\tRTNLGRP_LINK         = 0x1\n-\tRTNLGRP_NOTIFY       = 0x2\n-\tRTNLGRP_NEIGH        = 0x3\n-\tRTNLGRP_TC           = 0x4\n-\tRTNLGRP_IPV4_IFADDR  = 0x5\n-\tRTNLGRP_IPV4_MROUTE  = 0x6\n-\tRTNLGRP_IPV4_ROUTE   = 0x7\n-\tRTNLGRP_IPV4_RULE    = 0x8\n-\tRTNLGRP_IPV6_IFADDR  = 0x9\n-\tRTNLGRP_IPV6_MROUTE  = 0xa\n-\tRTNLGRP_IPV6_ROUTE   = 0xb\n-\tRTNLGRP_IPV6_IFINFO  = 0xc\n-\tRTNLGRP_IPV6_PREFIX  = 0x12\n-\tRTNLGRP_IPV6_RULE    = 0x13\n-\tRTNLGRP_ND_USEROPT   = 0x14\n-\tSizeofNlMsghdr       = 0x10\n-\tSizeofNlMsgerr       = 0x14\n-\tSizeofRtGenmsg       = 0x1\n-\tSizeofNlAttr         = 0x4\n-\tSizeofRtAttr         = 0x4\n-\tSizeofIfInfomsg      = 0x10\n-\tSizeofIfAddrmsg      = 0x8\n-\tSizeofRtMsg          = 0xc\n-\tSizeofRtNexthop      = 0x8\n+\tNDA_UNSPEC              = 0x0\n+\tNDA_DST                 = 0x1\n+\tNDA_LLADDR              = 0x2\n+\tNDA_CACHEINFO           = 0x3\n+\tNDA_PROBES              = 0x4\n+\tNDA_VLAN                = 0x5\n+\tNDA_PORT                = 0x6\n+\tNDA_VNI                 = 0x7\n+\tNDA_IFINDEX             = 0x8\n+\tNDA_MASTER              = 0x9\n+\tNDA_LINK_NETNSID        = 0xa\n+\tNDA_SRC_VNI             = 0xb\n+\tNTF_USE                 = 0x1\n+\tNTF_SELF                = 0x2\n+\tNTF_MASTER              = 0x4\n+\tNTF_PROXY               = 0x8\n+\tNTF_EXT_LEARNED         = 0x10\n+\tNTF_OFFLOADED           = 0x20\n+\tNTF_ROUTER              = 0x80\n+\tNUD_INCOMPLETE          = 0x1\n+\tNUD_REACHABLE           = 0x2\n+\tNUD_STALE               = 0x4\n+\tNUD_DELAY               = 0x8\n+\tNUD_PROBE               = 0x10\n+\tNUD_FAILED              = 0x20\n+\tNUD_NOARP               = 0x40\n+\tNUD_PERMANENT           = 0x80\n+\tNUD_NONE                = 0x0\n+\tIFA_UNSPEC              = 0x0\n+\tIFA_ADDRESS             = 0x1\n+\tIFA_LOCAL               = 0x2\n+\tIFA_LABEL               = 0x3\n+\tIFA_BROADCAST           = 0x4\n+\tIFA_ANYCAST             = 0x5\n+\tIFA_CACHEINFO           = 0x6\n+\tIFA_MULTICAST           = 0x7\n+\tIFA_FLAGS               = 0x8\n+\tIFA_RT_PRIORITY         = 0x9\n+\tIFA_TARGET_NETNSID      = 0xa\n+\tIFLA_UNSPEC             = 0x0\n+\tIFLA_ADDRESS            = 0x1\n+\tIFLA_BROADCAST          = 0x2\n+\tIFLA_IFNAME             = 0x3\n+\tIFLA_MTU                = 0x4\n+\tIFLA_LINK               = 0x5\n+\tIFLA_QDISC              = 0x6\n+\tIFLA_STATS              = 0x7\n+\tIFLA_COST               = 0x8\n+\tIFLA_PRIORITY           = 0x9\n+\tIFLA_MASTER             = 0xa\n+\tIFLA_WIRELESS           = 0xb\n+\tIFLA_PROTINFO           = 0xc\n+\tIFLA_TXQLEN             = 0xd\n+\tIFLA_MAP                = 0xe\n+\tIFLA_WEIGHT             = 0xf\n+\tIFLA_OPERSTATE          = 0x10\n+\tIFLA_LINKMODE           = 0x11\n+\tIFLA_LINKINFO           = 0x12\n+\tIFLA_NET_NS_PID         = 0x13\n+\tIFLA_IFALIAS            = 0x14\n+\tIFLA_NUM_VF             = 0x15\n+\tIFLA_VFINFO_LIST        = 0x16\n+\tIFLA_STATS64            = 0x17\n+\tIFLA_VF_PORTS           = 0x18\n+\tIFLA_PORT_SELF          = 0x19\n+\tIFLA_AF_SPEC            = 0x1a\n+\tIFLA_GROUP              = 0x1b\n+\tIFLA_NET_NS_FD          = 0x1c\n+\tIFLA_EXT_MASK           = 0x1d\n+\tIFLA_PROMISCUITY        = 0x1e\n+\tIFLA_NUM_TX_QUEUES      = 0x1f\n+\tIFLA_NUM_RX_QUEUES      = 0x20\n+\tIFLA_CARRIER            = 0x21\n+\tIFLA_PHYS_PORT_ID       = 0x22\n+\tIFLA_CARRIER_CHANGES    = 0x23\n+\tIFLA_PHYS_SWITCH_ID     = 0x24\n+\tIFLA_LINK_NETNSID       = 0x25\n+\tIFLA_PHYS_PORT_NAME     = 0x26\n+\tIFLA_PROTO_DOWN         = 0x27\n+\tIFLA_GSO_MAX_SEGS       = 0x28\n+\tIFLA_GSO_MAX_SIZE       = 0x29\n+\tIFLA_PAD                = 0x2a\n+\tIFLA_XDP                = 0x2b\n+\tIFLA_EVENT              = 0x2c\n+\tIFLA_NEW_NETNSID        = 0x2d\n+\tIFLA_IF_NETNSID         = 0x2e\n+\tIFLA_TARGET_NETNSID     = 0x2e\n+\tIFLA_CARRIER_UP_COUNT   = 0x2f\n+\tIFLA_CARRIER_DOWN_COUNT = 0x30\n+\tIFLA_NEW_IFINDEX        = 0x31\n+\tIFLA_MIN_MTU            = 0x32\n+\tIFLA_MAX_MTU            = 0x33\n+\tIFLA_MAX                = 0x33\n+\tIFLA_INFO_KIND          = 0x1\n+\tIFLA_INFO_DATA          = 0x2\n+\tIFLA_INFO_XSTATS        = 0x3\n+\tIFLA_INFO_SLAVE_KIND    = 0x4\n+\tIFLA_INFO_SLAVE_DATA    = 0x5\n+\tRT_SCOPE_UNIVERSE       = 0x0\n+\tRT_SCOPE_SITE           = 0xc8\n+\tRT_SCOPE_LINK           = 0xfd\n+\tRT_SCOPE_HOST           = 0xfe\n+\tRT_SCOPE_NOWHERE        = 0xff\n+\tRT_TABLE_UNSPEC         = 0x0\n+\tRT_TABLE_COMPAT         = 0xfc\n+\tRT_TABLE_DEFAULT        = 0xfd\n+\tRT_TABLE_MAIN           = 0xfe\n+\tRT_TABLE_LOCAL          = 0xff\n+\tRT_TABLE_MAX            = 0xffffffff\n+\tRTA_UNSPEC              = 0x0\n+\tRTA_DST                 = 0x1\n+\tRTA_SRC                 = 0x2\n+\tRTA_IIF                 = 0x3\n+\tRTA_OIF                 = 0x4\n+\tRTA_GATEWAY             = 0x5\n+\tRTA_PRIORITY            = 0x6\n+\tRTA_PREFSRC             = 0x7\n+\tRTA_METRICS             = 0x8\n+\tRTA_MULTIPATH           = 0x9\n+\tRTA_FLOW                = 0xb\n+\tRTA_CACHEINFO           = 0xc\n+\tRTA_TABLE               = 0xf\n+\tRTA_MARK                = 0x10\n+\tRTA_MFC_STATS           = 0x11\n+\tRTA_VIA                 = 0x12\n+\tRTA_NEWDST              = 0x13\n+\tRTA_PREF                = 0x14\n+\tRTA_ENCAP_TYPE          = 0x15\n+\tRTA_ENCAP               = 0x16\n+\tRTA_EXPIRES             = 0x17\n+\tRTA_PAD                 = 0x18\n+\tRTA_UID                 = 0x19\n+\tRTA_TTL_PROPAGATE       = 0x1a\n+\tRTA_IP_PROTO            = 0x1b\n+\tRTA_SPORT               = 0x1c\n+\tRTA_DPORT               = 0x1d\n+\tRTN_UNSPEC              = 0x0\n+\tRTN_UNICAST             = 0x1\n+\tRTN_LOCAL               = 0x2\n+\tRTN_BROADCAST           = 0x3\n+\tRTN_ANYCAST             = 0x4\n+\tRTN_MULTICAST           = 0x5\n+\tRTN_BLACKHOLE           = 0x6\n+\tRTN_UNREACHABLE         = 0x7\n+\tRTN_PROHIBIT            = 0x8\n+\tRTN_THROW               = 0x9\n+\tRTN_NAT                 = 0xa\n+\tRTN_XRESOLVE            = 0xb\n+\tRTNLGRP_NONE            = 0x0\n+\tRTNLGRP_LINK            = 0x1\n+\tRTNLGRP_NOTIFY          = 0x2\n+\tRTNLGRP_NEIGH           = 0x3\n+\tRTNLGRP_TC              = 0x4\n+\tRTNLGRP_IPV4_IFADDR     = 0x5\n+\tRTNLGRP_IPV4_MROUTE     = 0x6\n+\tRTNLGRP_IPV4_ROUTE      = 0x7\n+\tRTNLGRP_IPV4_RULE       = 0x8\n+\tRTNLGRP_IPV6_IFADDR     = 0x9\n+\tRTNLGRP_IPV6_MROUTE     = 0xa\n+\tRTNLGRP_IPV6_ROUTE      = 0xb\n+\tRTNLGRP_IPV6_IFINFO     = 0xc\n+\tRTNLGRP_IPV6_PREFIX     = 0x12\n+\tRTNLGRP_IPV6_RULE       = 0x13\n+\tRTNLGRP_ND_USEROPT      = 0x14\n+\tSizeofNlMsghdr          = 0x10\n+\tSizeofNlMsgerr          = 0x14\n+\tSizeofRtGenmsg          = 0x1\n+\tSizeofNlAttr            = 0x4\n+\tSizeofRtAttr            = 0x4\n+\tSizeofIfInfomsg         = 0x10\n+\tSizeofIfAddrmsg         = 0x8\n+\tSizeofRtMsg             = 0xc\n+\tSizeofRtNexthop         = 0x8\n+\tSizeofNdUseroptmsg      = 0x10\n+\tSizeofNdMsg             = 0xc\n )\n \n type NlMsghdr struct {\n@@ -634,6 +683,27 @@ type RtNexthop struct {\n \tIfindex int32\n }\n \n+type NdUseroptmsg struct {\n+\tFamily    uint8\n+\tPad1      uint8\n+\tOpts_len  uint16\n+\tIfindex   int32\n+\tIcmp_type uint8\n+\tIcmp_code uint8\n+\tPad2      uint16\n+\tPad3      uint32\n+}\n+\n+type NdMsg struct {\n+\tFamily  uint8\n+\tPad1    uint8\n+\tPad2    uint16\n+\tIfindex int32\n+\tState   uint16\n+\tFlags   uint8\n+\tType    uint8\n+}\n+\n const (\n \tSizeofSockFilter = 0x8\n \tSizeofSockFprog  = 0x8\n@@ -955,7 +1025,8 @@ type PerfEventAttr struct {\n \tClockid            int32\n \tSample_regs_intr   uint64\n \tAux_watermark      uint32\n-\t_                  uint32\n+\tSample_max_stack   uint16\n+\t_                  uint16\n }\n \n type PerfEventMmapPage struct {\n@@ -1058,6 +1129,7 @@ const (\n \tPERF_COUNT_SW_ALIGNMENT_FAULTS = 0x7\n \tPERF_COUNT_SW_EMULATION_FAULTS = 0x8\n \tPERF_COUNT_SW_DUMMY            = 0x9\n+\tPERF_COUNT_SW_BPF_OUTPUT       = 0xa\n \n \tPERF_SAMPLE_IP           = 0x1\n \tPERF_SAMPLE_TID          = 0x2\n@@ -1079,21 +1151,38 @@ const (\n \tPERF_SAMPLE_BRANCH_ANY_CALL   = 0x10\n \tPERF_SAMPLE_BRANCH_ANY_RETURN = 0x20\n \tPERF_SAMPLE_BRANCH_IND_CALL   = 0x40\n+\tPERF_SAMPLE_BRANCH_ABORT_TX   = 0x80\n+\tPERF_SAMPLE_BRANCH_IN_TX      = 0x100\n+\tPERF_SAMPLE_BRANCH_NO_TX      = 0x200\n+\tPERF_SAMPLE_BRANCH_COND       = 0x400\n+\tPERF_SAMPLE_BRANCH_CALL_STACK = 0x800\n+\tPERF_SAMPLE_BRANCH_IND_JUMP   = 0x1000\n+\tPERF_SAMPLE_BRANCH_CALL       = 0x2000\n+\tPERF_SAMPLE_BRANCH_NO_FLAGS   = 0x4000\n+\tPERF_SAMPLE_BRANCH_NO_CYCLES  = 0x8000\n+\tPERF_SAMPLE_BRANCH_TYPE_SAVE  = 0x10000\n \n \tPERF_FORMAT_TOTAL_TIME_ENABLED = 0x1\n \tPERF_FORMAT_TOTAL_TIME_RUNNING = 0x2\n \tPERF_FORMAT_ID                 = 0x4\n \tPERF_FORMAT_GROUP              = 0x8\n \n-\tPERF_RECORD_MMAP       = 0x1\n-\tPERF_RECORD_LOST       = 0x2\n-\tPERF_RECORD_COMM       = 0x3\n-\tPERF_RECORD_EXIT       = 0x4\n-\tPERF_RECORD_THROTTLE   = 0x5\n-\tPERF_RECORD_UNTHROTTLE = 0x6\n-\tPERF_RECORD_FORK       = 0x7\n-\tPERF_RECORD_READ       = 0x8\n-\tPERF_RECORD_SAMPLE     = 0x9\n+\tPERF_RECORD_MMAP            = 0x1\n+\tPERF_RECORD_LOST            = 0x2\n+\tPERF_RECORD_COMM            = 0x3\n+\tPERF_RECORD_EXIT            = 0x4\n+\tPERF_RECORD_THROTTLE        = 0x5\n+\tPERF_RECORD_UNTHROTTLE      = 0x6\n+\tPERF_RECORD_FORK            = 0x7\n+\tPERF_RECORD_READ            = 0x8\n+\tPERF_RECORD_SAMPLE          = 0x9\n+\tPERF_RECORD_MMAP2           = 0xa\n+\tPERF_RECORD_AUX             = 0xb\n+\tPERF_RECORD_ITRACE_START    = 0xc\n+\tPERF_RECORD_LOST_SAMPLES    = 0xd\n+\tPERF_RECORD_SWITCH          = 0xe\n+\tPERF_RECORD_SWITCH_CPU_WIDE = 0xf\n+\tPERF_RECORD_NAMESPACES      = 0x10\n \n \tPERF_CONTEXT_HV     = -0x20\n \tPERF_CONTEXT_KERNEL = -0x80\n@@ -1106,6 +1195,7 @@ const (\n \tPERF_FLAG_FD_NO_GROUP = 0x1\n \tPERF_FLAG_FD_OUTPUT   = 0x2\n \tPERF_FLAG_PID_CGROUP  = 0x4\n+\tPERF_FLAG_FD_CLOEXEC  = 0x8\n )\n \n const (\n@@ -1362,6 +1452,21 @@ type TpacketBlockDesc struct {\n \tHdr     [40]byte\n }\n \n+type TpacketBDTS struct {\n+\tSec  uint32\n+\tUsec uint32\n+}\n+\n+type TpacketHdrV1 struct {\n+\tBlock_status        uint32\n+\tNum_pkts            uint32\n+\tOffset_to_first_pkt uint32\n+\tBlk_len             uint32\n+\tSeq_num             uint64\n+\tTs_first_pkt        TpacketBDTS\n+\tTs_last_pkt         TpacketBDTS\n+}\n+\n type TpacketReq struct {\n \tBlock_size uint32\n \tBlock_nr   uint32\n@@ -1410,6 +1515,9 @@ const (\n \tSizeofTpacketHdr  = 0x18\n \tSizeofTpacket2Hdr = 0x20\n \tSizeofTpacket3Hdr = 0x30\n+\n+\tSizeofTpacketStats   = 0x8\n+\tSizeofTpacketStatsV3 = 0xc\n )\n \n const (\n@@ -2025,3 +2133,183 @@ type SockExtendedErr struct {\n \tInfo   uint32\n \tData   uint32\n }\n+\n+type FanotifyEventMetadata struct {\n+\tEvent_len    uint32\n+\tVers         uint8\n+\tReserved     uint8\n+\tMetadata_len uint16\n+\tMask         uint64\n+\tFd           int32\n+\tPid          int32\n+}\n+\n+type FanotifyResponse struct {\n+\tFd       int32\n+\tResponse uint32\n+}\n+\n+const (\n+\tCRYPTO_MSG_BASE      = 0x10\n+\tCRYPTO_MSG_NEWALG    = 0x10\n+\tCRYPTO_MSG_DELALG    = 0x11\n+\tCRYPTO_MSG_UPDATEALG = 0x12\n+\tCRYPTO_MSG_GETALG    = 0x13\n+\tCRYPTO_MSG_DELRNG    = 0x14\n+\tCRYPTO_MSG_GETSTAT   = 0x15\n+)\n+\n+const (\n+\tCRYPTOCFGA_UNSPEC           = 0x0\n+\tCRYPTOCFGA_PRIORITY_VAL     = 0x1\n+\tCRYPTOCFGA_REPORT_LARVAL    = 0x2\n+\tCRYPTOCFGA_REPORT_HASH      = 0x3\n+\tCRYPTOCFGA_REPORT_BLKCIPHER = 0x4\n+\tCRYPTOCFGA_REPORT_AEAD      = 0x5\n+\tCRYPTOCFGA_REPORT_COMPRESS  = 0x6\n+\tCRYPTOCFGA_REPORT_RNG       = 0x7\n+\tCRYPTOCFGA_REPORT_CIPHER    = 0x8\n+\tCRYPTOCFGA_REPORT_AKCIPHER  = 0x9\n+\tCRYPTOCFGA_REPORT_KPP       = 0xa\n+\tCRYPTOCFGA_REPORT_ACOMP     = 0xb\n+\tCRYPTOCFGA_STAT_LARVAL      = 0xc\n+\tCRYPTOCFGA_STAT_HASH        = 0xd\n+\tCRYPTOCFGA_STAT_BLKCIPHER   = 0xe\n+\tCRYPTOCFGA_STAT_AEAD        = 0xf\n+\tCRYPTOCFGA_STAT_COMPRESS    = 0x10\n+\tCRYPTOCFGA_STAT_RNG         = 0x11\n+\tCRYPTOCFGA_STAT_CIPHER      = 0x12\n+\tCRYPTOCFGA_STAT_AKCIPHER    = 0x13\n+\tCRYPTOCFGA_STAT_KPP         = 0x14\n+\tCRYPTOCFGA_STAT_ACOMP       = 0x15\n+)\n+\n+type CryptoUserAlg struct {\n+\tName        [64]int8\n+\tDriver_name [64]int8\n+\tModule_name [64]int8\n+\tType        uint32\n+\tMask        uint32\n+\tRefcnt      uint32\n+\tFlags       uint32\n+}\n+\n+type CryptoStatAEAD struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatAKCipher struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tVerify_cnt   uint64\n+\tSign_cnt     uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatCipher struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatCompress struct {\n+\tType            [64]int8\n+\tCompress_cnt    uint64\n+\tCompress_tlen   uint64\n+\tDecompress_cnt  uint64\n+\tDecompress_tlen uint64\n+\tErr_cnt         uint64\n+}\n+\n+type CryptoStatHash struct {\n+\tType      [64]int8\n+\tHash_cnt  uint64\n+\tHash_tlen uint64\n+\tErr_cnt   uint64\n+}\n+\n+type CryptoStatKPP struct {\n+\tType                      [64]int8\n+\tSetsecret_cnt             uint64\n+\tGenerate_public_key_cnt   uint64\n+\tCompute_shared_secret_cnt uint64\n+\tErr_cnt                   uint64\n+}\n+\n+type CryptoStatRNG struct {\n+\tType          [64]int8\n+\tGenerate_cnt  uint64\n+\tGenerate_tlen uint64\n+\tSeed_cnt      uint64\n+\tErr_cnt       uint64\n+}\n+\n+type CryptoStatLarval struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportLarval struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportHash struct {\n+\tType       [64]int8\n+\tBlocksize  uint32\n+\tDigestsize uint32\n+}\n+\n+type CryptoReportCipher struct {\n+\tType        [64]int8\n+\tBlocksize   uint32\n+\tMin_keysize uint32\n+\tMax_keysize uint32\n+}\n+\n+type CryptoReportBlkCipher struct {\n+\tType        [64]int8\n+\tGeniv       [64]int8\n+\tBlocksize   uint32\n+\tMin_keysize uint32\n+\tMax_keysize uint32\n+\tIvsize      uint32\n+}\n+\n+type CryptoReportAEAD struct {\n+\tType        [64]int8\n+\tGeniv       [64]int8\n+\tBlocksize   uint32\n+\tMaxauthsize uint32\n+\tIvsize      uint32\n+}\n+\n+type CryptoReportComp struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportRNG struct {\n+\tType     [64]int8\n+\tSeedsize uint32\n+}\n+\n+type CryptoReportAKCipher struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportKPP struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportAcomp struct {\n+\tType [64]int8\n+}"
    },
    {
      "sha": "6bba58ed254552c61a476f0b86b9cb37b0ba3632",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go",
      "status": "modified",
      "additions": 430,
      "deletions": 142,
      "changes": 572,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7",
      "patch": "@@ -406,6 +406,11 @@ type TCPInfo struct {\n \tTotal_retrans  uint32\n }\n \n+type CanFilter struct {\n+\tId   uint32\n+\tMask uint32\n+}\n+\n const (\n \tSizeofSockaddrInet4     = 0x10\n \tSizeofSockaddrInet6     = 0x1c\n@@ -435,141 +440,185 @@ const (\n \tSizeofICMPv6Filter      = 0x20\n \tSizeofUcred             = 0xc\n \tSizeofTCPInfo           = 0x68\n+\tSizeofCanFilter         = 0x8\n )\n \n const (\n-\tIFA_UNSPEC           = 0x0\n-\tIFA_ADDRESS          = 0x1\n-\tIFA_LOCAL            = 0x2\n-\tIFA_LABEL            = 0x3\n-\tIFA_BROADCAST        = 0x4\n-\tIFA_ANYCAST          = 0x5\n-\tIFA_CACHEINFO        = 0x6\n-\tIFA_MULTICAST        = 0x7\n-\tIFLA_UNSPEC          = 0x0\n-\tIFLA_ADDRESS         = 0x1\n-\tIFLA_BROADCAST       = 0x2\n-\tIFLA_IFNAME          = 0x3\n-\tIFLA_INFO_KIND       = 0x1\n-\tIFLA_MTU             = 0x4\n-\tIFLA_LINK            = 0x5\n-\tIFLA_QDISC           = 0x6\n-\tIFLA_STATS           = 0x7\n-\tIFLA_COST            = 0x8\n-\tIFLA_PRIORITY        = 0x9\n-\tIFLA_MASTER          = 0xa\n-\tIFLA_WIRELESS        = 0xb\n-\tIFLA_PROTINFO        = 0xc\n-\tIFLA_TXQLEN          = 0xd\n-\tIFLA_MAP             = 0xe\n-\tIFLA_WEIGHT          = 0xf\n-\tIFLA_OPERSTATE       = 0x10\n-\tIFLA_LINKMODE        = 0x11\n-\tIFLA_LINKINFO        = 0x12\n-\tIFLA_NET_NS_PID      = 0x13\n-\tIFLA_IFALIAS         = 0x14\n-\tIFLA_NUM_VF          = 0x15\n-\tIFLA_VFINFO_LIST     = 0x16\n-\tIFLA_STATS64         = 0x17\n-\tIFLA_VF_PORTS        = 0x18\n-\tIFLA_PORT_SELF       = 0x19\n-\tIFLA_AF_SPEC         = 0x1a\n-\tIFLA_GROUP           = 0x1b\n-\tIFLA_NET_NS_FD       = 0x1c\n-\tIFLA_EXT_MASK        = 0x1d\n-\tIFLA_PROMISCUITY     = 0x1e\n-\tIFLA_NUM_TX_QUEUES   = 0x1f\n-\tIFLA_NUM_RX_QUEUES   = 0x20\n-\tIFLA_CARRIER         = 0x21\n-\tIFLA_PHYS_PORT_ID    = 0x22\n-\tIFLA_CARRIER_CHANGES = 0x23\n-\tIFLA_PHYS_SWITCH_ID  = 0x24\n-\tIFLA_LINK_NETNSID    = 0x25\n-\tIFLA_PHYS_PORT_NAME  = 0x26\n-\tIFLA_PROTO_DOWN      = 0x27\n-\tIFLA_GSO_MAX_SEGS    = 0x28\n-\tIFLA_GSO_MAX_SIZE    = 0x29\n-\tIFLA_PAD             = 0x2a\n-\tIFLA_XDP             = 0x2b\n-\tIFLA_EVENT           = 0x2c\n-\tIFLA_NEW_NETNSID     = 0x2d\n-\tIFLA_IF_NETNSID      = 0x2e\n-\tIFLA_MAX             = 0x33\n-\tRT_SCOPE_UNIVERSE    = 0x0\n-\tRT_SCOPE_SITE        = 0xc8\n-\tRT_SCOPE_LINK        = 0xfd\n-\tRT_SCOPE_HOST        = 0xfe\n-\tRT_SCOPE_NOWHERE     = 0xff\n-\tRT_TABLE_UNSPEC      = 0x0\n-\tRT_TABLE_COMPAT      = 0xfc\n-\tRT_TABLE_DEFAULT     = 0xfd\n-\tRT_TABLE_MAIN        = 0xfe\n-\tRT_TABLE_LOCAL       = 0xff\n-\tRT_TABLE_MAX         = 0xffffffff\n-\tRTA_UNSPEC           = 0x0\n-\tRTA_DST              = 0x1\n-\tRTA_SRC              = 0x2\n-\tRTA_IIF              = 0x3\n-\tRTA_OIF              = 0x4\n-\tRTA_GATEWAY          = 0x5\n-\tRTA_PRIORITY         = 0x6\n-\tRTA_PREFSRC          = 0x7\n-\tRTA_METRICS          = 0x8\n-\tRTA_MULTIPATH        = 0x9\n-\tRTA_FLOW             = 0xb\n-\tRTA_CACHEINFO        = 0xc\n-\tRTA_TABLE            = 0xf\n-\tRTA_MARK             = 0x10\n-\tRTA_MFC_STATS        = 0x11\n-\tRTA_VIA              = 0x12\n-\tRTA_NEWDST           = 0x13\n-\tRTA_PREF             = 0x14\n-\tRTA_ENCAP_TYPE       = 0x15\n-\tRTA_ENCAP            = 0x16\n-\tRTA_EXPIRES          = 0x17\n-\tRTA_PAD              = 0x18\n-\tRTA_UID              = 0x19\n-\tRTA_TTL_PROPAGATE    = 0x1a\n-\tRTA_IP_PROTO         = 0x1b\n-\tRTA_SPORT            = 0x1c\n-\tRTA_DPORT            = 0x1d\n-\tRTN_UNSPEC           = 0x0\n-\tRTN_UNICAST          = 0x1\n-\tRTN_LOCAL            = 0x2\n-\tRTN_BROADCAST        = 0x3\n-\tRTN_ANYCAST          = 0x4\n-\tRTN_MULTICAST        = 0x5\n-\tRTN_BLACKHOLE        = 0x6\n-\tRTN_UNREACHABLE      = 0x7\n-\tRTN_PROHIBIT         = 0x8\n-\tRTN_THROW            = 0x9\n-\tRTN_NAT              = 0xa\n-\tRTN_XRESOLVE         = 0xb\n-\tRTNLGRP_NONE         = 0x0\n-\tRTNLGRP_LINK         = 0x1\n-\tRTNLGRP_NOTIFY       = 0x2\n-\tRTNLGRP_NEIGH        = 0x3\n-\tRTNLGRP_TC           = 0x4\n-\tRTNLGRP_IPV4_IFADDR  = 0x5\n-\tRTNLGRP_IPV4_MROUTE  = 0x6\n-\tRTNLGRP_IPV4_ROUTE   = 0x7\n-\tRTNLGRP_IPV4_RULE    = 0x8\n-\tRTNLGRP_IPV6_IFADDR  = 0x9\n-\tRTNLGRP_IPV6_MROUTE  = 0xa\n-\tRTNLGRP_IPV6_ROUTE   = 0xb\n-\tRTNLGRP_IPV6_IFINFO  = 0xc\n-\tRTNLGRP_IPV6_PREFIX  = 0x12\n-\tRTNLGRP_IPV6_RULE    = 0x13\n-\tRTNLGRP_ND_USEROPT   = 0x14\n-\tSizeofNlMsghdr       = 0x10\n-\tSizeofNlMsgerr       = 0x14\n-\tSizeofRtGenmsg       = 0x1\n-\tSizeofNlAttr         = 0x4\n-\tSizeofRtAttr         = 0x4\n-\tSizeofIfInfomsg      = 0x10\n-\tSizeofIfAddrmsg      = 0x8\n-\tSizeofRtMsg          = 0xc\n-\tSizeofRtNexthop      = 0x8\n+\tNDA_UNSPEC              = 0x0\n+\tNDA_DST                 = 0x1\n+\tNDA_LLADDR              = 0x2\n+\tNDA_CACHEINFO           = 0x3\n+\tNDA_PROBES              = 0x4\n+\tNDA_VLAN                = 0x5\n+\tNDA_PORT                = 0x6\n+\tNDA_VNI                 = 0x7\n+\tNDA_IFINDEX             = 0x8\n+\tNDA_MASTER              = 0x9\n+\tNDA_LINK_NETNSID        = 0xa\n+\tNDA_SRC_VNI             = 0xb\n+\tNTF_USE                 = 0x1\n+\tNTF_SELF                = 0x2\n+\tNTF_MASTER              = 0x4\n+\tNTF_PROXY               = 0x8\n+\tNTF_EXT_LEARNED         = 0x10\n+\tNTF_OFFLOADED           = 0x20\n+\tNTF_ROUTER              = 0x80\n+\tNUD_INCOMPLETE          = 0x1\n+\tNUD_REACHABLE           = 0x2\n+\tNUD_STALE               = 0x4\n+\tNUD_DELAY               = 0x8\n+\tNUD_PROBE               = 0x10\n+\tNUD_FAILED              = 0x20\n+\tNUD_NOARP               = 0x40\n+\tNUD_PERMANENT           = 0x80\n+\tNUD_NONE                = 0x0\n+\tIFA_UNSPEC              = 0x0\n+\tIFA_ADDRESS             = 0x1\n+\tIFA_LOCAL               = 0x2\n+\tIFA_LABEL               = 0x3\n+\tIFA_BROADCAST           = 0x4\n+\tIFA_ANYCAST             = 0x5\n+\tIFA_CACHEINFO           = 0x6\n+\tIFA_MULTICAST           = 0x7\n+\tIFA_FLAGS               = 0x8\n+\tIFA_RT_PRIORITY         = 0x9\n+\tIFA_TARGET_NETNSID      = 0xa\n+\tIFLA_UNSPEC             = 0x0\n+\tIFLA_ADDRESS            = 0x1\n+\tIFLA_BROADCAST          = 0x2\n+\tIFLA_IFNAME             = 0x3\n+\tIFLA_MTU                = 0x4\n+\tIFLA_LINK               = 0x5\n+\tIFLA_QDISC              = 0x6\n+\tIFLA_STATS              = 0x7\n+\tIFLA_COST               = 0x8\n+\tIFLA_PRIORITY           = 0x9\n+\tIFLA_MASTER             = 0xa\n+\tIFLA_WIRELESS           = 0xb\n+\tIFLA_PROTINFO           = 0xc\n+\tIFLA_TXQLEN             = 0xd\n+\tIFLA_MAP                = 0xe\n+\tIFLA_WEIGHT             = 0xf\n+\tIFLA_OPERSTATE          = 0x10\n+\tIFLA_LINKMODE           = 0x11\n+\tIFLA_LINKINFO           = 0x12\n+\tIFLA_NET_NS_PID         = 0x13\n+\tIFLA_IFALIAS            = 0x14\n+\tIFLA_NUM_VF             = 0x15\n+\tIFLA_VFINFO_LIST        = 0x16\n+\tIFLA_STATS64            = 0x17\n+\tIFLA_VF_PORTS           = 0x18\n+\tIFLA_PORT_SELF          = 0x19\n+\tIFLA_AF_SPEC            = 0x1a\n+\tIFLA_GROUP              = 0x1b\n+\tIFLA_NET_NS_FD          = 0x1c\n+\tIFLA_EXT_MASK           = 0x1d\n+\tIFLA_PROMISCUITY        = 0x1e\n+\tIFLA_NUM_TX_QUEUES      = 0x1f\n+\tIFLA_NUM_RX_QUEUES      = 0x20\n+\tIFLA_CARRIER            = 0x21\n+\tIFLA_PHYS_PORT_ID       = 0x22\n+\tIFLA_CARRIER_CHANGES    = 0x23\n+\tIFLA_PHYS_SWITCH_ID     = 0x24\n+\tIFLA_LINK_NETNSID       = 0x25\n+\tIFLA_PHYS_PORT_NAME     = 0x26\n+\tIFLA_PROTO_DOWN         = 0x27\n+\tIFLA_GSO_MAX_SEGS       = 0x28\n+\tIFLA_GSO_MAX_SIZE       = 0x29\n+\tIFLA_PAD                = 0x2a\n+\tIFLA_XDP                = 0x2b\n+\tIFLA_EVENT              = 0x2c\n+\tIFLA_NEW_NETNSID        = 0x2d\n+\tIFLA_IF_NETNSID         = 0x2e\n+\tIFLA_TARGET_NETNSID     = 0x2e\n+\tIFLA_CARRIER_UP_COUNT   = 0x2f\n+\tIFLA_CARRIER_DOWN_COUNT = 0x30\n+\tIFLA_NEW_IFINDEX        = 0x31\n+\tIFLA_MIN_MTU            = 0x32\n+\tIFLA_MAX_MTU            = 0x33\n+\tIFLA_MAX                = 0x33\n+\tIFLA_INFO_KIND          = 0x1\n+\tIFLA_INFO_DATA          = 0x2\n+\tIFLA_INFO_XSTATS        = 0x3\n+\tIFLA_INFO_SLAVE_KIND    = 0x4\n+\tIFLA_INFO_SLAVE_DATA    = 0x5\n+\tRT_SCOPE_UNIVERSE       = 0x0\n+\tRT_SCOPE_SITE           = 0xc8\n+\tRT_SCOPE_LINK           = 0xfd\n+\tRT_SCOPE_HOST           = 0xfe\n+\tRT_SCOPE_NOWHERE        = 0xff\n+\tRT_TABLE_UNSPEC         = 0x0\n+\tRT_TABLE_COMPAT         = 0xfc\n+\tRT_TABLE_DEFAULT        = 0xfd\n+\tRT_TABLE_MAIN           = 0xfe\n+\tRT_TABLE_LOCAL          = 0xff\n+\tRT_TABLE_MAX            = 0xffffffff\n+\tRTA_UNSPEC              = 0x0\n+\tRTA_DST                 = 0x1\n+\tRTA_SRC                 = 0x2\n+\tRTA_IIF                 = 0x3\n+\tRTA_OIF                 = 0x4\n+\tRTA_GATEWAY             = 0x5\n+\tRTA_PRIORITY            = 0x6\n+\tRTA_PREFSRC             = 0x7\n+\tRTA_METRICS             = 0x8\n+\tRTA_MULTIPATH           = 0x9\n+\tRTA_FLOW                = 0xb\n+\tRTA_CACHEINFO           = 0xc\n+\tRTA_TABLE               = 0xf\n+\tRTA_MARK                = 0x10\n+\tRTA_MFC_STATS           = 0x11\n+\tRTA_VIA                 = 0x12\n+\tRTA_NEWDST              = 0x13\n+\tRTA_PREF                = 0x14\n+\tRTA_ENCAP_TYPE          = 0x15\n+\tRTA_ENCAP               = 0x16\n+\tRTA_EXPIRES             = 0x17\n+\tRTA_PAD                 = 0x18\n+\tRTA_UID                 = 0x19\n+\tRTA_TTL_PROPAGATE       = 0x1a\n+\tRTA_IP_PROTO            = 0x1b\n+\tRTA_SPORT               = 0x1c\n+\tRTA_DPORT               = 0x1d\n+\tRTN_UNSPEC              = 0x0\n+\tRTN_UNICAST             = 0x1\n+\tRTN_LOCAL               = 0x2\n+\tRTN_BROADCAST           = 0x3\n+\tRTN_ANYCAST             = 0x4\n+\tRTN_MULTICAST           = 0x5\n+\tRTN_BLACKHOLE           = 0x6\n+\tRTN_UNREACHABLE         = 0x7\n+\tRTN_PROHIBIT            = 0x8\n+\tRTN_THROW               = 0x9\n+\tRTN_NAT                 = 0xa\n+\tRTN_XRESOLVE            = 0xb\n+\tRTNLGRP_NONE            = 0x0\n+\tRTNLGRP_LINK            = 0x1\n+\tRTNLGRP_NOTIFY          = 0x2\n+\tRTNLGRP_NEIGH           = 0x3\n+\tRTNLGRP_TC              = 0x4\n+\tRTNLGRP_IPV4_IFADDR     = 0x5\n+\tRTNLGRP_IPV4_MROUTE     = 0x6\n+\tRTNLGRP_IPV4_ROUTE      = 0x7\n+\tRTNLGRP_IPV4_RULE       = 0x8\n+\tRTNLGRP_IPV6_IFADDR     = 0x9\n+\tRTNLGRP_IPV6_MROUTE     = 0xa\n+\tRTNLGRP_IPV6_ROUTE      = 0xb\n+\tRTNLGRP_IPV6_IFINFO     = 0xc\n+\tRTNLGRP_IPV6_PREFIX     = 0x12\n+\tRTNLGRP_IPV6_RULE       = 0x13\n+\tRTNLGRP_ND_USEROPT      = 0x14\n+\tSizeofNlMsghdr          = 0x10\n+\tSizeofNlMsgerr          = 0x14\n+\tSizeofRtGenmsg          = 0x1\n+\tSizeofNlAttr            = 0x4\n+\tSizeofRtAttr            = 0x4\n+\tSizeofIfInfomsg         = 0x10\n+\tSizeofIfAddrmsg         = 0x8\n+\tSizeofRtMsg             = 0xc\n+\tSizeofRtNexthop         = 0x8\n+\tSizeofNdUseroptmsg      = 0x10\n+\tSizeofNdMsg             = 0xc\n )\n \n type NlMsghdr struct {\n@@ -635,6 +684,27 @@ type RtNexthop struct {\n \tIfindex int32\n }\n \n+type NdUseroptmsg struct {\n+\tFamily    uint8\n+\tPad1      uint8\n+\tOpts_len  uint16\n+\tIfindex   int32\n+\tIcmp_type uint8\n+\tIcmp_code uint8\n+\tPad2      uint16\n+\tPad3      uint32\n+}\n+\n+type NdMsg struct {\n+\tFamily  uint8\n+\tPad1    uint8\n+\tPad2    uint16\n+\tIfindex int32\n+\tState   uint16\n+\tFlags   uint8\n+\tType    uint8\n+}\n+\n const (\n \tSizeofSockFilter = 0x8\n \tSizeofSockFprog  = 0x10\n@@ -966,7 +1036,8 @@ type PerfEventAttr struct {\n \tClockid            int32\n \tSample_regs_intr   uint64\n \tAux_watermark      uint32\n-\t_                  uint32\n+\tSample_max_stack   uint16\n+\t_                  uint16\n }\n \n type PerfEventMmapPage struct {\n@@ -1069,6 +1140,7 @@ const (\n \tPERF_COUNT_SW_ALIGNMENT_FAULTS = 0x7\n \tPERF_COUNT_SW_EMULATION_FAULTS = 0x8\n \tPERF_COUNT_SW_DUMMY            = 0x9\n+\tPERF_COUNT_SW_BPF_OUTPUT       = 0xa\n \n \tPERF_SAMPLE_IP           = 0x1\n \tPERF_SAMPLE_TID          = 0x2\n@@ -1090,21 +1162,38 @@ const (\n \tPERF_SAMPLE_BRANCH_ANY_CALL   = 0x10\n \tPERF_SAMPLE_BRANCH_ANY_RETURN = 0x20\n \tPERF_SAMPLE_BRANCH_IND_CALL   = 0x40\n+\tPERF_SAMPLE_BRANCH_ABORT_TX   = 0x80\n+\tPERF_SAMPLE_BRANCH_IN_TX      = 0x100\n+\tPERF_SAMPLE_BRANCH_NO_TX      = 0x200\n+\tPERF_SAMPLE_BRANCH_COND       = 0x400\n+\tPERF_SAMPLE_BRANCH_CALL_STACK = 0x800\n+\tPERF_SAMPLE_BRANCH_IND_JUMP   = 0x1000\n+\tPERF_SAMPLE_BRANCH_CALL       = 0x2000\n+\tPERF_SAMPLE_BRANCH_NO_FLAGS   = 0x4000\n+\tPERF_SAMPLE_BRANCH_NO_CYCLES  = 0x8000\n+\tPERF_SAMPLE_BRANCH_TYPE_SAVE  = 0x10000\n \n \tPERF_FORMAT_TOTAL_TIME_ENABLED = 0x1\n \tPERF_FORMAT_TOTAL_TIME_RUNNING = 0x2\n \tPERF_FORMAT_ID                 = 0x4\n \tPERF_FORMAT_GROUP              = 0x8\n \n-\tPERF_RECORD_MMAP       = 0x1\n-\tPERF_RECORD_LOST       = 0x2\n-\tPERF_RECORD_COMM       = 0x3\n-\tPERF_RECORD_EXIT       = 0x4\n-\tPERF_RECORD_THROTTLE   = 0x5\n-\tPERF_RECORD_UNTHROTTLE = 0x6\n-\tPERF_RECORD_FORK       = 0x7\n-\tPERF_RECORD_READ       = 0x8\n-\tPERF_RECORD_SAMPLE     = 0x9\n+\tPERF_RECORD_MMAP            = 0x1\n+\tPERF_RECORD_LOST            = 0x2\n+\tPERF_RECORD_COMM            = 0x3\n+\tPERF_RECORD_EXIT            = 0x4\n+\tPERF_RECORD_THROTTLE        = 0x5\n+\tPERF_RECORD_UNTHROTTLE      = 0x6\n+\tPERF_RECORD_FORK            = 0x7\n+\tPERF_RECORD_READ            = 0x8\n+\tPERF_RECORD_SAMPLE          = 0x9\n+\tPERF_RECORD_MMAP2           = 0xa\n+\tPERF_RECORD_AUX             = 0xb\n+\tPERF_RECORD_ITRACE_START    = 0xc\n+\tPERF_RECORD_LOST_SAMPLES    = 0xd\n+\tPERF_RECORD_SWITCH          = 0xe\n+\tPERF_RECORD_SWITCH_CPU_WIDE = 0xf\n+\tPERF_RECORD_NAMESPACES      = 0x10\n \n \tPERF_CONTEXT_HV     = -0x20\n \tPERF_CONTEXT_KERNEL = -0x80\n@@ -1117,6 +1206,7 @@ const (\n \tPERF_FLAG_FD_NO_GROUP = 0x1\n \tPERF_FLAG_FD_OUTPUT   = 0x2\n \tPERF_FLAG_PID_CGROUP  = 0x4\n+\tPERF_FLAG_FD_CLOEXEC  = 0x8\n )\n \n const (\n@@ -1374,6 +1464,21 @@ type TpacketBlockDesc struct {\n \tHdr     [40]byte\n }\n \n+type TpacketBDTS struct {\n+\tSec  uint32\n+\tUsec uint32\n+}\n+\n+type TpacketHdrV1 struct {\n+\tBlock_status        uint32\n+\tNum_pkts            uint32\n+\tOffset_to_first_pkt uint32\n+\tBlk_len             uint32\n+\tSeq_num             uint64\n+\tTs_first_pkt        TpacketBDTS\n+\tTs_last_pkt         TpacketBDTS\n+}\n+\n type TpacketReq struct {\n \tBlock_size uint32\n \tBlock_nr   uint32\n@@ -1422,6 +1527,9 @@ const (\n \tSizeofTpacketHdr  = 0x20\n \tSizeofTpacket2Hdr = 0x20\n \tSizeofTpacket3Hdr = 0x30\n+\n+\tSizeofTpacketStats   = 0x8\n+\tSizeofTpacketStatsV3 = 0xc\n )\n \n const (\n@@ -2038,3 +2146,183 @@ type SockExtendedErr struct {\n \tInfo   uint32\n \tData   uint32\n }\n+\n+type FanotifyEventMetadata struct {\n+\tEvent_len    uint32\n+\tVers         uint8\n+\tReserved     uint8\n+\tMetadata_len uint16\n+\tMask         uint64\n+\tFd           int32\n+\tPid          int32\n+}\n+\n+type FanotifyResponse struct {\n+\tFd       int32\n+\tResponse uint32\n+}\n+\n+const (\n+\tCRYPTO_MSG_BASE      = 0x10\n+\tCRYPTO_MSG_NEWALG    = 0x10\n+\tCRYPTO_MSG_DELALG    = 0x11\n+\tCRYPTO_MSG_UPDATEALG = 0x12\n+\tCRYPTO_MSG_GETALG    = 0x13\n+\tCRYPTO_MSG_DELRNG    = 0x14\n+\tCRYPTO_MSG_GETSTAT   = 0x15\n+)\n+\n+const (\n+\tCRYPTOCFGA_UNSPEC           = 0x0\n+\tCRYPTOCFGA_PRIORITY_VAL     = 0x1\n+\tCRYPTOCFGA_REPORT_LARVAL    = 0x2\n+\tCRYPTOCFGA_REPORT_HASH      = 0x3\n+\tCRYPTOCFGA_REPORT_BLKCIPHER = 0x4\n+\tCRYPTOCFGA_REPORT_AEAD      = 0x5\n+\tCRYPTOCFGA_REPORT_COMPRESS  = 0x6\n+\tCRYPTOCFGA_REPORT_RNG       = 0x7\n+\tCRYPTOCFGA_REPORT_CIPHER    = 0x8\n+\tCRYPTOCFGA_REPORT_AKCIPHER  = 0x9\n+\tCRYPTOCFGA_REPORT_KPP       = 0xa\n+\tCRYPTOCFGA_REPORT_ACOMP     = 0xb\n+\tCRYPTOCFGA_STAT_LARVAL      = 0xc\n+\tCRYPTOCFGA_STAT_HASH        = 0xd\n+\tCRYPTOCFGA_STAT_BLKCIPHER   = 0xe\n+\tCRYPTOCFGA_STAT_AEAD        = 0xf\n+\tCRYPTOCFGA_STAT_COMPRESS    = 0x10\n+\tCRYPTOCFGA_STAT_RNG         = 0x11\n+\tCRYPTOCFGA_STAT_CIPHER      = 0x12\n+\tCRYPTOCFGA_STAT_AKCIPHER    = 0x13\n+\tCRYPTOCFGA_STAT_KPP         = 0x14\n+\tCRYPTOCFGA_STAT_ACOMP       = 0x15\n+)\n+\n+type CryptoUserAlg struct {\n+\tName        [64]int8\n+\tDriver_name [64]int8\n+\tModule_name [64]int8\n+\tType        uint32\n+\tMask        uint32\n+\tRefcnt      uint32\n+\tFlags       uint32\n+}\n+\n+type CryptoStatAEAD struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatAKCipher struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tVerify_cnt   uint64\n+\tSign_cnt     uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatCipher struct {\n+\tType         [64]int8\n+\tEncrypt_cnt  uint64\n+\tEncrypt_tlen uint64\n+\tDecrypt_cnt  uint64\n+\tDecrypt_tlen uint64\n+\tErr_cnt      uint64\n+}\n+\n+type CryptoStatCompress struct {\n+\tType            [64]int8\n+\tCompress_cnt    uint64\n+\tCompress_tlen   uint64\n+\tDecompress_cnt  uint64\n+\tDecompress_tlen uint64\n+\tErr_cnt         uint64\n+}\n+\n+type CryptoStatHash struct {\n+\tType      [64]int8\n+\tHash_cnt  uint64\n+\tHash_tlen uint64\n+\tErr_cnt   uint64\n+}\n+\n+type CryptoStatKPP struct {\n+\tType                      [64]int8\n+\tSetsecret_cnt             uint64\n+\tGenerate_public_key_cnt   uint64\n+\tCompute_shared_secret_cnt uint64\n+\tErr_cnt                   uint64\n+}\n+\n+type CryptoStatRNG struct {\n+\tType          [64]int8\n+\tGenerate_cnt  uint64\n+\tGenerate_tlen uint64\n+\tSeed_cnt      uint64\n+\tErr_cnt       uint64\n+}\n+\n+type CryptoStatLarval struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportLarval struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportHash struct {\n+\tType       [64]int8\n+\tBlocksize  uint32\n+\tDigestsize uint32\n+}\n+\n+type CryptoReportCipher struct {\n+\tType        [64]int8\n+\tBlocksize   uint32\n+\tMin_keysize uint32\n+\tMax_keysize uint32\n+}\n+\n+type CryptoReportBlkCipher struct {\n+\tType        [64]int8\n+\tGeniv       [64]int8\n+\tBlocksize   uint32\n+\tMin_keysize uint32\n+\tMax_keysize uint32\n+\tIvsize      uint32\n+}\n+\n+type CryptoReportAEAD struct {\n+\tType        [64]int8\n+\tGeniv       [64]int8\n+\tBlocksize   uint32\n+\tMaxauthsize uint32\n+\tIvsize      uint32\n+}\n+\n+type CryptoReportComp struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportRNG struct {\n+\tType     [64]int8\n+\tSeedsize uint32\n+}\n+\n+type CryptoReportAKCipher struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportKPP struct {\n+\tType [64]int8\n+}\n+\n+type CryptoReportAcomp struct {\n+\tType [64]int8\n+}"
    },
    {
      "sha": "07aa92b29d1c52a1145442af348525bdaaa48e92",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "66dba9aab6d2ecf54c4bfb94370c28af5a197e11",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "b11b77d3ba4ef6adb9826f62d94d4f469fa398cb",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "ccfd9522ebcd3a82aa45e04862ab07ad3a34d035",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "95374fd9b50d1280030615ac3651e34f5017fc12",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mips64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "9d4953daf53d63549200f991a6eb2765e73aef22",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_mipsle.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "a436410d621a8a91a8f47937c6e52680ea2ec4ee",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "dbe32bb3035db7e6c427ea70f7e671cb0738e407",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_ppc64le.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "774d5c3eb73f2a3a66d2f3e37a6c88196daffae6",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_riscv64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "3b7747ed968a7933b13da9a88587353cbd2369cc",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_s390x.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "c606f4776b052d412e49162f30f8cfb015918198",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_linux_sparc64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "900fb44622f36050ff0acd7f6b9109ed01353b9a",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_386.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "028fa78d74afc76101c31580a541dfa73918897d",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_amd64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "b45d5eedffe91c69b5127c2de2faca4a3b520499",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "fa369a32a2df0aeb0a488b1d98974f382694d975",
      "filename": "backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/sys/unix/ztypes_openbsd_arm64.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "15167cd746c560e5b3d3b233a169aa64d3e9101e",
      "filename": "backend/vendor/golang.org/x/text/AUTHORS",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/AUTHORS",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/AUTHORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/AUTHORS?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "1c4577e9680611383f46044d17fa343a96997c3c",
      "filename": "backend/vendor/golang.org/x/text/CONTRIBUTORS",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/CONTRIBUTORS",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/CONTRIBUTORS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/CONTRIBUTORS?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "6a66aea5eafe0ca6a688840c47219556c552488e",
      "filename": "backend/vendor/golang.org/x/text/LICENSE",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/LICENSE",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/LICENSE",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/LICENSE?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "733099041f84fa1e58611ab2e11af51c1f26d1d2",
      "filename": "backend/vendor/golang.org/x/text/PATENTS",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/PATENTS",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/PATENTS",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/PATENTS?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "e2b70f76c2007c531bef87be67dc924207b2aa1d",
      "filename": "backend/vendor/golang.org/x/text/secure/bidirule/bidirule.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/secure/bidirule/bidirule.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "e4c62289f90d41a1c41cf07491bc12963dccd8c3",
      "filename": "backend/vendor/golang.org/x/text/secure/bidirule/bidirule10.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule10.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule10.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/secure/bidirule/bidirule10.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "02b9e1e9d4c27000937c72482dd72b29aacaa3bc",
      "filename": "backend/vendor/golang.org/x/text/secure/bidirule/bidirule9.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule9.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/secure/bidirule/bidirule9.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/secure/bidirule/bidirule9.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "520b9ada0e28e8a40a573eeb20e907116d405bb3",
      "filename": "backend/vendor/golang.org/x/text/transform/transform.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/transform/transform.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/transform/transform.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/transform/transform.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "e8edc54cc28d20d9a2bb02a6a7310f87e8fe39ed",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/bidi.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/bidi.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/bidi.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/bidi.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "18539397914bfb0dfe473d0b9f3e55189d35f8b4",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/bracket.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/bracket.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/bracket.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/bracket.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "48d144008aa9c3910e2c2724ef867a51fddd5248",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/core.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/core.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/core.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/core.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "987fc169cc04a1b914770a475a619d26cbcf2c21",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/gen.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/gen.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "02c3b505d640ec69d2a3ec9ed04401b4e4b42487",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/gen_ranges.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen_ranges.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen_ranges.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/gen_ranges.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "9cb9942894920a5c56440b73cc356b3b67fab9e5",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/gen_trieval.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen_trieval.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/gen_trieval.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/gen_trieval.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "7c9484e1f50c3517c207782b130c7fbbe0950712",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/prop.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/prop.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/prop.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/prop.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "d8c94e1bd1a651c78c2175360d53530b9fc80128",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/tables10.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables10.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables10.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/tables10.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "022e3c69092df1e4408c72a21ff35a44a599c994",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/tables11.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables11.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables11.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/tables11.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "0ca0193ebe2d6192c56356d7bb723aa7d794fee0",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/tables9.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables9.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/tables9.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/tables9.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "4c459c4b72e0ebc286e0426f83b68b4c4bc7478a",
      "filename": "backend/vendor/golang.org/x/text/unicode/bidi/trieval.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/trieval.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/bidi/trieval.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/bidi/trieval.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "e2087bce52771ac4fc906f1afa9d27efecbac975",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/composition.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/composition.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/composition.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/composition.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "526c7033ac464cc1fe840feac6bb84d81917514c",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/forminfo.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/forminfo.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/forminfo.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/forminfo.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "479e35bc2585b332a9a8806d49cb198d1f2b8576",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/input.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/input.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/input.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/input.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "417c6b26894da4d3fa68883b6d049fa7a399c569",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/iter.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/iter.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/iter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/iter.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "30a3aa93343d22d5cb928b2c7cb54b25e41b95c3",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/maketables.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/maketables.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/maketables.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/maketables.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "95efcf26e81d7ab5608a42dddaa6b331200c8fbd",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/normalize.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/normalize.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/normalize.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/normalize.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "b38096f5ca92b71382283f45701ce53cfecc195c",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/readwriter.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/readwriter.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/readwriter.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/readwriter.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "26fbd55a1243df8b03f820542f0939b6a3d291d1",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/tables10.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables10.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables10.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/tables10.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "7297cce32b79d4dc43ee710f9687f0c78296fcda",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/tables11.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables11.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables11.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/tables11.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "942906929135c9665c7ec0d5f7524e37f7ea4ad9",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/tables9.0.0.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables9.0.0.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/tables9.0.0.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/tables9.0.0.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "a1d366ae48720ac93c9ba27df82e271d3bd37d7f",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/transform.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/transform.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/transform.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/transform.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "423386bf4369fde49e041a0b0a88ca9578664648",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/trie.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/trie.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/trie.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/trie.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "45d711900d144f5e66fb29941c1a8700049ab0c9",
      "filename": "backend/vendor/golang.org/x/text/unicode/norm/triegen.go",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/triegen.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/golang.org/x/text/unicode/norm/triegen.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/golang.org/x/text/unicode/norm/triegen.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "8c9697674f20d5946de811efcea9c745e073b8fd",
      "filename": "backend/vendor/google.golang.org/appengine/appengine.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/google.golang.org/appengine/appengine.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/google.golang.org/appengine/appengine.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/google.golang.org/appengine/appengine.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "a6ec19e14cfc4c7d7f69d8b28d0cab8665232bb3",
      "filename": "backend/vendor/google.golang.org/appengine/internal/api.go",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/google.golang.org/appengine/internal/api.go",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/google.golang.org/appengine/internal/api.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/google.golang.org/appengine/internal/api.go?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    },
    {
      "sha": "bdaf6687515b3f8579c851fb344bab5f1bad859a",
      "filename": "backend/vendor/modules.txt",
      "status": "modified",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/umputun/remark/blob/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/modules.txt",
      "raw_url": "https://github.com/umputun/remark/raw/4adbca22b27a88054a507fb7875874731387a8b7/backend/vendor/modules.txt",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/vendor/modules.txt?ref=4adbca22b27a88054a507fb7875874731387a8b7"
    }
  ]
}
