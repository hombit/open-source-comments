{
  "sha": "2d38018722b6b2f9169d7a32c4c5dab9f914b1d5",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjJkMzgwMTg3MjJiNmIyZjkxNjlkN2EzMmM0YzVkYWI5ZjkxNGIxZDU=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-05-19T18:24:54Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-05-19T18:24:54Z"
    },
    "message": "remove commented old rss code",
    "tree": {
      "sha": "5a1877de40f4bc3f6d756f5c987dcec6de2087d6",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/5a1877de40f4bc3f6d756f5c987dcec6de2087d6"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5",
  "html_url": "https://github.com/umputun/remark/commit/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "350cca894dd455ec0650c0f7d6222809827bb442",
      "url": "https://api.github.com/repos/umputun/remark/commits/350cca894dd455ec0650c0f7d6222809827bb442",
      "html_url": "https://github.com/umputun/remark/commit/350cca894dd455ec0650c0f7d6222809827bb442"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 0,
    "deletions": 23
  },
  "files": [
    {
      "sha": "b2d1fe3c38ef90ba6900a5725743612ee77dc3cd",
      "filename": "backend/app/rest/api/rss.go",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark/blob/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5/backend/app/rest/api/rss.go",
      "raw_url": "https://github.com/umputun/remark/raw/2d38018722b6b2f9169d7a32c4c5dab9f914b1d5/backend/app/rest/api/rss.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rss.go?ref=2d38018722b6b2f9169d7a32c4c5dab9f914b1d5",
      "patch": "@@ -103,29 +103,6 @@ func (s *rss) repliesCtrl(w http.ResponseWriter, r *http.Request) {\n \tkey := cache.NewKey(siteID).ID(URLKey(r)).Scopes(siteID, lastCommentsScope)\n \tdata, err := s.cache.Get(key, func() (res []byte, e error) {\n \n-\t\t//comments, e := s.dataService.UserReplies(siteID, userID, maxRssItems, maxReplyDuration)\n-\t\t//if e != nil {\n-\t\t//\treturn nil, errors.Wrap(e, \"can't get last comments\")\n-\t\t//}\n-\t\t//replies := []store.Comment{}\n-\t\t//for _, c := range comments {\n-\t\t//\tif len(replies) > maxRssItems || c.Timestamp.Add(maxReplyDuration).Before(time.Now()) {\n-\t\t//\t\tbreak\n-\t\t//\t}\n-\t\t//\tif c.User.ID != userID {\n-\t\t//\t\tuserName = c.User.Name\n-\t\t//\t}\n-\t\t//\tif c.ParentID != \"\" && !c.Deleted && c.User.ID != userID { // not interested in replies to yourself\n-\t\t//\t\tvar pc store.Comment\n-\t\t//\t\tif pc, e = s.dataService.Get(c.Locator, c.ParentID, rest.GetUserOrEmpty(r)); e != nil {\n-\t\t//\t\t\treturn nil, errors.Wrap(e, \"can't get parent comment\")\n-\t\t//\t\t}\n-\t\t//\t\tif pc.User.ID == userID {\n-\t\t//\t\t\treplies = append(replies, c)\n-\t\t//\t\t}\n-\t\t//\t}\n-\t\t//}\n-\n \t\treplies, userName, e := s.dataService.UserReplies(siteID, userID, maxRssItems, maxReplyDuration)\n \t\tif e != nil {\n \t\t\treturn nil, errors.Wrap(e, \"can't get last comments\")"
    }
  ]
}
