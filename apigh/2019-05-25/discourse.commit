{
  "sha": "da39d66e83330e6f6735d6bb67c90466e4810129",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpkYTM5ZDY2ZTgzMzMwZTZmNjczNWQ2YmI2N2M5MDQ2NmU0ODEwMTI5",
  "commit": {
    "author": {
      "name": "Dan Ungureanu",
      "email": "dan@ungureanu.me",
      "date": "2019-05-25T13:53:03Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-05-25T13:53:03Z"
    },
    "message": "DEV: Improve support for plugins. (#7332)\n\n* DEV: Allow NewPostManager handlers handle PMs.\r\n* DEV: Add custom fields topic option to PostCreator.\r\n* DEV: Add topic_id to serializer data.\r\n* DEV: Wrap topic title from notification item in a span.",
    "tree": {
      "sha": "436500a5b68dd225c1d961ac93b1ec5a3b1a85e6",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/436500a5b68dd225c1d961ac93b1ec5a3b1a85e6"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/da39d66e83330e6f6735d6bb67c90466e4810129",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc6Ui/CRBK7hj4Ov3rIwAAdHIIADzA1A0kXPm54/OUyj8wyOA4\ndXz886JbDfKP3TvgrmqcWWxcbDb2rWDSbkJzVVA2gPRxK/9xWcqApK3B/LeEvjHo\n6y42iFOpPeMoan2PhEEBFe6GXHztkfrnVh5l/34w//CSRnz664HYN95n6XZZu1eO\nek1l3GOGUnB/LZzmYqzAcgxrEc2q3oU0ounCEGRFufeNHxCS+bsOyJXg0qbpgmJv\neep5pd6WZB4wthFJmaj1QsqFXdDhR4jjfyXhVc89qZYs0FrnMeRMdu/73PXPIU6u\nL3bdksic6+txhkNMN1pXTbWJMUGaVZq5GuukPfeKXCHUPZLZ0RTaf4T6RHsAO24=\n=F4lE\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 436500a5b68dd225c1d961ac93b1ec5a3b1a85e6\nparent 6398ded7983caf6fafea0b808f2eb623d7e2406b\nauthor Dan Ungureanu <dan@ungureanu.me> 1558792383 +0300\ncommitter GitHub <noreply@github.com> 1558792383 +0300\n\nDEV: Improve support for plugins. (#7332)\n\n* DEV: Allow NewPostManager handlers handle PMs.\r\n* DEV: Add custom fields topic option to PostCreator.\r\n* DEV: Add topic_id to serializer data.\r\n* DEV: Wrap topic title from notification item in a span."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/da39d66e83330e6f6735d6bb67c90466e4810129",
  "html_url": "https://github.com/discourse/discourse/commit/da39d66e83330e6f6735d6bb67c90466e4810129",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/da39d66e83330e6f6735d6bb67c90466e4810129/comments",
  "author": {
    "login": "udan11",
    "id": 4147664,
    "node_id": "MDQ6VXNlcjQxNDc2NjQ=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/4147664?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/udan11",
    "html_url": "https://github.com/udan11",
    "followers_url": "https://api.github.com/users/udan11/followers",
    "following_url": "https://api.github.com/users/udan11/following{/other_user}",
    "gists_url": "https://api.github.com/users/udan11/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/udan11/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/udan11/subscriptions",
    "organizations_url": "https://api.github.com/users/udan11/orgs",
    "repos_url": "https://api.github.com/users/udan11/repos",
    "events_url": "https://api.github.com/users/udan11/events{/privacy}",
    "received_events_url": "https://api.github.com/users/udan11/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6398ded7983caf6fafea0b808f2eb623d7e2406b",
      "url": "https://api.github.com/repos/discourse/discourse/commits/6398ded7983caf6fafea0b808f2eb623d7e2406b",
      "html_url": "https://github.com/discourse/discourse/commit/6398ded7983caf6fafea0b808f2eb623d7e2406b"
    }
  ],
  "stats": {
    "total": 47,
    "additions": 29,
    "deletions": 18
  },
  "files": [
    {
      "sha": "620231cf7b2bb0aba76e2989c5483557a3ebda52",
      "filename": "app/assets/javascripts/discourse/models/composer.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/javascripts/discourse/models/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/javascripts/discourse/models/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/composer.js.es6?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -724,6 +724,7 @@ const Composer = RestModel.extend({\n     }\n \n     const props = {\n+      topic_id: this.topic.id,\n       raw: this.reply,\n       raw_old: this.editConflict ? null : this.originalText,\n       edit_reason: opts.editReason,"
    },
    {
      "sha": "a298e1ab938c394e2f9362b019197d1180df665c",
      "filename": "app/assets/javascripts/discourse/widgets/notification-item.js.es6",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/javascripts/discourse/widgets/notification-item.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/javascripts/discourse/widgets/notification-item.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/widgets/notification-item.js.es6?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -85,6 +85,11 @@ createWidget(\"notification-item\", {\n     }\n \n     if (this.attrs.fancy_title) {\n+      if (this.attrs.topic_id) {\n+        return `<span data-topic-id=\"${this.attrs.topic_id}\">${\n+          this.attrs.fancy_title\n+        }</span>`;\n+      }\n       return this.attrs.fancy_title;\n     }\n "
    },
    {
      "sha": "edb8a16ad7a93c65a7bcd75e0b01bc8da8eb952d",
      "filename": "app/assets/stylesheets/common/base/menu-panel.scss",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/base/menu-panel.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/base/menu-panel.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/menu-panel.scss?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -169,7 +169,7 @@\n         display: none;\n       }\n \n-      span {\n+      span:first-child {\n         color: $primary;\n       }\n "
    },
    {
      "sha": "676baa76324741af3c4594d2da00740e42dcbf39",
      "filename": "app/assets/stylesheets/common/base/user.scss",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/base/user.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/base/user.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/user.scss?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -671,7 +671,7 @@\n       margin-right: 0.5em;\n     }\n \n-    span {\n+    span:first-child {\n       color: $primary;\n     }\n "
    },
    {
      "sha": "aff93ede1fbf8b000ca7131681c674f640aa22ab",
      "filename": "app/assets/stylesheets/common/components/user-stream-item.scss",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/components/user-stream-item.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/app/assets/stylesheets/common/components/user-stream-item.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/components/user-stream-item.scss?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -102,7 +102,7 @@\n     p {\n       display: inline-block;\n \n-      span {\n+      span:first-child {\n         color: $primary;\n       }\n     }"
    },
    {
      "sha": "b03bec874be6e740cd4e37a2ca69bb3965eaedd0",
      "filename": "lib/new_post_manager.rb",
      "status": "modified",
      "additions": 7,
      "deletions": 12,
      "changes": 19,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/lib/new_post_manager.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/lib/new_post_manager.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/new_post_manager.rb?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -22,7 +22,7 @@ def self.handlers\n   end\n \n   def self.clear_handlers!\n-    @sorted_handlers = [{ priority: 0, proc: method(:default_handler) }]\n+    @sorted_handlers = []\n   end\n \n   def self.add_handler(priority = 0, &block)\n@@ -178,22 +178,17 @@ def perform\n       return result\n     end\n \n-    # We never queue private messages\n-    return perform_create_post if @args[:archetype] == Archetype.private_message\n-\n-    if args[:topic_id] && Topic.where(id: args[:topic_id], archetype: Archetype.private_message).exists?\n-      return perform_create_post\n-    end\n-\n     # Perform handlers until one returns a result\n-    handled = NewPostManager.handlers.any? do |handler|\n+    NewPostManager.handlers.any? do |handler|\n       result = handler.call(self)\n       return result if result\n-\n-      false\n     end\n \n-    perform_create_post unless handled\n+    # We never queue private messages\n+    return perform_create_post if @args[:archetype] == Archetype.private_message ||\n+                                  (args[:topic_id] && Topic.where(id: args[:topic_id], archetype: Archetype.private_message).exists?)\n+\n+    NewPostManager.default_handler(self) || perform_create_post\n   end\n \n   # Enqueue this post"
    },
    {
      "sha": "70f60c9039a0d18e20f70ced3d7700267631f0cd",
      "filename": "lib/post_creator.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/lib/post_creator.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/lib/post_creator.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/post_creator.rb?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -56,6 +56,7 @@ class PostCreator\n   #     pinned_at             - Topic pinned time (optional)\n   #     pinned_globally       - Is the topic pinned globally (optional)\n   #     shared_draft          - Is the topic meant to be a shared draft\n+  #     topic_opts            - Options to be overwritten for topic\n   #\n   def initialize(user, opts)\n     # TODO: we should reload user in case it is tainted, should take in a user_id as opposed to user\n@@ -410,7 +411,8 @@ def unarchive_message\n   def create_topic\n     return if @topic\n     begin\n-      topic_creator = TopicCreator.new(@user, guardian, @opts)\n+      opts = @opts[:topic_opts] ? @opts.merge(@opts[:topic_opts]) : @opts\n+      topic_creator = TopicCreator.new(@user, guardian, opts)\n       @topic = topic_creator.create\n     rescue ActiveRecord::Rollback\n       rollback_from_errors!(topic_creator)"
    },
    {
      "sha": "e46f2f6e3ac908044e48747f76d79b1d07f9697d",
      "filename": "lib/topic_creator.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/lib/topic_creator.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/lib/topic_creator.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/topic_creator.rb?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -37,6 +37,9 @@ def valid?\n   def create\n     topic = Topic.new(setup_topic_params)\n     setup_tags(topic)\n+    if fields = @opts[:custom_fields]\n+      topic.custom_fields = fields\n+    end\n \n     DiscourseEvent.trigger(:before_create_topic, topic, self)\n "
    },
    {
      "sha": "269ebcbb500195e81cfc5a1f75c2aed5bb342807",
      "filename": "spec/components/new_post_manager_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/spec/components/new_post_manager_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/spec/components/new_post_manager_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/new_post_manager_spec.rb?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -212,7 +212,7 @@\n       handler = -> { nil }\n \n       NewPostManager.add_handler(&handler)\n-      expect(NewPostManager.handlers).to eq([default_handler, handler])\n+      expect(NewPostManager.handlers).to eq([handler])\n     end\n \n     it \"can be added in high priority\" do\n@@ -223,7 +223,7 @@\n       NewPostManager.add_handler(100, &a)\n       NewPostManager.add_handler(50, &b)\n       NewPostManager.add_handler(101, &c)\n-      expect(NewPostManager.handlers).to eq([c, a, b, default_handler])\n+      expect(NewPostManager.handlers).to eq([c, a, b])\n     end\n \n   end"
    },
    {
      "sha": "c4decf5fa83442430c602df31f77dac77e4bdd2b",
      "filename": "spec/components/post_creator_spec.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/da39d66e83330e6f6735d6bb67c90466e4810129/spec/components/post_creator_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/da39d66e83330e6f6735d6bb67c90466e4810129/spec/components/post_creator_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/post_creator_spec.rb?ref=da39d66e83330e6f6735d6bb67c90466e4810129",
      "patch": "@@ -54,6 +54,11 @@\n       expect { creator.create }.to raise_error(Discourse::InvalidAccess)\n     end\n \n+    it \"can be created with custom fields\" do\n+      post = PostCreator.create(user, basic_topic_params.merge(topic_opts: { custom_fields: { hello: \"world\" } }))\n+      expect(post.topic.custom_fields).to eq(\"hello\" => \"world\")\n+    end\n+\n     context \"reply to post number\" do\n       it \"omits reply to post number if received on a new topic\" do\n         p = PostCreator.new(user, basic_topic_params.merge(reply_to_post_number: 3)).create"
    }
  ]
}
