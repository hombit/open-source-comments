{
  "sha": "23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoyM2ZkYWYwN2YyNGY4ZGNhMzUzNDM2YTdlYjhiNDNiNDViNDQ1Y2Q0",
  "commit": {
    "author": {
      "name": "Arpit Jalan",
      "email": "arpit@techapj.com",
      "date": "2019-05-29T10:56:10Z"
    },
    "committer": {
      "name": "Arpit Jalan",
      "email": "arpit@techapj.com",
      "date": "2019-05-29T16:13:43Z"
    },
    "message": "FIX: create system message in user selected locale\n\nDEV: refactor `create_from_system_user` to use `create` method",
    "tree": {
      "sha": "adf3a61a986aa0aa4be17480270399d9604f1be4",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/adf3a61a986aa0aa4be17480270399d9604f1be4"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
  "html_url": "https://github.com/discourse/discourse/commit/23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/23fdaf07f24f8dca353436a7eb8b43b45b445cd4/comments",
  "author": {
    "login": "techAPJ",
    "id": 5732281,
    "node_id": "MDQ6VXNlcjU3MzIyODE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5732281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techAPJ",
    "html_url": "https://github.com/techAPJ",
    "followers_url": "https://api.github.com/users/techAPJ/followers",
    "following_url": "https://api.github.com/users/techAPJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/techAPJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techAPJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techAPJ/subscriptions",
    "organizations_url": "https://api.github.com/users/techAPJ/orgs",
    "repos_url": "https://api.github.com/users/techAPJ/repos",
    "events_url": "https://api.github.com/users/techAPJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techAPJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "techAPJ",
    "id": 5732281,
    "node_id": "MDQ6VXNlcjU3MzIyODE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/5732281?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/techAPJ",
    "html_url": "https://github.com/techAPJ",
    "followers_url": "https://api.github.com/users/techAPJ/followers",
    "following_url": "https://api.github.com/users/techAPJ/following{/other_user}",
    "gists_url": "https://api.github.com/users/techAPJ/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/techAPJ/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/techAPJ/subscriptions",
    "organizations_url": "https://api.github.com/users/techAPJ/orgs",
    "repos_url": "https://api.github.com/users/techAPJ/repos",
    "events_url": "https://api.github.com/users/techAPJ/events{/privacy}",
    "received_events_url": "https://api.github.com/users/techAPJ/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "227c45107df6b1d6aa43b624fe59995bcb2db73d",
      "url": "https://api.github.com/repos/discourse/discourse/commits/227c45107df6b1d6aa43b624fe59995bcb2db73d",
      "html_url": "https://github.com/discourse/discourse/commit/227c45107df6b1d6aa43b624fe59995bcb2db73d"
    }
  ],
  "stats": {
    "total": 62,
    "additions": 39,
    "deletions": 23
  },
  "files": [
    {
      "sha": "f6186d1871d658cbdb7fcae1024fe65d842bd27a",
      "filename": "lib/system_message.rb",
      "status": "modified",
      "additions": 21,
      "deletions": 23,
      "changes": 44,
      "blob_url": "https://github.com/discourse/discourse/blob/23fdaf07f24f8dca353436a7eb8b43b45b445cd4/lib/system_message.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/23fdaf07f24f8dca353436a7eb8b43b45b445cd4/lib/system_message.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/system_message.rb?ref=23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
      "patch": "@@ -12,7 +12,8 @@ def self.create(recipient, type, params = {})\n   end\n \n   def self.create_from_system_user(recipient, type, params = {})\n-    self.new(recipient).create_from_system_user(type, params)\n+    params = params.merge(from_system: true)\n+    self.new(recipient).create(type, params)\n   end\n \n   def initialize(recipient)\n@@ -21,50 +22,47 @@ def initialize(recipient)\n \n   def create(type, params = {})\n     params = defaults.merge(params)\n+    from_system = params[:from_system] || false\n+\n+    title = I18n.with_locale(@recipient.effective_locale) { I18n.t(\"system_messages.#{type}.subject_template\", params) }\n+    raw = I18n.with_locale(@recipient.effective_locale) { I18n.t(\"system_messages.#{type}.text_body_template\", params) }\n \n-    title = I18n.t(\"system_messages.#{type}.subject_template\", params)\n-    raw = I18n.t(\"system_messages.#{type}.text_body_template\", params)\n+    if from_system\n+      user = Discourse.system_user\n+      target_group_names = nil\n+    else\n+      user = Discourse.site_contact_user\n+      target_group_names = Group.exists?(name: SiteSetting.site_contact_group_name) ? SiteSetting.site_contact_group_name : nil\n+    end\n \n-    creator = PostCreator.new(Discourse.site_contact_user,\n+    creator = PostCreator.new(user,\n                        title: title,\n                        raw: raw,\n                        archetype: Archetype.private_message,\n                        target_usernames: @recipient.username,\n-                       target_group_names: Group.exists?(name: SiteSetting.site_contact_group_name) ? SiteSetting.site_contact_group_name : nil,\n+                       target_group_names: target_group_names,\n                        subtype: TopicSubtype.system_message,\n                        skip_validations: true)\n \n-    post = creator.create\n+    post = I18n.with_locale(@recipient.effective_locale) { creator.create }\n+\n     if creator.errors.present?\n       raise StandardError, creator.errors.full_messages.join(\" \")\n     end\n \n-    UserArchivedMessage.create!(user: Discourse.site_contact_user, topic: post.topic)\n+    unless from_system\n+      UserArchivedMessage.create!(user: Discourse.site_contact_user, topic: post.topic)\n+    end\n \n     post\n   end\n \n-  def create_from_system_user(type, params = {})\n-    params = defaults.merge(params)\n-\n-    title = I18n.t(\"system_messages.#{type}.subject_template\", params)\n-    raw = I18n.t(\"system_messages.#{type}.text_body_template\", params)\n-\n-    PostCreator.create!(Discourse.system_user,\n-                       title: title,\n-                       raw: raw,\n-                       archetype: Archetype.private_message,\n-                       target_usernames: @recipient.username,\n-                       subtype: TopicSubtype.system_message,\n-                       skip_validations: true)\n-  end\n-\n   def defaults\n     {\n       site_name: SiteSetting.title,\n       username: @recipient.username,\n       user_preferences_url: \"#{Discourse.base_url}/u/#{@recipient.username_lower}/preferences\",\n-      new_user_tips: I18n.t('system_messages.usage_tips.text_body_template', base_url: Discourse.base_url),\n+      new_user_tips: I18n.with_locale(@recipient.effective_locale) { I18n.t('system_messages.usage_tips.text_body_template', base_url: Discourse.base_url) },\n       site_password: \"\",\n       base_url: Discourse.base_url,\n     }"
    },
    {
      "sha": "b0c1845e3435849a69c72e7af4f5f6ed20681e3a",
      "filename": "spec/components/system_message_spec.rb",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/discourse/discourse/blob/23fdaf07f24f8dca353436a7eb8b43b45b445cd4/spec/components/system_message_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/23fdaf07f24f8dca353436a7eb8b43b45b445cd4/spec/components/system_message_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/system_message_spec.rb?ref=23fdaf07f24f8dca353436a7eb8b43b45b445cd4",
      "patch": "@@ -30,6 +30,24 @@\n       expect(UserArchivedMessage.where(user_id: admin.id, topic_id: topic.id).length).to eq(1)\n     end\n \n+    it 'can create a post from system user in user selected locale' do\n+      SiteSetting.allow_user_locale = true\n+      user_de = Fabricate(:user, locale: 'de')\n+      system_user = Discourse.system_user\n+\n+      post = SystemMessage.create_from_system_user(user_de, :welcome_invite)\n+      topic = post.topic\n+\n+      expect(post.valid?).to eq(true)\n+      expect(topic).to be_private_message\n+      expect(topic).to be_valid\n+      expect(topic.title).to eq(I18n.with_locale(:de) { I18n.t(\"system_messages.welcome_invite.subject_template\", site_name: SiteSetting.title) })\n+      expect(topic.subtype).to eq(TopicSubtype.system_message)\n+      expect(topic.allowed_users.include?(user_de)).to eq(true)\n+      expect(topic.allowed_users.include?(system_user)).to eq(true)\n+      expect(UserArchivedMessage.where(user_id: system_user.id, topic_id: topic.id).length).to eq(0)\n+    end\n+\n     it 'should allow site_contact_group_name' do\n       group = Fabricate(:group)\n       SiteSetting.site_contact_group_name = group.name"
    }
  ]
}
