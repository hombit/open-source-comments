{
  "sha": "133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjEzM2Y1ZmMzZjJmYjYxYjk1ZWRkMzQyZWJmM2RlNjE4NDNjNmVhNmQ=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-06-09T02:54:00Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-06-09T02:54:00Z"
    },
    "message": "image removal from staging increased to 5*EditTTL\n\nthis is needed in case if user worked on the comment for long time\nuntil submitting in order to avoid false-positive cleanup from the\nstaging",
    "tree": {
      "sha": "408a4fd5b4cc6e14d7afd15a4659e4ef70961ae4",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/408a4fd5b4cc6e14d7afd15a4659e4ef70961ae4"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
  "html_url": "https://github.com/umputun/remark/commit/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3a266111fa325e954c348d385802a2c12812241e",
      "url": "https://api.github.com/repos/umputun/remark/commits/3a266111fa325e954c348d385802a2c12812241e",
      "html_url": "https://github.com/umputun/remark/commit/3a266111fa325e954c348d385802a2c12812241e"
    }
  ],
  "stats": {
    "total": 12,
    "additions": 11,
    "deletions": 1
  },
  "files": [
    {
      "sha": "0213e388c6ddcfea5d51bdb2383f740808c595e1",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server.go?ref=133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
      "patch": "@@ -468,7 +468,7 @@ func (s *ServerCommand) makePicturesStore() (*image.Service, error) {\n \t\t\t\tMaxWidth:   s.Image.ResizeWidth,\n \t\t\t},\n \t\t\tImageAPI: s.RemarkURL + \"/api/v1/picture/\",\n-\t\t\tTTL:      s.EditDuration + time.Second, // add extra second to image TTL for staging\n+\t\t\tTTL:      5 * s.EditDuration, // add extra time to image TTL for staging\n \t\t}, nil\n \t}\n \treturn nil, errors.Errorf(\"unsupported pictures store type %s\", s.Image.Type)"
    },
    {
      "sha": "00581743f2ebcd8cbd2ad8ce8e5b11f9db34b6e3",
      "filename": "backend/app/store/image/image_test.go",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/umputun/remark/blob/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d/backend/app/store/image/image_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/133f5fc3f2fb61b95edd342ebf3de61843c6ea6d/backend/app/store/image/image_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/image/image_test.go?ref=133f5fc3f2fb61b95edd342ebf3de61843c6ea6d",
      "patch": "@@ -25,6 +25,16 @@ func TestService_ExtractPictures(t *testing.T) {\n \tassert.Equal(t, \"user2/pic3.png\", ids[1])\n }\n \n+func TestService_ExtractPictures2(t *testing.T) {\n+\tsvc := Service{ImageAPI: \"https://remark42.radio-t.com/api/v1/picture/\"}\n+\thtml := \"<p>TLDR: такое в go пока правильно посчитать трудно. То, что они считают это общее количество go packages в коде.\" +\n+\t\t\"</p>\\n\\n<p>Пакеты в го это средство организации кода, они могут быть связанны друг с другом в рамках одной библиотеки (модуля). Например одна из моих вот так выглядит на libraries.io:</p>\\n\\n<p><img src=\\\"https://remark42.radio-t.com/api/v1/picture/github_ef0f706a79cc24b17bbbb374cd234a691d034128/bjttt8ahajfmrhsula10.png\\\" alt=\\\"bjtr0-201906-08110846-i324c.png\\\"/></p>\\n\\n<p>По форме все верно, это все packages, но по сути это все одна библиотека организованная таким образом. При ее импорте, например посредством go mod, она выглядит как один модуль, т.е. <code>github.com/go-pkgz/auth v0.5.2</code>.</p>\\n\"\n+\tids, err := svc.ExtractPictures(html)\n+\trequire.NoError(t, err)\n+\tassert.Equal(t, 1, len(ids), \"one image in\")\n+\tassert.Equal(t, \"github_ef0f706a79cc24b17bbbb374cd234a691d034128/bjttt8ahajfmrhsula10.png\", ids[0])\n+}\n+\n func TestService_Cleanup(t *testing.T) {\n \tstore := MockStore{}\n \tstore.On(\"Cleanup\", mock.Anything, mock.Anything).Times(10).Return(nil)"
    }
  ]
}
