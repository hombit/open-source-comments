{
  "sha": "35d6fff69e86704081270333fbcb5248202a246a",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODozNWQ2ZmZmNjllODY3MDQwODEyNzAzMzNmYmNiNTI0ODIwMmEyNDZh",
  "commit": {
    "author": {
      "name": "Vinoth Kannan",
      "email": "vinothkannan@vinkas.com",
      "date": "2019-06-13T16:33:58Z"
    },
    "committer": {
      "name": "Vinoth Kannan",
      "email": "vinothkannan@vinkas.com",
      "date": "2019-06-13T16:33:58Z"
    },
    "message": "PERF: use url instead of file key in temporary inventory table.",
    "tree": {
      "sha": "cbc88ede9e56eeeabec4f83054cb0080f3f87d3d",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/cbc88ede9e56eeeabec4f83054cb0080f3f87d3d"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/35d6fff69e86704081270333fbcb5248202a246a",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/35d6fff69e86704081270333fbcb5248202a246a",
  "html_url": "https://github.com/discourse/discourse/commit/35d6fff69e86704081270333fbcb5248202a246a",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/35d6fff69e86704081270333fbcb5248202a246a/comments",
  "author": {
    "login": "vinothkannans",
    "id": 9372109,
    "node_id": "MDQ6VXNlcjkzNzIxMDk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/9372109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vinothkannans",
    "html_url": "https://github.com/vinothkannans",
    "followers_url": "https://api.github.com/users/vinothkannans/followers",
    "following_url": "https://api.github.com/users/vinothkannans/following{/other_user}",
    "gists_url": "https://api.github.com/users/vinothkannans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vinothkannans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vinothkannans/subscriptions",
    "organizations_url": "https://api.github.com/users/vinothkannans/orgs",
    "repos_url": "https://api.github.com/users/vinothkannans/repos",
    "events_url": "https://api.github.com/users/vinothkannans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vinothkannans/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "vinothkannans",
    "id": 9372109,
    "node_id": "MDQ6VXNlcjkzNzIxMDk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/9372109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vinothkannans",
    "html_url": "https://github.com/vinothkannans",
    "followers_url": "https://api.github.com/users/vinothkannans/followers",
    "following_url": "https://api.github.com/users/vinothkannans/following{/other_user}",
    "gists_url": "https://api.github.com/users/vinothkannans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vinothkannans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vinothkannans/subscriptions",
    "organizations_url": "https://api.github.com/users/vinothkannans/orgs",
    "repos_url": "https://api.github.com/users/vinothkannans/repos",
    "events_url": "https://api.github.com/users/vinothkannans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vinothkannans/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ed21128ee6be9432228924a6f6dfab6a9892ec85",
      "url": "https://api.github.com/repos/discourse/discourse/commits/ed21128ee6be9432228924a6f6dfab6a9892ec85",
      "html_url": "https://github.com/discourse/discourse/commit/ed21128ee6be9432228924a6f6dfab6a9892ec85"
    }
  ],
  "stats": {
    "total": 18,
    "additions": 10,
    "deletions": 8
  },
  "files": [
    {
      "sha": "4afc545167ec92cbfdd02866b606240df426799b",
      "filename": "lib/s3_inventory.rb",
      "status": "modified",
      "additions": 8,
      "deletions": 6,
      "changes": 14,
      "blob_url": "https://github.com/discourse/discourse/blob/35d6fff69e86704081270333fbcb5248202a246a/lib/s3_inventory.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/35d6fff69e86704081270333fbcb5248202a246a/lib/s3_inventory.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/s3_inventory.rb?ref=35d6fff69e86704081270333fbcb5248202a246a",
      "patch": "@@ -37,13 +37,14 @@ def backfill_etags_and_list_missing\n       multisite_prefix = \"uploads/#{RailsMultisite::ConnectionManagement.current_db}/\"\n       ActiveRecord::Base.transaction do\n         begin\n-          connection.exec(\"CREATE TEMP TABLE #{table_name}(key text UNIQUE, etag text, PRIMARY KEY(etag, key))\")\n+          connection.exec(\"CREATE TEMP TABLE #{table_name}(url text UNIQUE, etag text, PRIMARY KEY(etag, url))\")\n           connection.copy_data(\"COPY #{table_name} FROM STDIN CSV\") do\n             files.each do |file|\n               CSV.foreach(file[:filename][0...-3], headers: false) do |row|\n                 key = row[CSV_KEY_INDEX]\n                 next if Rails.configuration.multisite && key.exclude?(multisite_prefix)\n-                connection.put_copy_data(\"#{key},#{row[CSV_ETAG_INDEX]}\\n\")\n+                url = File.join(Discourse.store.absolute_base_url, key)\n+                connection.put_copy_data(\"#{url},#{row[CSV_ETAG_INDEX]}\\n\")\n               end\n             end\n           end\n@@ -53,7 +54,7 @@ def backfill_etags_and_list_missing\n             SET etag = #{table_name}.etag\n             FROM #{table_name}\n             WHERE #{model.table_name}.etag IS NULL\n-              AND url ILIKE '%' || #{table_name}.key\")\n+              AND #{model.table_name}.url = #{table_name}.url\")\n \n           list_missing_post_uploads if type == \"original\"\n \n@@ -85,19 +86,20 @@ def list_missing_post_uploads\n       next if sha1.blank?\n \n       upload_id = nil\n-      result = connection.exec(\"SELECT * FROM #{table_name} WHERE key LIKE '%original/%/#{sha1}%'\")\n+      result = connection.exec(\"SELECT * FROM #{table_name} WHERE url LIKE '%original/%/#{sha1}%'\")\n \n       if result.count >= 1\n         begin\n-          key = result[0][\"key\"]\n+          url = result[0][\"url\"]\n+          key = url.sub(/^#{Discourse.store.absolute_base_url}\\//, \"\")\n           data = @s3_helper.object(key).data\n           filename = (data.content_disposition&.match(/filename=\\\"(.*)\\\"/) || [])[1]\n \n           upload = Upload.new(\n             user_id: Discourse.system_user.id,\n             original_filename: filename || File.basename(key),\n             filesize: data.content_length,\n-            url: File.join(Discourse.store.absolute_base_url, key),\n+            url: url,\n             sha1: sha1,\n             etag: result[0][\"etag\"]\n           )"
    },
    {
      "sha": "0b8c66d45e8b042a8ef83bbd19b41811cbd071ad",
      "filename": "spec/components/s3_inventory_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/35d6fff69e86704081270333fbcb5248202a246a/spec/components/s3_inventory_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/35d6fff69e86704081270333fbcb5248202a246a/spec/components/s3_inventory_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/s3_inventory_spec.rb?ref=35d6fff69e86704081270333fbcb5248202a246a",
      "patch": "@@ -82,8 +82,8 @@\n \n   it \"should backfill etags to uploads table correctly\" do\n     files = [\n-      [\"//bucket.amazonaws.com/original/0184537a4f419224404d013414e913a4f56018f2.jpg\", \"defcaac0b4aca535c284e95f30d608d0\"],\n-      [\"//bucket.amazonaws.com/original/0789fbf5490babc68326b9cec90eeb0d6590db05.png\", \"25c02eaceef4cb779fc17030d33f7f06\"]\n+      [\"#{Discourse.store.absolute_base_url}/original/0184537a4f419224404d013414e913a4f56018f2.jpg\", \"defcaac0b4aca535c284e95f30d608d0\"],\n+      [\"#{Discourse.store.absolute_base_url}/original/0789fbf5490babc68326b9cec90eeb0d6590db05.png\", \"25c02eaceef4cb779fc17030d33f7f06\"]\n     ]\n     files.each { |file| Fabricate(:upload, url: file[0]) }\n "
    }
  ]
}
