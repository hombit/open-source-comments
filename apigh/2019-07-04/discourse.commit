{
  "sha": "c78634284c59249dd246f584a7587a10bc56662f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpjNzg2MzQyODRjNTkyNDlkZDI0NmY1ODRhNzU4N2ExMGJjNTY2NjJm",
  "commit": {
    "author": {
      "name": "Penar Musaraj",
      "email": "pmusaraj@gmail.com",
      "date": "2019-07-04T15:45:57Z"
    },
    "committer": {
      "name": "Penar Musaraj",
      "email": "pmusaraj@gmail.com",
      "date": "2019-07-04T15:45:57Z"
    },
    "message": "UI: when in a different topic context, allow dismissing draft without destroying it\n\nThis changes the label and behaviour of the \"No, keep\" button in the confirmation modal when user cancels a draft while on a different topic. The new button label is \"No, save draft\", and when clicked, the composer will be dismissed without destroying the draft.",
    "tree": {
      "sha": "48c88cc098a55acc2220e37ecad4370a07263e08",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/48c88cc098a55acc2220e37ecad4370a07263e08"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/c78634284c59249dd246f584a7587a10bc56662f",
    "comment_count": 2,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/c78634284c59249dd246f584a7587a10bc56662f",
  "html_url": "https://github.com/discourse/discourse/commit/c78634284c59249dd246f584a7587a10bc56662f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/c78634284c59249dd246f584a7587a10bc56662f/comments",
  "author": {
    "login": "pmusaraj",
    "id": 368961,
    "node_id": "MDQ6VXNlcjM2ODk2MQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/368961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pmusaraj",
    "html_url": "https://github.com/pmusaraj",
    "followers_url": "https://api.github.com/users/pmusaraj/followers",
    "following_url": "https://api.github.com/users/pmusaraj/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmusaraj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pmusaraj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmusaraj/subscriptions",
    "organizations_url": "https://api.github.com/users/pmusaraj/orgs",
    "repos_url": "https://api.github.com/users/pmusaraj/repos",
    "events_url": "https://api.github.com/users/pmusaraj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pmusaraj/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "pmusaraj",
    "id": 368961,
    "node_id": "MDQ6VXNlcjM2ODk2MQ==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/368961?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pmusaraj",
    "html_url": "https://github.com/pmusaraj",
    "followers_url": "https://api.github.com/users/pmusaraj/followers",
    "following_url": "https://api.github.com/users/pmusaraj/following{/other_user}",
    "gists_url": "https://api.github.com/users/pmusaraj/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pmusaraj/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pmusaraj/subscriptions",
    "organizations_url": "https://api.github.com/users/pmusaraj/orgs",
    "repos_url": "https://api.github.com/users/pmusaraj/repos",
    "events_url": "https://api.github.com/users/pmusaraj/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pmusaraj/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03805e5a76cc6bfc54cc159205ac71704ac13f04",
      "url": "https://api.github.com/repos/discourse/discourse/commits/03805e5a76cc6bfc54cc159205ac71704ac13f04",
      "html_url": "https://github.com/discourse/discourse/commit/03805e5a76cc6bfc54cc159205ac71704ac13f04"
    }
  ],
  "stats": {
    "total": 61,
    "additions": 55,
    "deletions": 6
  },
  "files": [
    {
      "sha": "d907a0f9475301f28906822bf0c3dee6a4f4890f",
      "filename": "app/assets/javascripts/discourse/controllers/composer.js.es6",
      "status": "modified",
      "additions": 23,
      "deletions": 4,
      "changes": 27,
      "blob_url": "https://github.com/discourse/discourse/blob/c78634284c59249dd246f584a7587a10bc56662f/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/c78634284c59249dd246f584a7587a10bc56662f/app/assets/javascripts/discourse/controllers/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/composer.js.es6?ref=c78634284c59249dd246f584a7587a10bc56662f",
      "patch": "@@ -507,7 +507,9 @@ export default Ember.Controller.extend({\n     },\n \n     cancel() {\n-      this.cancelComposer();\n+      const differentDraftContext =\n+        this.get(\"topic.id\") !== this.get(\"model.topic.id\");\n+      this.cancelComposer(differentDraftContext);\n     },\n \n     save() {\n@@ -830,7 +832,12 @@ export default Ember.Controller.extend({\n         }\n \n         // If it's a different draft, cancel it and try opening again.\n-        return this.cancelComposer()\n+        const differentDraftContext =\n+          opts.post && composerModel.topic\n+            ? composerModel.topic.id !== opts.post.topic_id\n+            : true;\n+\n+        return this.cancelComposer(differentDraftContext)\n           .then(() => this.open(opts))\n           .then(resolve, reject);\n       }\n@@ -984,11 +991,23 @@ export default Ember.Controller.extend({\n     }\n   },\n \n-  cancelComposer() {\n+  cancelComposer(differentDraft = false) {\n     return new Ember.RSVP.Promise(resolve => {\n       if (this.get(\"model.hasMetaData\") || this.get(\"model.replyDirty\")) {\n         bootbox.dialog(I18n.t(\"post.abandon.confirm\"), [\n-          { label: I18n.t(\"post.abandon.no_value\") },\n+          {\n+            label: differentDraft\n+              ? I18n.t(\"post.abandon.no_save_draft\")\n+              : I18n.t(\"post.abandon.no_value\"),\n+            callback: () => {\n+              // cancel composer without destroying draft on new draft context\n+              if (differentDraft) {\n+                this.model.clearState();\n+                this.close();\n+                resolve();\n+              }\n+            }\n+          },\n           {\n             label: I18n.t(\"post.abandon.yes_value\"),\n             class: \"btn-danger\","
    },
    {
      "sha": "2157f174f329ee09e32bf02ebc951d917602e39a",
      "filename": "config/locales/client.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/c78634284c59249dd246f584a7587a10bc56662f/config/locales/client.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/c78634284c59249dd246f584a7587a10bc56662f/config/locales/client.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/client.en.yml?ref=c78634284c59249dd246f584a7587a10bc56662f",
      "patch": "@@ -2381,6 +2381,7 @@ en:\n       abandon:\n         confirm: \"Are you sure you want to abandon your post?\"\n         no_value: \"No, keep\"\n+        no_save_draft: \"No, save draft\"\n         yes_value: \"Yes, abandon\"\n \n       via_email: \"this post arrived via email\""
    },
    {
      "sha": "26ccba2be282a9509720c60550b964a1a997736d",
      "filename": "test/javascripts/acceptance/composer-test.js.es6",
      "status": "modified",
      "additions": 31,
      "deletions": 2,
      "changes": 33,
      "blob_url": "https://github.com/discourse/discourse/blob/c78634284c59249dd246f584a7587a10bc56662f/test/javascripts/acceptance/composer-test.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/c78634284c59249dd246f584a7587a10bc56662f/test/javascripts/acceptance/composer-test.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/test/javascripts/acceptance/composer-test.js.es6?ref=c78634284c59249dd246f584a7587a10bc56662f",
      "patch": "@@ -586,19 +586,48 @@ QUnit.test(\n     await click(\".topic-post:eq(0) button.reply\");\n     await fillIn(\".d-editor-input\", \"This is a dirty reply\");\n     await click(\".toggler\");\n-    await click(\".topic-post:eq(0) button.edit\");\n+    await click(\".topic-post:eq(1) button.edit\");\n     assert.ok(exists(\".bootbox.modal\"), \"it pops up a confirmation dialog\");\n+    assert.equal(\n+      find(\".modal-footer a:eq(1)\").text(),\n+      I18n.t(\"post.abandon.no_value\")\n+    );\n     await click(\".modal-footer a:eq(0)\");\n     assert.equal(\n       find(\".d-editor-input\")\n         .val()\n-        .indexOf(\"This is the first post.\"),\n+        .indexOf(\"This is the second post.\"),\n       0,\n       \"it populates the input with the post text\"\n     );\n   }\n );\n \n+QUnit.test(\n+  \"Composer draft can switch to draft in new context without destroying current draft\",\n+  async assert => {\n+    await visit(\"/t/this-is-a-test-topic/9\");\n+\n+    await click(\".topic-post:eq(0) button.reply\");\n+    await fillIn(\".d-editor-input\", \"This is a dirty reply\");\n+\n+    await click(\"#site-logo\");\n+    await click(\"#create-topic\");\n+\n+    assert.ok(exists(\".bootbox.modal\"), \"it pops up a confirmation dialog\");\n+    assert.equal(\n+      find(\".modal-footer a:eq(1)\").text(),\n+      I18n.t(\"post.abandon.no_save_draft\")\n+    );\n+    await click(\".modal-footer a:eq(1)\");\n+    assert.equal(\n+      find(\".d-editor-input\").val(),\n+      \"\",\n+      \"it populates the input with the post text\"\n+    );\n+  }\n+);\n+\n QUnit.test(\"Checks for existing draft\", async assert => {\n   try {\n     toggleCheckDraftPopup(true);"
    }
  ]
}
