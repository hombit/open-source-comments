{
  "sha": "7fd01e5845af17d6edef31a2dc05ebb653530c91",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6N2ZkMDFlNTg0NWFmMTdkNmVkZWYzMWEyZGMwNWViYjY1MzUzMGM5MQ==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-07-12T20:18:21Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-07-12T20:18:21Z"
    },
    "message": "[CORL-444] Stories Tab Adjustments (#2404)\n\n* feat: improved stories tab\r\n\r\n* feat: swapped date sorting with text sorting",
    "tree": {
      "sha": "d05e01b2f7a7ee2af9829025c69dcda163eab0ee",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/d05e01b2f7a7ee2af9829025c69dcda163eab0ee"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/7fd01e5845af17d6edef31a2dc05ebb653530c91",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdKOsNCRBK7hj4Ov3rIwAAdHIIAER7kn2iSHnr9lo6oTF1UUxn\ntcMa550R5hxFtEpIbhRjY6DVAqCdBA/5FlgQ7gMk0tN53iRUjw08hQj+7YWXqiyz\nBbYtZwnkhJ0vAvc+0bStEei/Xw8j5kxwDTUER0ZmUE41heifKgQ71c8ZZj09oHwa\n9eFH+J6p0TT5NjFIMedouoRn+wpJX6+H7bEdVH2ltnTazFFAfuMW//AazyKpWxYQ\nOExN8Z2tLOIf/xso3ycCKRw7tL+ycOnWrEtGxCda9o2qeOPNnBnrdMTCZE9FHmDv\nDNCmAe3CTpTFnWv+vEaCEcTxcj5C+EgVQ4N3MeXTpY2MjQDJYbG4/fKcehABq6E=\n=IVrX\n-----END PGP SIGNATURE-----\n",
      "payload": "tree d05e01b2f7a7ee2af9829025c69dcda163eab0ee\nparent 340052cdf034cc2d6b8017391db7ac76c439254b\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1562962701 +0000\ncommitter GitHub <noreply@github.com> 1562962701 +0000\n\n[CORL-444] Stories Tab Adjustments (#2404)\n\n* feat: improved stories tab\r\n\r\n* feat: swapped date sorting with text sorting\r\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/7fd01e5845af17d6edef31a2dc05ebb653530c91",
  "html_url": "https://github.com/coralproject/talk/commit/7fd01e5845af17d6edef31a2dc05ebb653530c91",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/7fd01e5845af17d6edef31a2dc05ebb653530c91/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "340052cdf034cc2d6b8017391db7ac76c439254b",
      "url": "https://api.github.com/repos/coralproject/talk/commits/340052cdf034cc2d6b8017391db7ac76c439254b",
      "html_url": "https://github.com/coralproject/talk/commit/340052cdf034cc2d6b8017391db7ac76c439254b"
    }
  ],
  "stats": {
    "total": 425,
    "additions": 318,
    "deletions": 107
  },
  "files": [
    {
      "sha": "643ccd9a0dab0490a9e4104ad7b072a76086e2ca",
      "filename": "client/coral-admin/src/actions/stories.js",
      "status": "modified",
      "additions": 27,
      "deletions": 13,
      "changes": 40,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/actions/stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/actions/stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/actions/stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -4,13 +4,15 @@ import {\n   FETCH_ASSETS_REQUEST,\n   FETCH_ASSETS_SUCCESS,\n   FETCH_ASSETS_FAILURE,\n+  LOAD_MORE_ASSETS_REQUEST,\n+  LOAD_MORE_ASSETS_SUCCESS,\n+  LOAD_MORE_ASSETS_FAILURE,\n   SET_PAGE,\n   SET_SEARCH_VALUE,\n   SET_CRITERIA,\n   UPDATE_ASSET_STATE_REQUEST,\n   UPDATE_ASSET_STATE_SUCCESS,\n   UPDATE_ASSET_STATE_FAILURE,\n-  UPDATE_ASSETS,\n } from '../constants/stories';\n \n import t from 'coral-framework/services/i18n';\n@@ -21,17 +23,14 @@ import t from 'coral-framework/services/i18n';\n \n // Fetch a page of assets\n // Get comments to fill each of the three lists on the mod queue\n-export const fetchAssets = (query = {}) => (dispatch, _, { rest }) => {\n+export const fetchAssets = (query = {}) => (dispatch, _, { rest2 }) => {\n   dispatch({ type: FETCH_ASSETS_REQUEST });\n-  return rest(`/assets?${queryString.stringify(query)}`)\n-    .then(({ result, page, count, limit, totalPages }) =>\n+  return rest2(`/stories?${queryString.stringify(query)}`)\n+    .then(({ edges, pageInfo }) =>\n       dispatch({\n         type: FETCH_ASSETS_SUCCESS,\n-        assets: result,\n-        page,\n-        count,\n-        limit,\n-        totalPages,\n+        edges,\n+        pageInfo,\n       })\n     )\n     .catch(error => {\n@@ -43,6 +42,25 @@ export const fetchAssets = (query = {}) => (dispatch, _, { rest }) => {\n     });\n };\n \n+export const loadMoreAssets = (query = {}) => (dispatch, _l, { rest2 }) => {\n+  dispatch({ type: LOAD_MORE_ASSETS_REQUEST });\n+  return rest2(`/stories?${queryString.stringify(query)}`)\n+    .then(({ edges, pageInfo }) =>\n+      dispatch({\n+        type: LOAD_MORE_ASSETS_SUCCESS,\n+        edges,\n+        pageInfo,\n+      })\n+    )\n+    .catch(error => {\n+      console.error(error);\n+      const errorMessage = error.translation_key\n+        ? t(`error.${error.translation_key}`)\n+        : error.toString();\n+      dispatch({ type: LOAD_MORE_ASSETS_FAILURE, error: errorMessage });\n+    });\n+};\n+\n // Update an asset state\n // Get comments to fill each of the three lists on the mod queue\n export const updateAssetState = (id, closedAt) => (dispatch, _, { rest }) => {\n@@ -58,10 +76,6 @@ export const updateAssetState = (id, closedAt) => (dispatch, _, { rest }) => {\n     });\n };\n \n-export const updateAssets = assets => dispatch => {\n-  dispatch({ type: UPDATE_ASSETS, assets });\n-};\n-\n export const setPage = page => ({\n   type: SET_PAGE,\n   page,"
    },
    {
      "sha": "978979f62e2b7b12547c35868016aeee6070b91e",
      "filename": "client/coral-admin/src/constants/stories.js",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/constants/stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/constants/stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/constants/stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -4,12 +4,14 @@ export const FETCH_ASSETS_REQUEST = `${prefix}_FETCH_ASSETS_REQUEST`;\n export const FETCH_ASSETS_SUCCESS = `${prefix}_FETCH_ASSETS_SUCCESS`;\n export const FETCH_ASSETS_FAILURE = `${prefix}_FETCH_ASSETS_FAILURE`;\n \n+export const LOAD_MORE_ASSETS_REQUEST = `${prefix}_LOAD_MORE_ASSETS_REQUEST`;\n+export const LOAD_MORE_ASSETS_SUCCESS = `${prefix}_LOAD_MORE_ASSETS_SUCCESS`;\n+export const LOAD_MORE_ASSETS_FAILURE = `${prefix}_LOAD_MORE_ASSETS_FAILURE`;\n+\n export const UPDATE_ASSET_STATE_REQUEST = `${prefix}_UPDATE_ASSET_STATE_REQUEST`;\n export const UPDATE_ASSET_STATE_SUCCESS = `${prefix}_UPDATE_ASSET_STATE_SUCCESS`;\n export const UPDATE_ASSET_STATE_FAILURE = `${prefix}_UPDATE_ASSET_STATE_FAILURE`;\n \n-export const UPDATE_ASSETS = `${prefix}_UPDATE_ASSETS`;\n-\n export const SET_PAGE = `${prefix}_SET_PAGE`;\n export const SET_SEARCH_VALUE = `${prefix}_SET_SEARCH_VALUE`;\n export const SET_CRITERIA = `${prefix}_SET_CRITERIA`;"
    },
    {
      "sha": "67f3c9f0027b388152e3875e02e4bc8489a58fb6",
      "filename": "client/coral-admin/src/reducers/stories.js",
      "status": "modified",
      "additions": 39,
      "deletions": 26,
      "changes": 65,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/reducers/stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/reducers/stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/reducers/stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -3,33 +3,57 @@ import update from 'immutability-helper';\n \n const initialState = {\n   assets: {\n-    byId: {},\n-    ids: [],\n-    assets: [],\n+    edges: [],\n+    pageInfo: {},\n   },\n   searchValue: '',\n   criteria: {\n-    asc: 'false',\n     filter: 'all',\n-    limit: 20,\n   },\n+  loading: true,\n+  loadingMore: false,\n };\n \n export default function assets(state = initialState, action) {\n   switch (action.type) {\n+    case actions.FETCH_ASSETS_REQUEST: {\n+      return update(state, {\n+        loading: { $set: true },\n+      });\n+    }\n+    case actions.FETCH_ASSETS_FAILURE: {\n+      return update(state, {\n+        loading: { $set: false },\n+      });\n+    }\n     case actions.FETCH_ASSETS_SUCCESS: {\n-      const assets = action.assets.reduce((prev, curr) => {\n-        prev[curr.id] = curr;\n-        return prev;\n-      }, {});\n-\n       return update(state, {\n+        loading: { $set: false },\n+        assets: {\n+          edges: { $set: action.edges },\n+          pageInfo: { $set: action.pageInfo },\n+        },\n+      });\n+    }\n+    case actions.LOAD_MORE_ASSETS_REQUEST: {\n+      return update(state, {\n+        loadingMore: { $set: true },\n+      });\n+    }\n+    case actions.LOAD_MORE_ASSETS_FAILURE: {\n+      return update(state, {\n+        loadingMore: { $set: false },\n+      });\n+    }\n+    case actions.LOAD_MORE_ASSETS_SUCCESS: {\n+      return update(state, {\n+        loadingMore: { $set: false },\n         assets: {\n-          totalPages: { $set: action.totalPages },\n-          page: { $set: action.page },\n-          byId: { $set: assets },\n-          count: { $set: action.count },\n-          ids: { $set: Object.keys(assets) },\n+          edges: { $push: action.edges },\n+          pageInfo: {\n+            endCursor: { $set: action.pageInfo.endCursor },\n+            hasNextPage: { $set: action.pageInfo.hasNextPage },\n+          },\n         },\n       });\n     }\n@@ -43,17 +67,6 @@ export default function assets(state = initialState, action) {\n           },\n         },\n       });\n-    case actions.UPDATE_ASSETS:\n-      return update(state, {\n-        assets: {\n-          assets: { $set: action.assets },\n-        },\n-      });\n-    case actions.SET_PAGE:\n-      return {\n-        ...state,\n-        page: action.page,\n-      };\n     case actions.SET_SEARCH_VALUE:\n       return {\n         ...state,"
    },
    {
      "sha": "5d642358f733373b93f254a67832ea5d18a75583",
      "filename": "client/coral-admin/src/routes/Stories/components/Stories.css",
      "status": "modified",
      "additions": 8,
      "deletions": 1,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/components/Stories.css",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/components/Stories.css",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/routes/Stories/components/Stories.css?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -77,7 +77,6 @@\n   display: block;\n }\n \n-\n .hidden {\n   display: none;\n }\n@@ -95,3 +94,11 @@\n   text-align: left;\n }\n \n+.loadMore {\n+  margin: 20px auto;\n+  text-align: center;\n+}\n+\n+.loadMoreSpinner {\n+  margin: 20px auto 50px;\n+}"
    },
    {
      "sha": "a396c9d6651099134626cb4b1071f2e000cdb1c2",
      "filename": "client/coral-admin/src/routes/Stories/components/Stories.js",
      "status": "modified",
      "additions": 49,
      "deletions": 47,
      "changes": 96,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/components/Stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/components/Stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/routes/Stories/components/Stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -2,11 +2,14 @@ import React, { Component } from 'react';\n import cn from 'classnames';\n import { Link } from 'react-router';\n import PropTypes from 'prop-types';\n-import { Dropdown, Option, Paginate, Icon } from 'coral-ui';\n import { DataTable, TableHeader, RadioGroup, Radio } from 'react-mdl';\n+\n import t from 'coral-framework/services/i18n';\n-import styles from './Stories.css';\n+import { Dropdown, Option, Icon, Spinner } from 'coral-ui';\n import EmptyCard from 'coral-admin/src/components/EmptyCard';\n+import LoadMore from 'coral-admin/src/components/LoadMore';\n+\n+import styles from './Stories.css';\n \n class Stories extends Component {\n   renderDate = date => {\n@@ -39,10 +42,11 @@ class Stories extends Component {\n       filter,\n       onSearchChange,\n       onSettingChange,\n-      onPageChange,\n-      asc,\n+      onLoadMore,\n+      loading,\n+      loadingMore,\n     } = this.props;\n-    const rows = assets.ids.map(id => assets.byId[id]);\n+    const rows = assets.edges.map(({ node }) => node);\n \n     return (\n       <div className={cn('talk-admin-stories', styles.container)}>\n@@ -74,60 +78,58 @@ class Stories extends Component {\n             <Radio value=\"open\">{t('streams.open')}</Radio>\n             <Radio value=\"closed\">{t('streams.closed')}</Radio>\n           </RadioGroup>\n-          <div className={styles.optionHeader}>{t('streams.sort_by')}</div>\n-          <RadioGroup\n-            name=\"sortBy\"\n-            value={asc}\n-            childContainer=\"div\"\n-            onChange={onSettingChange('asc')}\n-            className={styles.radioGroup}\n-          >\n-            <Radio value=\"false\">{t('streams.newest')}</Radio>\n-            <Radio value=\"true\">{t('streams.oldest')}</Radio>\n-          </RadioGroup>\n         </div>\n-        {rows.length ? (\n-          <div className={styles.mainContent}>\n-            <DataTable className={styles.streamsTable} rows={rows}>\n-              <TableHeader name=\"title\" cellFormatter={this.renderTitle}>\n-                {t('streams.article')}\n-              </TableHeader>\n-              <TableHeader\n-                name=\"publication_date\"\n-                cellFormatter={this.renderDate}\n-              >\n-                {t('streams.pubdate')}\n-              </TableHeader>\n-              <TableHeader\n-                name=\"closedAt\"\n-                cellFormatter={this.renderStatus}\n-                className={styles.status}\n-              >\n-                {t('streams.status')}\n-              </TableHeader>\n-            </DataTable>\n-            <Paginate\n-              pageCount={assets.totalPages}\n-              page={assets.page - 1}\n-              onPageChange={onPageChange}\n-            />\n-          </div>\n-        ) : (\n-          <EmptyCard>{t('streams.empty_result')}</EmptyCard>\n-        )}\n+        <div className={styles.mainContent}>\n+          {loading ? (\n+            <Spinner />\n+          ) : rows.length ? (\n+            <div>\n+              <DataTable className={styles.streamsTable} rows={rows}>\n+                <TableHeader name=\"title\" cellFormatter={this.renderTitle}>\n+                  {t('streams.article')}\n+                </TableHeader>\n+                <TableHeader\n+                  name=\"publication_date\"\n+                  cellFormatter={this.renderDate}\n+                >\n+                  {t('streams.pubdate')}\n+                </TableHeader>\n+                <TableHeader\n+                  name=\"closedAt\"\n+                  cellFormatter={this.renderStatus}\n+                  className={styles.status}\n+                >\n+                  {t('streams.status')}\n+                </TableHeader>\n+              </DataTable>\n+              {loadingMore ? (\n+                <Spinner className={styles.loadMoreSpinner} />\n+              ) : (\n+                <LoadMore\n+                  showLoadMore={assets.pageInfo.hasNextPage}\n+                  loadMore={onLoadMore}\n+                  className={styles.loadMore}\n+                />\n+              )}\n+            </div>\n+          ) : (\n+            <EmptyCard>{t('streams.empty_result')}</EmptyCard>\n+          )}\n+        </div>\n       </div>\n     );\n   }\n }\n \n Stories.propTypes = {\n+  loading: PropTypes.bool,\n+  loadingMore: PropTypes.bool,\n   assets: PropTypes.object,\n   searchValue: PropTypes.string,\n-  asc: PropTypes.string,\n   filter: PropTypes.string,\n+  onLoadMore: PropTypes.func.isRequired,\n   onStatusChange: PropTypes.func.isRequired,\n   onSearchChange: PropTypes.func.isRequired,\n-  onPageChange: PropTypes.func.isRequired,\n   onSettingChange: PropTypes.func.isRequired,\n };\n "
    },
    {
      "sha": "88b126f16698e835f0df00168318a9c34962e0b8",
      "filename": "client/coral-admin/src/routes/Stories/containers/Stories.js",
      "status": "modified",
      "additions": 26,
      "deletions": 18,
      "changes": 44,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/containers/Stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-admin/src/routes/Stories/containers/Stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-admin/src/routes/Stories/containers/Stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -5,9 +5,9 @@ import { bindActionCreators } from 'redux';\n import {\n   fetchAssets,\n   updateAssetState,\n-  setPage,\n   setSearchValue,\n   setCriteria,\n+  loadMoreAssets,\n } from 'coral-admin/src/actions/stories';\n import Stories from '../components/Stories';\n \n@@ -35,13 +35,11 @@ class StoriesContainer extends Component {\n   };\n \n   fetchAssets = query => {\n-    const { searchValue, asc, filter, limit } = this.props;\n+    const { searchValue: value, filter } = this.props;\n \n     this.props.fetchAssets({\n-      value: searchValue,\n-      asc,\n+      value,\n       filter,\n-      limit,\n       ...query,\n     });\n   };\n@@ -57,59 +55,69 @@ class StoriesContainer extends Component {\n     }\n   };\n \n-  onPageChange = ({ selected }) => {\n-    const page = selected + 1;\n-    this.props.setPage(page);\n-    this.fetchAssets({ page });\n+  onLoadMore = async () => {\n+    const {\n+      searchValue: value,\n+      filter,\n+      assets: {\n+        pageInfo: { endCursor: cursor },\n+      },\n+      loadMoreAssets,\n+    } = this.props;\n+    try {\n+      await loadMoreAssets({ cursor, value, filter });\n+    } catch (err) {\n+      console.error(err);\n+    }\n   };\n \n   render() {\n     return (\n       <Stories\n+        loading={this.props.loading}\n+        loadingMore={this.props.loadingMore}\n         assets={this.props.assets}\n         searchValue={this.props.searchValue}\n-        asc={this.props.asc}\n         filter={this.props.filter}\n-        limit={this.props.limit}\n-        onPageChange={this.onPageChange}\n         onStatusChange={this.onStatusChange}\n         onSettingChange={this.onSettingChange}\n         onSearchChange={this.onSearchChange}\n+        onLoadMore={this.onLoadMore}\n       />\n     );\n   }\n }\n \n const mapStateToProps = ({ stories }) => ({\n   assets: stories.assets,\n+  loading: stories.loading,\n+  loadingMore: stories.loadingMore,\n   searchValue: stories.searchValue,\n-  asc: stories.criteria.asc,\n   filter: stories.criteria.filter,\n-  limit: stories.criteria.limit,\n });\n \n const mapDispatchToProps = dispatch =>\n   bindActionCreators(\n     {\n-      setPage,\n       setCriteria,\n       setSearchValue,\n       fetchAssets,\n       updateAssetState,\n+      loadMoreAssets,\n     },\n     dispatch\n   );\n \n StoriesContainer.propTypes = {\n+  loading: PropTypes.bool,\n+  loadingMore: PropTypes.bool,\n   assets: PropTypes.object,\n   searchValue: PropTypes.string,\n-  asc: PropTypes.string,\n   filter: PropTypes.string,\n-  limit: PropTypes.number,\n-  setPage: PropTypes.func.isRequired,\n   setCriteria: PropTypes.func.isRequired,\n   setSearchValue: PropTypes.func.isRequired,\n   fetchAssets: PropTypes.func.isRequired,\n+  loadMoreAssets: PropTypes.func.isRequired,\n   updateAssetState: PropTypes.func.isRequired,\n };\n "
    },
    {
      "sha": "d0469d6d4fffc6d6f6148350df941a4430e4c4bd",
      "filename": "client/coral-framework/services/bootstrap.js",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-framework/services/bootstrap.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/client/coral-framework/services/bootstrap.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/client/coral-framework/services/bootstrap.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -159,6 +159,11 @@ export async function createContext({\n     token,\n   });\n \n+  const rest2 = createRestClient({\n+    uri: `${BASE_PATH}api/v2`,\n+    token,\n+  });\n+\n   const staticConfig = getStaticConfiguration();\n   let { LIVE_URI: liveUri, BASE_ORIGIN: origin } = staticConfig;\n   if (liveUri == null) {\n@@ -193,6 +198,7 @@ export async function createContext({\n     plugins,\n     eventEmitter,\n     rest,\n+    rest2,\n     graphql,\n     notification,\n     localStorage,"
    },
    {
      "sha": "29a78e887aa395de0180eb111eef8d0c5c55ded2",
      "filename": "routes/api/index.js",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/index.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/index.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/routes/api/index.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -3,5 +3,6 @@ const router = express.Router();\n \n // Return the current version.\n router.use('/v1', require('./v1'));\n+router.use('/v2', require('./v2'));\n \n module.exports = router;"
    },
    {
      "sha": "ce40fe276a39bcd483bb368d7cd446dcccad58c7",
      "filename": "routes/api/v2/index.js",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/v2/index.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/v2/index.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/routes/api/v2/index.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -0,0 +1,13 @@\n+const express = require('express');\n+const { version } = require('../../../package.json');\n+const { REVISION_HASH } = require('../../../config');\n+const router = express.Router();\n+\n+// Return the current version.\n+router.get('/', (req, res) => {\n+  res.json({ version, revision: REVISION_HASH });\n+});\n+\n+router.use('/stories', require('./stories'));\n+\n+module.exports = router;"
    },
    {
      "sha": "05ae09d48d4c322829951f5f49578e6d24f9f91e",
      "filename": "routes/api/v2/stories.js",
      "status": "added",
      "additions": 145,
      "deletions": 0,
      "changes": 145,
      "blob_url": "https://github.com/coralproject/talk/blob/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/v2/stories.js",
      "raw_url": "https://github.com/coralproject/talk/raw/7fd01e5845af17d6edef31a2dc05ebb653530c91/routes/api/v2/stories.js",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/routes/api/v2/stories.js?ref=7fd01e5845af17d6edef31a2dc05ebb653530c91",
      "patch": "@@ -0,0 +1,145 @@\n+const express = require('express');\n+const Joi = require('joi');\n+const { get, first, last } = require('lodash');\n+\n+const authorization = require('../../../middleware/authorization');\n+const AssetModel = require('../../../models/asset');\n+\n+const router = express.Router();\n+\n+const ListStorySchema = Joi.object({\n+  value: Joi.string()\n+    .empty('')\n+    .default(''),\n+  filter: Joi.string()\n+    .empty('')\n+    .valid(['all', 'open', 'closed'])\n+    .default('all'),\n+  limit: Joi.number()\n+    .empty('')\n+    .default(20)\n+    .max(500)\n+    .min(0),\n+  cursor: Joi.string()\n+    .empty('')\n+    .default(''),\n+});\n+\n+function validate(query) {\n+  const { value, error } = Joi.validate(query, ListStorySchema, {\n+    presence: 'optional',\n+  });\n+  if (error) {\n+    throw error;\n+  }\n+\n+  return value;\n+}\n+\n+router.get(\n+  '/',\n+  authorization.needed('ADMIN', 'MODERATOR'),\n+  async (req, res, next) => {\n+    try {\n+      // Validate and extract the query arguments.\n+      let { cursor, value, filter, limit } = validate(req.query);\n+      const isTextBasedSearch = value.length > 0;\n+\n+      // The cursor can be a date or a number based on the style of search being\n+      // performed.\n+      cursor = Joi.attempt(\n+        cursor,\n+        isTextBasedSearch\n+          ? Joi.number()\n+              .empty('')\n+              .min(0)\n+              .default(0)\n+          : Joi.date()\n+              .empty('')\n+              .default(null)\n+      );\n+\n+      // Create a new query to begin adding conditions.\n+      let query = AssetModel.find(\n+        {},\n+        isTextBasedSearch ? { score: { $meta: 'textScore' } } : {}\n+      );\n+\n+      if (filter === 'open') {\n+        // Filter by open stories.\n+        query.merge({\n+          $or: [{ closedAt: null }, { closedAt: { $gt: Date.now() } }],\n+        });\n+      } else if (filter === 'closed') {\n+        // Filter by closed stories.\n+        query.merge({\n+          closedAt: {\n+            $lt: Date.now(),\n+          },\n+        });\n+      }\n+\n+      if (isTextBasedSearch) {\n+        // This is a text based search, so search by the value.\n+        query.merge({\n+          $text: {\n+            $search: value,\n+          },\n+        });\n+\n+        // Sort by text search score.\n+        query.sort({ score: { $meta: 'textScore' } });\n+\n+        if (cursor) {\n+          // We are paginating, so we should skip stories based on the cursor.\n+          query.skip(cursor);\n+        }\n+      } else {\n+        // This is not a text based search, so sort by the created timestamp.\n+        query.sort({ created_at: -1 });\n+\n+        if (cursor) {\n+          // We are paginating, so we should sort based on the created\n+          // timestamp.\n+          query.merge({\n+            created_at: {\n+              $lt: cursor,\n+            },\n+          });\n+        }\n+      }\n+\n+      // Execute the query.\n+      const results = await query.limit(limit + 1);\n+\n+      const textTransformer = (node, idx) => ({\n+        node,\n+        cursor: idx + cursor + 1,\n+      });\n+\n+      const dateTransformer = node => ({\n+        node,\n+        cursor: node.created_at,\n+      });\n+\n+      // Slice the nodes to get only the requested number of elements.\n+      const edges = results\n+        .slice(0, limit)\n+        .map(isTextBasedSearch ? textTransformer : dateTransformer);\n+\n+      // Generate the pageInfo.\n+      const pageInfo = {\n+        startCursor: get(first(edges), 'cursor', null),\n+        endCursor: get(last(edges), 'cursor', null),\n+        hasNextPage: results.length > limit,\n+      };\n+\n+      // Send back the asset data.\n+      return res.json({ edges, pageInfo });\n+    } catch (err) {\n+      return next(err);\n+    }\n+  }\n+);\n+\n+module.exports = router;"
    }
  ]
}
