{
  "sha": "e47e0af123b43dfba622c3f984a3f7f68578c8ed",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplNDdlMGFmMTIzYjQzZGZiYTYyMmMzZjk4NGEzZjdmNjg1NzhjOGVk",
  "commit": {
    "author": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-07-19T15:56:14Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-07-19T15:56:14Z"
    },
    "message": "FEATURE: Allow viewing of raw emails for reviewable queued posts (#7910)\n\nIf a post arrives via email but must be reviewed, we now show an\r\nicon that can be clicked to view the raw contents of the email.\r\n\r\nThis is useful if Discourse's email parser is acting odd and the user\r\nreviewing the post wants to know what the original contents were before\r\napproving/rejecting the post.",
    "tree": {
      "sha": "765c36313ae7108bec7efae63cd29666f4d56790",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/765c36313ae7108bec7efae63cd29666f4d56790"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e47e0af123b43dfba622c3f984a3f7f68578c8ed",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdMegeCRBK7hj4Ov3rIwAAdHIIAHSlmaTnrsPi4AIzKv9j3vjR\nUR8to7zdRr+UHNmyN1m2cxwPbnf3cWK2f4BlOaEQyX4BZoOa9X1YhfeIhqYVjzGN\n5v+Jle7qUd+F3Gl8ZjAVDkzNtyYi6JCoCf5+RZDTTUXKgNX9MkH/nunnysNBlZmL\n77r6/e0BJIMpgtz77lg1vh+CBXiVRX6+SWKSeLuPu9IXxMXF5KYfyPu/6kpbQywP\n/GvuAvezjDB1ROpfiuPiC0BOdVznUqQgntaQZWLjqhYykHocSJYHmm6QIEYRYGyS\nef3CnZOpWOx60JnwnkOulsxjGWVfMtiawOm/vV/khVgwCkd98sdH4Bty3NuMRi4=\n=AaEC\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 765c36313ae7108bec7efae63cd29666f4d56790\nparent 8dd3cbfcb954e853fde2fe04e0bb220b5a5eb140\nauthor Robin Ward <robin.ward@gmail.com> 1563551774 -0400\ncommitter GitHub <noreply@github.com> 1563551774 -0400\n\nFEATURE: Allow viewing of raw emails for reviewable queued posts (#7910)\n\nIf a post arrives via email but must be reviewed, we now show an\r\nicon that can be clicked to view the raw contents of the email.\r\n\r\nThis is useful if Discourse's email parser is acting odd and the user\r\nreviewing the post wants to know what the original contents were before\r\napproving/rejecting the post."
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e47e0af123b43dfba622c3f984a3f7f68578c8ed",
  "html_url": "https://github.com/discourse/discourse/commit/e47e0af123b43dfba622c3f984a3f7f68578c8ed",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e47e0af123b43dfba622c3f984a3f7f68578c8ed/comments",
  "author": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8dd3cbfcb954e853fde2fe04e0bb220b5a5eb140",
      "url": "https://api.github.com/repos/discourse/discourse/commits/8dd3cbfcb954e853fde2fe04e0bb220b5a5eb140",
      "html_url": "https://github.com/discourse/discourse/commit/8dd3cbfcb954e853fde2fe04e0bb220b5a5eb140"
    }
  ],
  "stats": {
    "total": 56,
    "additions": 55,
    "deletions": 1
  },
  "files": [
    {
      "sha": "1255c5bddc6226c267457457500de05e0138e893",
      "filename": "app/assets/javascripts/discourse/components/reviewable-queued-post.js.es6",
      "status": "added",
      "additions": 9,
      "deletions": 0,
      "changes": 9,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/javascripts/discourse/components/reviewable-queued-post.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/javascripts/discourse/components/reviewable-queued-post.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/components/reviewable-queued-post.js.es6?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -0,0 +1,9 @@\n+import showModal from \"discourse/lib/show-modal\";\n+\n+export default Ember.Component.extend({\n+  actions: {\n+    showRawEmail() {\n+      showModal(\"raw-email\").set(\"rawEmail\", this.reviewable.payload.raw_email);\n+    }\n+  }\n+});"
    },
    {
      "sha": "30aff53c6af62c66df0efa1027606d4782f92ed3",
      "filename": "app/assets/javascripts/discourse/templates/components/reviewable-queued-post.hbs",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/javascripts/discourse/templates/components/reviewable-queued-post.hbs",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/javascripts/discourse/templates/components/reviewable-queued-post.hbs",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/templates/components/reviewable-queued-post.hbs?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -5,6 +5,11 @@\n   </div>\n   {{category-badge reviewable.category}}\n   {{reviewable-tags tags=reviewable.payload.tags tagName=''}}\n+  {{#if reviewable.payload.via_email}}\n+    <a href {{action \"showRawEmail\"}} class='show-raw-email'>\n+      {{d-icon \"far-envelope\" title=\"post.via_email\"}}\n+    </a>\n+  {{/if}}\n {{/reviewable-topic-link}}\n \n <div class='post-contents-wrapper'>"
    },
    {
      "sha": "31071ac39d33a2f2e1c9edbfb1bbd1cd9e32d6f3",
      "filename": "app/assets/stylesheets/common/base/reviewables.scss",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/stylesheets/common/base/reviewables.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/assets/stylesheets/common/base/reviewables.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/common/base/reviewables.scss?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -364,6 +364,10 @@\n }\n \n .reviewable-item {\n+  .show-raw-email {\n+    color: $primary-medium;\n+    font-size: $font-down-2;\n+  }\n   .post-title {\n     background-color: yellow;\n   }"
    },
    {
      "sha": "c2ce6fecf22d58f97709aa6d4a25d1f022aa0287",
      "filename": "app/serializers/reviewable_queued_post_serializer.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/serializers/reviewable_queued_post_serializer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/app/serializers/reviewable_queued_post_serializer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/serializers/reviewable_queued_post_serializer.rb?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -16,7 +16,9 @@ class ReviewableQueuedPostSerializer < ReviewableSerializer\n     :is_poll,\n     :typing_duration_msecs,\n     :composer_open_duration_msecs,\n-    :tags\n+    :tags,\n+    :via_email,\n+    :raw_email\n   )\n \n   def reply_to_post_number"
    },
    {
      "sha": "26712309cd4ae57c0c1d5bb3503238680599566e",
      "filename": "lib/new_post_manager.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/lib/new_post_manager.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/lib/new_post_manager.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/new_post_manager.rb?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -201,6 +201,8 @@ def enqueue(reason = nil)\n     %w(typing_duration_msecs composer_open_duration_msecs reply_to_post_number).each do |a|\n       payload[a] = @args[a].to_i if @args[a]\n     end\n+    payload[:via_email] = true if !!@args[:via_email]\n+    payload[:raw_email] = @args[:raw_email] if @args[:raw_email].present?\n \n     reviewable = ReviewableQueuedPost.new(\n       created_by: @user,"
    },
    {
      "sha": "547f30cf62bc99d95f66e336296855a43bbb8b87",
      "filename": "spec/components/new_post_manager_spec.rb",
      "status": "modified",
      "additions": 30,
      "deletions": 0,
      "changes": 30,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/spec/components/new_post_manager_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/spec/components/new_post_manager_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/new_post_manager_spec.rb?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -407,4 +407,34 @@\n       end\n     end\n   end\n+\n+  context \"via email\" do\n+    let(:manager) do\n+      NewPostManager.new(\n+        topic.user,\n+        raw: 'this is emailed content',\n+        topic_id: topic.id,\n+        via_email: true,\n+        raw_email: 'raw email contents'\n+      )\n+    end\n+\n+      before do\n+        SiteSetting.approve_post_count = 100\n+        topic.user.trust_level = 0\n+      end\n+\n+    it \"will store via_email and raw_email in the enqueued post\" do\n+      result = manager.perform\n+      expect(result.action).to eq(:enqueued)\n+      expect(result.reviewable).to be_present\n+      expect(result.reviewable.payload['via_email']).to eq(true)\n+      expect(result.reviewable.payload['raw_email']).to eq('raw email contents')\n+\n+      post = result.reviewable.perform(Discourse.system_user, :approve_post).created_post\n+      expect(post.via_email).to eq(true)\n+      expect(post.raw_email).to eq(\"raw email contents\")\n+    end\n+  end\n+\n end"
    },
    {
      "sha": "8fa0a5acd2907315492a803c1351cafde1dbf351",
      "filename": "spec/serializers/reviewable_queued_post_serializer_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/e47e0af123b43dfba622c3f984a3f7f68578c8ed/spec/serializers/reviewable_queued_post_serializer_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e47e0af123b43dfba622c3f984a3f7f68578c8ed/spec/serializers/reviewable_queued_post_serializer_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/serializers/reviewable_queued_post_serializer_spec.rb?ref=e47e0af123b43dfba622c3f984a3f7f68578c8ed",
      "patch": "@@ -49,6 +49,8 @@\n \n       expect(payload['raw']).to eq('hello world post contents.')\n       expect(payload['title']).to be_blank\n+      expect(payload['via_email']).to eq(true)\n+      expect(payload['raw_email']).to eq('store_me')\n       expect(json[:topic_id]).to eq(reviewable.topic_id)\n       expect(json[:topic_url]).to eq(reviewable.topic.url)\n       expect(json[:can_edit]).to eq(true)"
    }
  ]
}
