{
  "sha": "89fce2ce7196e90a4de5f97a4555ddb254cb733d",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo4OWZjZTJjZTcxOTZlOTBhNGRlNWY5N2E0NTU1ZGRiMjU0Y2I3MzNk",
  "commit": {
    "author": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2019-07-29T16:43:40Z"
    },
    "committer": {
      "name": "Régis Hanol",
      "email": "regis@hanol.fr",
      "date": "2019-07-29T16:43:40Z"
    },
    "message": "DEV: remove duplicate Remap class and use DbHelper.remap instead\n\nFollow-up to 9cd3f96dee96d3fdda99174077fb79c1d6f26ea3",
    "tree": {
      "sha": "5bc5957c252d30891e1f7adaf3bec6d6840471d7",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/5bc5957c252d30891e1f7adaf3bec6d6840471d7"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/89fce2ce7196e90a4de5f97a4555ddb254cb733d",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/89fce2ce7196e90a4de5f97a4555ddb254cb733d",
  "html_url": "https://github.com/discourse/discourse/commit/89fce2ce7196e90a4de5f97a4555ddb254cb733d",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/89fce2ce7196e90a4de5f97a4555ddb254cb733d/comments",
  "author": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36cb5f30389c8f5dbb9d2d5a784c342d87919868",
      "url": "https://api.github.com/repos/discourse/discourse/commits/36cb5f30389c8f5dbb9d2d5a784c342d87919868",
      "html_url": "https://github.com/discourse/discourse/commit/36cb5f30389c8f5dbb9d2d5a784c342d87919868"
    }
  ],
  "stats": {
    "total": 78,
    "additions": 12,
    "deletions": 66
  },
  "files": [
    {
      "sha": "63a8208308780600e716fc866f38c9c0d6befa94",
      "filename": "lib/db_helper.rb",
      "status": "modified",
      "additions": 10,
      "deletions": 2,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/89fce2ce7196e90a4de5f97a4555ddb254cb733d/lib/db_helper.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/89fce2ce7196e90a4de5f97a4555ddb254cb733d/lib/db_helper.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/db_helper.rb?ref=89fce2ce7196e90a4de5f97a4555ddb254cb733d",
      "patch": "@@ -50,7 +50,7 @@ def self.remap(from, to, anchor_left: false, anchor_right: false, excluded_table\n       SQL\n     end\n \n-    SiteSetting.refresh!\n+    finish!\n   end\n \n   def self.regexp_replace(pattern, replacement, flags: \"gi\", match: \"~*\", excluded_tables: [])\n@@ -82,7 +82,7 @@ def self.regexp_replace(pattern, replacement, flags: \"gi\", match: \"~*\", excluded\n       SQL\n     end\n \n-    SiteSetting.refresh!\n+    finish!\n   end\n \n   def self.find(needle, anchor_left: false, anchor_right: false, excluded_tables: [])\n@@ -108,4 +108,12 @@ def self.find(needle, anchor_left: false, anchor_right: false, excluded_tables:\n     found\n   end\n \n+  private\n+\n+  def self.finish!\n+    SiteSetting.refresh!\n+    Theme.expire_site_cache!\n+    SiteIconManager.ensure_optimized!\n+  end\n+\n end"
    },
    {
      "sha": "b49cd7b3986bad93cff632212e046cd2dfdce6e9",
      "filename": "lib/remap.rb",
      "status": "removed",
      "additions": 0,
      "deletions": 62,
      "changes": 62,
      "blob_url": "https://github.com/discourse/discourse/blob/36cb5f30389c8f5dbb9d2d5a784c342d87919868/lib/remap.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/36cb5f30389c8f5dbb9d2d5a784c342d87919868/lib/remap.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/remap.rb?ref=36cb5f30389c8f5dbb9d2d5a784c342d87919868",
      "patch": "@@ -1,62 +0,0 @@\n-# frozen_string_literal: true\n-\n-class Remap\n-  def initialize(from, to, regex: false, verbose: false)\n-    @from = from\n-    @to = to\n-    @regex = regex\n-    @verbose = verbose\n-  end\n-\n-  def perform\n-    sql = \"SELECT table_name, column_name\n-FROM information_schema.columns\n-WHERE table_schema='public' and (data_type like 'char%' or data_type like 'text%') and is_updatable = 'YES'\"\n-\n-    cnn = ActiveRecord::Base.connection.raw_connection\n-\n-    results = cnn.async_exec(sql).to_a\n-\n-    model_map = {}\n-\n-    results.each do |result|\n-      table_name = result[\"table_name\"]\n-      column_name = result[\"column_name\"]\n-\n-      model = begin\n-        model_map[table_name] ||= table_name.camelize.singularize.constantize\n-      rescue NameError\n-        nil\n-      end\n-\n-      if model &&\n-        model.respond_to?(:ignored_columns) &&\n-        model.ignored_columns.include?(column_name)\n-        next\n-      end\n-\n-      log \"Remapping #{table_name} #{column_name}\"\n-\n-      result = if @regex\n-        cnn.async_exec(\"UPDATE #{table_name}\n-          SET #{column_name} = regexp_replace(#{column_name}, $1, $2, 'g')\n-          WHERE NOT #{column_name} IS NULL\n-            AND #{column_name} <> regexp_replace(#{column_name}, $1, $2, 'g')\", [@from, @to])\n-      else\n-        cnn.async_exec(\"UPDATE #{table_name}\n-          SET #{column_name} = replace(#{column_name}, $1, $2)\n-          WHERE NOT #{column_name} IS NULL\n-            AND #{column_name} <> replace(#{column_name}, $1, $2)\", [@from, @to])\n-      end\n-\n-      log \"#{result.cmd_tuples} rows affected!\" if result.cmd_tuples > 0\n-    end\n-\n-    Theme.expire_site_cache!\n-    SiteIconManager.ensure_optimized!\n-  end\n-\n-  def log(message)\n-    puts(message) if @verbose\n-  end\n-end"
    },
    {
      "sha": "cacd552fdfaaef4381242098cad3f23a96c5fffb",
      "filename": "script/discourse",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/89fce2ce7196e90a4de5f97a4555ddb254cb733d/script/discourse",
      "raw_url": "https://github.com/discourse/discourse/raw/89fce2ce7196e90a4de5f97a4555ddb254cb733d/script/discourse",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/script/discourse?ref=89fce2ce7196e90a4de5f97a4555ddb254cb733d",
      "patch": "@@ -31,7 +31,7 @@ class DiscourseCLI < Thor\n   option :regex, type: :boolean\n   def remap(from, to)\n     load_rails\n-    require 'remap'\n+    require 'db_helper'\n \n     if options[:regex]\n       puts \"Rewriting all occurences of #{from} to #{to} using regexp_replace\"\n@@ -269,7 +269,7 @@ class DiscourseCLI < Thor\n \n   def do_remap(from, to, regex = false)\n     begin\n-      Remap.new(from, to, regex: regex, verbose: true).perform\n+      regex ? DbHelper.regexp_replace(from, to) : DbHelper.remap(from, to)\n       puts 'Done', ''\n     rescue => ex\n       puts \"Error: #{ex}\""
    }
  ]
}
