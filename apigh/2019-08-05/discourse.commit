{
  "sha": "e6831afea1e4f0c1a385a7724f83534d47439e28",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplNjgzMWFmZWExZTRmMGMxYTM4NWE3NzI0ZjgzNTM0ZDQ3NDM5ZTI4",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2019-08-05T13:21:58Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-08-05T13:21:58Z"
    },
    "message": "FIX: Composer preview on IE11 (#7970)\n\nAdd the Array.from polyfill for IE11. This is required to support the transpiled ES6 spread syntex generated by babel: https://babeljs.io/docs/en/caveats/",
    "tree": {
      "sha": "17be4acc35cdceea8fba3837eac03ab7060e0396",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/17be4acc35cdceea8fba3837eac03ab7060e0396"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e6831afea1e4f0c1a385a7724f83534d47439e28",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSC12CRBK7hj4Ov3rIwAAdHIIAG2lwkuneMeU0hc45PdNwaXD\n7e1oFEnYoUF4oz+9g2tcX98VPJ0qW6wlp+0wUODygtsrYjnxP3cidtSmQVa8oO0h\n1wquvGwfoIuAOC/vZ2WsDwvG8LS4XmvX9VEMmtALqzu9lPAx+SVz95WiCfgRIbON\nJdlmrZblzPkhUIzh4N6dsNDnPKbny9TXAjud+tCTNHs5MO1Oft7ee/2q839VzRZi\na/DPfabpGT3xDveEHzPS39eUBfbmPzqTZYUaX8mmb4YAOYiHHJCxInwPO4dIkWCh\nr1ZlGZJf/rKZxcGZu2t0BX4RzpSUdkBbMvbeIInx1AveNzeVo/hyC9gXXU/ZKy4=\n=cwOt\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 17be4acc35cdceea8fba3837eac03ab7060e0396\nparent a68d8de72f96182a455c607650e14397609d50b9\nauthor David Taylor <david@taylorhq.com> 1565011318 +0100\ncommitter GitHub <noreply@github.com> 1565011318 +0100\n\nFIX: Composer preview on IE11 (#7970)\n\nAdd the Array.from polyfill for IE11. This is required to support the transpiled ES6 spread syntex generated by babel: https://babeljs.io/docs/en/caveats/"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e6831afea1e4f0c1a385a7724f83534d47439e28",
  "html_url": "https://github.com/discourse/discourse/commit/e6831afea1e4f0c1a385a7724f83534d47439e28",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e6831afea1e4f0c1a385a7724f83534d47439e28/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "a68d8de72f96182a455c607650e14397609d50b9",
      "url": "https://api.github.com/repos/discourse/discourse/commits/a68d8de72f96182a455c607650e14397609d50b9",
      "html_url": "https://github.com/discourse/discourse/commit/a68d8de72f96182a455c607650e14397609d50b9"
    }
  ],
  "stats": {
    "total": 91,
    "additions": 91,
    "deletions": 0
  },
  "files": [
    {
      "sha": "073503317f1028e8b8638af092c4c5fe7a790fa7",
      "filename": "app/assets/javascripts/polyfills.js",
      "status": "modified",
      "additions": 91,
      "deletions": 0,
      "changes": 91,
      "blob_url": "https://github.com/discourse/discourse/blob/e6831afea1e4f0c1a385a7724f83534d47439e28/app/assets/javascripts/polyfills.js",
      "raw_url": "https://github.com/discourse/discourse/raw/e6831afea1e4f0c1a385a7724f83534d47439e28/app/assets/javascripts/polyfills.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/polyfills.js?ref=e6831afea1e4f0c1a385a7724f83534d47439e28",
      "patch": "@@ -225,4 +225,95 @@ if (!String.prototype.padEnd) {\n   };\n }\n \n+// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\n+// Production steps of ECMA-262, Edition 6, 22.1.2.1\n+if (!Array.from) {\n+  Array.from = (function() {\n+    var toStr = Object.prototype.toString;\n+    var isCallable = function(fn) {\n+      return typeof fn === \"function\" || toStr.call(fn) === \"[object Function]\";\n+    };\n+    var toInteger = function(value) {\n+      var number = Number(value);\n+      if (isNaN(number)) {\n+        return 0;\n+      }\n+      if (number === 0 || !isFinite(number)) {\n+        return number;\n+      }\n+      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n+    };\n+    var maxSafeInteger = Math.pow(2, 53) - 1;\n+    var toLength = function(value) {\n+      var len = toInteger(value);\n+      return Math.min(Math.max(len, 0), maxSafeInteger);\n+    };\n+\n+    // The length property of the from method is 1.\n+    return function from(arrayLike /*, mapFn, thisArg */) {\n+      // 1. Let C be the this value.\n+      var C = this;\n+\n+      // 2. Let items be ToObject(arrayLike).\n+      var items = Object(arrayLike);\n+\n+      // 3. ReturnIfAbrupt(items).\n+      if (arrayLike == null) {\n+        throw new TypeError(\n+          \"Array.from requires an array-like object - not null or undefined\"\n+        );\n+      }\n+\n+      // 4. If mapfn is undefined, then let mapping be false.\n+      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n+      var T;\n+      if (typeof mapFn !== \"undefined\") {\n+        // 5. else\n+        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n+        if (!isCallable(mapFn)) {\n+          throw new TypeError(\n+            \"Array.from: when provided, the second argument must be a function\"\n+          );\n+        }\n+\n+        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n+        if (arguments.length > 2) {\n+          T = arguments[2];\n+        }\n+      }\n+\n+      // 10. Let lenValue be Get(items, \"length\").\n+      // 11. Let len be ToLength(lenValue).\n+      var len = toLength(items.length);\n+\n+      // 13. If IsConstructor(C) is true, then\n+      // 13. a. Let A be the result of calling the [[Construct]] internal method\n+      // of C with an argument list containing the single item len.\n+      // 14. a. Else, Let A be ArrayCreate(len).\n+      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n+\n+      // 16. Let k be 0.\n+      var k = 0;\n+      // 17. Repeat, while k < lenâ€¦ (also steps a - h)\n+      var kValue;\n+      while (k < len) {\n+        kValue = items[k];\n+        if (mapFn) {\n+          A[k] =\n+            typeof T === \"undefined\"\n+              ? mapFn(kValue, k)\n+              : mapFn.call(T, kValue, k);\n+        } else {\n+          A[k] = kValue;\n+        }\n+        k += 1;\n+      }\n+      // 18. Let putStatus be Put(A, \"length\", len, true).\n+      A.length = len;\n+      // 20. Return A.\n+      return A;\n+    };\n+  })();\n+}\n+\n /* eslint-enable */"
    }
  ]
}
