{
  "sha": "d686318133cc3808056063b7a4f469f4d24b5ede",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpkNjg2MzE4MTMzY2MzODA4MDU2MDYzYjdhNGY0NjlmNGQyNGI1ZWRl",
  "commit": {
    "author": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2019-08-12T15:14:51Z"
    },
    "committer": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2019-08-12T15:15:01Z"
    },
    "message": "FIX: Prevent failed remaps during restores\n\nAdditional changes:\n* Verbose logging of remaps during restores\n* Exclude the backup_metadata table from restores",
    "tree": {
      "sha": "10b8e53ba978afc4e653f0c941490c5971f832e6",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/10b8e53ba978afc4e653f0c941490c5971f832e6"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/d686318133cc3808056063b7a4f469f4d24b5ede",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/d686318133cc3808056063b7a4f469f4d24b5ede",
  "html_url": "https://github.com/discourse/discourse/commit/d686318133cc3808056063b7a4f469f4d24b5ede",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/d686318133cc3808056063b7a4f469f4d24b5ede/comments",
  "author": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "c05739c3c8e74152c1846dcc484fff16ac497e0e",
      "url": "https://api.github.com/repos/discourse/discourse/commits/c05739c3c8e74152c1846dcc484fff16ac497e0e",
      "html_url": "https://github.com/discourse/discourse/commit/c05739c3c8e74152c1846dcc484fff16ac497e0e"
    }
  ],
  "stats": {
    "total": 21,
    "additions": 13,
    "deletions": 8
  },
  "files": [
    {
      "sha": "6cddb8257620b65b37ae23caa936dbe151e2db4a",
      "filename": "app/models/backup_metadata.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/d686318133cc3808056063b7a4f469f4d24b5ede/app/models/backup_metadata.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/d686318133cc3808056063b7a4f469f4d24b5ede/app/models/backup_metadata.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/backup_metadata.rb?ref=d686318133cc3808056063b7a4f469f4d24b5ede",
      "patch": "@@ -2,7 +2,7 @@\n \n class BackupMetadata < ActiveRecord::Base\n   def self.value_for(name)\n-    where(name: name).pluck(:value).first\n+    where(name: name).pluck(:value).first.presence\n   end\n end\n "
    },
    {
      "sha": "cf5aa29b24d41403626d9e18aa727ad80653f61c",
      "filename": "lib/backup_restore/restorer.rb",
      "status": "modified",
      "additions": 12,
      "deletions": 7,
      "changes": 19,
      "blob_url": "https://github.com/discourse/discourse/blob/d686318133cc3808056063b7a4f469f4d24b5ede/lib/backup_restore/restorer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/d686318133cc3808056063b7a4f469f4d24b5ede/lib/backup_restore/restorer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/backup_restore/restorer.rb?ref=d686318133cc3808056063b7a4f469f4d24b5ede",
      "patch": "@@ -469,41 +469,46 @@ def remap_uploads(previous_db_name, current_db_name)\n       uploads_folder = was_multisite ? \"/\" : \"/uploads/#{current_db_name}/\"\n \n       if (old_base_url = BackupMetadata.value_for(\"base_url\")) && old_base_url != Discourse.base_url\n-        DbHelper.remap(old_base_url, Discourse.base_url)\n+        remap(old_base_url, Discourse.base_url)\n       end\n \n       current_s3_base_url = SiteSetting.Upload.enable_s3_uploads ? SiteSetting.Upload.s3_base_url : nil\n       if (old_s3_base_url = BackupMetadata.value_for(\"s3_base_url\")) && old_base_url != current_s3_base_url\n-        DbHelper.remap(\"#{old_s3_base_url}/\", uploads_folder)\n+        remap(\"#{old_s3_base_url}/\", uploads_folder)\n       end\n \n       current_s3_cdn_url = SiteSetting.Upload.enable_s3_uploads ? SiteSetting.Upload.s3_cdn_url : nil\n       if (old_s3_cdn_url = BackupMetadata.value_for(\"s3_cdn_url\")) && old_s3_cdn_url != current_s3_cdn_url\n         base_url = SiteSetting.Upload.enable_s3_uploads ? SiteSetting.Upload.s3_cdn_url : Discourse.base_url\n-        DbHelper.remap(\"#{old_s3_cdn_url}/\", UrlHelper.schemaless(\"#{base_url}#{uploads_folder}\"))\n+        remap(\"#{old_s3_cdn_url}/\", UrlHelper.schemaless(\"#{base_url}#{uploads_folder}\"))\n \n         old_host = URI.parse(old_s3_cdn_url).host\n         new_host = URI.parse(base_url).host\n-        DbHelper.remap(old_host, new_host)\n+        remap(old_host, new_host)\n       end\n \n       if (old_cdn_url = BackupMetadata.value_for(\"cdn_url\")) && old_cdn_url != Discourse.asset_host\n         base_url = Discourse.asset_host || Discourse.base_url\n-        DbHelper.remap(\"#{old_cdn_url}/\", UrlHelper.schemaless(\"#{base_url}/\"))\n+        remap(\"#{old_cdn_url}/\", UrlHelper.schemaless(\"#{base_url}/\"))\n \n         old_host = URI.parse(old_cdn_url).host\n         new_host = URI.parse(base_url).host\n-        DbHelper.remap(old_host, new_host)\n+        remap(old_host, new_host)\n       end\n \n       if previous_db_name != current_db_name\n-        DbHelper.remap(\"uploads/#{previous_db_name}\", \"uploads/#{current_db_name}\")\n+        remap(\"uploads/#{previous_db_name}\", \"uploads/#{current_db_name}\")\n       end\n \n     rescue => ex\n       log \"Something went wrong while remapping uploads.\", ex\n     end\n \n+    def remap(from, to)\n+      puts \"Remapping '#{from}' to '#{to}'\"\n+      DbHelper.remap(from, to, verbose: true, excluded_tables: [\"backup_metadata\"])\n+    end\n+\n     def migrate_to_s3\n       log \"Migrating uploads to S3...\"\n       ENV[\"SKIP_FAILED\"] = \"1\""
    }
  ]
}
