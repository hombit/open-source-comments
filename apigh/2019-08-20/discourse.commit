{
  "sha": "5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo1YmQ2YjcwZDk4NWUyNzM2ZjU2ZDJiZWM2Y2NlNTZiZWUwMjI3YjFm",
  "commit": {
    "author": {
      "name": "Vinoth Kannan",
      "email": "vinothkannan@vinkas.com",
      "date": "2019-08-20T16:39:52Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-08-20T16:39:52Z"
    },
    "message": " DEV: debundle plugin css assets and don't load if disabled (#7646)",
    "tree": {
      "sha": "bf6917c66605af19f7e67391a669a9575ab8baee",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/bf6917c66605af19f7e67391a669a9575ab8baee"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdXCJYCRBK7hj4Ov3rIwAAdHIIAH4xej7dhMWnGiOOOrYJVWgf\nhHpvzqiwFLVzylpz1YFszCx+D2wKUICV+viQajs7EDwX/1rnlxhDNU/qHVdBVeN/\n/wOEzOlE2EJ3cPIkh+UiASlYjk36/+H6IfuyUXkocu+Ue6WZdysBdv9JX8w0g8Tg\nI4Nf5jT5uTK3HWQOQ5wKjnrgH82pCAlE25BMMiX74BPAglhq8fgAfsaBow95S0IH\n9i4jZUOKGz+cwjkUgjky1KAkXHqo3TEJeWf1H+lLA2Vv109+wimGVcbNVdbwWWjT\nopvdwHqLv3MIVZsFqeK8nRYDshNi2ed9PKZzo+Wvq8rQeNCb5+6bd2FOSav45AQ=\n=p/V7\n-----END PGP SIGNATURE-----\n",
      "payload": "tree bf6917c66605af19f7e67391a669a9575ab8baee\nparent 36425eb9f04cfac7201632d648050cb43a035bc1\nauthor Vinoth Kannan <vinothkannan@vinkas.com> 1566319192 +0530\ncommitter GitHub <noreply@github.com> 1566319192 +0530\n\n DEV: debundle plugin css assets and don't load if disabled (#7646)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
  "html_url": "https://github.com/discourse/discourse/commit/5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/comments",
  "author": {
    "login": "vinothkannans",
    "id": 9372109,
    "node_id": "MDQ6VXNlcjkzNzIxMDk=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/9372109?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/vinothkannans",
    "html_url": "https://github.com/vinothkannans",
    "followers_url": "https://api.github.com/users/vinothkannans/followers",
    "following_url": "https://api.github.com/users/vinothkannans/following{/other_user}",
    "gists_url": "https://api.github.com/users/vinothkannans/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/vinothkannans/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/vinothkannans/subscriptions",
    "organizations_url": "https://api.github.com/users/vinothkannans/orgs",
    "repos_url": "https://api.github.com/users/vinothkannans/repos",
    "events_url": "https://api.github.com/users/vinothkannans/events{/privacy}",
    "received_events_url": "https://api.github.com/users/vinothkannans/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "36425eb9f04cfac7201632d648050cb43a035bc1",
      "url": "https://api.github.com/repos/discourse/discourse/commits/36425eb9f04cfac7201632d648050cb43a035bc1",
      "html_url": "https://github.com/discourse/discourse/commit/36425eb9f04cfac7201632d648050cb43a035bc1"
    }
  ],
  "stats": {
    "total": 128,
    "additions": 76,
    "deletions": 52
  },
  "files": [
    {
      "sha": "70229afbbc1a6bef4434fcd83e9dd043a17d17af",
      "filename": "app/assets/stylesheets/desktop.scss",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/assets/stylesheets/desktop.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/assets/stylesheets/desktop.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/desktop.scss?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -25,6 +25,4 @@\n \n /* These files doesn't actually exist, they are injected by Stylesheet::Compiler. */\n \n-@import \"plugins\";\n-@import \"plugins_desktop\";\n @import \"category_backgrounds\";"
    },
    {
      "sha": "a2158fe44a558967c93978fab60d340f7da31b68",
      "filename": "app/assets/stylesheets/mobile.scss",
      "status": "modified",
      "additions": 0,
      "deletions": 2,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/assets/stylesheets/mobile.scss",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/assets/stylesheets/mobile.scss",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/stylesheets/mobile.scss?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -38,6 +38,4 @@\n \n /* These files doesn't actually exist, they are injected by Stylesheet::Compiler. */\n \n-@import \"plugins\";\n-@import \"plugins_mobile\";\n @import \"category_backgrounds\";"
    },
    {
      "sha": "d16cb7cb4e73a227b708e423a2b7cbf4c024cc0b",
      "filename": "app/views/common/_discourse_stylesheet.html.erb",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/views/common/_discourse_stylesheet.html.erb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/app/views/common/_discourse_stylesheet.html.erb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/views/common/_discourse_stylesheet.html.erb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -11,3 +11,7 @@\n <%- if theme_ids.present? %>\n   <%= discourse_stylesheet_link_tag(mobile_view? ? :mobile_theme : :desktop_theme) %>\n <%- end %>\n+\n+<%- Discourse.find_plugin_css_assets(include_official: allow_plugins?, include_unofficial: allow_third_party_plugins?).each do |file| %>\n+  <%= discourse_stylesheet_link_tag(file) %>\n+<%- end %>"
    },
    {
      "sha": "fb19a776f1e853348fe40be38a0cebc8d2aa3f11",
      "filename": "lib/discourse.rb",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/discourse.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -214,10 +214,16 @@ def self.find_plugins(args)\n     end\n   end\n \n+  def self.find_plugin_css_assets(args)\n+    self.find_plugins(args).find_all do |plugin|\n+      plugin.css_asset_exists?\n+    end.map { |plugin| plugin.directory_name }\n+  end\n+\n   def self.find_plugin_js_assets(args)\n     self.find_plugins(args).find_all do |plugin|\n       plugin.js_asset_exists?\n-    end.map { |plugin| \"plugins/#{plugin.asset_name}\" }\n+    end.map { |plugin| \"plugins/#{plugin.directory_name}\" }\n   end\n \n   def self.assets_digest"
    },
    {
      "sha": "5d687e0788fa50bd87ca2d13a88a2224d9bb7c15",
      "filename": "lib/discourse_plugin.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse_plugin.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse_plugin.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/discourse_plugin.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -36,8 +36,8 @@ def register_js(file, opts = {})\n     @registry.register_js(file, opts)\n   end\n \n-  def register_css(file)\n-    @registry.register_css(file)\n+  def register_css(file, plugin_directory_name)\n+    @registry.register_css(file, plugin_directory_name)\n   end\n \n   def register_archetype(name, options = {})"
    },
    {
      "sha": "f8111ed71bea51ba43b8639a3f689b3037e041d6",
      "filename": "lib/discourse_plugin_registry.rb",
      "status": "modified",
      "additions": 17,
      "deletions": 9,
      "changes": 26,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse_plugin_registry.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/discourse_plugin_registry.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/discourse_plugin_registry.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -47,15 +47,15 @@ def admin_javascripts\n     end\n \n     def stylesheets\n-      @stylesheets ||= Set.new\n+      @stylesheets ||= Hash.new\n     end\n \n     def mobile_stylesheets\n-      @mobile_stylesheets ||= Set.new\n+      @mobile_stylesheets ||= Hash.new\n     end\n \n     def desktop_stylesheets\n-      @desktop_stylesheets ||= Set.new\n+      @desktop_stylesheets ||= Hash.new\n     end\n \n     def sass_variables\n@@ -116,8 +116,9 @@ def self.register_svg_icon(icon)\n     self.svg_icons << icon\n   end\n \n-  def register_css(filename)\n-    self.class.stylesheets << filename\n+  def register_css(filename, plugin_directory_name)\n+    self.class.stylesheets[plugin_directory_name] ||= Set.new\n+    self.class.stylesheets[plugin_directory_name] << filename\n   end\n \n   def self.register_locale(locale, options = {})\n@@ -153,7 +154,7 @@ def self.each_globbed_asset(each_options = nil)\n   JS_REGEX = /\\.js$|\\.js\\.erb$|\\.js\\.es6|\\.js\\.no-module\\.es6$/\n   HANDLEBARS_REGEX = /\\.hbs$|\\.js\\.handlebars$/\n \n-  def self.register_asset(asset, opts = nil)\n+  def self.register_asset(asset, opts = nil, plugin_directory_name = nil)\n     if asset =~ JS_REGEX\n       if opts == :admin\n         self.admin_javascripts << asset\n@@ -166,19 +167,26 @@ def self.register_asset(asset, opts = nil)\n       end\n     elsif asset =~ /\\.css$|\\.scss$/\n       if opts == :mobile\n-        self.mobile_stylesheets << asset\n+        self.mobile_stylesheets[plugin_directory_name] ||= Set.new\n+        self.mobile_stylesheets[plugin_directory_name] << asset\n       elsif opts == :desktop\n-        self.desktop_stylesheets << asset\n+        self.desktop_stylesheets[plugin_directory_name] ||= Set.new\n+        self.desktop_stylesheets[plugin_directory_name] << asset\n       elsif opts == :variables\n         self.sass_variables << asset\n       else\n-        self.stylesheets << asset\n+        self.stylesheets[plugin_directory_name] ||= Set.new\n+        self.stylesheets[plugin_directory_name] << asset\n       end\n     elsif asset =~ HANDLEBARS_REGEX\n       self.handlebars << asset\n     end\n   end\n \n+  def self.stylesheets_exists?(plugin_directory_name)\n+    self.stylesheets[plugin_directory_name].present? || self.mobile_stylesheets[plugin_directory_name].present? || self.desktop_stylesheets[plugin_directory_name].present?\n+  end\n+\n   def self.register_seed_data(key, value)\n     self.seed_data[key] = value\n   end"
    },
    {
      "sha": "b8158fa75757640fef6f96983e597ab2a4ea725a",
      "filename": "lib/plugin/instance.rb",
      "status": "modified",
      "additions": 10,
      "deletions": 6,
      "changes": 16,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/plugin/instance.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/plugin/instance.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/plugin/instance.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -431,7 +431,7 @@ def register_asset(file, opts = nil)\n       full_path = File.dirname(path) << \"/assets/\" << file\n     end\n \n-    assets << [full_path, opts]\n+    assets << [full_path, opts, directory_name]\n   end\n \n   def register_service_worker(file, opts = nil)\n@@ -654,8 +654,12 @@ def extend_list_method(klass, method, new_attributes)\n     end\n   end\n \n-  def asset_name\n-    @asset_name ||= File.dirname(path).split(\"/\").last\n+  def directory_name\n+    @directory_name ||= File.dirname(path).split(\"/\").last\n+  end\n+\n+  def css_asset_exists?\n+    DiscoursePluginRegistry.stylesheets_exists?(directory_name)\n   end\n \n   def js_asset_exists?\n@@ -669,12 +673,12 @@ def self.js_path\n   end\n \n   def js_file_path\n-    @file_path ||= \"#{Plugin::Instance.js_path}/#{asset_name}.js.erb\"\n+    @file_path ||= \"#{Plugin::Instance.js_path}/#{directory_name}.js.erb\"\n   end\n \n   def register_assets!\n-    assets.each do |asset, opts|\n-      DiscoursePluginRegistry.register_asset(asset, opts)\n+    assets.each do |asset, opts, plugin_directory_name|\n+      DiscoursePluginRegistry.register_asset(asset, opts, plugin_directory_name)\n     end\n   end\n "
    },
    {
      "sha": "1dea3780832225d322bc7e9c0140e1c2d2f001bc",
      "filename": "lib/stylesheet/compiler.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/compiler.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/compiler.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/stylesheet/compiler.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -12,7 +12,7 @@ def self.compile_asset(asset, options = {})\n \n       if Importer.special_imports[asset.to_s]\n         filename = \"theme_#{options[:theme_id]}.scss\"\n-        file = \"@import \\\"common/foundation/variables\\\"; @import \\\"theme_variables\\\"; @import \\\"#{asset}\\\";\"\n+        file = \"@import \\\"common/foundation/variables\\\"; @import \\\"common/foundation/mixins\\\"; @import \\\"theme_variables\\\"; @import \\\"#{asset}\\\";\"\n       else\n         filename = \"#{asset}.scss\"\n         path = \"#{ASSET_ROOT}/#{filename}\""
    },
    {
      "sha": "7258a99978fe37bbdc0f95945ae321efaefdce0a",
      "filename": "lib/stylesheet/importer.rb",
      "status": "modified",
      "additions": 11,
      "deletions": 8,
      "changes": 19,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/importer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/importer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/stylesheet/importer.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -19,16 +19,19 @@ def self.register_import(name, &blk)\n       Import.new(\"#{theme_dir(@theme_id)}/theme_field.scss\", source: @theme_field)\n     end\n \n-    register_import \"plugins\" do\n-      import_files(DiscoursePluginRegistry.stylesheets)\n-    end\n+    Discourse.plugins.each do |plugin|\n+      plugin_directory_name = plugin.directory_name\n \n-    register_import \"plugins_mobile\" do\n-      import_files(DiscoursePluginRegistry.mobile_stylesheets)\n-    end\n+      [\"\", \"mobile\", \"desktop\"].each do |type|\n+        asset_name = type.present? ? \"#{plugin_directory_name}_#{type}\" : plugin_directory_name\n+        stylesheets = type.present? ? DiscoursePluginRegistry.send(\"#{type}_stylesheets\") : DiscoursePluginRegistry.stylesheets\n \n-    register_import \"plugins_desktop\" do\n-      import_files(DiscoursePluginRegistry.desktop_stylesheets)\n+        if stylesheets[plugin_directory_name].present?\n+          register_import asset_name do\n+            import_files(stylesheets[plugin_directory_name])\n+          end\n+        end\n+      end\n     end\n \n     register_import \"plugins_variables\" do"
    },
    {
      "sha": "2d9a2754ebe8ad96a57fffc41d6de7d4bf3d5303",
      "filename": "lib/stylesheet/manager.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/manager.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/lib/stylesheet/manager.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/stylesheet/manager.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -294,9 +294,9 @@ def theme_digest\n   # so we could end up poisoning the cache with a bad file that can not be removed\n   def plugins_digest\n     assets = []\n-    assets += DiscoursePluginRegistry.stylesheets.to_a\n-    assets += DiscoursePluginRegistry.mobile_stylesheets.to_a\n-    assets += DiscoursePluginRegistry.desktop_stylesheets.to_a\n+    DiscoursePluginRegistry.stylesheets.each { |_, paths| assets += paths.to_a }\n+    DiscoursePluginRegistry.mobile_stylesheets.each { |_, paths| assets += paths.to_a }\n+    DiscoursePluginRegistry.desktop_stylesheets.each { |_, paths| assets += paths.to_a }\n     Digest::SHA1.hexdigest(assets.sort.join)\n   end\n "
    },
    {
      "sha": "2dd353e1a6a9a7592f8fe6a43dfd4a286cc898fb",
      "filename": "spec/components/discourse_plugin_registry_spec.rb",
      "status": "modified",
      "additions": 13,
      "deletions": 10,
      "changes": 23,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/discourse_plugin_registry_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/discourse_plugin_registry_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/discourse_plugin_registry_spec.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -13,14 +13,14 @@ class TestRegistry < DiscoursePluginRegistry; end\n   context '#stylesheets' do\n     it 'defaults to an empty Set' do\n       registry.stylesheets = nil\n-      expect(registry.stylesheets).to eq(Set.new)\n+      expect(registry.stylesheets).to eq(Hash.new)\n     end\n   end\n \n   context '#mobile_stylesheets' do\n     it 'defaults to an empty Set' do\n       registry.mobile_stylesheets = nil\n-      expect(registry.mobile_stylesheets).to eq(Set.new)\n+      expect(registry.mobile_stylesheets).to eq(Hash.new)\n     end\n   end\n \n@@ -70,20 +70,22 @@ class TestRegistry < DiscoursePluginRegistry; end\n   end\n \n   context '.register_css' do\n+    let(:plugin_directory_name) { \"hello\" }\n+\n     before do\n-      registry_instance.register_css('hello.css')\n+      registry_instance.register_css('hello.css', plugin_directory_name)\n     end\n \n     it 'is not leaking' do\n-      expect(DiscoursePluginRegistry.new.stylesheets).to be_blank\n+      expect(DiscoursePluginRegistry.new.stylesheets[plugin_directory_name]).to be_nil\n     end\n \n     it 'is returned by DiscoursePluginRegistry.stylesheets' do\n-      expect(registry_instance.stylesheets.include?('hello.css')).to eq(true)\n+      expect(registry_instance.stylesheets[plugin_directory_name].include?('hello.css')).to eq(true)\n     end\n \n     it \"won't add the same file twice\" do\n-      expect { registry_instance.register_css('hello.css') }.not_to change(registry.stylesheets, :size)\n+      expect { registry_instance.register_css('hello.css', plugin_directory_name) }.not_to change(registry.stylesheets[plugin_directory_name], :size)\n     end\n   end\n \n@@ -157,11 +159,12 @@ class TestRegistry < DiscoursePluginRegistry; end\n     end\n \n     it \"does register general css properly\" do\n-      registry.register_asset(\"test.css\")\n-      registry.register_asset(\"test2.css\")\n+      plugin_directory_name = \"my_plugin\"\n+      registry.register_asset(\"test.css\", nil, plugin_directory_name)\n+      registry.register_asset(\"test2.css\", nil, plugin_directory_name)\n \n-      expect(registry.mobile_stylesheets.count).to eq(0)\n-      expect(registry.stylesheets.count).to eq(2)\n+      expect(registry.mobile_stylesheets[plugin_directory_name]).to be_nil\n+      expect(registry.stylesheets[plugin_directory_name].count).to eq(2)\n     end\n \n     it \"registers desktop css properly\" do"
    },
    {
      "sha": "42c4a72cb6e6ff617b675c6dbd68c717f093ee69",
      "filename": "spec/components/discourse_plugin_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/discourse_plugin_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/discourse_plugin_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/discourse_plugin_spec.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -28,8 +28,8 @@ module TestMixin\n   end\n \n   it \"delegates adding css to the registry\" do\n-    registry.expects(:register_css).with('test.css')\n-    plugin.register_css('test.css')\n+    registry.expects(:register_css).with('test.css', 'test')\n+    plugin.register_css('test.css', 'test')\n   end\n \n   it \"delegates creating archetypes\" do"
    },
    {
      "sha": "916fef5e8ba0eef348a21b87f325eebea6b3306d",
      "filename": "spec/components/plugin/instance_spec.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/plugin/instance_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/plugin/instance_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/plugin/instance_spec.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -94,8 +94,8 @@ def enabled?\n \n       plugin.send :register_assets!\n \n-      expect(DiscoursePluginRegistry.mobile_stylesheets.count).to eq(0)\n-      expect(DiscoursePluginRegistry.stylesheets.count).to eq(2)\n+      expect(DiscoursePluginRegistry.mobile_stylesheets[plugin.directory_name]).to be_nil\n+      expect(DiscoursePluginRegistry.stylesheets[plugin.directory_name].count).to eq(2)\n     end\n \n     it \"remaps vendored_core_pretty_text asset\" do\n@@ -220,10 +220,10 @@ def enabled?\n \n       expect(DiscoursePluginRegistry.javascripts.count).to eq(2)\n       expect(DiscoursePluginRegistry.admin_javascripts.count).to eq(2)\n-      expect(DiscoursePluginRegistry.desktop_stylesheets.count).to eq(2)\n+      expect(DiscoursePluginRegistry.desktop_stylesheets[plugin.directory_name].count).to eq(2)\n       expect(DiscoursePluginRegistry.sass_variables.count).to eq(2)\n-      expect(DiscoursePluginRegistry.stylesheets.count).to eq(2)\n-      expect(DiscoursePluginRegistry.mobile_stylesheets.count).to eq(1)\n+      expect(DiscoursePluginRegistry.stylesheets[plugin.directory_name].count).to eq(2)\n+      expect(DiscoursePluginRegistry.mobile_stylesheets[plugin.directory_name].count).to eq(1)\n     end\n   end\n "
    },
    {
      "sha": "e7054f3b7a30bc2c9935ee9a72c36dec62955e20",
      "filename": "spec/components/stylesheet/manager_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/stylesheet/manager_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/5bd6b70d985e2736f56d2bec6cce56bee0227b1f/spec/components/stylesheet/manager_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/stylesheet/manager_spec.rb?ref=5bd6b70d985e2736f56d2bec6cce56bee0227b1f",
      "patch": "@@ -77,7 +77,7 @@\n       manager = Stylesheet::Manager.new(:desktop_theme, theme.id)\n       digest1 = manager.digest\n \n-      DiscoursePluginRegistry.stylesheets.add \"fake_file\"\n+      DiscoursePluginRegistry.stylesheets[\"fake\"] = Set.new([\"fake_file\"])\n \n       manager = Stylesheet::Manager.new(:desktop_theme, theme.id)\n       digest2 = manager.digest"
    }
  ]
}
