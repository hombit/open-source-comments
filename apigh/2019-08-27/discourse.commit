{
  "sha": "8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo4ZTVhOGQxZDU0ZTdjYTgzNDhjZjUwYTBmMWEzN2ExN2E2MTQ4ZTRi",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2019-08-27T16:11:19Z"
    },
    "committer": {
      "name": "Jeff Atwood",
      "email": "jatwood@codinghorror.com",
      "date": "2019-08-27T16:11:19Z"
    },
    "message": "Merge pull request from GHSA-7cmh-wm9h-j63f",
    "tree": {
      "sha": "811d2c1ef26a795314b40c53d2f810cf5db410a2",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/811d2c1ef26a795314b40c53d2f810cf5db410a2"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
  "html_url": "https://github.com/discourse/discourse/commit/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "coding-horror",
    "id": 1522517,
    "node_id": "MDQ6VXNlcjE1MjI1MTc=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1522517?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/coding-horror",
    "html_url": "https://github.com/coding-horror",
    "followers_url": "https://api.github.com/users/coding-horror/followers",
    "following_url": "https://api.github.com/users/coding-horror/following{/other_user}",
    "gists_url": "https://api.github.com/users/coding-horror/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/coding-horror/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/coding-horror/subscriptions",
    "organizations_url": "https://api.github.com/users/coding-horror/orgs",
    "repos_url": "https://api.github.com/users/coding-horror/repos",
    "events_url": "https://api.github.com/users/coding-horror/events{/privacy}",
    "received_events_url": "https://api.github.com/users/coding-horror/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "03d51d6519ebbf5edab9fbda2899e3113a73fba7",
      "url": "https://api.github.com/repos/discourse/discourse/commits/03d51d6519ebbf5edab9fbda2899e3113a73fba7",
      "html_url": "https://github.com/discourse/discourse/commit/03d51d6519ebbf5edab9fbda2899e3113a73fba7"
    }
  ],
  "stats": {
    "total": 23,
    "additions": 21,
    "deletions": 2
  },
  "files": [
    {
      "sha": "9cfaa46df70dd539e0a6bf392db884dc81fa9cf4",
      "filename": "app/controllers/users/omniauth_callbacks_controller.rb",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b/app/controllers/users/omniauth_callbacks_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b/app/controllers/users/omniauth_callbacks_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users/omniauth_callbacks_controller.rb?ref=8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
      "patch": "@@ -134,7 +134,10 @@ def user_found(user)\n         user.email_tokens.create!(email: user.email)\n       end\n \n-      user.activate\n+      if !user.active || !user.email_confirmed?\n+        user.password = SecureRandom.hex\n+        user.activate\n+      end\n       user.update!(registration_ip_address: request.remote_ip) if user.registration_ip_address.blank?\n     end\n "
    },
    {
      "sha": "f8e2ac8679ac449e2fe4310b40db39583e46f7cd",
      "filename": "spec/requests/omniauth_callbacks_controller_spec.rb",
      "status": "modified",
      "additions": 17,
      "deletions": 1,
      "changes": 18,
      "blob_url": "https://github.com/discourse/discourse/blob/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b/spec/requests/omniauth_callbacks_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b/spec/requests/omniauth_callbacks_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/omniauth_callbacks_controller_spec.rb?ref=8e5a8d1d54e7ca8348cf50a0f1a37a17a6148e4b",
      "patch": "@@ -286,7 +286,7 @@ def enabled?\n         expect(user.email_confirmed?).to eq(true)\n       end\n \n-      it \"should activate/unstage staged user\" do\n+      it \"should unstage staged user\" do\n         user.update!(staged: true, registration_ip_address: nil)\n \n         user.reload\n@@ -306,6 +306,22 @@ def enabled?\n         expect(user.registration_ip_address).to be_present\n       end\n \n+      it \"should activate user with matching email\" do\n+        user.update!(password: \"securepassword\", active: false)\n+\n+        user.reload\n+        expect(user.active).to eq(false)\n+        expect(user.confirm_password?(\"securepassword\")).to eq(true)\n+\n+        get \"/auth/google_oauth2/callback.json\"\n+\n+        user.reload\n+        expect(user.active).to eq(true)\n+\n+        # Delete the password, it may have been set by someone else\n+        expect(user.confirm_password?(\"securepassword\")).to eq(false)\n+      end\n+\n       context 'when user has second factor enabled' do\n         before do\n           user.create_totp(enabled: true)"
    }
  ]
}
