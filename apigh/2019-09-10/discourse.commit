{
  "sha": "a25869969ad9d4758a366931cdfc946a6a0436a3",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODphMjU4Njk5NjlhZDlkNDc1OGEzNjY5MzFjZGZjOTQ2YTZhMDQzNmEz",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2019-09-10T16:58:08Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-09-10T16:58:08Z"
    },
    "message": "DEV: adds event hook when add/remove user to group (#8038)",
    "tree": {
      "sha": "a2caca7b22d1f19f571eee406c2dff6d1bd7095c",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/a2caca7b22d1f19f571eee406c2dff6d1bd7095c"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/a25869969ad9d4758a366931cdfc946a6a0436a3",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdd9YgCRBK7hj4Ov3rIwAAdHIIAHPp7a5UlvANFRtosiz7VRY4\nCZQ3Z0KdYAaZnMcHc5JTozq+TNaJalLWEurr/ieQWn+8L8ZfH2REh3N9dCmP1cIT\nXBhzDUeyTg/Zk3eMQPxRwRv6d4e+MO9UpqzAT0YGZnVbycsc8uy6p7EPIm+K+4E6\nDypunyvtx67LrPTbfL8EdSp7QtRBLWQ2nD5wDu0F5DZtMzBQpkmQmGlxGwvylJ9v\nZxCsp7fNwAATfg/t0TIkPDmfXomfYptr106ihzG9qzAkyKLPfDBzal2YgkXoGRMu\nGyQh+2fxXUoz6V9NPVNpjvzm0DWYuH0a9iIqGp+7ItTl+Ph6Ot5/ZmVWtZcISOg=\n=XfaM\n-----END PGP SIGNATURE-----\n",
      "payload": "tree a2caca7b22d1f19f571eee406c2dff6d1bd7095c\nparent 1cebe7670a3c02087c333d3985708726d1d7433f\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1568134688 -0500\ncommitter GitHub <noreply@github.com> 1568134688 -0500\n\nDEV: adds event hook when add/remove user to group (#8038)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/a25869969ad9d4758a366931cdfc946a6a0436a3",
  "html_url": "https://github.com/discourse/discourse/commit/a25869969ad9d4758a366931cdfc946a6a0436a3",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/a25869969ad9d4758a366931cdfc946a6a0436a3/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1cebe7670a3c02087c333d3985708726d1d7433f",
      "url": "https://api.github.com/repos/discourse/discourse/commits/1cebe7670a3c02087c333d3985708726d1d7433f",
      "html_url": "https://github.com/discourse/discourse/commit/1cebe7670a3c02087c333d3985708726d1d7433f"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 45,
    "deletions": 3
  },
  "files": [
    {
      "sha": "8695737ab2b8ea3751a525a3d17429e9987fa705",
      "filename": "app/jobs/regular/automatic_group_membership.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/a25869969ad9d4758a366931cdfc946a6a0436a3/app/jobs/regular/automatic_group_membership.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/a25869969ad9d4758a366931cdfc946a6a0436a3/app/jobs/regular/automatic_group_membership.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/jobs/regular/automatic_group_membership.rb?ref=a25869969ad9d4758a366931cdfc946a6a0436a3",
      "patch": "@@ -22,7 +22,7 @@ def execute(args)\n         .where(staged: false)\n         .find_each do |user|\n         next unless user.email_confirmed?\n-        group.add(user)\n+        group.add(user, automatic: true)\n         GroupActionLogger.new(Discourse.system_user, group).log_add_user_to_group(user)\n       end\n "
    },
    {
      "sha": "c3f632acd15e7859ce15c5d1632525faceeab5ca",
      "filename": "app/models/group.rb",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/discourse/discourse/blob/a25869969ad9d4758a366931cdfc946a6a0436a3/app/models/group.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/a25869969ad9d4758a366931cdfc946a6a0436a3/app/models/group.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/group.rb?ref=a25869969ad9d4758a366931cdfc946a6a0436a3",
      "patch": "@@ -613,7 +613,7 @@ def usernames\n \n   PUBLISH_CATEGORIES_LIMIT = 10\n \n-  def add(user, notify: false)\n+  def add(user, notify: false, automatic: false)\n     self.users.push(user) unless self.users.include?(user)\n \n     if notify\n@@ -635,12 +635,15 @@ def add(user, notify: false)\n       Discourse.request_refresh!(user_ids: [user.id])\n     end\n \n+    DiscourseEvent.trigger(:user_added_to_group, user, self, automatic: automatic)\n+\n     self\n   end\n \n   def remove(user)\n     self.group_users.where(user: user).each(&:destroy)\n     user.update_columns(primary_group_id: nil) if user.primary_group_id == self.id\n+    DiscourseEvent.trigger(:user_removed_from_group, user, self)\n   end\n \n   def add_owner(user)"
    },
    {
      "sha": "697b684361fcde37ebc38b917acf7f93b1c9be52",
      "filename": "spec/jobs/automatic_group_membership_spec.rb",
      "status": "modified",
      "additions": 16,
      "deletions": 1,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/a25869969ad9d4758a366931cdfc946a6a0436a3/spec/jobs/automatic_group_membership_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/a25869969ad9d4758a366931cdfc946a6a0436a3/spec/jobs/automatic_group_membership_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/jobs/automatic_group_membership_spec.rb?ref=a25869969ad9d4758a366931cdfc946a6a0436a3",
      "patch": "@@ -23,7 +23,22 @@\n \n     group = Fabricate(:group, automatic_membership_email_domains: \"wat.com\", automatic_membership_retroactive: true)\n \n-    Jobs::AutomaticGroupMembership.new.execute(group_id: group.id)\n+    begin\n+      automatic = nil\n+      called = false\n+\n+      DiscourseEvent.on(:user_added_to_group) do |_u, _g, options|\n+        automatic = options[:automatic]\n+        called = true\n+      end\n+\n+      Jobs::AutomaticGroupMembership.new.execute(group_id: group.id)\n+\n+      expect(automatic).to eql(true)\n+      expect(called).to eq(true)\n+    ensure\n+      DiscourseEvent.off(:user_added_to_group)\n+    end\n \n     group.reload\n     expect(group.users.include?(user1)).to eq(false)"
    },
    {
      "sha": "d215a89458eb10ddb826070c5c38bb07f5c445fe",
      "filename": "spec/models/group_spec.rb",
      "status": "modified",
      "additions": 24,
      "deletions": 0,
      "changes": 24,
      "blob_url": "https://github.com/discourse/discourse/blob/a25869969ad9d4758a366931cdfc946a6a0436a3/spec/models/group_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/a25869969ad9d4758a366931cdfc946a6a0436a3/spec/models/group_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/group_spec.rb?ref=a25869969ad9d4758a366931cdfc946a6a0436a3",
      "patch": "@@ -806,6 +806,11 @@ def can_view?(user, group)\n       user.update(primary_group: group)\n       expect { group.remove(user) }.to change { user.reload.primary_group }.from(group).to(nil)\n     end\n+\n+    it 'triggers a user_removed_from_group event' do\n+      events = DiscourseEvent.track_events { group.remove(user) }.map { |e| e[:event_name] }\n+      expect(events).to include(:user_removed_from_group)\n+    end\n   end\n \n   describe '#add' do\n@@ -839,6 +844,25 @@ def can_view?(user, group)\n       expect(notification.user_id).to eq(user.id)\n     end\n \n+    it 'triggers a user_added_to_group event' do\n+      begin\n+        automatic = nil\n+        called = false\n+\n+        DiscourseEvent.on(:user_added_to_group) do |_u, _g, options|\n+          automatic = options[:automatic]\n+          called = true\n+        end\n+\n+        group.add(user)\n+\n+        expect(automatic).to eql(false)\n+        expect(called).to eq(true)\n+      ensure\n+        DiscourseEvent.off(:user_added_to_group)\n+      end\n+    end\n+\n     context 'when adding a user into a public group' do\n       fab!(:category) { Fabricate(:category) }\n "
    }
  ]
}
