{
  "sha": "921461008eefdc4e2fa3ba58985b11f19bfe22b5",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6OTIxNDYxMDA4ZWVmZGM0ZTJmYTNiYTU4OTg1YjExZjE5YmZlMjJiNQ==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-09-18T18:01:06Z"
    },
    "committer": {
      "name": "Kim Gardner",
      "email": "kgardnr@gmail.com",
      "date": "2019-09-18T18:01:06Z"
    },
    "message": "[CORL-621] Auth Fixes (#2569)\n\n* fix: resolve error with redirects\r\n\r\n- fixes #2529\r\n\r\n* fix: apply validations to username for oidc\r\n\r\n* fix: converted components to function components\r\n\r\n* fix: snapshots",
    "tree": {
      "sha": "171f755a4b097db39f9431271d8f5fd3d442dc90",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/171f755a4b097db39f9431271d8f5fd3d442dc90"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/921461008eefdc4e2fa3ba58985b11f19bfe22b5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/921461008eefdc4e2fa3ba58985b11f19bfe22b5",
  "html_url": "https://github.com/coralproject/talk/commit/921461008eefdc4e2fa3ba58985b11f19bfe22b5",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/921461008eefdc4e2fa3ba58985b11f19bfe22b5/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kgardnr",
    "id": 1077300,
    "node_id": "MDQ6VXNlcjEwNzczMDA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1077300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kgardnr",
    "html_url": "https://github.com/kgardnr",
    "followers_url": "https://api.github.com/users/kgardnr/followers",
    "following_url": "https://api.github.com/users/kgardnr/following{/other_user}",
    "gists_url": "https://api.github.com/users/kgardnr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kgardnr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kgardnr/subscriptions",
    "organizations_url": "https://api.github.com/users/kgardnr/orgs",
    "repos_url": "https://api.github.com/users/kgardnr/repos",
    "events_url": "https://api.github.com/users/kgardnr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kgardnr/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "64f102e6d45bcb454d5a76067506dd63231808b7",
      "url": "https://api.github.com/repos/coralproject/talk/commits/64f102e6d45bcb454d5a76067506dd63231808b7",
      "html_url": "https://github.com/coralproject/talk/commit/64f102e6d45bcb454d5a76067506dd63231808b7"
    }
  ],
  "stats": {
    "total": 1120,
    "additions": 566,
    "deletions": 554
  },
  "files": [
    {
      "sha": "a25463e8fc474370b65987f6202aeb60586e2a2c",
      "filename": "src/core/client/admin/routes/Configure/sections/Auth/OIDCConfig.tsx",
      "status": "modified",
      "additions": 11,
      "deletions": 11,
      "changes": 22,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfig.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfig.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfig.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -53,13 +53,13 @@ const OIDCConfig: FunctionComponent<Props> = ({\n }) => {\n   return (\n     <ConfigBoxWithToggleField\n-      data-testid={`configure-auth-oidc-container`}\n+      data-testid=\"configure-auth-oidc-container\"\n       title={\n         <Localized id=\"configure-auth-oidc-loginWith\">\n           <span>Login with OIDC</span>\n         </Localized>\n       }\n-      name={`auth.integrations.oidc.enabled`}\n+      name=\"auth.integrations.oidc.enabled\"\n       disabled={disabled}\n     >\n       {disabledInside => (\n@@ -84,7 +84,7 @@ const OIDCConfig: FunctionComponent<Props> = ({\n               </InputDescription>\n             </Localized>\n             <Field\n-              name={`auth.integrations.oidc.name`}\n+              name=\"auth.integrations.oidc.name\"\n               validate={composeValidatorsWhen(isEnabled, required)}\n               parse={identity}\n             >\n@@ -107,12 +107,12 @@ const OIDCConfig: FunctionComponent<Props> = ({\n           </FormField>\n           <ClientIDField\n             validate={composeValidatorsWhen(isEnabled, required)}\n-            name={`auth.integrations.oidc.clientID`}\n+            name=\"auth.integrations.oidc.clientID\"\n             disabled={disabledInside}\n           />\n           <ClientSecretField\n             validate={composeValidatorsWhen(isEnabled, required)}\n-            name={`auth.integrations.oidc.clientSecret`}\n+            name=\"auth.integrations.oidc.clientSecret\"\n             disabled={disabledInside}\n           />\n           <FormField>\n@@ -127,7 +127,7 @@ const OIDCConfig: FunctionComponent<Props> = ({\n               </InputDescription>\n             </Localized>\n             <Field\n-              name={`auth.integrations.oidc.issuer`}\n+              name=\"auth.integrations.oidc.issuer\"\n               validate={composeValidatorsWhen(isEnabled, required, validateURL)}\n               parse={identity}\n             >\n@@ -165,7 +165,7 @@ const OIDCConfig: FunctionComponent<Props> = ({\n               <InputLabel>authorizationURL</InputLabel>\n             </Localized>\n             <Field\n-              name={`auth.integrations.oidc.authorizationURL`}\n+              name=\"auth.integrations.oidc.authorizationURL\"\n               validate={composeValidatorsWhen(isEnabled, required, validateURL)}\n               parse={identity}\n             >\n@@ -191,7 +191,7 @@ const OIDCConfig: FunctionComponent<Props> = ({\n               <InputLabel>tokenURL</InputLabel>\n             </Localized>\n             <Field\n-              name={`auth.integrations.oidc.tokenURL`}\n+              name=\"auth.integrations.oidc.tokenURL\"\n               validate={composeValidatorsWhen(isEnabled, required, validateURL)}\n               parse={identity}\n             >\n@@ -217,7 +217,7 @@ const OIDCConfig: FunctionComponent<Props> = ({\n               <InputLabel>jwksURI</InputLabel>\n             </Localized>\n             <Field\n-              name={`auth.integrations.oidc.jwksURI`}\n+              name=\"auth.integrations.oidc.jwksURI\"\n               validate={composeValidatorsWhen(isEnabled, required, validateURL)}\n               parse={identity}\n             >\n@@ -244,11 +244,11 @@ const OIDCConfig: FunctionComponent<Props> = ({\n                 <span>Use OIDC login on</span>\n               </Localized>\n             }\n-            name={`auth.integrations.oidc.targetFilter`}\n+            name=\"auth.integrations.oidc.targetFilter\"\n             disabled={disabledInside}\n           />\n           <RegistrationField\n-            name={`auth.integrations.oidc.allowRegistration`}\n+            name=\"auth.integrations.oidc.allowRegistration\"\n             disabled={disabledInside}\n           />\n         </HorizontalGutter>"
    },
    {
      "sha": "bbc2f5dd4d64f411cc2cafdc15e10ab96ac2d5a6",
      "filename": "src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/admin/routes/Configure/sections/Auth/OIDCConfigContainer.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -42,6 +42,9 @@ class OIDCConfigContainer extends React.Component<Props, State> {\n         issuer: form.getState().values.auth.integrations.oidc.issuer,\n       });\n       if (config) {\n+        if (config.issuer) {\n+          form.change(\"auth.integrations.oidc.issuer\", config.issuer);\n+        }\n         form.change(\n           \"auth.integrations.oidc.authorizationURL\",\n           config.authorizationURL"
    },
    {
      "sha": "cff05b8f6d7e0556783b2579e4f0932187cab854",
      "filename": "src/core/client/auth/App/App.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/App/App.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/App/App.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/App/App.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,9 +1,7 @@\n import React, { FunctionComponent } from \"react\";\n \n-import { useResizeObserver } from \"coral-framework/hooks\";\n import { PropTypesOf } from \"coral-framework/types\";\n \n-import resizePopup from \"../dom/resizePopup\";\n import AddEmailAddress from \"../views/AddEmailAddress\";\n import CreatePassword from \"../views/CreatePassword\";\n import CreateUsername from \"../views/CreateUsername\";\n@@ -50,11 +48,8 @@ const render = ({ view, auth, viewer }: AppProps) => {\n };\n \n const App: FunctionComponent<AppProps> = props => {\n-  const ref = useResizeObserver(entry => {\n-    resizePopup();\n-  });\n   return (\n-    <div ref={ref}>\n+    <div>\n       {process.env.NODE_ENV !== \"test\" && <ViewRouter />}\n       <div>{render(props)}</div>\n     </div>"
    },
    {
      "sha": "65427215ab50ecd14ed1a3b04ad27c98668735b4",
      "filename": "src/core/client/auth/App/__snapshots__/App.spec.tsx.snap",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/App/__snapshots__/App.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/App/__snapshots__/App.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/App/__snapshots__/App.spec.tsx.snap?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,7 +3,7 @@\n exports[`renders sign in 1`] = `\n <div>\n   <div>\n-    <withContext(withMutation(withContext(createMutationContainer(withContext(createMutationContainer(withContext(withLocalStateContainer(Relay(SignInContainer)))))))))\n+    <withContext(createMutationContainer(withContext(withLocalStateContainer(Relay(SignInContainer)))))\n       auth={Object {}}\n     />\n   </div>"
    },
    {
      "sha": "9fb0427cded2207b58f42ce9baf66895458b18e8",
      "filename": "src/core/client/auth/dom/resizePopup.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/dom/resizePopup.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/dom/resizePopup.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/dom/resizePopup.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,9 +1,6 @@\n function resizePopup() {\n   const innerHeight = window.document.body.offsetHeight;\n-  window.resizeTo(\n-    window.outerWidth,\n-    innerHeight + window.outerHeight - window.innerHeight\n-  );\n+  window.resizeTo(350, innerHeight + window.outerHeight - window.innerHeight);\n }\n \n let resizedAlready = false;"
    },
    {
      "sha": "80e6fabfcc365939fcbae4ddbd13f5e9296bb16c",
      "filename": "src/core/client/auth/hooks/useResizePopup.ts",
      "status": "added",
      "additions": 50,
      "deletions": 0,
      "changes": 50,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/hooks/useResizePopup.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/hooks/useResizePopup.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/hooks/useResizePopup.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -0,0 +1,50 @@\n+import { useCallback, useEffect, useState } from \"react\";\n+\n+import { useResizeObserver } from \"coral-framework/hooks\";\n+\n+import resizePopup from \"../dom/resizePopup\";\n+\n+export default function useResizePopup() {\n+  const [polling, setPolling] = useState(true);\n+  const [pollTimeout, setPollTimeout] = useState<NodeJS.Timer | null>(null);\n+\n+  const pollPopupHeight = useCallback(\n+    (interval: number = 200) => {\n+      if (!polling) {\n+        return;\n+      }\n+\n+      // Save the reference to the browser timeout we create.\n+      setPollTimeout(\n+        // Create the timeout to fire after the interval.\n+        setTimeout(() => {\n+          // Using requestAnimationFrame, resize the popup, and reschedule the\n+          // resize timeout again in another interval.\n+          window.requestAnimationFrame(() => {\n+            resizePopup();\n+            pollPopupHeight(interval);\n+          });\n+        }, interval)\n+      );\n+    },\n+    [pollTimeout, setPollTimeout, polling]\n+  );\n+\n+  useEffect(() => {\n+    // Poll for popup height changes.\n+    pollPopupHeight();\n+\n+    return () => {\n+      if (pollTimeout) {\n+        clearTimeout(pollTimeout);\n+        setPollTimeout(null);\n+        setPolling(false);\n+      }\n+    };\n+  }, [setPollTimeout, setPolling]);\n+\n+  const ref = useResizeObserver(() => {\n+    resizePopup();\n+  });\n+  return ref;\n+}"
    },
    {
      "sha": "b8198709bdcf5838ce81735805040f61e0c243ee",
      "filename": "src/core/client/auth/index.tsx",
      "status": "modified",
      "additions": 0,
      "deletions": 23,
      "changes": 23,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/index.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -4,31 +4,12 @@ import ReactDOM from \"react-dom\";\n import { createManaged } from \"coral-framework/lib/bootstrap\";\n \n import App from \"./App\";\n-import resizePopup from \"./dom/resizePopup\";\n import { initLocalState } from \"./local\";\n import localesData from \"./locales\";\n \n // Import css variables.\n import \"coral-ui/theme/variables.css\";\n \n-/**\n- * Adapt popup height to current content every 200ms.\n- *\n- * The goal is to smooth out height inconsistensies  e.g. when fonts\n- * are switched out or other resources being loaded that React has no influence\n- * over.\n- *\n- * This works in addition to the ResizeObserver in App.tsx\n- */\n-function pollPopupHeight(interval: number = 200) {\n-  setTimeout(() => {\n-    window.requestAnimationFrame(() => {\n-      resizePopup();\n-      pollPopupHeight(interval);\n-    });\n-  }, interval);\n-}\n-\n async function main() {\n   const ManagedCoralContextProvider = await createManaged({\n     initLocalState,\n@@ -42,10 +23,6 @@ async function main() {\n   );\n \n   ReactDOM.render(<Index />, document.getElementById(\"app\"));\n-  // Set width.\n-  window.resizeTo(350, window.outerHeight);\n-  // Poll height.\n-  pollPopupHeight();\n }\n \n main();"
    },
    {
      "sha": "834de6cd2a835155a849a3ad6f07b6d5cb0e19a0",
      "filename": "src/core/client/auth/views/AddEmailAddress/AddEmailAddress.tsx",
      "status": "modified",
      "additions": 90,
      "deletions": 91,
      "changes": 181,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/AddEmailAddress/AddEmailAddress.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/AddEmailAddress/AddEmailAddress.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/AddEmailAddress/AddEmailAddress.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,13 +1,15 @@\n import { FORM_ERROR } from \"final-form\";\n import { Localized } from \"fluent-react/compat\";\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback } from \"react\";\n import { Form } from \"react-final-form\";\n \n import { Bar, Title } from \"coral-auth/components//Header\";\n import ConfirmEmailField from \"coral-auth/components/ConfirmEmailField\";\n import EmailField from \"coral-auth/components/EmailField\";\n import Main from \"coral-auth/components/Main\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { OnSubmit } from \"coral-framework/lib/form\";\n+import { useMutation } from \"coral-framework/lib/relay\";\n import {\n   Button,\n   CallOut,\n@@ -16,101 +18,98 @@ import {\n   Typography,\n } from \"coral-ui/components\";\n \n-import { SetEmailMutation, withSetEmailMutation } from \"./SetEmailMutation\";\n+import SetEmailMutation from \"./SetEmailMutation\";\n import { ListItem, UnorderedList } from \"./UnorderedList\";\n \n interface FormProps {\n   email: string;\n }\n \n-interface Props {\n-  setEmail: SetEmailMutation;\n-}\n-\n-class AddEmailAddressContainer extends Component<Props> {\n-  private handleSubmit: OnSubmit<FormProps> = async (input, form) => {\n-    try {\n-      await this.props.setEmail({ email: input.email });\n-      return form.reset();\n-    } catch (error) {\n-      return { [FORM_ERROR]: error.message };\n-    }\n-  };\n+const AddEmailAddressContainer: FunctionComponent = () => {\n+  const setEmail = useMutation(SetEmailMutation);\n+  const onSubmit: OnSubmit<FormProps> = useCallback(\n+    async (input, form) => {\n+      try {\n+        await setEmail({ email: input.email });\n+        return form.reset();\n+      } catch (error) {\n+        return { [FORM_ERROR]: error.message };\n+      }\n+    },\n+    [setEmail]\n+  );\n+  const ref = useResizePopup();\n \n-  public render() {\n-    // tslint:disable-next-line:no-empty\n-    return (\n-      <div data-testid=\"addEmailAddress-container\">\n-        <Bar>\n-          <Localized id=\"addEmailAddress-addEmailAddressHeader\">\n-            <Title>Add Email Address</Title>\n-          </Localized>\n-        </Bar>\n-        <Main data-testid=\"addEmailAddress-main\">\n-          <Form onSubmit={this.handleSubmit}>\n-            {({ handleSubmit, submitting, submitError }) => (\n-              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n-                <HorizontalGutter size=\"oneAndAHalf\">\n-                  <Localized id=\"addEmailAddress-whatItIs\">\n-                    <Typography variant=\"bodyCopy\">\n-                      For your added security, we require users to add an email\n-                      address to their accounts. Your email address will be used\n-                      to:\n-                    </Typography>\n-                  </Localized>\n-                  <UnorderedList>\n-                    <ListItem icon={<Icon>done</Icon>}>\n-                      <Localized id=\"addEmailAddress-receiveUpdates\">\n-                        <Typography container=\"div\">\n-                          Receive updates regarding any changes to your account\n-                          (email address, username, password, etc.)\n-                        </Typography>\n-                      </Localized>\n-                    </ListItem>\n-                    <ListItem icon={<Icon>done</Icon>}>\n-                      <Localized id=\"addEmailAddress-allowDownload\">\n-                        <Typography container=\"div\">\n-                          Allow you to download your comments.\n-                        </Typography>\n-                      </Localized>\n-                    </ListItem>\n-                    <ListItem icon={<Icon>done</Icon>}>\n-                      <Localized id=\"addEmailAddress-sendNotifications\">\n-                        <Typography container=\"div\">\n-                          Send comment notifications that you have chosen to\n-                          receive.\n-                        </Typography>\n-                      </Localized>\n-                    </ListItem>\n-                  </UnorderedList>\n-                  {submitError && (\n-                    <CallOut color=\"error\" fullWidth>\n-                      {submitError}\n-                    </CallOut>\n-                  )}\n-                  <EmailField disabled={submitting} />\n-                  <ConfirmEmailField disabled={submitting} />\n-                  <Localized id=\"addEmailAddress-addEmailAddressButton\">\n-                    <Button\n-                      variant=\"filled\"\n-                      color=\"primary\"\n-                      size=\"large\"\n-                      type=\"submit\"\n-                      fullWidth\n-                      disabled={submitting}\n-                    >\n-                      Add Email Address\n-                    </Button>\n-                  </Localized>\n-                </HorizontalGutter>\n-              </form>\n-            )}\n-          </Form>\n-        </Main>\n-      </div>\n-    );\n-  }\n-}\n+  return (\n+    <div ref={ref} data-testid=\"addEmailAddress-container\">\n+      <Bar>\n+        <Localized id=\"addEmailAddress-addEmailAddressHeader\">\n+          <Title>Add Email Address</Title>\n+        </Localized>\n+      </Bar>\n+      <Main data-testid=\"addEmailAddress-main\">\n+        <Form onSubmit={onSubmit}>\n+          {({ handleSubmit, submitting, submitError }) => (\n+            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n+              <HorizontalGutter size=\"oneAndAHalf\">\n+                <Localized id=\"addEmailAddress-whatItIs\">\n+                  <Typography variant=\"bodyCopy\">\n+                    For your added security, we require users to add an email\n+                    address to their accounts. Your email address will be used\n+                    to:\n+                  </Typography>\n+                </Localized>\n+                <UnorderedList>\n+                  <ListItem icon={<Icon>done</Icon>}>\n+                    <Localized id=\"addEmailAddress-receiveUpdates\">\n+                      <Typography container=\"div\">\n+                        Receive updates regarding any changes to your account\n+                        (email address, username, password, etc.)\n+                      </Typography>\n+                    </Localized>\n+                  </ListItem>\n+                  <ListItem icon={<Icon>done</Icon>}>\n+                    <Localized id=\"addEmailAddress-allowDownload\">\n+                      <Typography container=\"div\">\n+                        Allow you to download your comments.\n+                      </Typography>\n+                    </Localized>\n+                  </ListItem>\n+                  <ListItem icon={<Icon>done</Icon>}>\n+                    <Localized id=\"addEmailAddress-sendNotifications\">\n+                      <Typography container=\"div\">\n+                        Send comment notifications that you have chosen to\n+                        receive.\n+                      </Typography>\n+                    </Localized>\n+                  </ListItem>\n+                </UnorderedList>\n+                {submitError && (\n+                  <CallOut color=\"error\" fullWidth>\n+                    {submitError}\n+                  </CallOut>\n+                )}\n+                <EmailField disabled={submitting} />\n+                <ConfirmEmailField disabled={submitting} />\n+                <Localized id=\"addEmailAddress-addEmailAddressButton\">\n+                  <Button\n+                    variant=\"filled\"\n+                    color=\"primary\"\n+                    size=\"large\"\n+                    type=\"submit\"\n+                    fullWidth\n+                    disabled={submitting}\n+                  >\n+                    Add Email Address\n+                  </Button>\n+                </Localized>\n+              </HorizontalGutter>\n+            </form>\n+          )}\n+        </Form>\n+      </Main>\n+    </div>\n+  );\n+};\n \n-const enhanced = withSetEmailMutation(AddEmailAddressContainer);\n-export default enhanced;\n+export default AddEmailAddressContainer;"
    },
    {
      "sha": "e09574279a270c4b1de974b457a358105ad9a088",
      "filename": "src/core/client/auth/views/AddEmailAddress/SetEmailMutation.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 5,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/AddEmailAddress/SetEmailMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/AddEmailAddress/SetEmailMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/AddEmailAddress/SetEmailMutation.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,7 +3,7 @@ import { Environment } from \"relay-runtime\";\n \n import {\n   commitMutationPromiseNormalized,\n-  createMutationContainer,\n+  createMutation,\n } from \"coral-framework/lib/relay\";\n import { Omit } from \"coral-framework/types\";\n \n@@ -39,8 +39,6 @@ function commit(environment: Environment, input: SetEmailInput) {\n   });\n }\n \n-export const withSetEmailMutation = createMutationContainer(\"setEmail\", commit);\n+const SetEmailMutation = createMutation(\"setEmail\", commit);\n \n-export type SetEmailMutation = (\n-  input: SetEmailInput\n-) => Promise<MutationTypes[\"response\"][\"setEmail\"]>;\n+export default SetEmailMutation;"
    },
    {
      "sha": "5f1477be158f7e314701ec6f3de20e4a836ea3ae",
      "filename": "src/core/client/auth/views/CreatePassword/CreatePassword.tsx",
      "status": "modified",
      "additions": 63,
      "deletions": 66,
      "changes": 129,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreatePassword/CreatePassword.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreatePassword/CreatePassword.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/CreatePassword/CreatePassword.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,11 +1,12 @@\n import { FORM_ERROR } from \"final-form\";\n import { Localized } from \"fluent-react/compat\";\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback } from \"react\";\n import { Form } from \"react-final-form\";\n \n import { Bar, Title } from \"coral-auth/components//Header\";\n import Main from \"coral-auth/components/Main\";\n import SetPasswordField from \"coral-auth/components/SetPasswordField\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { OnSubmit } from \"coral-framework/lib/form\";\n import {\n   Button,\n@@ -14,75 +15,71 @@ import {\n   Typography,\n } from \"coral-ui/components\";\n \n-import {\n-  SetPasswordMutation,\n-  withSetPasswordMutation,\n-} from \"./SetPasswordMutation\";\n+import { useMutation } from \"coral-framework/lib/relay\";\n+import SetPasswordMutation from \"./SetPasswordMutation\";\n \n interface FormProps {\n   password: string;\n }\n \n-interface Props {\n-  setPassword: SetPasswordMutation;\n-}\n-\n-class CreatePasswordContainer extends Component<Props> {\n-  private handleSubmit: OnSubmit<FormProps> = async (input, form) => {\n-    try {\n-      await this.props.setPassword({ password: input.password });\n-      return form.reset();\n-    } catch (error) {\n-      return { [FORM_ERROR]: error.message };\n-    }\n-  };\n+const CreatePasswordContainer: FunctionComponent = () => {\n+  const setPassword = useMutation(SetPasswordMutation);\n+  const onSubmit: OnSubmit<FormProps> = useCallback(\n+    async (input, form) => {\n+      try {\n+        await setPassword({ password: input.password });\n+        return form.reset();\n+      } catch (error) {\n+        return { [FORM_ERROR]: error.message };\n+      }\n+    },\n+    [setPassword]\n+  );\n+  const ref = useResizePopup();\n \n-  public render() {\n-    return (\n-      <div data-testid=\"createPassword-container\">\n-        <Bar>\n-          <Localized id=\"createPassword-createPasswordHeader\">\n-            <Title>Create Password</Title>\n-          </Localized>\n-        </Bar>\n-        <Main data-testid=\"createPassword-main\">\n-          <Form onSubmit={this.handleSubmit}>\n-            {({ handleSubmit, submitting, submitError }) => (\n-              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n-                <HorizontalGutter size=\"oneAndAHalf\">\n-                  <Localized id=\"createPassword-whatItIs\">\n-                    <Typography variant=\"bodyCopy\">\n-                      To protect against unauthorized changes to your account,\n-                      we require users to create a password.\n-                    </Typography>\n-                  </Localized>\n-                  {submitError && (\n-                    <CallOut color=\"error\" fullWidth>\n-                      {submitError}\n-                    </CallOut>\n-                  )}\n-                  <SetPasswordField disabled={submitting} />\n-                  <Localized id=\"createPassword-createPasswordButton\">\n-                    <Button\n-                      variant=\"filled\"\n-                      color=\"primary\"\n-                      size=\"large\"\n-                      type=\"submit\"\n-                      fullWidth\n-                      disabled={submitting}\n-                    >\n-                      Create Password\n-                    </Button>\n-                  </Localized>\n-                </HorizontalGutter>\n-              </form>\n-            )}\n-          </Form>\n-        </Main>\n-      </div>\n-    );\n-  }\n-}\n+  return (\n+    <div ref={ref} data-testid=\"createPassword-container\">\n+      <Bar>\n+        <Localized id=\"createPassword-createPasswordHeader\">\n+          <Title>Create Password</Title>\n+        </Localized>\n+      </Bar>\n+      <Main data-testid=\"createPassword-main\">\n+        <Form onSubmit={onSubmit}>\n+          {({ handleSubmit, submitting, submitError }) => (\n+            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n+              <HorizontalGutter size=\"oneAndAHalf\">\n+                <Localized id=\"createPassword-whatItIs\">\n+                  <Typography variant=\"bodyCopy\">\n+                    To protect against unauthorized changes to your account, we\n+                    require users to create a password.\n+                  </Typography>\n+                </Localized>\n+                {submitError && (\n+                  <CallOut color=\"error\" fullWidth>\n+                    {submitError}\n+                  </CallOut>\n+                )}\n+                <SetPasswordField disabled={submitting} />\n+                <Localized id=\"createPassword-createPasswordButton\">\n+                  <Button\n+                    variant=\"filled\"\n+                    color=\"primary\"\n+                    size=\"large\"\n+                    type=\"submit\"\n+                    fullWidth\n+                    disabled={submitting}\n+                  >\n+                    Create Password\n+                  </Button>\n+                </Localized>\n+              </HorizontalGutter>\n+            </form>\n+          )}\n+        </Form>\n+      </Main>\n+    </div>\n+  );\n+};\n \n-const enhanced = withSetPasswordMutation(CreatePasswordContainer);\n-export default enhanced;\n+export default CreatePasswordContainer;"
    },
    {
      "sha": "071a645151fb9944e71eea57bc81569822502c9a",
      "filename": "src/core/client/auth/views/CreatePassword/SetPasswordMutation.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreatePassword/SetPasswordMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreatePassword/SetPasswordMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/CreatePassword/SetPasswordMutation.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,7 +3,7 @@ import { Environment } from \"relay-runtime\";\n \n import {\n   commitMutationPromiseNormalized,\n-  createMutationContainer,\n+  createMutation,\n } from \"coral-framework/lib/relay\";\n import { Omit } from \"coral-framework/types\";\n \n@@ -41,11 +41,6 @@ function commit(environment: Environment, input: SetPasswordInput) {\n   });\n }\n \n-export const withSetPasswordMutation = createMutationContainer(\n-  \"setPassword\",\n-  commit\n-);\n+const SetPasswordMutation = createMutation(\"setPassword\", commit);\n \n-export type SetPasswordMutation = (\n-  input: SetPasswordInput\n-) => Promise<MutationTypes[\"response\"][\"setPassword\"]>;\n+export default SetPasswordMutation;"
    },
    {
      "sha": "3f3395291331f62fb0ba64ade333bc003852e3b4",
      "filename": "src/core/client/auth/views/CreateUsername/CreateUsername.tsx",
      "status": "modified",
      "additions": 63,
      "deletions": 67,
      "changes": 130,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreateUsername/CreateUsername.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreateUsername/CreateUsername.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/CreateUsername/CreateUsername.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,89 +1,85 @@\n import { FORM_ERROR } from \"final-form\";\n import { Localized } from \"fluent-react/compat\";\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback } from \"react\";\n import { Form } from \"react-final-form\";\n \n import { Bar, Title } from \"coral-auth/components//Header\";\n import Main from \"coral-auth/components/Main\";\n import UsernameField from \"coral-auth/components/UsernameField\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { OnSubmit } from \"coral-framework/lib/form\";\n+import { useMutation } from \"coral-framework/lib/relay\";\n import {\n   Button,\n   CallOut,\n   HorizontalGutter,\n   Typography,\n } from \"coral-ui/components\";\n \n-import {\n-  SetUsernameMutation,\n-  withSetUsernameMutation,\n-} from \"./SetUsernameMutation\";\n+import SetUsernameMutation from \"./SetUsernameMutation\";\n \n interface FormProps {\n   username: string;\n }\n \n-interface Props {\n-  setUsername: SetUsernameMutation;\n-}\n-\n-class CreateUsernameContainer extends Component<Props> {\n-  private handleSubmit: OnSubmit<FormProps> = async (input, form) => {\n-    try {\n-      await this.props.setUsername({ username: input.username });\n-      return form.reset();\n-    } catch (error) {\n-      return { [FORM_ERROR]: error.message };\n-    }\n-  };\n+const CreateUsernameContainer: FunctionComponent = () => {\n+  const setUsername = useMutation(SetUsernameMutation);\n+  const onSubmit: OnSubmit<FormProps> = useCallback(\n+    async (input, form) => {\n+      try {\n+        await setUsername({ username: input.username });\n+        return form.reset();\n+      } catch (error) {\n+        return { [FORM_ERROR]: error.message };\n+      }\n+    },\n+    [setUsername]\n+  );\n+  const ref = useResizePopup();\n \n-  public render() {\n-    // tslint:disable-next-line:no-empty\n-    return (\n-      <div data-testid=\"createUsername-container\">\n-        <Bar>\n-          <Localized id=\"createUsername-createUsernameHeader\">\n-            <Title>Create Username</Title>\n-          </Localized>\n-        </Bar>\n-        <Main data-testid=\"createUsername-main\">\n-          <Form onSubmit={this.handleSubmit}>\n-            {({ handleSubmit, submitting, submitError }) => (\n-              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n-                <HorizontalGutter size=\"oneAndAHalf\">\n-                  <Localized id=\"createUsername-whatItIs\">\n-                    <Typography variant=\"bodyCopy\">\n-                      Your username is an identifier that will appear on all of\n-                      your comments.\n-                    </Typography>\n-                  </Localized>\n-                  {submitError && (\n-                    <CallOut color=\"error\" fullWidth>\n-                      {submitError}\n-                    </CallOut>\n-                  )}\n-                  <UsernameField disabled={submitting} />\n-                  <Localized id=\"createUsername-createUsernameButton\">\n-                    <Button\n-                      variant=\"filled\"\n-                      color=\"primary\"\n-                      size=\"large\"\n-                      type=\"submit\"\n-                      fullWidth\n-                      disabled={submitting}\n-                    >\n-                      Create Username\n-                    </Button>\n-                  </Localized>\n-                </HorizontalGutter>\n-              </form>\n-            )}\n-          </Form>\n-        </Main>\n-      </div>\n-    );\n-  }\n-}\n+  return (\n+    <div ref={ref} data-testid=\"createUsername-container\">\n+      <Bar>\n+        <Localized id=\"createUsername-createUsernameHeader\">\n+          <Title>Create Username</Title>\n+        </Localized>\n+      </Bar>\n+      <Main data-testid=\"createUsername-main\">\n+        <Form onSubmit={onSubmit}>\n+          {({ handleSubmit, submitting, submitError }) => (\n+            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n+              <HorizontalGutter size=\"oneAndAHalf\">\n+                <Localized id=\"createUsername-whatItIs\">\n+                  <Typography variant=\"bodyCopy\">\n+                    Your username is an identifier that will appear on all of\n+                    your comments.\n+                  </Typography>\n+                </Localized>\n+                {submitError && (\n+                  <CallOut color=\"error\" fullWidth>\n+                    {submitError}\n+                  </CallOut>\n+                )}\n+                <UsernameField disabled={submitting} />\n+                <Localized id=\"createUsername-createUsernameButton\">\n+                  <Button\n+                    variant=\"filled\"\n+                    color=\"primary\"\n+                    size=\"large\"\n+                    type=\"submit\"\n+                    fullWidth\n+                    disabled={submitting}\n+                  >\n+                    Create Username\n+                  </Button>\n+                </Localized>\n+              </HorizontalGutter>\n+            </form>\n+          )}\n+        </Form>\n+      </Main>\n+    </div>\n+  );\n+};\n \n-const enhanced = withSetUsernameMutation(CreateUsernameContainer);\n-export default enhanced;\n+export default CreateUsernameContainer;"
    },
    {
      "sha": "53252b5895f8c3c9b7358957c2f0daa52296ec5c",
      "filename": "src/core/client/auth/views/CreateUsername/SetUsernameMutation.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreateUsername/SetUsernameMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/CreateUsername/SetUsernameMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/CreateUsername/SetUsernameMutation.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,7 +3,7 @@ import { Environment } from \"relay-runtime\";\n \n import {\n   commitMutationPromiseNormalized,\n-  createMutationContainer,\n+  createMutation,\n } from \"coral-framework/lib/relay\";\n import { Omit } from \"coral-framework/types\";\n \n@@ -39,11 +39,6 @@ function commit(environment: Environment, input: SetUsernameInput) {\n   });\n }\n \n-export const withSetUsernameMutation = createMutationContainer(\n-  \"setUsername\",\n-  commit\n-);\n+const SetUsernameMutation = createMutation(\"setUsername\", commit);\n \n-export type SetUsernameMutation = (\n-  input: SetUsernameInput\n-) => Promise<MutationTypes[\"response\"][\"setUsername\"]>;\n+export default SetUsernameMutation;"
    },
    {
      "sha": "640f7f6a50ea52ca650cafabf4c9159534150a46",
      "filename": "src/core/client/auth/views/ForgotPassword/CheckEmail.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/ForgotPassword/CheckEmail.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/ForgotPassword/CheckEmail.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/ForgotPassword/CheckEmail.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,19 +3,21 @@ import React, { FunctionComponent, useCallback } from \"react\";\n \n import { Bar, Title } from \"coral-auth/components/Header\";\n import Main from \"coral-auth/components/Main\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { Button, HorizontalGutter, Typography } from \"coral-ui/components\";\n \n interface Props {\n   email: string;\n }\n \n const CheckEmail: FunctionComponent<Props> = ({ email }) => {\n+  const ref = useResizePopup();\n   const closeWindow = useCallback(() => {\n     window.close();\n   }, []);\n   const UserEmail = () => <strong>{email}</strong>;\n   return (\n-    <div data-testid=\"forgotPassword-checkEmail-container\">\n+    <div ref={ref} data-testid=\"forgotPassword-checkEmail-container\">\n       <Bar>\n         <Localized id=\"forgotPassword-checkEmail-checkEmailHeader\">\n           <Title>Check Your Email</Title>"
    },
    {
      "sha": "e0e0ddc660ddf35edc9a478d6ae4899dda10278a",
      "filename": "src/core/client/auth/views/ForgotPassword/ForgotPasswordForm.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/ForgotPassword/ForgotPasswordForm.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/ForgotPassword/ForgotPasswordForm.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/ForgotPassword/ForgotPasswordForm.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -6,6 +6,7 @@ import { Field, Form } from \"react-final-form\";\n import { Bar, SubBar, Title } from \"coral-auth/components/Header\";\n import Main from \"coral-auth/components/Main\";\n import { getViewURL } from \"coral-auth/helpers\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { SetViewMutation } from \"coral-auth/mutations\";\n import { InvalidRequestError } from \"coral-framework/lib/errors\";\n import { colorFromMeta, ValidationMessage } from \"coral-framework/lib/form\";\n@@ -42,6 +43,7 @@ const ForgotPasswordForm: FunctionComponent<Props> = ({\n   email,\n   onCheckEmail,\n }) => {\n+  const ref = useResizePopup();\n   const signInHref = getViewURL(\"SIGN_IN\");\n   const forgotPassword = useMutation(ForgotPasswordMutation);\n   const setView = useMutation(SetViewMutation);\n@@ -71,7 +73,7 @@ const ForgotPasswordForm: FunctionComponent<Props> = ({\n   );\n \n   return (\n-    <div data-testid=\"forgotPassword-container\">\n+    <div ref={ref} data-testid=\"forgotPassword-container\">\n       <Bar>\n         <Localized id=\"forgotPassword-forgotPasswordHeader\">\n           <Title>Forgot Password?</Title>"
    },
    {
      "sha": "82cf36ea05e573dba0c27b0c0d48cc425ed2de63",
      "filename": "src/core/client/auth/views/SignIn/SignIn.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignIn.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignIn.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/SignIn.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -4,6 +4,7 @@ import React, { FunctionComponent } from \"react\";\n import { Bar, SubBar, Subtitle, Title } from \"coral-auth/components/Header\";\n import Main from \"coral-auth/components/Main\";\n import OrSeparator from \"coral-auth/components/OrSeparator\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { PropTypesOf } from \"coral-framework/types\";\n import {\n   CallOut,\n@@ -41,10 +42,11 @@ const SignIn: FunctionComponent<SignInForm> = ({\n   auth,\n   error,\n }) => {\n+  const ref = useResizePopup();\n   const oneClickIntegrationEnabled =\n     facebookEnabled || googleEnabled || oidcEnabled;\n   return (\n-    <div data-testid=\"signIn-container\">\n+    <div ref={ref} data-testid=\"signIn-container\">\n       <Localized\n         id=\"signIn-signInToJoinHeader\"\n         title={<Title />}"
    },
    {
      "sha": "12aca2c239043ec60f556488460531f6c2f65f31",
      "filename": "src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "status": "modified",
      "additions": 112,
      "deletions": 84,
      "changes": 196,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/SignInContainer.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,117 +1,145 @@\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback, useEffect } from \"react\";\n \n import { SignInContainer_auth as AuthData } from \"coral-auth/__generated__/SignInContainer_auth.graphql\";\n import { SignInContainerLocal as LocalData } from \"coral-auth/__generated__/SignInContainerLocal.graphql\";\n import { getViewURL } from \"coral-auth/helpers\";\n import { SetViewMutation } from \"coral-auth/mutations\";\n+import { redirectOAuth2 } from \"coral-framework/helpers\";\n import {\n   graphql,\n-  MutationProp,\n+  useMutation,\n   withFragmentContainer,\n   withLocalStateContainer,\n-  withMutation,\n } from \"coral-framework/lib/relay\";\n \n import {\n   ClearErrorMutation,\n   withClearErrorMutation,\n } from \"./ClearErrorMutation\";\n import SignIn from \"./SignIn\";\n-import { SignInMutation, withSignInMutation } from \"./SignInMutation\";\n \n interface Props {\n   local: LocalData;\n   auth: AuthData;\n-  signIn: SignInMutation;\n-  setView: MutationProp<typeof SetViewMutation>;\n   clearError: ClearErrorMutation;\n }\n \n-class SignInContainer extends Component<Props> {\n-  private goToSignUp = (e: React.MouseEvent) => {\n-    this.props.setView({ view: \"SIGN_UP\", history: \"push\" });\n-    if (e.preventDefault) {\n-      e.preventDefault();\n-    }\n-  };\n+const SignInContainer: FunctionComponent<Props> = ({\n+  auth,\n+  local,\n+  clearError,\n+}) => {\n+  const setView = useMutation(SetViewMutation);\n+  const goToSignUp = useCallback(\n+    (e: React.MouseEvent) => {\n+      setView({ view: \"SIGN_UP\", history: \"push\" });\n+      if (e.preventDefault) {\n+        e.preventDefault();\n+      }\n+    },\n+    [setView]\n+  );\n \n-  public componentWillUnmount() {\n-    this.props.clearError();\n-  }\n+  useEffect(() => {\n+    return () => {\n+      // Clear the error when we unmount.\n+      clearError();\n+    };\n+  }, [clearError, auth]);\n \n-  public render() {\n-    const integrations = this.props.auth.integrations;\n-    return (\n-      <SignIn\n-        error={this.props.local.error}\n-        auth={this.props.auth}\n-        onGotoSignUp={this.goToSignUp}\n-        emailEnabled={\n-          integrations.local.enabled && integrations.local.targetFilter.stream\n-        }\n-        facebookEnabled={\n-          integrations.facebook.enabled &&\n-          integrations.facebook.targetFilter.stream\n-        }\n-        googleEnabled={\n-          integrations.google.enabled && integrations.google.targetFilter.stream\n-        }\n-        oidcEnabled={\n-          integrations.oidc.enabled && integrations.oidc.targetFilter.stream\n-        }\n-        signUpHref={getViewURL(\"SIGN_UP\")}\n-      />\n+  // If there's only one enabled auth integration, we should just perform\n+  // the redirect now.\n+  if (\n+    !auth.integrations.local.enabled ||\n+    !auth.integrations.local.targetFilter.stream\n+  ) {\n+    // Local isn't enabled, so we can look into the rest of the integrations\n+    // now.\n+    const { facebook, google, oidc } = auth.integrations;\n+    const enabledIntegrations = [facebook, google, oidc].filter(\n+      ({ enabled, targetFilter: { stream } }) => enabled && stream\n     );\n+    if (\n+      enabledIntegrations.length === 1 &&\n+      enabledIntegrations[0].redirectURL\n+    ) {\n+      redirectOAuth2(enabledIntegrations[0].redirectURL);\n+\n+      return null;\n+    }\n   }\n-}\n \n-const enhanced = withMutation(SetViewMutation)(\n-  withClearErrorMutation(\n-    withSignInMutation(\n-      withLocalStateContainer(\n-        graphql`\n-          fragment SignInContainerLocal on Local {\n-            error\n-          }\n-        `\n-      )(\n-        withFragmentContainer<Props>({\n-          auth: graphql`\n-            fragment SignInContainer_auth on Auth {\n-              ...SignInWithOIDCContainer_auth\n-              ...SignInWithGoogleContainer_auth\n-              ...SignInWithFacebookContainer_auth\n-              integrations {\n-                local {\n-                  enabled\n-                  targetFilter {\n-                    stream\n-                  }\n-                }\n-                facebook {\n-                  enabled\n-                  targetFilter {\n-                    stream\n-                  }\n-                }\n-                google {\n-                  enabled\n-                  targetFilter {\n-                    stream\n-                  }\n-                }\n-                oidc {\n-                  enabled\n-                  targetFilter {\n-                    stream\n-                  }\n-                }\n+  const integrations = auth.integrations;\n+  return (\n+    <SignIn\n+      error={local.error}\n+      auth={auth}\n+      onGotoSignUp={goToSignUp}\n+      emailEnabled={\n+        integrations.local.enabled && integrations.local.targetFilter.stream\n+      }\n+      facebookEnabled={\n+        integrations.facebook.enabled &&\n+        integrations.facebook.targetFilter.stream\n+      }\n+      googleEnabled={\n+        integrations.google.enabled && integrations.google.targetFilter.stream\n+      }\n+      oidcEnabled={\n+        integrations.oidc.enabled && integrations.oidc.targetFilter.stream\n+      }\n+      signUpHref={getViewURL(\"SIGN_UP\")}\n+    />\n+  );\n+};\n+\n+const enhanced = withClearErrorMutation(\n+  withLocalStateContainer(\n+    graphql`\n+      fragment SignInContainerLocal on Local {\n+        error\n+      }\n+    `\n+  )(\n+    withFragmentContainer<Props>({\n+      auth: graphql`\n+        fragment SignInContainer_auth on Auth {\n+          ...SignInWithOIDCContainer_auth\n+          ...SignInWithGoogleContainer_auth\n+          ...SignInWithFacebookContainer_auth\n+          integrations {\n+            local {\n+              enabled\n+              targetFilter {\n+                stream\n+              }\n+            }\n+            facebook {\n+              enabled\n+              redirectURL\n+              targetFilter {\n+                stream\n+              }\n+            }\n+            google {\n+              enabled\n+              redirectURL\n+              targetFilter {\n+                stream\n               }\n             }\n-          `,\n-        })(SignInContainer)\n-      )\n-    )\n+            oidc {\n+              enabled\n+              redirectURL\n+              targetFilter {\n+                stream\n+              }\n+            }\n+          }\n+        }\n+      `,\n+    })(SignInContainer)\n   )\n );\n+\n export default enhanced;"
    },
    {
      "sha": "97da9e741952fe8d4b0ce007dbb5ec7ab50653de",
      "filename": "src/core/client/auth/views/SignIn/SignInMutation.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInMutation.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInMutation.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/SignInMutation.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -2,7 +2,7 @@ import { pick } from \"lodash\";\n import { Environment } from \"relay-runtime\";\n \n import { CoralContext } from \"coral-framework/lib/bootstrap\";\n-import { createMutationContainer } from \"coral-framework/lib/relay\";\n+import { createMutation } from \"coral-framework/lib/relay\";\n import { signIn, SignInInput } from \"coral-framework/rest\";\n \n export type SignInMutation = (input: SignInInput) => Promise<void>;\n@@ -16,4 +16,6 @@ export async function commit(\n   await clearSession(result.token);\n }\n \n-export const withSignInMutation = createMutationContainer(\"signIn\", commit);\n+const SignInMutation = createMutation(\"signIn\", commit);\n+\n+export default SignInMutation;"
    },
    {
      "sha": "14eb15047398eb0adcbd378e4f9b2c24479ded8d",
      "filename": "src/core/client/auth/views/SignIn/SignInWithEmailContainer.tsx",
      "status": "modified",
      "additions": 35,
      "deletions": 36,
      "changes": 71,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInWithEmailContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/SignInWithEmailContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/SignInWithEmailContainer.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,46 +1,45 @@\n import { FORM_ERROR } from \"final-form\";\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback } from \"react\";\n \n import { SetViewMutation } from \"coral-auth/mutations\";\n-import { MutationProp, withMutation } from \"coral-framework/lib/relay\";\n+import { useMutation } from \"coral-framework/lib/relay\";\n \n import { getViewURL } from \"coral-auth/helpers\";\n \n-import { SignInMutation, withSignInMutation } from \"./SignInMutation\";\n+import SignInMutation from \"./SignInMutation\";\n import SignInWithEmail, { SignInWithEmailForm } from \"./SignInWithEmail\";\n \n-interface SignInContainerProps {\n-  signIn: SignInMutation;\n-  setView: MutationProp<typeof SetViewMutation>;\n-}\n+const SignInContainer: FunctionComponent = () => {\n+  const signIn = useMutation(SignInMutation);\n+  const setView = useMutation(SetViewMutation);\n+  const onSubmit: SignInWithEmailForm[\"onSubmit\"] = useCallback(\n+    async (input, form) => {\n+      try {\n+        await signIn({ email: input.email, password: input.password });\n+        return form.reset();\n+      } catch (error) {\n+        return { [FORM_ERROR]: error.message };\n+      }\n+    },\n+    [signIn]\n+  );\n+  const goToForgotPassword = useCallback(\n+    (e: React.MouseEvent) => {\n+      setView({ view: \"FORGOT_PASSWORD\", history: \"push\" });\n+      if (e.preventDefault) {\n+        e.preventDefault();\n+      }\n+    },\n+    [setView]\n+  );\n \n-class SignInContainer extends Component<SignInContainerProps> {\n-  private onSubmit: SignInWithEmailForm[\"onSubmit\"] = async (input, form) => {\n-    try {\n-      await this.props.signIn({ email: input.email, password: input.password });\n-      return form.reset();\n-    } catch (error) {\n-      return { [FORM_ERROR]: error.message };\n-    }\n-  };\n-  private goToForgotPassword = (e: React.MouseEvent) => {\n-    this.props.setView({ view: \"FORGOT_PASSWORD\", history: \"push\" });\n-    if (e.preventDefault) {\n-      e.preventDefault();\n-    }\n-  };\n-  public render() {\n-    return (\n-      <SignInWithEmail\n-        onSubmit={this.onSubmit}\n-        onGotoForgotPassword={this.goToForgotPassword}\n-        forgotPasswordHref={getViewURL(\"FORGOT_PASSWORD\")}\n-      />\n-    );\n-  }\n-}\n+  return (\n+    <SignInWithEmail\n+      onSubmit={onSubmit}\n+      onGotoForgotPassword={goToForgotPassword}\n+      forgotPasswordHref={getViewURL(\"FORGOT_PASSWORD\")}\n+    />\n+  );\n+};\n \n-const enhanced = withMutation(SetViewMutation)(\n-  withSignInMutation(SignInContainer)\n-);\n-export default enhanced;\n+export default SignInContainer;"
    },
    {
      "sha": "a6aec8be5bb1065831949e191260a9ee7b48aba8",
      "filename": "src/core/client/auth/views/SignIn/__snapshots__/SignIn.spec.tsx.snap",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/__snapshots__/SignIn.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignIn/__snapshots__/SignIn.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignIn/__snapshots__/SignIn.spec.tsx.snap?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -42,7 +42,7 @@ exports[`renders correctly 1`] = `\n     <ForwardRef(forwardRef)\n       size=\"oneAndAHalf\"\n     >\n-      <withContext(withMutation(withContext(createMutationContainer(SignInContainer)))) />\n+      <SignInContainer />\n       <OrSeparator />\n       <ForwardRef(forwardRef)>\n         <Relay(SignInWithFacebookContainer)\n@@ -108,7 +108,7 @@ exports[`renders error 1`] = `\n       >\n         Server Error\n       </withPropsOnChange(CallOut)>\n-      <withContext(withMutation(withContext(createMutationContainer(SignInContainer)))) />\n+      <SignInContainer />\n       <OrSeparator />\n       <ForwardRef(forwardRef)>\n         <Relay(SignInWithFacebookContainer)"
    },
    {
      "sha": "f819b3a670de1fd18895ba841928c22517c84767",
      "filename": "src/core/client/auth/views/SignUp/SignUp.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignUp/SignUp.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignUp/SignUp.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignUp/SignUp.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -4,6 +4,7 @@ import React, { FunctionComponent } from \"react\";\n import { Bar, SubBar, Subtitle, Title } from \"coral-auth/components//Header\";\n import Main from \"coral-auth/components/Main\";\n import OrSeparator from \"coral-auth/components/OrSeparator\";\n+import useResizePopup from \"coral-auth/hooks/useResizePopup\";\n import { PropTypesOf } from \"coral-framework/types\";\n import {\n   Flex,\n@@ -38,10 +39,11 @@ const SignUp: FunctionComponent<Props> = ({\n   signInHref,\n   auth,\n }) => {\n+  const ref = useResizePopup();\n   const oneClickUptegrationEnabled =\n     facebookEnabled || googleEnabled || oidcEnabled;\n   return (\n-    <div data-testid=\"signUp-container\">\n+    <div ref={ref} data-testid=\"signUp-container\">\n       <Localized\n         id=\"signUp-signUpToJoinHeader\"\n         title={<Title />}"
    },
    {
      "sha": "7a292052724e5e25a20bd7c9939c4377a15dad80",
      "filename": "src/core/client/auth/views/SignUp/SignUpContainer.tsx",
      "status": "modified",
      "additions": 78,
      "deletions": 78,
      "changes": 156,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignUp/SignUpContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/auth/views/SignUp/SignUpContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/views/SignUp/SignUpContainer.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -1,100 +1,100 @@\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useCallback } from \"react\";\n \n import { SignUpContainer_auth as AuthData } from \"coral-auth/__generated__/SignUpContainer_auth.graphql\";\n+import { getViewURL } from \"coral-auth/helpers\";\n import { SetViewMutation } from \"coral-auth/mutations\";\n import {\n   graphql,\n-  MutationProp,\n+  useMutation,\n   withFragmentContainer,\n-  withMutation,\n } from \"coral-framework/lib/relay\";\n \n-import { getViewURL } from \"coral-auth/helpers\";\n import SignUp from \"./SignUp\";\n \n interface Props {\n   auth: AuthData;\n-  setView: MutationProp<typeof SetViewMutation>;\n }\n \n-class SignUpContainer extends Component<Props> {\n-  private goToSignIn = (e: React.MouseEvent) => {\n-    this.props.setView({ view: \"SIGN_IN\", history: \"push\" });\n-    if (e.preventDefault) {\n-      e.preventDefault();\n-    }\n-  };\n-  public render() {\n-    const integrations = this.props.auth.integrations;\n-    return (\n-      <SignUp\n-        signInHref={getViewURL(\"SIGN_IN\")}\n-        auth={this.props.auth}\n-        onGotoSignIn={this.goToSignIn}\n-        emailEnabled={\n-          integrations.local.enabled &&\n-          integrations.local.targetFilter.stream &&\n-          integrations.local.allowRegistration\n-        }\n-        facebookEnabled={\n-          integrations.facebook.enabled &&\n-          integrations.facebook.targetFilter.stream &&\n-          integrations.facebook.allowRegistration\n-        }\n-        googleEnabled={\n-          integrations.google.enabled &&\n-          integrations.google.targetFilter.stream &&\n-          integrations.google.allowRegistration\n-        }\n-        oidcEnabled={\n-          integrations.oidc.enabled &&\n-          integrations.oidc.targetFilter.stream &&\n-          integrations.oidc.allowRegistration\n-        }\n-      />\n-    );\n-  }\n-}\n+const SignUpContainer: FunctionComponent<Props> = ({ auth }) => {\n+  const setView = useMutation(SetViewMutation);\n+  const goToSignIn = useCallback(\n+    (e: React.MouseEvent) => {\n+      setView({ view: \"SIGN_IN\", history: \"push\" });\n+      if (e.preventDefault) {\n+        e.preventDefault();\n+      }\n+    },\n+    [setView]\n+  );\n \n-const enhanced = withMutation(SetViewMutation)(\n-  withFragmentContainer<Props>({\n-    auth: graphql`\n-      fragment SignUpContainer_auth on Auth {\n-        ...SignUpWithOIDCContainer_auth\n-        ...SignUpWithGoogleContainer_auth\n-        ...SignUpWithFacebookContainer_auth\n-        integrations {\n-          local {\n-            enabled\n-            targetFilter {\n-              stream\n-            }\n-            allowRegistration\n+  const integrations = auth.integrations;\n+  return (\n+    <SignUp\n+      signInHref={getViewURL(\"SIGN_IN\")}\n+      auth={auth}\n+      onGotoSignIn={goToSignIn}\n+      emailEnabled={\n+        integrations.local.enabled &&\n+        integrations.local.targetFilter.stream &&\n+        integrations.local.allowRegistration\n+      }\n+      facebookEnabled={\n+        integrations.facebook.enabled &&\n+        integrations.facebook.targetFilter.stream &&\n+        integrations.facebook.allowRegistration\n+      }\n+      googleEnabled={\n+        integrations.google.enabled &&\n+        integrations.google.targetFilter.stream &&\n+        integrations.google.allowRegistration\n+      }\n+      oidcEnabled={\n+        integrations.oidc.enabled &&\n+        integrations.oidc.targetFilter.stream &&\n+        integrations.oidc.allowRegistration\n+      }\n+    />\n+  );\n+};\n+\n+const enhanced = withFragmentContainer<Props>({\n+  auth: graphql`\n+    fragment SignUpContainer_auth on Auth {\n+      ...SignUpWithOIDCContainer_auth\n+      ...SignUpWithGoogleContainer_auth\n+      ...SignUpWithFacebookContainer_auth\n+      integrations {\n+        local {\n+          enabled\n+          targetFilter {\n+            stream\n           }\n-          facebook {\n-            enabled\n-            targetFilter {\n-              stream\n-            }\n-            allowRegistration\n+          allowRegistration\n+        }\n+        facebook {\n+          enabled\n+          targetFilter {\n+            stream\n           }\n-          google {\n-            enabled\n-            targetFilter {\n-              stream\n-            }\n-            allowRegistration\n+          allowRegistration\n+        }\n+        google {\n+          enabled\n+          targetFilter {\n+            stream\n           }\n-          oidc {\n-            enabled\n-            targetFilter {\n-              stream\n-            }\n-            allowRegistration\n+          allowRegistration\n+        }\n+        oidc {\n+          enabled\n+          targetFilter {\n+            stream\n           }\n+          allowRegistration\n         }\n       }\n-    `,\n-  })(SignUpContainer)\n-);\n+    }\n+  `,\n+})(SignUpContainer);\n+\n export default enhanced;"
    },
    {
      "sha": "9b73eac3ee2081ec5d53a38a4afe308fa30d4f1b",
      "filename": "src/core/client/stream/common/UserBox/UserBoxContainer.spec.tsx",
      "status": "modified",
      "additions": 0,
      "deletions": 15,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/UserBoxContainer.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/UserBoxContainer.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/UserBox/UserBoxContainer.spec.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -28,23 +28,20 @@ it(\"renders fully\", () => {\n           facebook: {\n             enabled: true,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/facebook\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           google: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/google\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           oidc: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/oidc\",\n             targetFilter: {\n               stream: true,\n             },\n@@ -90,23 +87,20 @@ it(\"renders without logout button\", () => {\n           facebook: {\n             enabled: true,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/facebook\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           google: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/google\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           oidc: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/oidc\",\n             targetFilter: {\n               stream: true,\n             },\n@@ -152,23 +146,20 @@ it(\"renders sso only\", () => {\n           facebook: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/facebook\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           google: {\n             enabled: true,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/google\",\n             targetFilter: {\n               stream: false,\n             },\n           },\n           oidc: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/oidc\",\n             targetFilter: {\n               stream: true,\n             },\n@@ -214,23 +205,20 @@ it(\"renders sso only without logout button\", () => {\n           facebook: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/facebook\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           google: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/google\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           oidc: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/oidc\",\n             targetFilter: {\n               stream: true,\n             },\n@@ -276,23 +264,20 @@ it(\"renders without register button\", () => {\n           facebook: {\n             enabled: true,\n             allowRegistration: false,\n-            redirectURL: \"http://localhost/facebook\",\n             targetFilter: {\n               stream: true,\n             },\n           },\n           google: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/google\",\n             targetFilter: {\n               stream: false,\n             },\n           },\n           oidc: {\n             enabled: false,\n             allowRegistration: true,\n-            redirectURL: \"http://localhost/oidc\",\n             targetFilter: {\n               stream: true,\n             },"
    },
    {
      "sha": "01799d423287401fca2cb39ffbfef479d40c895c",
      "filename": "src/core/client/stream/common/UserBox/UserBoxContainer.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 34,
      "changes": 37,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/UserBoxContainer.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/UserBoxContainer.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/UserBox/UserBoxContainer.tsx?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -71,39 +71,10 @@ export class UserBoxContainer extends Component<Props> {\n     ].some(i => i.enabled && i.targetFilter.stream);\n   }\n \n-  private get authUrl(): string {\n-    const {\n-      facebook,\n-      google,\n-      local,\n-      oidc,\n-    } = this.props.settings.auth.integrations;\n-\n-    const defaultAuthUrl = `${urls.embed.auth}?view=${\n-      this.props.local.authPopup.view\n-    }`;\n-\n-    if (local.enabled && local.targetFilter.stream) {\n-      return defaultAuthUrl;\n-    }\n-\n-    // For each of these integrations, if only one is enabled for the stream,\n-    // then return the redirectURL for that one only.\n-    const integrations = [facebook, google, oidc];\n-    const enabled = integrations.filter(\n-      integration => integration.enabled && integration.targetFilter.stream\n-    );\n-    if (enabled.length === 1 && enabled[0].redirectURL) {\n-      return enabled[0].redirectURL;\n-    }\n-\n-    return defaultAuthUrl;\n-  }\n-\n   public render() {\n     const {\n       local: {\n-        authPopup: { open, focus },\n+        authPopup: { open, focus, view },\n       },\n       viewer,\n     } = this.props;\n@@ -125,13 +96,14 @@ export class UserBoxContainer extends Component<Props> {\n     return (\n       <>\n         <Popup\n-          href={this.authUrl}\n+          href={`${urls.embed.auth}?view=${view}`}\n           title=\"Coral Auth\"\n           open={open}\n           focus={focus}\n           onFocus={this.handleFocus}\n           onBlur={this.handleBlur}\n           onClose={this.handleClose}\n+          features={{ width: 350, innerWidth: 350 }}\n         />\n         <UserBoxUnauthenticated\n           onSignIn={this.handleSignIn}\n@@ -182,23 +154,20 @@ const enhanced = withSignOutMutation(\n                   oidc {\n                     enabled\n                     allowRegistration\n-                    redirectURL\n                     targetFilter {\n                       stream\n                     }\n                   }\n                   google {\n                     enabled\n                     allowRegistration\n-                    redirectURL\n                     targetFilter {\n                       stream\n                     }\n                   }\n                   facebook {\n                     enabled\n                     allowRegistration\n-                    redirectURL\n                     targetFilter {\n                       stream\n                     }"
    },
    {
      "sha": "46f43388acbb2eef2dc513b2e97bb29dad344eec",
      "filename": "src/core/client/stream/common/UserBox/__snapshots__/UserBoxContainer.spec.tsx.snap",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/__snapshots__/UserBoxContainer.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/stream/common/UserBox/__snapshots__/UserBoxContainer.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/common/UserBox/__snapshots__/UserBoxContainer.spec.tsx.snap?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -3,6 +3,12 @@\n exports[`renders fully 1`] = `\n <React.Fragment>\n   <Popup\n+    features={\n+      Object {\n+        \"innerWidth\": 350,\n+        \"width\": 350,\n+      }\n+    }\n     focus={false}\n     href=\"/embed/auth?view=SIGN_IN\"\n     onBlur={[Function]}\n@@ -26,6 +32,12 @@ exports[`renders sso only without logout button 1`] = `null`;\n exports[`renders without logout button 1`] = `\n <React.Fragment>\n   <Popup\n+    features={\n+      Object {\n+        \"innerWidth\": 350,\n+        \"width\": 350,\n+      }\n+    }\n     focus={false}\n     href=\"/embed/auth?view=SIGN_IN\"\n     onBlur={[Function]}\n@@ -45,6 +57,12 @@ exports[`renders without logout button 1`] = `\n exports[`renders without register button 1`] = `\n <React.Fragment>\n   <Popup\n+    features={\n+      Object {\n+        \"innerWidth\": 350,\n+        \"width\": 350,\n+      }\n+    }\n     focus={false}\n     href=\"/embed/auth?view=SIGN_IN\"\n     onBlur={[Function]}"
    },
    {
      "sha": "1932da308fa80eb50b562f7a790ae0b64c1f4ac7",
      "filename": "src/core/client/ui/components/Popup/Popup.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/ui/components/Popup/Popup.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/client/ui/components/Popup/Popup.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/Popup/Popup.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -6,6 +6,7 @@ interface WindowFeatures {\n   width: number;\n   height: number;\n   centered: boolean;\n+  innerWidth?: number;\n }\n \n interface PopupProps {"
    },
    {
      "sha": "b77c827708ccbf7d51fe441f9dedbf8a728ea8e0",
      "filename": "src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "status": "modified",
      "additions": 9,
      "deletions": 1,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/server/app/middleware/passport/strategies/oidc/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/passport/strategies/oidc/index.ts?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -22,6 +22,7 @@ import { AsymmetricSigningAlgorithm } from \"coral-server/services/jwt\";\n import TenantCache from \"coral-server/services/tenant/cache\";\n import { TenantCacheAdapter } from \"coral-server/services/tenant/cache/adapter\";\n import { insert } from \"coral-server/services/users\";\n+import { validateUsername } from \"coral-server/services/users/helpers\";\n import { Request } from \"coral-server/types/express\";\n \n export interface Params {\n@@ -170,7 +171,14 @@ export async function findOrCreateOIDCUser(\n     // FIXME: implement rules.\n \n     // Try to extract the username from the following chain:\n-    const username = preferred_username || nickname || name;\n+    let username = preferred_username || nickname || name;\n+    if (username) {\n+      try {\n+        validateUsername(username);\n+      } catch (err) {\n+        username = undefined;\n+      }\n+    }\n \n     // Create the new user, as one didn't exist before!\n     user = await insert("
    },
    {
      "sha": "b024ff80e171526cdc35b0adee85e714e13c984d",
      "filename": "src/core/server/graph/tenant/schema/schema.graphql",
      "status": "modified",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/server/graph/tenant/schema/schema.graphql",
      "raw_url": "https://github.com/coralproject/talk/raw/921461008eefdc4e2fa3ba58985b11f19bfe22b5/src/core/server/graph/tenant/schema/schema.graphql",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/tenant/schema/schema.graphql?ref=921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "patch": "@@ -422,7 +422,6 @@ type LocalAuthIntegration {\n   integration should be displayed in all targets.\n   \"\"\"\n   targetFilter: AuthenticationTargetFilter!\n-\n }\n \n ##########################\n@@ -443,13 +442,6 @@ type SSOAuthIntegration {\n   \"\"\"\n   allowRegistration: Boolean!\n \n-  \"\"\"\n-  redirectURL is the URL that the user should be redirected to in order to start\n-  an authentication flow with the given integration. This field is not stored,\n-  and is instead computed from the Tenant.\n-  \"\"\"\n-  redirectURL: String\n-\n   \"\"\"\n   targetFilter will restrict where the authentication integration should be\n   displayed. If the value of targetFilter is null, then the authentication"
    }
  ]
}
