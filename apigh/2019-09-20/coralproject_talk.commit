{
  "sha": "25c7f89b310f689e02ef04eadc96bd5288b30113",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6MjVjN2Y4OWIzMTBmNjg5ZTAyZWYwNGVhZGM5NmJkNTI4OGIzMDExMw==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-09-19T18:49:57Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-09-19T18:49:57Z"
    },
    "message": "[CORL-620] Persisted Query Improvements (#2567)\n\n* fix: resolves #2566\r\n\r\n* fix: improved retry logic",
    "tree": {
      "sha": "d0685e90cff73feabef2a98122fe2fd222348cb2",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/d0685e90cff73feabef2a98122fe2fd222348cb2"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/25c7f89b310f689e02ef04eadc96bd5288b30113",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdg83VCRBK7hj4Ov3rIwAAdHIIAEyi1fWdqe02rLBYdqn1DDMc\n3igktXvlUO/aRe9Dp86y5PXJx8goJ6TBIlYNysVXrHJI2Dv0C2/Oewjp2ZrOJ2GI\ngftjBKabJSLt0GsvlZXzR7wTpwEOB5BSQScCng0pJU009dJmA+/fKXzYO/1RjUU0\nRk7Ph7gJYjipSrvgET3tL77H4HHxWshiO6JSopHQx0Jgf/XgjStmPvX0qdOznrn+\n9AQWophSSe9HDOK+gW1IrRytdlt59kiGyFAgEo01mvaSuzdKhgTNWX19h5DSGJUh\nOW/mUFq+Ipr55fKahcWjuqO+aFcMVPw+Tm1zL2q5yR78s0gKjNbBZKm/fKdPF/k=\n=PBFS\n-----END PGP SIGNATURE-----\n",
      "payload": "tree d0685e90cff73feabef2a98122fe2fd222348cb2\nparent 921461008eefdc4e2fa3ba58985b11f19bfe22b5\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1568918997 +0000\ncommitter GitHub <noreply@github.com> 1568918997 +0000\n\n[CORL-620] Persisted Query Improvements (#2567)\n\n* fix: resolves #2566\r\n\r\n* fix: improved retry logic\r\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/25c7f89b310f689e02ef04eadc96bd5288b30113",
  "html_url": "https://github.com/coralproject/talk/commit/25c7f89b310f689e02ef04eadc96bd5288b30113",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/25c7f89b310f689e02ef04eadc96bd5288b30113/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "url": "https://api.github.com/repos/coralproject/talk/commits/921461008eefdc4e2fa3ba58985b11f19bfe22b5",
      "html_url": "https://github.com/coralproject/talk/commit/921461008eefdc4e2fa3ba58985b11f19bfe22b5"
    }
  ],
  "stats": {
    "total": 65,
    "additions": 54,
    "deletions": 11
  },
  "files": [
    {
      "sha": "e350d0de4abea6d5ae2dadefb5455679b1f18e6a",
      "filename": "src/core/common/helpers/index.ts",
      "status": "added",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/common/helpers/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/common/helpers/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/index.ts?ref=25c7f89b310f689e02ef04eadc96bd5288b30113",
      "patch": "@@ -0,0 +1,3 @@\n+export { default as waitFor } from \"./waitFor\";\n+export * from \"./validate\";\n+export * from \"./i18n\";"
    },
    {
      "sha": "ac85079a41c8341ac185e8c063dd874f3f80e27b",
      "filename": "src/core/common/helpers/waitFor.ts",
      "status": "added",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/common/helpers/waitFor.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/common/helpers/waitFor.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/helpers/waitFor.ts?ref=25c7f89b310f689e02ef04eadc96bd5288b30113",
      "patch": "@@ -0,0 +1,7 @@\n+export default function waitFor(timeout: number): Promise<void> {\n+  return new Promise(resolve => {\n+    setTimeout(() => {\n+      resolve();\n+    }, timeout);\n+  });\n+}"
    },
    {
      "sha": "71d06d5471c025a9ef8a0effc78977ab6fca7d90",
      "filename": "src/core/server/index.ts",
      "status": "modified",
      "additions": 11,
      "deletions": 7,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/server/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/server/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/index.ts?ref=25c7f89b310f689e02ef04eadc96bd5288b30113",
      "patch": "@@ -99,6 +99,10 @@ class Server {\n   // signingConfig is the server reference to the signing configuration.\n   private signingConfig: JWTSigningConfig;\n \n+  // persistedQueryCache is the cache of persisted queries used by the GraphQL\n+  // server to handle persisted queries.\n+  private persistedQueryCache: PersistedQueryCache;\n+\n   constructor(options: ServerOptions) {\n     this.parentApp = express();\n \n@@ -149,6 +153,9 @@ class Server {\n       config\n     );\n \n+    // Load and upsert the persisted queries.\n+    this.persistedQueryCache = new PersistedQueryCache({ mongo: this.mongo });\n+\n     // Prime the tenant cache so it'll be ready to serve now.\n     await this.tenantCache.primeAll();\n \n@@ -190,6 +197,9 @@ class Server {\n       logger.warn(\"mongodb autoindexing is disabled, skipping indexing\");\n     }\n \n+    // Prime the queries in the database.\n+    await this.persistedQueryCache.prime();\n+\n     // Launch all of the job processors.\n     this.tasks.mailer.process();\n     this.tasks.scraper.process();\n@@ -282,12 +292,6 @@ class Server {\n     // Webpack Dev Server.\n     const disableClientRoutes = this.config.get(\"disable_client_routes\");\n \n-    // Load and upsert the persisted queries.\n-    const persistedQueryCache = new PersistedQueryCache({ mongo: this.mongo });\n-\n-    // Prime the queries in the database.\n-    await persistedQueryCache.prime();\n-\n     const options: AppOptions = {\n       parent,\n       pubsub: this.pubsub,\n@@ -302,7 +306,7 @@ class Server {\n       scraperQueue: this.tasks.scraper,\n       notifierQueue: this.tasks.notifier,\n       disableClientRoutes,\n-      persistedQueryCache,\n+      persistedQueryCache: this.persistedQueryCache,\n       persistedQueriesRequired:\n         this.config.get(\"env\") === \"production\" &&\n         !this.config.get(\"enable_graphiql\"),"
    },
    {
      "sha": "d8f80ead38a4dfcb0d4e49181d3c2d0956e8dfe5",
      "filename": "src/core/server/models/queries/queries.ts",
      "status": "modified",
      "additions": 33,
      "deletions": 4,
      "changes": 37,
      "blob_url": "https://github.com/coralproject/talk/blob/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/server/models/queries/queries.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/25c7f89b310f689e02ef04eadc96bd5288b30113/src/core/server/models/queries/queries.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/queries/queries.ts?ref=25c7f89b310f689e02ef04eadc96bd5288b30113",
      "patch": "@@ -1,6 +1,8 @@\n import { OperationTypeNode } from \"graphql\";\n-import { Db } from \"mongodb\";\n+import { Db, MongoError } from \"mongodb\";\n \n+import { waitFor } from \"coral-common/helpers\";\n+import logger from \"coral-server/logger\";\n import {\n   createCollection,\n   createIndexFactory,\n@@ -24,7 +26,11 @@ export async function createQueriesIndexes(mongo: Db) {\n   await createIndex({ id: 1 }, { unique: true });\n }\n \n-export async function primeQueries(mongo: Db, queries: PersistedQuery[]) {\n+export async function primeQueries(\n+  mongo: Db,\n+  queries: PersistedQuery[],\n+  tries = 1\n+) {\n   // Setup persisting these queries.\n   const bulk = collection(mongo).initializeUnorderedBulkOp({});\n \n@@ -39,8 +45,31 @@ export async function primeQueries(mongo: Db, queries: PersistedQuery[]) {\n       .replaceOne(query);\n   }\n \n-  // Execute the bulk operations.\n-  await bulk.execute();\n+  try {\n+    // Execute the bulk operations.\n+    await bulk.execute({ w: \"majority\" });\n+\n+    return;\n+  } catch (err) {\n+    if (err instanceof MongoError && err.code === 11000) {\n+      if (tries > 2) {\n+        logger.warn(\n+          { err, tries },\n+          \"duplicate error on inserting persisted queries after maximum tries reached\"\n+        );\n+        return;\n+      }\n+\n+      // Wait for 500ms before trying again.\n+      await waitFor(500);\n+\n+      // Retry the priming operation.\n+      await primeQueries(mongo, queries, tries + 1);\n+    }\n+\n+    // An error unrelated to duplicate indexes was thrown, just rethrow it.\n+    throw err;\n+  }\n }\n \n export async function getQueries(mongo: Db, ids: string[]) {"
    }
  ]
}
