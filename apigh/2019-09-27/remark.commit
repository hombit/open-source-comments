{
  "sha": "1cbedb85b06b86c09f36d0b3625a210f6d54569c",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOjFjYmVkYjg1YjA2Yjg2YzA5ZjM2ZDBiMzYyNWEyMTBmNmQ1NDU2OWM=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-09-27T04:06:20Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2019-09-27T04:06:20Z"
    },
    "message": "fix -time sort for user comments",
    "tree": {
      "sha": "0e5f1ad19b323073931afb6a8698645c60aecac8",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/0e5f1ad19b323073931afb6a8698645c60aecac8"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/1cbedb85b06b86c09f36d0b3625a210f6d54569c",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/1cbedb85b06b86c09f36d0b3625a210f6d54569c",
  "html_url": "https://github.com/umputun/remark/commit/1cbedb85b06b86c09f36d0b3625a210f6d54569c",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/1cbedb85b06b86c09f36d0b3625a210f6d54569c/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "8cf611690ab4a53d3ae88a4cc2c119907f1bd863",
      "url": "https://api.github.com/repos/umputun/remark/commits/8cf611690ab4a53d3ae88a4cc2c119907f1bd863",
      "html_url": "https://github.com/umputun/remark/commit/8cf611690ab4a53d3ae88a4cc2c119907f1bd863"
    }
  ],
  "stats": {
    "total": 32,
    "additions": 31,
    "deletions": 1
  },
  "files": [
    {
      "sha": "a92f92040eeaa0382e40c09d3e92fca896ae8ddd",
      "filename": "backend/app/rest/api/rest_public_test.go",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/umputun/remark/blob/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/rest/api/rest_public_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/rest/api/rest_public_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/rest/api/rest_public_test.go?ref=1cbedb85b06b86c09f36d0b3625a210f6d54569c",
      "patch": "@@ -348,6 +348,10 @@ func TestRest_FindUserComments(t *testing.T) {\n \tassert.Nil(t, err)\n \tassert.Equal(t, 3, len(resp.Comments), \"should have 3 comments\")\n \tassert.Equal(t, 4, resp.Count, \"should have 3 count\")\n+\n+\t// user comment sorted with -time\n+\tassert.True(t, resp.Comments[0].Timestamp.After(resp.Comments[1].Timestamp))\n+\tassert.True(t, resp.Comments[1].Timestamp.After(resp.Comments[2].Timestamp))\n }\n \n func TestRest_UserInfo(t *testing.T) {"
    },
    {
      "sha": "6fe59acbd944488d3191bc7dfa15ebc087e6fd2f",
      "filename": "backend/app/store/service/service.go",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/umputun/remark/blob/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/store/service/service.go",
      "raw_url": "https://github.com/umputun/remark/raw/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/store/service/service.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service.go?ref=1cbedb85b06b86c09f36d0b3625a210f6d54569c",
      "patch": "@@ -732,7 +732,8 @@ func (s *DataStore) SetMetas(siteID string, umetas []UserMetaData, pmetas []Post\n \n // User gets comment for given userID on siteID\n func (s *DataStore) User(siteID, userID string, limit, skip int, user store.User) ([]store.Comment, error) {\n-\treq := engine.FindRequest{Locator: store.Locator{SiteID: siteID}, UserID: userID, Limit: limit, Skip: skip}\n+\treq := engine.FindRequest{Locator: store.Locator{SiteID: siteID}, UserID: userID,\n+\t\tLimit: limit, Skip: skip, Sort: \"-time\"}\n \tcomments, err := s.Engine.Find(req)\n \tif err != nil {\n \t\treturn comments, err"
    },
    {
      "sha": "04ecd5e6f23a29e7e27a66296aa8714dc15dfb52",
      "filename": "backend/app/store/service/service_test.go",
      "status": "modified",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/umputun/remark/blob/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/store/service/service_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/1cbedb85b06b86c09f36d0b3625a210f6d54569c/backend/app/store/service/service_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/store/service/service_test.go?ref=1cbedb85b06b86c09f36d0b3625a210f6d54569c",
      "patch": "@@ -1060,6 +1060,31 @@ func TestService_Count(t *testing.T) {\n \tassert.Equal(t, 0, c)\n }\n \n+func TestService_UserComments(t *testing.T) {\n+\tdefer teardown(t)\n+\n+\t// two comments for https://radio-t.com, no reply\n+\tb := DataStore{Engine: prepStoreEngine(t), EditDuration: 100 * time.Millisecond,\n+\t\tAdminStore: admin.NewStaticStore(\"secret 123\", nil, []string{\"user2\"}, \"user@email.com\")}\n+\n+\t// add one more for user2\n+\tcomment := store.Comment{\n+\t\tID:        \"id-3\",\n+\t\tTimestamp: time.Date(2018, 12, 20, 15, 18, 22, 0, time.Local),\n+\t\tText:      `some text, <a href=\"http://radio-t.com\">link</a>`,\n+\t\tLocator:   store.Locator{URL: \"https://radio-t.com/2\", SiteID: \"radio-t\"},\n+\t\tUser:      store.User{ID: \"user2\", Name: \"user name\"},\n+\t}\n+\t_, err := b.Create(comment)\n+\tassert.NoError(t, err)\n+\n+\tcc, err := b.User(\"radio-t\", \"user1\", 0, 0, store.User{})\n+\tassert.NoError(t, err)\n+\tassert.Equal(t, 2, len(cc), \"two recs for user1\")\n+\tassert.Equal(t, \"id-2\", cc[0].ID, \"reverse sort\")\n+\tassert.Equal(t, \"id-1\", cc[1].ID, \"reverse sort\")\n+}\n+\n func TestService_UserCount(t *testing.T) {\n \tdefer teardown(t)\n \t// two comments for https://radio-t.com, no reply"
    }
  ]
}
