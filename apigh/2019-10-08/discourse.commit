{
  "sha": "349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODozNDljMWNkMDg1MjRlYjE5ZmQyY2MxYmQwOTU3YTk4ZmMxYTgzZGFm",
  "commit": {
    "author": {
      "name": "RÃ©gis Hanol",
      "email": "regis@hanol.fr",
      "date": "2019-10-08T16:43:26Z"
    },
    "committer": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2019-10-08T16:43:26Z"
    },
    "message": "FIX: remove site setting 'shadowed-by-global' option (#8061)",
    "tree": {
      "sha": "cdd57f7518b65db1ea3e5d4bb245a5a7aab39379",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/cdd57f7518b65db1ea3e5d4bb245a5a7aab39379"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
  "html_url": "https://github.com/discourse/discourse/commit/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/comments",
  "author": {
    "login": "ZogStriP",
    "id": 362783,
    "node_id": "MDQ6VXNlcjM2Mjc4Mw==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/362783?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZogStriP",
    "html_url": "https://github.com/ZogStriP",
    "followers_url": "https://api.github.com/users/ZogStriP/followers",
    "following_url": "https://api.github.com/users/ZogStriP/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZogStriP/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZogStriP/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZogStriP/subscriptions",
    "organizations_url": "https://api.github.com/users/ZogStriP/orgs",
    "repos_url": "https://api.github.com/users/ZogStriP/repos",
    "events_url": "https://api.github.com/users/ZogStriP/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZogStriP/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "b20b6c52e10733720f6e3e2904589049abfcac52",
      "url": "https://api.github.com/repos/discourse/discourse/commits/b20b6c52e10733720f6e3e2904589049abfcac52",
      "html_url": "https://github.com/discourse/discourse/commit/b20b6c52e10733720f6e3e2904589049abfcac52"
    }
  ],
  "stats": {
    "total": 51,
    "additions": 7,
    "deletions": 44
  },
  "files": [
    {
      "sha": "2d5daec3975373c22ca7f165a38ce670759b88fc",
      "filename": "config/site_settings.yml",
      "status": "modified",
      "additions": 0,
      "deletions": 37,
      "changes": 37,
      "blob_url": "https://github.com/discourse/discourse/blob/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/config/site_settings.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/config/site_settings.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/site_settings.yml?ref=349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
      "patch": "@@ -11,9 +11,6 @@\n # secret             - Set to true if input type should be password and value needs to be scrubbed from logs (default false).\n # enum               - The setting has a fixed set of allowed values, and only one can be chosen.\n #                      Set to the class name that defines the set.\n-# shadowed_by_global - \"Shadow\" a site setting with a GlobalSetting. If the GlobalSetting\n-#                      exists it will be used instead of the setting and the setting will be hidden.\n-#                      Useful for things like API keys on multisite.\n # locale_default     - A hash which overrides according to `SiteSetting.default_locale`.\n #                      The key should be as the same as possible value of default_locale.\n #\n@@ -44,7 +41,6 @@ required:\n   notification_email:\n     default: \"noreply@unconfigured.discourse.org\"\n     type: email\n-    shadowed_by_global: true\n   site_contact_username:\n     default: \"\"\n     type: username\n@@ -848,10 +844,8 @@ posting:\n     default: 24\n   auto_close_messages_post_count:\n     default: 500\n-    shadowed_by_global: true\n   auto_close_topics_post_count:\n     default: 10000\n-    shadowed_by_global: true\n   code_formatting_style:\n     client: true\n     type: enum\n@@ -882,7 +876,6 @@ posting:\n     hidden: true\n     default: false\n     client: true\n-    shadowed_by_global: true\n   old_post_notice_days:\n     default: 14\n     client: true\n@@ -996,10 +989,8 @@ email:\n     default: false\n   disallow_reply_by_email_after_days:\n     default: 90\n-    shadowed_by_global: true\n   delete_email_logs_after_days:\n     default: 90\n-    shadowed_by_global: true\n   max_emails_per_day_per_user: 100\n   enable_staged_users: true\n   maximum_staged_users_per_email: 10\n@@ -1123,46 +1114,36 @@ files:\n   clean_orphan_uploads_grace_period_hours: 48\n   purge_deleted_uploads_grace_period_days:\n     default: 30\n-    shadowed_by_global: true\n   prevent_anons_from_downloading_files:\n     default: false\n     client: true\n   enable_s3_uploads:\n     default: false\n     client: true\n-    shadowed_by_global: true\n   s3_use_iam_profile:\n     default: false\n-    shadowed_by_global: true\n   s3_access_key_id:\n     default: \"\"\n     secret: true\n-    shadowed_by_global: true\n   s3_secret_access_key:\n     default: \"\"\n     secret: true\n-    shadowed_by_global: true\n   s3_region:\n     default: \"us-east-1\"\n     enum: \"S3RegionSiteSetting\"\n-    shadowed_by_global: true\n   s3_upload_bucket:\n     default: \"\"\n     regex: '^[a-z0-9\\-\\/_]+$' # can't use '.' when using HTTPS\n-    shadowed_by_global: true\n   s3_endpoint:\n     default: \"\"\n     regex: '^https?:\\/\\/.+[^\\/]$'\n-    shadowed_by_global: true\n   s3_cdn_url:\n     default: \"\"\n     regex: '^https?:\\/\\/.+[^\\/]$'\n   s3_configure_tombstone_policy:\n     default: true\n-    shadowed_by_global: true\n   enable_s3_inventory:\n     default: false\n-    shadowed_by_global: true\n   allow_profile_backgrounds:\n     client: true\n     default: true\n@@ -1185,13 +1166,11 @@ files:\n   external_system_avatars_enabled:\n     default: true\n     client: true\n-    shadowed_by_global: true\n     validator: \"ExternalSystemAvatarsValidator\"\n   external_system_avatars_url:\n     default: \"/letter_avatar_proxy/v4/letter/{first_letter}/{color}/{size}.png\"\n     client: true\n     regex: '^((https?:)?\\/)?\\/.+[^\\/]'\n-    shadowed_by_global: true\n   restrict_letter_avatar_colors:\n     default: \"\"\n     type: list\n@@ -1326,7 +1305,6 @@ security:\n       - \"all\"\n   force_https:\n     default: false\n-    shadowed_by_global: true\n   same_site_cookies:\n     default: Lax\n     type: enum\n@@ -1364,7 +1342,6 @@ security:\n     default: \"\"\n     type: list\n     list_type: compact\n-    shadowed_by_global: true\n   whitelist_internal_hosts:\n     default: \"\"\n     type: list\n@@ -1499,11 +1476,9 @@ rate_limits:\n   tl4_additional_likes_per_day_multiplier: 3\n   alert_admins_if_errors_per_minute:\n     client: true\n-    shadowed_by_global: true\n     default: 0\n   alert_admins_if_errors_per_hour:\n     client: true\n-    shadowed_by_global: true\n     default: 0\n   max_prints_per_hour_per_user:\n     default: 5\n@@ -1640,35 +1615,28 @@ legal:\n backups:\n   enable_backups:\n     default: true\n-    shadowed_by_global: true\n     client: true\n   readonly_mode_during_backup:\n     default: false\n   allow_restore:\n     default: false\n-    shadowed_by_global: true\n   backup_location:\n     default: \"local\"\n     type: enum\n     enum: \"BackupLocationSiteSetting\"\n-    shadowed_by_global: true\n     client: true\n   maximum_backups:\n     client: true\n     default: 5\n-    shadowed_by_global: true\n   automatic_backups_enabled:\n     default: true\n-    shadowed_by_global: true\n   backup_frequency:\n     min: 1\n     max: 30\n     default: 7\n-    shadowed_by_global: true\n   s3_backup_bucket:\n     default: \"\"\n     regex: '^[a-z0-9\\-\\/]+$' # can't use '.' when using HTTPS\n-    shadowed_by_global: true\n   s3_disable_cleanup:\n     default: false\n   backup_time_of_day:\n@@ -1679,13 +1647,10 @@ backups:\n     default: 1\n     min: 1\n     max: 9\n-    shadowed_by_global: true\n   include_thumbnails_in_backups:\n     default: false\n-    shadowed_by_global: true\n   include_s3_uploads_in_backups:\n     default: false\n-    shadowed_by_global: true\n     hidden: true\n \n search:\n@@ -1748,7 +1713,6 @@ uncategorized:\n   version_checks:\n     client: true\n     default: true\n-    shadowed_by_global: true\n   new_version_emails: true\n   send_welcome_message: true\n \n@@ -2079,7 +2043,6 @@ user_api:\n   allowed_user_api_push_urls:\n     default: \"\"\n     type: list\n-    shadowed_by_global: true\n   allowed_user_api_auth_redirects:\n     default: \"https://api.discourse.org/api/auth_redirect|discourse://auth_redirect\"\n     type: list"
    },
    {
      "sha": "a60c9dc7da677e7a7b6a33313efb8bfaa74261db",
      "filename": "lib/site_setting_extension.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/lib/site_setting_extension.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/lib/site_setting_extension.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/site_setting_extension.rb?ref=349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
      "patch": "@@ -132,7 +132,7 @@ def setting(name_arg, default = nil, opts = {})\n         hidden_settings << name\n       end\n \n-      if opts[:shadowed_by_global] && GlobalSetting.respond_to?(name)\n+      if GlobalSetting.respond_to?(name)\n         val = GlobalSetting.public_send(name)\n \n         unless val.nil? || (val == ''.freeze)"
    },
    {
      "sha": "cfc28d77ed18c4069ed2498259607ba1d0b2f00b",
      "filename": "spec/components/site_setting_extension_spec.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/discourse/discourse/blob/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/spec/components/site_setting_extension_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/349c1cd08524eb19fd2cc1bd0957a98fc1a83daf/spec/components/site_setting_extension_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/site_setting_extension_spec.rb?ref=349c1cd08524eb19fd2cc1bd0957a98fc1a83daf",
      "patch": "@@ -633,7 +633,7 @@ def self.translate_names?\n     end\n   end\n \n-  describe \"shadowed_by_global\" do\n+  describe \"global override\" do\n \n     context \"default_locale\" do\n       it \"supports adding a default locale via a global\" do\n@@ -645,7 +645,7 @@ def self.translate_names?\n \n     context \"without global setting\" do\n       before do\n-        settings.setting(:trout_api_key, 'evil', shadowed_by_global: true)\n+        settings.setting(:trout_api_key, 'evil')\n         settings.refresh!\n       end\n \n@@ -667,7 +667,7 @@ def self.translate_names?\n     context \"with blank global setting\" do\n       before do\n         GlobalSetting.stubs(:nada).returns('')\n-        settings.setting(:nada, 'nothing', shadowed_by_global: true)\n+        settings.setting(:nada, 'nothing')\n         settings.refresh!\n       end\n \n@@ -680,7 +680,7 @@ def self.translate_names?\n     context \"with a false override\" do\n       before do\n         GlobalSetting.stubs(:bool).returns(false)\n-        settings.setting(:bool, true, shadowed_by_global: true)\n+        settings.setting(:bool, true)\n         settings.refresh!\n       end\n \n@@ -700,7 +700,7 @@ def self.translate_names?\n     context \"with global setting\" do\n       before do\n         GlobalSetting.stubs(:trout_api_key).returns('purringcat')\n-        settings.setting(:trout_api_key, 'evil', shadowed_by_global: true)\n+        settings.setting(:trout_api_key, 'evil')\n         settings.refresh!\n       end\n \n@@ -718,7 +718,7 @@ def self.translate_names?\n \n         ['', nil].each_with_index do |setting, index|\n           GlobalSetting.stubs(:\"trout_api_key_#{index}\").returns(setting)\n-          settings.setting(:\"trout_api_key_#{index}\", 'evil', shadowed_by_global: true)\n+          settings.setting(:\"trout_api_key_#{index}\", 'evil')\n           settings.refresh!\n           expect(settings.hidden_settings.include?(:\"trout_api_key_#{index}\")).to eq(false)\n         end"
    }
  ]
}
