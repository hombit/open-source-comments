{
  "sha": "10e509e47f85577e6aa566b3d69c5f5812d35a7a",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoxMGU1MDllNDdmODU1NzdlNmFhNTY2YjNkNjljNWY1ODEyZDM1YTdh",
  "commit": {
    "author": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2019-10-09T13:54:54Z"
    },
    "committer": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2019-10-09T15:02:17Z"
    },
    "message": "FIX: Don't swallow the original error when moving posts\n\nDropping the temp table in an `ensure` block hides the actual exception. Creating the table with `ON COMMIT DROP` makes the temp table disappear automatically at the end of the transaction. We only need the explicit `DROP` in tests, because tests already run inside a transaction, so the temp table won't be dropped after each test which leads to spec failures.",
    "tree": {
      "sha": "d5fdc2eca62bc2f2332d89ea78df1be5f8d66d04",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/d5fdc2eca62bc2f2332d89ea78df1be5f8d66d04"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/10e509e47f85577e6aa566b3d69c5f5812d35a7a",
    "comment_count": 1,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/10e509e47f85577e6aa566b3d69c5f5812d35a7a",
  "html_url": "https://github.com/discourse/discourse/commit/10e509e47f85577e6aa566b3d69c5f5812d35a7a",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/10e509e47f85577e6aa566b3d69c5f5812d35a7a/comments",
  "author": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "5357ab332472b1ad63c51e3b8db89e302174624d",
      "url": "https://api.github.com/repos/discourse/discourse/commits/5357ab332472b1ad63c51e3b8db89e302174624d",
      "html_url": "https://github.com/discourse/discourse/commit/5357ab332472b1ad63c51e3b8db89e302174624d"
    }
  ],
  "stats": {
    "total": 10,
    "additions": 3,
    "deletions": 7
  },
  "files": [
    {
      "sha": "6b779edf6b4e7b2201f64eb6e8aa60f572883bd5",
      "filename": "app/models/post_mover.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 7,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/10e509e47f85577e6aa566b3d69c5f5812d35a7a/app/models/post_mover.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/10e509e47f85577e6aa566b3d69c5f5812d35a7a/app/models/post_mover.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/post_mover.rb?ref=10e509e47f85577e6aa566b3d69c5f5812d35a7a",
      "patch": "@@ -77,11 +77,11 @@ def move_posts_to(topic)\n \n     destination_topic.reload\n     destination_topic\n-  ensure\n-    drop_temp_table\n   end\n \n   def create_temp_table\n+    DB.exec(\"DROP TABLE IF EXISTS moved_posts\") if Rails.env.test?\n+\n     DB.exec <<~SQL\n       CREATE TEMPORARY TABLE moved_posts (\n         old_topic_id INTEGER,\n@@ -91,17 +91,13 @@ def create_temp_table\n         new_topic_title VARCHAR,\n         new_post_id INTEGER,\n         new_post_number INTEGER\n-      );\n+      ) ON COMMIT DROP;\n \n       CREATE INDEX moved_posts_old_post_number ON moved_posts(old_post_number);\n       CREATE INDEX moved_posts_old_post_id ON moved_posts(old_post_id);\n     SQL\n   end\n \n-  def drop_temp_table\n-    DB.exec(\"DROP TABLE IF EXISTS moved_posts\")\n-  end\n-\n   def move_each_post\n     max_post_number = destination_topic.max_post_number + 1\n "
    }
  ]
}
