{
  "sha": "ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6Y2U0YTM0MDhmYzk1NTUxOGM3YjZiYzhjYTVlOWQwYzY5ZTkxNjk1OA==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-11-08T00:40:56Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-11-08T00:40:56Z"
    },
    "message": "[CORL-628] CLI Support (#2646)\n\n* feat: improved api for reloading tenants for cli\r\n\r\n* fix: cleaned up merge beheviour\r\n\r\n* feat: added support for stream/story edge\r\n\r\n* feat: support tenant install\r\n\r\n* fix: updated snapshot\r\n\r\n* fix: fixed tests",
    "tree": {
      "sha": "8aa9e0854dee1d51b87e063823191304475cd210",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/8aa9e0854dee1d51b87e063823191304475cd210"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdxLmYCRBK7hj4Ov3rIwAAdHIIAGYd87snYQxAmlVRh6ySidLp\nv1gPWlx486PEUwaoNdmIu1Wgsy1bM2RIOp4GAeqkYZg5RCqKmZkITEAH9L7kZFVy\nFMo1Zyz3xN+mh18n4jP33UrlacL29THkGj4oc6hRjWbwH6X+ZlQafYVWMHxly0V0\nGBgW3VjCwQ+dqRMY9JCfJPdGKtuetQac0xsdH0o+GjsEnOdTxlf4zLoVpEVmMA3b\n6cUY+Z6Cr7BgnbzrotlhroyGfGSDZHL3HB/AjZDTQGtjIwPVihhLJ9FRgzNu2xaX\nXxOaVhTdWLQiXdNf6xfkTmV6aqMaGWIkZDqb22V2C+VAKhoY8O7G4KPq+vwRcbY=\n=qR88\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 8aa9e0854dee1d51b87e063823191304475cd210\nparent 2dbba52fbd0cd5aa117e2dc85c8d3e609f94cb39\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1573173656 +0000\ncommitter GitHub <noreply@github.com> 1573173656 +0000\n\n[CORL-628] CLI Support (#2646)\n\n* feat: improved api for reloading tenants for cli\r\n\r\n* fix: cleaned up merge beheviour\r\n\r\n* feat: added support for stream/story edge\r\n\r\n* feat: support tenant install\r\n\r\n* fix: updated snapshot\r\n\r\n* fix: fixed tests\r\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
  "html_url": "https://github.com/coralproject/talk/commit/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "2dbba52fbd0cd5aa117e2dc85c8d3e609f94cb39",
      "url": "https://api.github.com/repos/coralproject/talk/commits/2dbba52fbd0cd5aa117e2dc85c8d3e609f94cb39",
      "html_url": "https://github.com/coralproject/talk/commit/2dbba52fbd0cd5aa117e2dc85c8d3e609f94cb39"
    }
  ],
  "stats": {
    "total": 891,
    "additions": 683,
    "deletions": 208
  },
  "files": [
    {
      "sha": "880e89609a6b6a140d11827cc55bbe78126047c4",
      "filename": "src/core/client/framework/lib/relay/localState.ts",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/framework/lib/relay/localState.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/framework/lib/relay/localState.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/lib/relay/localState.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -26,7 +26,6 @@ export function setAccessTokenInLocalState(\n   localRecord.setValue(accessToken || \"\", \"accessToken\");\n   if (accessToken) {\n     const { payload } = parseJWT(accessToken);\n-\n     // TODO: (cvle) maybe a timer to detect when accessToken has expired?\n \n     // Set the exp if it's valid."
    },
    {
      "sha": "250e279ab778cecbeb8b515e06855724d878e394",
      "filename": "src/core/client/install/App/App.tsx",
      "status": "modified",
      "additions": 68,
      "deletions": 10,
      "changes": 78,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/App.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/App.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/App/App.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,21 +1,79 @@\n-import React, { Component } from \"react\";\n+import React, { FunctionComponent, useEffect, useState } from \"react\";\n \n+import { ERROR_CODES } from \"coral-common/errors\";\n+import { useCoralContext } from \"coral-framework/lib/bootstrap\";\n+import { useFetch } from \"coral-framework/lib/relay\";\n+import { CallOut, Flex, Typography } from \"coral-ui/components\";\n+\n+import CheckInstallFetch from \"./CheckInstallFetch\";\n import InstallWizard from \"./InstallWizard\";\n import MainBar from \"./MainBar\";\n+import Wizard from \"./Wizard\";\n \n import styles from \"./App.css\";\n \n-class App extends Component {\n-  public render() {\n-    return (\n-      <div className={styles.root}>\n-        <MainBar />\n-        <div className={styles.container}>\n-          <InstallWizard />\n-        </div>\n+type State = \"loading\" | \"success\" | \"failure\";\n+\n+const App: FunctionComponent = () => {\n+  const [error, setError] = useState<string | null>(null);\n+  const [state, setState] = useState<State>(\"loading\");\n+  const checkInstall = useFetch(CheckInstallFetch);\n+  const context = useCoralContext();\n+  useEffect(() => {\n+    async function check() {\n+      try {\n+        await checkInstall({});\n+        setState(\"success\");\n+      } catch (err) {\n+        setError(err.message);\n+        setState(\"failure\");\n+        if (err.code !== ERROR_CODES.RATE_LIMIT_EXCEEDED) {\n+          await context.clearSession(\"\");\n+        }\n+      }\n+    }\n+\n+    check();\n+  }, []);\n+\n+  return (\n+    <div className={styles.root}>\n+      <MainBar />\n+      <div className={styles.container}>\n+        <AppState state={state} error={error} />\n       </div>\n-    );\n+    </div>\n+  );\n+};\n+\n+interface AppStateProps {\n+  state: State;\n+  error: string | null;\n+}\n+\n+const AppState: FunctionComponent<AppStateProps> = ({ state, error }) => {\n+  switch (state) {\n+    case \"loading\":\n+      return null;\n+    case \"success\":\n+      return <InstallWizard />;\n+    default:\n+      return <FailedAppState error={error} />;\n   }\n+};\n+\n+interface FailedAppStateProps {\n+  error: string | null;\n }\n \n+const FailedAppState: FunctionComponent<FailedAppStateProps> = ({ error }) => (\n+  <Wizard currentStep={0}>\n+    <Flex justifyContent=\"center\">\n+      <CallOut color=\"error\">\n+        <Typography variant=\"bodyCopy\">{error}</Typography>\n+      </CallOut>\n+    </Flex>\n+  </Wizard>\n+);\n+\n export default App;"
    },
    {
      "sha": "07b09fc49799e9328c446cc85a15ad6bdeef7edb",
      "filename": "src/core/client/install/App/CheckInstallFetch.ts",
      "status": "added",
      "additions": 13,
      "deletions": 0,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/CheckInstallFetch.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/CheckInstallFetch.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/App/CheckInstallFetch.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1,13 @@\n+import { Environment } from \"relay-runtime\";\n+\n+import { createFetch } from \"coral-framework/lib/relay\";\n+\n+const CheckInstallFetch = createFetch(\n+  \"checkInstallFetch\",\n+  async (environment: Environment, variables: any, { rest }) =>\n+    await rest.fetch(\"/install\", {\n+      method: \"GET\",\n+    })\n+);\n+\n+export default CheckInstallFetch;"
    },
    {
      "sha": "226293a37dff760dbd36c8fef6fc6e844665ca7c",
      "filename": "src/core/client/install/App/__snapshots__/App.spec.tsx.snap",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/__snapshots__/App.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/App/__snapshots__/App.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/App/__snapshots__/App.spec.tsx.snap?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -8,7 +8,10 @@ exports[`renders correctly 1`] = `\n   <div\n     className=\"App-container\"\n   >\n-    <withContext(createMutationContainer(InstallWizard)) />\n+    <AppState\n+      error={null}\n+      state=\"loading\"\n+    />\n   </div>\n </div>\n `;"
    },
    {
      "sha": "a051132e2aed1a539cff87ff6080f4c4018b1717",
      "filename": "src/core/client/install/constants.ts",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/constants.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/constants.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/constants.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1 @@\n+export const INSTALL_ACCESS_TOKEN_KEY = \"coral:install:accessToken\";"
    },
    {
      "sha": "8dc1d63c527707cf473ada637c81520e4e8d011b",
      "filename": "src/core/client/install/index.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/index.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/index.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/index.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -4,6 +4,7 @@ import ReactDOM from \"react-dom\";\n import { createManaged } from \"coral-framework/lib/bootstrap\";\n \n import App from \"./App\";\n+import { initLocalState } from \"./local\";\n import localesData from \"./locales\";\n \n // Import css variables.\n@@ -12,6 +13,7 @@ import \"coral-ui/theme/variables.css\";\n async function main() {\n   const ManagedCoralContextProvider = await createManaged({\n     localesData,\n+    initLocalState,\n   });\n \n   const Index: FunctionComponent = () => ("
    },
    {
      "sha": "2b196f8c44e97fd89b601b87f45f3a8a56ea8e9d",
      "filename": "src/core/client/install/local/index.ts",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/local/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/local/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/local/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1 @@\n+export { default as initLocalState } from \"./initLocalState\";"
    },
    {
      "sha": "7c33a89c9875961a211aee1cf29dbd3c0f8c4cdc",
      "filename": "src/core/client/install/local/initLocalState.ts",
      "status": "added",
      "additions": 33,
      "deletions": 0,
      "changes": 33,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/local/initLocalState.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/install/local/initLocalState.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/install/local/initLocalState.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1,33 @@\n+import { Environment } from \"relay-runtime\";\n+\n+import { clearHash, getParamsFromHash } from \"coral-framework/helpers\";\n+import { CoralContext } from \"coral-framework/lib/bootstrap\";\n+import { initLocalBaseState } from \"coral-framework/lib/relay\";\n+\n+import { INSTALL_ACCESS_TOKEN_KEY } from \"../constants\";\n+\n+/**\n+ * Initializes the local state, before we start the App.\n+ */\n+export default async function initLocalState(\n+  environment: Environment,\n+  context: CoralContext\n+) {\n+  // Get the access token from the session storage.\n+  let accessToken = await context.sessionStorage.getItem(\n+    INSTALL_ACCESS_TOKEN_KEY\n+  );\n+\n+  // Get all the parameters from the hash.\n+  const params = getParamsFromHash();\n+  if (params && params.accessToken) {\n+    // As there's an access token in the hash, let's clear it.\n+    clearHash();\n+\n+    // Save the token in session storage to override what we found.\n+    accessToken = params.accessToken;\n+    await context.sessionStorage.setItem(INSTALL_ACCESS_TOKEN_KEY, accessToken);\n+  }\n+\n+  await initLocalBaseState(environment, context, accessToken);\n+}"
    },
    {
      "sha": "b5d9dd5540bca12e019f0a88227d05f1ba7da229",
      "filename": "src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabQuery.tsx",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/AllCommentsTab/AllCommentsTabQuery.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,3 +1,4 @@\n+import { Localized } from \"fluent-react/compat\";\n import React, { FunctionComponent } from \"react\";\n import { ReadyState } from \"react-relay\";\n \n@@ -25,12 +26,20 @@ export const render = (data: ReadyState<QueryTypes[\"response\"]>) => {\n     return <div>{data.error.message}</div>;\n   }\n   if (data.props) {\n+    if (!data.props.story) {\n+      return (\n+        <Localized id=\"comments-streamQuery-storyNotFound\">\n+          <div>Story not found</div>\n+        </Localized>\n+      );\n+    }\n+\n     return (\n       <SpinnerWhileRendering>\n         <AllCommentsTabContainer\n           settings={data.props.settings}\n           viewer={data.props.viewer}\n-          story={data.props.story!}\n+          story={data.props.story}\n         />\n       </SpinnerWhileRendering>\n     );\n@@ -57,7 +66,7 @@ const AllCommentsTabQuery: FunctionComponent<Props> = props => {\n           viewer {\n             ...AllCommentsTabContainer_viewer\n           }\n-          story(id: $storyID, url: $storyURL) {\n+          story: stream(id: $storyID, url: $storyURL) {\n             ...AllCommentsTabContainer_story\n               @arguments(orderBy: $commentsOrderBy)\n           }"
    },
    {
      "sha": "56fbca5f924dabe71021bbc032960ffbf9c3e585",
      "filename": "src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentsQuery.tsx",
      "status": "modified",
      "additions": 13,
      "deletions": 2,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentsQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentsQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/FeaturedComments/FeaturedCommentsQuery.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,3 +1,4 @@\n+import { Localized } from \"fluent-react/compat\";\n import React, { FunctionComponent } from \"react\";\n import { ReadyState } from \"react-relay\";\n \n@@ -23,19 +24,29 @@ export const render = (data: ReadyState<QueryTypes[\"response\"]>) => {\n   if (data.error) {\n     return <div>{data.error.message}</div>;\n   }\n+\n   if (!data.props) {\n     return (\n       <Flex justifyContent=\"center\">\n         <Spinner />\n       </Flex>\n     );\n   }\n+\n   if (data.props) {\n+    if (!data.props.story) {\n+      return (\n+        <Localized id=\"comments-streamQuery-storyNotFound\">\n+          <div>Story not found</div>\n+        </Localized>\n+      );\n+    }\n+\n     return (\n       <FeaturedCommentsContainer\n         settings={data.props.settings}\n         viewer={data.props.viewer}\n-        story={data.props.story!}\n+        story={data.props.story}\n       />\n     );\n   }\n@@ -64,7 +75,7 @@ const FeaturedCommentsQuery: FunctionComponent<Props> = props => {\n           viewer {\n             ...FeaturedCommentsContainer_viewer\n           }\n-          story(id: $storyID, url: $storyURL) {\n+          story: stream(id: $storyID, url: $storyURL) {\n             ...FeaturedCommentsContainer_story\n               @arguments(orderBy: $commentsOrderBy)\n           }"
    },
    {
      "sha": "8103843d7e21e96cfb6fa75328876911166fe4a0",
      "filename": "src/core/client/stream/tabs/Comments/Stream/StreamQuery.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/StreamQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Comments/Stream/StreamQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Comments/Stream/StreamQuery.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -75,7 +75,7 @@ const StreamQuery: FunctionComponent<Props> = props => {\n             viewer {\n               ...StreamContainer_viewer\n             }\n-            story(id: $storyID, url: $storyURL) {\n+            story: stream(id: $storyID, url: $storyURL) {\n               ...StreamContainer_story\n             }\n             settings {"
    },
    {
      "sha": "25c4b009bda178b4d6275741da1d27ccbb66b3ee",
      "filename": "src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/tabs/Profile/ProfileQuery.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/tabs/Profile/ProfileQuery.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -81,7 +81,7 @@ const ProfileQuery: FunctionComponent<Props> = ({\n   <QueryRenderer<QueryTypes>\n     query={graphql`\n       query ProfileQuery($storyID: ID, $storyURL: String) {\n-        story(id: $storyID, url: $storyURL) {\n+        story: stream(id: $storyID, url: $storyURL) {\n           ...ProfileContainer_story\n         }\n         viewer {"
    },
    {
      "sha": "5a9d2e07ba2b0e1fad15a82ec4d81032a46c7581",
      "filename": "src/core/client/stream/test/comments/featured/loadMore.spec.tsx",
      "status": "modified",
      "additions": 27,
      "deletions": 26,
      "changes": 53,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/featured/loadMore.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/featured/loadMore.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/featured/loadMore.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -18,38 +18,39 @@ const story = storyWithFeaturedComments;\n async function createTestRenderer(\n   params: CreateTestRendererParams<GQLResolver> = {}\n ) {\n+  const storyResolver = () => ({\n+    ...story,\n+    featuredComments: createQueryResolverStub<StoryToCommentsResolver>(\n+      ({ variables }) => {\n+        if (!variables.after) {\n+          return {\n+            edges: [story.comments.edges[0]],\n+            pageInfo: {\n+              endCursor: story.comments.edges[0].cursor,\n+              hasNextPage: true,\n+            },\n+          };\n+        }\n+        expectAndFail(variables.after).toBe(story.comments.edges[0].cursor);\n+        return {\n+          edges: [story.comments.edges[1]],\n+          pageInfo: {\n+            endCursor: story.comments.edges[1].cursor,\n+            hasNextPage: false,\n+          },\n+        };\n+      }\n+    ) as any,\n+  });\n+\n   const { testRenderer, context } = create({\n     ...params,\n     resolvers: pureMerge(\n       createResolversStub<GQLResolver>({\n         Query: {\n           settings: () => settings,\n-          story: () => ({\n-            ...story,\n-            featuredComments: createQueryResolverStub<StoryToCommentsResolver>(\n-              ({ variables }) => {\n-                if (!variables.after) {\n-                  return {\n-                    edges: [story.comments.edges[0]],\n-                    pageInfo: {\n-                      endCursor: story.comments.edges[0].cursor,\n-                      hasNextPage: true,\n-                    },\n-                  };\n-                }\n-                expectAndFail(variables.after).toBe(\n-                  story.comments.edges[0].cursor\n-                );\n-                return {\n-                  edges: [story.comments.edges[1]],\n-                  pageInfo: {\n-                    endCursor: story.comments.edges[1].cursor,\n-                    hasNextPage: false,\n-                  },\n-                };\n-              }\n-            ) as any,\n-          }),\n+          story: storyResolver,\n+          stream: storyResolver,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "f49cad7f6ffc3c17ba0034adbd901f8d286d1faf",
      "filename": "src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -22,7 +22,7 @@ async function createTestRenderer(\n       createResolversStub<GQLResolver>({\n         Query: {\n           settings: () => settings,\n-          story: () => ({\n+          stream: () => ({\n             ...story,\n             featuredComments: createQueryResolverStub<StoryToCommentsResolver>(\n               () => {"
    },
    {
      "sha": "47d307f95e9654e09245ff8646918ad7132626bc",
      "filename": "src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -66,6 +66,13 @@ beforeEach(() => {\n             .withArgs(undefined, { id: storyStub.id, url: null })\n             .returns(storyStub)\n       ),\n+      stream: createSinonStub(\n+        s => s.throws(),\n+        s =>\n+          s\n+            .withArgs(undefined, { id: storyStub.id, url: null })\n+            .returns(storyStub)\n+      ),\n       settings: sinon.stub().returns(settings),\n     },\n   };"
    },
    {
      "sha": "cffe0ee5947f52a38f6d3cc763667c170668cdf8",
      "filename": "src/core/client/stream/test/comments/permalink/permalinkViewCommentNotFound.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 0,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/permalink/permalinkViewCommentNotFound.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/permalink/permalinkViewCommentNotFound.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/permalink/permalinkViewCommentNotFound.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -42,6 +42,13 @@ beforeEach(() => {\n             .withArgs(undefined, { id: storyStub.id, url: null })\n             .returns(storyStub)\n       ),\n+      stream: createSinonStub(\n+        s => s.throws(),\n+        s =>\n+          s\n+            .withArgs(undefined, { id: storyStub.id, url: null })\n+            .returns(storyStub)\n+      ),\n       settings: sinon.stub().returns(settings),\n     },\n   };"
    },
    {
      "sha": "6ac76ccdd4ac46515f6ded8d255b38378b72962b",
      "filename": "src/core/client/stream/test/comments/stream/banned.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/banned.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/banned.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/banned.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -35,7 +35,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => bannedUser,\n-          story: () =>\n+          stream: () =>\n             pureMerge<typeof story>(story, {\n               comments: {\n                 edges: ["
    },
    {
      "sha": "7ced37b1f540e2d929de3fc5fec71b936256a2dc",
      "filename": "src/core/client/stream/test/comments/stream/charCountEditComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountEditComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountEditComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/charCountEditComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -40,7 +40,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(settingsWithCharCount),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: sinon.stub().returns(stories[0]),\n+      stream: sinon.stub().returns(stories[0]),\n       ...resolver.Query,\n     },\n   };"
    },
    {
      "sha": "2bddc78f6622c89f8d037024cab20e1468341120",
      "filename": "src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/charCountPostComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -32,7 +32,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(settingsWithCharCount),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: sinon.stub().returns(stories[0]),\n+      stream: sinon.stub().returns(stories[0]),\n       ...resolver.Query,\n     },\n   };"
    },
    {
      "sha": "df7bef2c57d1a0b425186190f9f1bd10e21bf122",
      "filename": "src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/charCountReplyComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -32,7 +32,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(settingsWithCharCount),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: sinon.stub().returns(stories[0]),\n+      stream: sinon.stub().returns(stories[0]),\n       ...resolver.Query,\n     },\n   };"
    },
    {
      "sha": "889e88e59dfd438fcebd69662913f89b454cb0e2",
      "filename": "src/core/client/stream/test/comments/stream/closedOrDisabledCommentStream.spec.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/closedOrDisabledCommentStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/closedOrDisabledCommentStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/closedOrDisabledCommentStream.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -15,7 +15,7 @@ async function createTestRenderer(\n     ...resolver,\n     Query: {\n       settings: sinon.stub().returns(settings),\n-      story: sinon.stub().callsFake((_: any, variables: any) => {\n+      stream: sinon.stub().callsFake((_: any, variables: any) => {\n         expectAndFail(variables.id).toBe(stories[0].id);\n         return stories[0];\n       }),\n@@ -59,7 +59,7 @@ it(\"renders disabled comment stream\", async () => {\n it(\"renders closed comment stream\", async () => {\n   const { testRenderer } = await createTestRenderer({\n     Query: {\n-      story: sinon.stub().callsFake(() => ({\n+      stream: sinon.stub().callsFake(() => ({\n         ...stories[0],\n         isClosed: true,\n       })),\n@@ -78,7 +78,7 @@ it(\"auto close comment stream when story closed at has been reached\", async () =\n \n   const { testRenderer } = await createTestRenderer({\n     Query: {\n-      story: sinon.stub().callsFake(() => ({\n+      stream: sinon.stub().callsFake(() => ({\n         ...stories[0],\n         closedAt: later.toISOString(),\n         isClosed: false,"
    },
    {
      "sha": "64d37e3292874259c146ba970a2682620df16b71",
      "filename": "src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/editComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -23,7 +23,7 @@ function createTestRenderer(\n ) {\n   const resolvers = {\n     Query: {\n-      story: createSinonStub(\n+      stream: createSinonStub(\n         s => s.throws(),\n         s =>\n           s"
    },
    {
      "sha": "7ef3253538f2ee125c4ce5dfae5ba15de3e61ee8",
      "filename": "src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/emitCountEvents.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -21,7 +21,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "37cfba7c5da54fb25f15e153697769504cb5d5e1",
      "filename": "src/core/client/stream/test/comments/stream/ignoreUser.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/ignoreUser.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/ignoreUser.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/ignoreUser.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -31,7 +31,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "aa80dd95b184db1cd58316f455675f1ad04514e0",
      "filename": "src/core/client/stream/test/comments/stream/liveCommentReplies.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/liveCommentReplies.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/liveCommentReplies.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/liveCommentReplies.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -133,7 +133,7 @@ async function createTestRenderer(\n       createResolversStub<GQLResolver>({\n         Query: {\n           settings: () => settings,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers\n@@ -223,7 +223,7 @@ it(\"should not subscribe when story is closed\", async () => {\n   const { testRenderer, subscriptionHandler } = await createTestRenderer({\n     resolvers: createResolversStub<GQLResolver>({\n       Query: {\n-        story: () => pureMerge<typeof story>(story, { isClosed: true }),\n+        stream: () => pureMerge<typeof story>(story, { isClosed: true }),\n       },\n     }),\n   });"
    },
    {
      "sha": "0965529eb3538e1e711e05d246316a9e4f7b1acb",
      "filename": "src/core/client/stream/test/comments/stream/liveTopLevelComments.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/liveTopLevelComments.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/liveTopLevelComments.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/liveTopLevelComments.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -25,7 +25,7 @@ async function createTestRenderer(\n       createResolversStub<GQLResolver>({\n         Query: {\n           settings: () => settings,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers\n@@ -123,7 +123,7 @@ it(\"should not subscribe when story is closed\", async () => {\n   const { testRenderer, subscriptionHandler } = await createTestRenderer({\n     resolvers: createResolversStub<GQLResolver>({\n       Query: {\n-        story: () => pureMerge<typeof story>(story, { isClosed: true }),\n+        stream: () => pureMerge<typeof story>(story, { isClosed: true }),\n       },\n     }),\n   });"
    },
    {
      "sha": "095da8bca93e52d5ebf2ea044ce88ac52c529868",
      "filename": "src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "status": "modified",
      "additions": 12,
      "deletions": 0,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/loadMore.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -81,6 +81,18 @@ beforeEach(() => {\n             )\n             .returns(storyStub)\n       ),\n+      stream: createSinonStub(\n+        s => s.throws(),\n+        s =>\n+          s\n+            .withArgs(\n+              undefined,\n+              sinon\n+                .match({ id: storyStub.id, url: null })\n+                .or(sinon.match({ id: storyStub.id }))\n+            )\n+            .returns(storyStub)\n+      ),\n       settings: sinon.stub().returns(settings),\n     },\n   };"
    },
    {
      "sha": "5c57ffa800f6807c037d48ded6405bd4b3549aeb",
      "filename": "src/core/client/stream/test/comments/stream/memberSince.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/memberSince.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/memberSince.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/memberSince.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -24,7 +24,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "8b37be323c59344d1e1b6f1127a2dd31b732e11d",
      "filename": "src/core/client/stream/test/comments/stream/moderation.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/moderation.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/moderation.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/moderation.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -37,7 +37,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "8534f32ea1396436bca6c8cf0ee5385be187c340",
      "filename": "src/core/client/stream/test/comments/stream/postComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/postComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -30,7 +30,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(settings),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: sinon.stub().callsFake((_: any, variables: any) => {\n+      stream: sinon.stub().callsFake((_: any, variables: any) => {\n         expectAndFail(variables.id).toBe(stories[0].id);\n         return stories[0];\n       }),"
    },
    {
      "sha": "3e967c581d5c546b20649fd85deee2ac1f47af6d",
      "filename": "src/core/client/stream/test/comments/stream/postLocalReply.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postLocalReply.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postLocalReply.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/postLocalReply.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -22,7 +22,7 @@ beforeEach(() => {\n     Query: {\n       settings: sinon.stub().returns(settings),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: createSinonStub(\n+      stream: createSinonStub(\n         s => s.throws(),\n         s =>\n           s"
    },
    {
      "sha": "66ad86ab48eb67587b84300876474f5b026e99e9",
      "filename": "src/core/client/stream/test/comments/stream/postReply.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postReply.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/postReply.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/postReply.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -26,7 +26,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(settings),\n       viewer: sinon.stub().returns(commenters[0]),\n-      story: sinon.stub().callsFake((_: any, variables: any) => {\n+      stream: sinon.stub().callsFake((_: any, variables: any) => {\n         expectAndFail(variables.id).toBe(stories[0].id);\n         return stories[0];\n       }),"
    },
    {
      "sha": "7a3d2ab3828d21195f7f10b3403dcfb4453e56a1",
      "filename": "src/core/client/stream/test/comments/stream/reaction.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/reaction.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/reaction.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/reaction.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -8,7 +8,7 @@ import create from \"./create\";\n function createTestRenderer() {\n   const resolvers = {\n     Query: {\n-      story: sinon.stub().callsFake((_: any, data: any) => {\n+      stream: sinon.stub().callsFake((_: any, data: any) => {\n         expectAndFail(data).toEqual({\n           id: stories[0].id,\n           url: null,"
    },
    {
      "sha": "10a88e368a9fcb3adfc2ebc4a57b36b80f74cb7f",
      "filename": "src/core/client/stream/test/comments/stream/renderCommunityGuidelines.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderCommunityGuidelines.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderCommunityGuidelines.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderCommunityGuidelines.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -8,7 +8,7 @@ import create from \"./create\";\n function createTestRenderer() {\n   const resolvers = {\n     Query: {\n-      story: sinon.stub().returns(stories[0]),\n+      stream: sinon.stub().returns(stories[0]),\n       settings: sinon.stub().returns({\n         ...settings,\n         communityGuidelines: {"
    },
    {
      "sha": "2f4d4745e183d7569357da21af4bb642b3b7e15a",
      "filename": "src/core/client/stream/test/comments/stream/renderMessageBox.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderMessageBox.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderMessageBox.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderMessageBox.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -18,7 +18,7 @@ async function createTestRenderer(\n     Query: {\n       settings: sinon.stub().returns(pureMerge(settings, data.settings)),\n       viewer: sinon.stub().returns((data.loggedIn && commenters[0]) || null),\n-      story: sinon.stub().callsFake((_: any, variables: any) => {\n+      stream: sinon.stub().callsFake((_: any, variables: any) => {\n         expectAndFail(variables.id).toBe(storyWithNoComments.id);\n         return pureMerge(storyWithNoComments, data.story);\n       }),"
    },
    {
      "sha": "95ed44782bd9474e936c022b10c596ba1e3ae6db",
      "filename": "src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -14,7 +14,7 @@ let testRenderer: ReactTestRenderer;\n beforeEach(() => {\n   const resolvers = {\n     Query: {\n-      story: createSinonStub(\n+      stream: createSinonStub(\n         s => s.throws(),\n         s =>\n           s"
    },
    {
      "sha": "0e58a1ca5f57c5d9d62d6b97097fe40e75fbf423",
      "filename": "src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderStream.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -15,7 +15,7 @@ async function createTestRenderer(\n     ...resolver,\n     Query: {\n       settings: sinon.stub().returns(settings),\n-      story: sinon.stub().callsFake((_: any, variables: any) => {\n+      stream: sinon.stub().callsFake((_: any, variables: any) => {\n         expectAndFail(variables.id).toBe(story.id);\n         return story;\n       }),"
    },
    {
      "sha": "6c17047afb4841f028e239a02cf1fa2f8a2f81cf",
      "filename": "src/core/client/stream/test/comments/stream/reportComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/reportComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/reportComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/reportComment.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -14,7 +14,7 @@ function createTestRenderer(\n ) {\n   const resolvers = {\n     Query: {\n-      story: sinon.stub().callsFake((_: any, data: any) => {\n+      stream: sinon.stub().callsFake((_: any, data: any) => {\n         expectAndFail(data).toEqual({\n           id: stories[0].id,\n           url: null,"
    },
    {
      "sha": "d1662fcb020d9d261ab03986f7ff9a3e8a1fa7ab",
      "filename": "src/core/client/stream/test/comments/stream/showAllReplies.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/showAllReplies.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/showAllReplies.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/showAllReplies.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -75,7 +75,7 @@ beforeEach(() => {\n         s => s.throws(),\n         s => s.withArgs(undefined, { id: commentStub.id }).returns(commentStub)\n       ),\n-      story: createSinonStub(\n+      stream: createSinonStub(\n         s => s.throws(),\n         s =>\n           s"
    },
    {
      "sha": "799e4aa38ed7006c4d3f93296bf6abe2f143e84e",
      "filename": "src/core/client/stream/test/comments/stream/showConversation.spec.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/showConversation.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/showConversation.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/showConversation.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -19,6 +19,10 @@ beforeEach(() => {\n         s => s.throws(),\n         s => s.returns(storyWithDeepestReplies)\n       ),\n+      stream: createSinonStub(\n+        s => s.throws(),\n+        s => s.returns(storyWithDeepestReplies)\n+      ),\n       comment: createSinonStub(\n         s => s.throws(),\n         s =>"
    },
    {
      "sha": "100beaa3f9b9c23a9ff7de65478ba1808d7464a1",
      "filename": "src/core/client/stream/test/comments/stream/sortStream.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/sortStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/sortStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/sortStream.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -62,7 +62,7 @@ it(\"renders app with comment stream\", async () => {\n \n   const { testRenderer } = await createTestRenderer({\n     Query: {\n-      story: storyQueryStub,\n+      stream: storyQueryStub,\n     },\n   });\n "
    },
    {
      "sha": "242f23f1131c92f206ca9b054e27168dd94a86f1",
      "filename": "src/core/client/stream/test/comments/stream/suspended.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/suspended.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/comments/stream/suspended.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/suspended.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -34,7 +34,7 @@ async function createTestRenderer(\n                 },\n               },\n             }),\n-          story: () =>\n+          stream: () =>\n             pureMerge<typeof story>(story, {\n               comments: {\n                 edges: ["
    },
    {
      "sha": "0b604a8bebc63249ca6087087163a1ff6b382473",
      "filename": "src/core/client/stream/test/profile/account.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/account.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/account.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/account.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -33,7 +33,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "965db7e17b5b767eb90790fc906aa0ca0809c8f0",
      "filename": "src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/changeEmail.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -24,7 +24,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => baseUser,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "fc0b1e983cf655c59e078687a0c7a652dd2f8cde",
      "filename": "src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/changeUsername.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -32,7 +32,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "01d2adcc8eb2fc638a748d7d6eed9d74a7b3e06d",
      "filename": "src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/deleteAccount.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -25,7 +25,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => baseUser,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "9ffeac707c563149733ef60a431bcb84041ea1d9",
      "filename": "src/core/client/stream/test/profile/myComments.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/myComments.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/myComments.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/myComments.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -59,7 +59,7 @@ beforeEach(() => {\n   const resolvers = {\n     Query: {\n       settings: sinon.stub().returns(settings),\n-      story: createSinonStub(\n+      stream: createSinonStub(\n         s => s.throws(),\n         s =>\n           s"
    },
    {
      "sha": "acbf8c111fef50e12da6c02d95ae9257590b96ab",
      "filename": "src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/notificationSettings.spec.tsx?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -26,7 +26,7 @@ async function createTestRenderer(\n         Query: {\n           settings: () => settings,\n           viewer: () => viewer,\n-          story: () => story,\n+          stream: () => story,\n         },\n       }),\n       params.resolvers"
    },
    {
      "sha": "f630cfa7cc7355e16cf570feb22f5da662e12e92",
      "filename": "src/core/common/errors.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/common/errors.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/common/errors.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/common/errors.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -327,4 +327,10 @@ export enum ERROR_CODES {\n    * in a row within a given time frame\n    */\n   REPEAT_POST = \"REPEAT_POST\",\n+\n+  /**\n+   * INSTALLATION_FORBIDDEN is returned when an installation is attempted\n+   * when it is not authorized to do so.\n+   */\n+  INSTALLATION_FORBIDDEN = \"INSTALLATION_FORBIDDEN\",\n }"
    },
    {
      "sha": "6d3a3d047a406041ed6e30e853c32357bc4d6ead",
      "filename": "src/core/server/app/handlers/api/install.ts",
      "status": "modified",
      "additions": 231,
      "deletions": 76,
      "changes": 307,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/handlers/api/install.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/handlers/api/install.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/handlers/api/install.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -5,12 +5,88 @@ import { LanguageCode, LOCALES } from \"coral-common/helpers/i18n/locales\";\n import { Omit } from \"coral-common/types\";\n import { AppOptions } from \"coral-server/app\";\n import { validate } from \"coral-server/app/request/body\";\n-import { TenantInstalledAlreadyError } from \"coral-server/errors\";\n-import { GQLUSER_ROLE } from \"coral-server/graph/tenant/schema/__generated__/types\";\n+import { RequestLimiter } from \"coral-server/app/request/limiter\";\n+import { Config } from \"coral-server/config\";\n+import {\n+  InstallationForbiddenError,\n+  TenantInstalledAlreadyError,\n+} from \"coral-server/errors\";\n import { LocalProfile } from \"coral-server/models/user\";\n-import { install, InstallTenant } from \"coral-server/services/tenant\";\n+import {\n+  createJWTSigningConfig,\n+  extractTokenFromRequest,\n+  JWTSigningConfig,\n+} from \"coral-server/services/jwt\";\n+import { verifyInstallationTokenString } from \"coral-server/services/management\";\n+import {\n+  install,\n+  InstallTenant,\n+  isInstalled,\n+} from \"coral-server/services/tenant\";\n import { create, CreateUser } from \"coral-server/services/users\";\n-import { RequestHandler } from \"coral-server/types/express\";\n+import { Request, RequestHandler } from \"coral-server/types/express\";\n+\n+import { GQLUSER_ROLE } from \"coral-server/graph/tenant/schema/__generated__/types\";\n+\n+export type TenantInstallCheckHandlerOptions = Pick<\n+  AppOptions,\n+  \"redis\" | \"config\"\n+>;\n+\n+export const installCheckHandler = ({\n+  config,\n+  redis,\n+}: TenantInstallCheckHandlerOptions): RequestHandler => {\n+  const { managementEnabled, signingConfig } = managementSigningConfig(config);\n+  const limiter = new RequestLimiter({\n+    redis,\n+    ttl: \"10s\",\n+    max: 2,\n+    prefix: \"ip\",\n+    config,\n+  });\n+\n+  return async (req, res, next) => {\n+    try {\n+      // Limit based on the IP address.\n+      await limiter.test(req, req.ip);\n+\n+      if (!req.coral) {\n+        return next(new Error(\"coral was not set\"));\n+      }\n+\n+      if (!req.coral.cache) {\n+        return next(new Error(\"cache was not set\"));\n+      }\n+\n+      if (req.coral.tenant) {\n+        // There's already a Tenant on the request! No need to process further.\n+        return next(new TenantInstalledAlreadyError());\n+      }\n+\n+      // Check to see if the server already has a tenant installed.\n+      const alreadyInstalled = await isInstalled(req.coral.cache.tenant);\n+      if (!alreadyInstalled) {\n+        // No tenants are installed at all, we can of course proceed with the\n+        // install now.\n+        return res.sendStatus(204);\n+      }\n+\n+      // Check to see if management is enabled for this server.\n+      if (managementEnabled && signingConfig) {\n+        await checkForInstallationToken(req, signingConfig);\n+\n+        // We've determined that there is already a tenant installed on this\n+        // server, but we have a valid management token, so we're good!\n+        return res.sendStatus(204);\n+      }\n+\n+      return next(new TenantInstalledAlreadyError());\n+    } catch (err) {\n+      return next(err);\n+    }\n+  };\n+};\n \n export interface TenantInstallBody {\n   tenant: Omit<InstallTenant, \"domain\" | \"locale\"> & {\n@@ -63,83 +139,162 @@ export const installHandler = ({\n   config,\n   i18n,\n   migrationManager,\n-}: TenantInstallHandlerOptions): RequestHandler => async (req, res, next) => {\n-  try {\n-    if (!req.coral) {\n-      return next(new Error(\"coral was not set\"));\n-    }\n+}: TenantInstallHandlerOptions): RequestHandler => {\n+  const { managementEnabled, signingConfig } = managementSigningConfig(config);\n+  const limiter = new RequestLimiter({\n+    redis,\n+    ttl: \"10s\",\n+    max: 1,\n+    prefix: \"ip\",\n+    config,\n+  });\n \n-    if (!req.coral.cache) {\n-      return next(new Error(\"cache was not set\"));\n-    }\n+  return async (req, res, next) => {\n+    try {\n+      // Limit based on the IP address.\n+      await limiter.test(req, req.ip);\n \n-    if (req.coral.tenant) {\n-      // There's already a Tenant on the request! No need to process further.\n-      return next(new TenantInstalledAlreadyError());\n-    }\n+      if (!req.coral) {\n+        return next(new Error(\"coral was not set\"));\n+      }\n \n-    // Validate that the payload passed in was correct, it will throw if the\n-    // payload is invalid.\n-    const {\n-      tenant: { locale: tenantLocale, ...tenantInput },\n-      user: userInput,\n-    }: TenantInstallBody = validate(TenantInstallBodySchema, req.body);\n-\n-    // Default the locale to the default locale if not provided.\n-    let locale = tenantLocale;\n-    if (!locale) {\n-      locale = config.get(\"default_locale\") as LanguageCode;\n-    }\n+      if (!req.coral.cache) {\n+        return next(new Error(\"cache was not set\"));\n+      }\n \n-    // Install will throw if it can not create a Tenant, or it has already been\n-    // installed.\n-    const tenant = await install(\n-      mongo,\n-      redis,\n-      req.coral.cache.tenant,\n-      i18n,\n-      {\n-        ...tenantInput,\n-        // Infer the Tenant domain via the hostname parameter.\n-        domain: req.hostname,\n-        // Add the locale that we had to default to the default locale from the\n-        // config.\n-        locale,\n-      },\n-      req.coral.now\n-    );\n+      if (req.coral.tenant) {\n+        // There's already a Tenant on the request! No need to process further.\n+        return next(new TenantInstalledAlreadyError());\n+      }\n+\n+      // Check to see if the server already has a tenant installed.\n+      let alreadyInstalled = await isInstalled(req.coral.cache.tenant);\n+\n+      // Check to see if management is enabled for this server.\n+      if (managementEnabled && signingConfig) {\n+        // Management is enabled for this server, check now if the server already\n+        // has a tenant installed.\n+        if (alreadyInstalled) {\n+          await checkForInstallationToken(req, signingConfig);\n+\n+          // We've determined that there is at least one tenant already\n+          // installed, and we've verified that the current call to install\n+          // this tenant came with a signed token that was signed by the\n+          // management secret, so we can safely mark that this tenant is\n+          // indeed, not already been installed.\n+          alreadyInstalled = false;\n+        }\n+      }\n+\n+      // Guard against installs trying to install multiple tenants when management\n+      // hasn't been enabled.\n+      if (alreadyInstalled) {\n+        return next(new TenantInstalledAlreadyError());\n+      }\n+\n+      // Validate that the payload passed in was correct, it will throw if the\n+      // payload is invalid.\n+      const {\n+        tenant: { locale: tenantLocale, ...tenantInput },\n+        user: userInput,\n+      }: TenantInstallBody = validate(TenantInstallBodySchema, req.body);\n+\n+      // Default the locale to the default locale if not provided.\n+      let locale = tenantLocale;\n+      if (!locale) {\n+        locale = config.get(\"default_locale\") as LanguageCode;\n+      }\n+\n+      // Install will throw if it can not create a Tenant, or it has already been\n+      // installed.\n+      const tenant = await install(\n+        mongo,\n+        redis,\n+        req.coral.cache.tenant,\n+        i18n,\n+        {\n+          ...tenantInput,\n+          // Infer the Tenant domain via the hostname parameter.\n+          domain: req.hostname,\n+          // Add the locale that we had to default to the default locale from the\n+          // config.\n+          locale,\n+        },\n+        req.coral.now\n+      );\n+\n+      // Pull the user details out of the input for the user.\n+      const { email, username, password } = userInput;\n+\n+      // Configure with profile.\n+      const profile: LocalProfile = {\n+        type: \"local\",\n+        id: email,\n+        password,\n+        passwordID: uuid(),\n+      };\n \n-    // Execute pending migrations to get everything installed.\n-    await migrationManager.executePendingMigrations(mongo);\n-\n-    // Pull the user details out of the input for the user.\n-    const { email, username, password } = userInput;\n-\n-    // Configure with profile.\n-    const profile: LocalProfile = {\n-      type: \"local\",\n-      id: email,\n-      password,\n-      passwordID: uuid(),\n-    };\n-\n-    // Create the first admin user.\n-    await create(\n-      mongo,\n-      tenant,\n-      {\n-        email,\n-        username,\n-        profile,\n-        role: GQLUSER_ROLE.ADMIN,\n-      },\n-      {},\n-      req.coral.now\n+      // Create the first admin user.\n+      await create(\n+        mongo,\n+        tenant,\n+        {\n+          email,\n+          username,\n+          profile,\n+          role: GQLUSER_ROLE.ADMIN,\n+        },\n+        {},\n+        req.coral.now\n+      );\n+\n+      // Execute pending migrations to get everything installed.\n+      await migrationManager.executePendingMigrations(mongo, true);\n+\n+      // Send back the Tenant.\n+      return res.sendStatus(204);\n+    } catch (err) {\n+      return next(err);\n+    }\n+  };\n+};\n+\n+async function checkForInstallationToken(\n+  req: Request,\n+  signingConfig: JWTSigningConfig\n+) {\n+  // The server already has another tenant installed. Every additional\n+  // tenant must be installed via the signed domain method. Check to see\n+  // now if the given domain is signed.\n+  const accessToken = extractTokenFromRequest(req, true);\n+  if (accessToken) {\n+    // Verify the JWT on the request to ensure it was signed by the\n+    // management secret.\n+    const { token } = await verifyInstallationTokenString(\n+      signingConfig,\n+      accessToken,\n+      req.coral!.now\n     );\n \n-    // Send back the Tenant.\n-    return res.sendStatus(204);\n-  } catch (err) {\n-    return next(err);\n+    // Check to see that the domain on the token matches the hostname on\n+    // the request.\n+    if (req.hostname !== token.sub) {\n+      throw new InstallationForbiddenError(req.hostname);\n+    }\n+  } else {\n+    throw new InstallationForbiddenError(req.hostname);\n   }\n-};\n+}\n+\n+function managementSigningConfig(config: Config) {\n+  const managementSigningSecret = config.get(\"management_signing_secret\");\n+  const managementSigningAlgorithm = config.get(\"management_signing_algorithm\");\n+  const managementEnabled = Boolean(managementSigningSecret);\n+  const signingConfig = managementSigningSecret\n+    ? createJWTSigningConfig(\n+        managementSigningSecret,\n+        managementSigningAlgorithm\n+      )\n+    : null;\n+  return { managementEnabled, signingConfig };\n+}"
    },
    {
      "sha": "810020506997254646605400d2397d6ac3b8f772",
      "filename": "src/core/server/app/middleware/installed.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/middleware/installed.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/middleware/installed.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/installed.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -29,7 +29,7 @@ export const installedMiddleware = ({\n     return next(new Error(\"cache was not set\"));\n   }\n \n-  const installed = await isInstalled(req.coral.cache.tenant);\n+  const installed = await isInstalled(req.coral.cache.tenant, req.hostname);\n \n   // If Coral is installed, and redirectIfInstall is true, then it will redirect.\n   // If Coral is not installed, and redirectIfInstall is false, then it will also"
    },
    {
      "sha": "a78f8c4486b4f2b606ef6b117c57ef2ad2da4522",
      "filename": "src/core/server/app/middleware/logging.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/middleware/logging.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/middleware/logging.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/middleware/logging.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -26,6 +26,7 @@ export const accessLogger: RequestHandler = (req, res, next) => {\n         url: req.originalUrl || req.url,\n         method: req.method,\n         statusCode: res.statusCode,\n+        host: req.hostname,\n         userAgent,\n         responseTime,\n       },"
    },
    {
      "sha": "171fede7f4e1f4f167959ca0c4eb6fce0786a75a",
      "filename": "src/core/server/app/request/limiter.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/request/limiter.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/request/limiter.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/request/limiter.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,6 +1,7 @@\n /* eslint-disable max-classes-per-file */\n \n import { Redis } from \"ioredis\";\n+import { DateTime } from \"luxon\";\n import ms from \"ms\";\n \n import { Omit } from \"coral-common/types\";\n@@ -68,7 +69,10 @@ export class Limiter {\n     }\n \n     if (tries > this.max) {\n-      throw new RateLimitExceeded(key, this.max, tries);\n+      const resetsAt = DateTime.fromJSDate(new Date())\n+        .plus({ seconds: this.ttl })\n+        .toJSDate();\n+      throw new RateLimitExceeded(key, this.max, resetsAt, tries);\n     }\n \n     return tries;"
    },
    {
      "sha": "b5069abfca0cbc718c92de5bc4d65bb07ecafd07",
      "filename": "src/core/server/app/router/api/index.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 8,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/router/api/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/router/api/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -5,7 +5,6 @@ import { AppOptions } from \"coral-server/app\";\n import {\n   graphQLHandler,\n   healthHandler,\n-  installHandler,\n   versionHandler,\n } from \"coral-server/app/handlers\";\n import { JSONErrorHandler } from \"coral-server/app/middleware/error\";\n@@ -18,6 +17,7 @@ import { tenantMiddleware } from \"coral-server/app/middleware/tenant\";\n \n import { createNewAccountRouter } from \"./account\";\n import { createNewAuthRouter } from \"./auth\";\n+import { createNewInstallRouter } from \"./install\";\n import { createStoryRouter } from \"./story\";\n import { createNewUserRouter } from \"./user\";\n \n@@ -39,13 +39,8 @@ export function createAPIRouter(app: AppOptions, options: RouterOptions) {\n   // Configure the Health route.\n   router.get(\"/health\", healthHandler);\n \n-  // Installation middleware.\n-  router.use(\n-    \"/install\",\n-    jsonMiddleware,\n-    tenantMiddleware({ cache: app.tenantCache, passNoTenant: true }),\n-    installHandler(app)\n-  );\n+  // Installation router.\n+  router.use(\"/install\", createNewInstallRouter(app));\n \n   // Tenant identification middleware. All requests going past this point can\n   // only proceed if there is a valid Tenant for the hostname."
    },
    {
      "sha": "eb437619ace86dee57efd87e2edc13a2f2d4fa3d",
      "filename": "src/core/server/app/router/api/install.ts",
      "status": "added",
      "additions": 25,
      "deletions": 0,
      "changes": 25,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/router/api/install.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/app/router/api/install.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/install.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1,25 @@\n+import express, { Router } from \"express\";\n+\n+import { AppOptions } from \"coral-server/app\";\n+import { installCheckHandler, installHandler } from \"coral-server/app/handlers\";\n+import { jsonMiddleware } from \"coral-server/app/middleware/json\";\n+import { tenantMiddleware } from \"coral-server/app/middleware/tenant\";\n+\n+export function createNewInstallRouter(app: AppOptions): Router {\n+  // Create a router.\n+  const router = express.Router();\n+\n+  router.get(\n+    \"/\",\n+    tenantMiddleware({ cache: app.tenantCache, passNoTenant: true }),\n+    installCheckHandler(app)\n+  );\n+  router.post(\n+    \"/\",\n+    jsonMiddleware,\n+    tenantMiddleware({ cache: app.tenantCache, passNoTenant: true }),\n+    installHandler(app)\n+  );\n+\n+  return router;\n+}"
    },
    {
      "sha": "9a5dee7bc1bd6ba8140ac90ee52ac67eb8c130a1",
      "filename": "src/core/server/config.ts",
      "status": "modified",
      "additions": 29,
      "deletions": 12,
      "changes": 41,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/config.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/config.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/config.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -45,6 +45,18 @@ convict.addFormat({\n   coerce: (url: string) => (url ? ensureEndSlash(url) : url),\n });\n \n+const algorithms = [\n+  \"HS256\",\n+  \"HS384\",\n+  \"HS512\",\n+  \"RS256\",\n+  \"RS384\",\n+  \"RS512\",\n+  \"ES256\",\n+  \"ES384\",\n+  \"ES512\",\n+];\n+\n const config = convict({\n   env: {\n     doc: \"The application environment.\",\n@@ -150,22 +162,27 @@ const config = convict({\n     sensitive: true,\n   },\n   signing_algorithm: {\n-    doc: \"\",\n-    format: [\n-      \"HS256\",\n-      \"HS384\",\n-      \"HS512\",\n-      \"RS256\",\n-      \"RS384\",\n-      \"RS512\",\n-      \"ES256\",\n-      \"ES384\",\n-      \"ES512\",\n-    ],\n+    doc: \"The signing algorithm used to sign JSON Web Tokens (JWT).\",\n+    format: algorithms,\n     default: \"HS256\",\n     env: \"SIGNING_ALGORITHM\",\n     arg: \"signingAlgorithm\",\n   },\n+  management_signing_secret: {\n+    doc: \"The secret used to verify management API requests.\",\n+    format: \"*\",\n+    default: null,\n+    env: \"MANAGEMENT_SIGNING_SECRET\",\n+    arg: \"managementSigningSecret\",\n+    sensitive: true,\n+  },\n+  management_signing_algorithm: {\n+    doc: \"The algorithm used to sign management API requests\",\n+    format: algorithms,\n+    default: \"HS256\",\n+    env: \"MANAGEMENT_SIGNING_ALGORITHM\",\n+    arg: \"managementSigningAlgorithm\",\n+  },\n   logging_level: {\n     doc: \"The logging level to print to the console\",\n     format: [\"fatal\", \"error\", \"warn\", \"info\", \"debug\", \"trace\"],"
    },
    {
      "sha": "dfc2a03c82cfe24124356c9dc371a3841824687e",
      "filename": "src/core/server/errors/index.ts",
      "status": "modified",
      "additions": 12,
      "deletions": 2,
      "changes": 14,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/errors/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/errors/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/errors/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -530,6 +530,16 @@ export class TenantInstalledAlreadyError extends CoralError {\n   }\n }\n \n+export class InstallationForbiddenError extends CoralError {\n+  constructor(domain: string) {\n+    super({\n+      code: ERROR_CODES.INSTALLATION_FORBIDDEN,\n+      status: 401,\n+      context: { pub: { domain } },\n+    });\n+  }\n+}\n+\n export class InvalidCredentialsError extends CoralError {\n   constructor(reason: string) {\n     super({\n@@ -685,11 +695,11 @@ export class InviteTokenExpired extends CoralError {\n }\n \n export class RateLimitExceeded extends CoralError {\n-  constructor(resource: string, max: number, tries?: number) {\n+  constructor(resource: string, max: number, resetsAt: Date, tries?: number) {\n     super({\n       code: ERROR_CODES.RATE_LIMIT_EXCEEDED,\n       status: 429,\n-      context: { pvt: { resource, max, tries } },\n+      context: { pvt: { resource, max, tries, resetsAt } },\n     });\n   }\n }"
    },
    {
      "sha": "08a322e4e3758937b272898cb8dd7c1dbe240557",
      "filename": "src/core/server/errors/translations.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/errors/translations.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/errors/translations.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/errors/translations.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -57,4 +57,5 @@ export const ERROR_TRANSLATIONS: Record<ERROR_CODES, string> = {\n   USER_ALREADY_PREMOD: \"error-userAlreadyPremod\",\n   INVITE_INCLUDES_EXISTING_USER: \"error-inviteIncludesExistingUser\",\n   REPEAT_POST: \"error-repeatPost\",\n+  INSTALLATION_FORBIDDEN: \"error-installationForbidden\",\n };"
    },
    {
      "sha": "a840096bd18a259c4c2896ebb046fcc96f2fb341",
      "filename": "src/core/server/graph/tenant/resolvers/Query.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/graph/tenant/resolvers/Query.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/graph/tenant/resolvers/Query.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/tenant/resolvers/Query.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -3,7 +3,8 @@ import { GQLQueryTypeResolver } from \"coral-server/graph/tenant/schema/__generat\n import { moderationQueuesResolver } from \"./ModerationQueues\";\n \n export const Query: Required<GQLQueryTypeResolver<void>> = {\n-  story: (source, args, ctx) =>\n+  story: (source, args, ctx) => ctx.loaders.Stories.find.load(args),\n+  stream: (source, args, ctx) =>\n     ctx.tenant.stories.disableLazy\n       ? ctx.loaders.Stories.find.load(args)\n       : ctx.loaders.Stories.findOrCreate.load(args),"
    },
    {
      "sha": "a03b76c40f9863d64555aa75a0c358415de9ec33",
      "filename": "src/core/server/graph/tenant/schema/schema.graphql",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/graph/tenant/schema/schema.graphql",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/graph/tenant/schema/schema.graphql",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/tenant/schema/schema.graphql?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -2597,6 +2597,12 @@ type Query {\n   \"\"\"\n   story(id: ID, url: String): Story\n \n+  \"\"\"\n+  stream will load a specific story that can be identified by either an ID or a\n+  URL and will create the story if that feature is enabled.\n+  \"\"\"\n+  stream(id: ID, url: String): Story\n+\n   \"\"\"\n   stories returns filtered stories that can be paginated.\n   \"\"\""
    },
    {
      "sha": "d66913dbec8499a8ddd16306fa0dc10d6d69de4d",
      "filename": "src/core/server/index.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -127,7 +127,10 @@ class Server {\n     this.i18n = new I18n(defaultLocale);\n \n     // Create the signing config.\n-    this.signingConfig = createJWTSigningConfig(this.config);\n+    this.signingConfig = createJWTSigningConfig(\n+      this.config.get(\"signing_secret\"),\n+      this.config.get(\"signing_algorithm\")\n+    );\n   }\n \n   /**"
    },
    {
      "sha": "20e04210e8d66aa1c366c52e1f2747432b6860e1",
      "filename": "src/core/server/locales/en-US/errors.ftl",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/locales/en-US/errors.ftl",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/locales/en-US/errors.ftl",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/locales/en-US/errors.ftl?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -36,7 +36,7 @@ error-emailInvalidFormat =\n error-emailExceedsMaxLength =\n   Email address exceeds maximum length of {$max} characters.\n error-internalError = Internal Error\n-error-tenantInstalledAlready = Tenant has already been installed already.\n+error-tenantInstalledAlready = Tenant has already been installed.\n error-userNotEntitled = You are not authorized to access that resource.\n error-storyNotFound = Story ({$storyID}) not found.\n error-commentNotFound = Comment ({$commentID}) not found.\n@@ -59,3 +59,4 @@ error-persistedQueryNotFound = The persisted query with ID { $id } was not found\n error-rawQueryNotAuthorized = You are not authorized to execute this query.\n error-inviteIncludesExistingUser = A user with the email address { $email } already exists.\n error-repeatPost = Are you sure? This comment is very similar to your previous comment.\n+error-installationForbidden = { -product-name } is already installed. To install another Tenant on this domain ({ $domain }) you need to generate an installation token."
    },
    {
      "sha": "53417a1fd829bdd086d57b495edfe95a3c7e5710",
      "filename": "src/core/server/models/story/counts/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/models/story/counts/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/models/story/counts/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/story/counts/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -148,6 +148,7 @@ export async function updateStoryCounts(\n   const update: DeepPartial<Story> = { commentCounts };\n   const $inc = pickBy(dotize(update), identity);\n   if (isEmpty($inc)) {\n+    // Nothing needs to be incremented, just return the story.\n     return retrieveStory(mongo, tenantID, id);\n   }\n "
    },
    {
      "sha": "8ce72cea75d93038783aac8ab0b6bb988afaee04",
      "filename": "src/core/server/models/tenant/tenant.ts",
      "status": "modified",
      "additions": 10,
      "deletions": 1,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/models/tenant/tenant.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/models/tenant/tenant.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/tenant/tenant.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,3 +1,4 @@\n+import { isEmpty } from \"lodash\";\n import { Db } from \"mongodb\";\n import uuid from \"uuid\";\n \n@@ -259,11 +260,19 @@ export async function updateTenant(\n   id: string,\n   update: UpdateTenantInput\n ) {\n+  const $set = dotize(update, { embedArrays: true });\n+\n+  // Check to see if there is any updates that will be made.\n+  if (isEmpty($set)) {\n+    // No updates need to be made, abort here and just return the tenant.\n+    return retrieveTenant(mongo, id);\n+  }\n+\n   // Get the tenant from the database.\n   const result = await collection(mongo).findOneAndUpdate(\n     { id },\n     // Only update fields that have been updated.\n-    { $set: dotize(update, { embedArrays: true }) },\n+    { $set },\n     // False to return the updated document instead of the original\n     // document.\n     { returnOriginal: false }"
    },
    {
      "sha": "4ee0c497d751e4a3d07fa256fafd1477d1588941",
      "filename": "src/core/server/services/comments/pipeline/phases/userRateLimit.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/comments/pipeline/phases/userRateLimit.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/comments/pipeline/phases/userRateLimit.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/pipeline/phases/userRateLimit.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -52,7 +52,7 @@ export const userRateLimit: IntermediateModerationPhase = async ({\n     .plus({ seconds: COMMENT_LIMIT_WINDOW_SECONDS })\n     .toJSDate();\n   if (nextEditTime > now) {\n-    throw new RateLimitExceeded(\"createComment\", 1);\n+    throw new RateLimitExceeded(\"createComment\", 1, nextEditTime);\n   }\n \n   return;"
    },
    {
      "sha": "99def2a49a152cc10d79060b521d11fff2b5ad30",
      "filename": "src/core/server/services/jwt/index.spec.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 10,
      "changes": 11,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/jwt/index.spec.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/jwt/index.spec.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/jwt/index.spec.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,6 +1,3 @@\n-import sinon from \"sinon\";\n-\n-import { Config } from \"coral-server/config\";\n import {\n   createJWTSigningConfig,\n   extractTokenFromRequest,\n@@ -50,14 +47,8 @@ describe(\"extractJWTFromRequest\", () => {\n describe(\"createJWTSigningConfig\", () => {\n   it(\"parses a RSA certificate\", () => {\n     const input = `-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEpQIBAAKCAQEAyxR2DVlvkQRquggUQTpHN+PxDs2iOiItGgn6u4+faUCdgGEV\\\\nEnmG69//3lAZHnEQN9rkZS3/20zc41mTJnO7dslJbB316vWUSIwYcVY/VC9DTbk+\\\\nMHWZd94p5hOB8PoY2vEGA53KiyWLqQC5FWE3u7cz7eYTr9/eRPDTc15IzohLXd5U\\\\nC9EbO5ebho2CvWrBfrLozM5Kidp8r3Jp+A0o3kfJ/kRDDn/BmG6pM0TohWZFYMs2\\\\nnQaGg+of9tcafgAs7hZAgBrrcc/jke6+MKxpC8algik79nMk7s7prxF1Z9EbAeQV\\\\n1ssL2VgsjvGAHIV+Arckl6QJbVDvQXNAM0PqbQIDAQABAoIBAQCoG6D5vf5P8nMS\\\\n2ltB/6cyyfsjgO/45Y+mTXqERwj0DOwUeMkDyRv6KCxb8LxKade+FPIaG7D/7amw\\\\nfdcE7qrRUyD3YfnPbUk5oNcfAwFbg+BX969WWBMZmgvfDGj1fWKT4w9ScQ1YkFUD\\\\nKrkLzLVhK+/N0Dad0VjiguTXTMZCSDFOY9fO8HRF6EA3aewEPeEY62J6rSjGXvWB\\\\nGdW+FNvf/uRr36xGHNqiOP837pdVUppjgDyVsORnMfFtYMyWyxS2XD5r8gRwcRg7\\\\n0nz6bLM53DjKweO+Yl+pIVPFAyXL0pwzQDlnjShsCzyzjA9lJftkQwbcMWopeegJ\\\\nkPLmiq4VAoGBAOqDmySNx8vmWWMOaXKFuH6Gqu/Nd7gBHxZ73wvsEmvV52xwa0oi\\\\n55h+v6P1YEaNZQWXDFsvILoOUHr2kwZY+Du/MC7tgqpj+Fu3h7UHslulJRE3A+sN\\\\noLbHjZuwm3wwsatpHdyEYOGg0HIGWXi+9pDT/1gy8g3L2Gf0X6rfkBBXAoGBAN2v\\\\nlbii0+HvZ2y0D0P6NfUJ6cQDrSyuTe7UW6OVYjBjrVAk8+bhnQ4eKd9edCnUDqu6\\\\n9C8ZSrqR6VBeItbt8y+5ZCRcrigxd2VdH8rL9g6idD9RPnSbHx7Al8DxSUv25xMK\\\\n8Z/ZOAvuCmwDfdleycNDoTawKqLtWBzUEntLs5DbAoGAPlTKiJWylAxel8h92HWY\\\\nSvDqQCChgGOz6prz9sxBPS42e4kJy0OpwMt3jlGqzDXKswipvRayoSEq3PPqshY1\\\\nrFOtr9trDnTRzzbhuAkaq+ciCghQX0pY/BvgFJCFUyXyIzgmOrVotq+yl4v+fexr\\\\nxqTCSqQH2AjlNQQr5VPUi7MCgYEAsNbbMXE6YlXug+lS8CANoM3qm4FvSGA3LNhb\\\\nza9hp0YsP+1qXvgEp/lp35RiR+ewWE+HcHbVhOTWYFTnp9ojDyPtfZAtIUTsgIB7\\\\n1vNC8kOnRccSckQ32/k4VSJlHOL1S9yECMZnjiSyTZ2va5HQkyJE3PJE4LlCe6S0\\\\npYQq1tcCgYEAoJDeSeAPqi5NIu+MWNUWzw4vo5raKyHrJi+cTvKyM/2zJFHvBc5f\\\\nRaxkcIAOmIDoVdFgy6APY/0DnDnpqT1kMagUaxZjG9PLFIDds5DRaL99m+S7l8mt\\\\nySX/MbmhQHYWpVf2nL6pmfPuP4Ih6tbKIUUGA3wZXYYZ5r+pZFG1IrA=\\\\n-----END RSA PRIVATE KEY-----`;\n-    const config = {\n-      get: sinon.stub(),\n-    };\n-\n-    config.get.withArgs(\"signing_secret\").returns(input);\n-    config.get.withArgs(\"signing_algorithm\").returns(\"RS256\");\n \n-    const signingConfig = createJWTSigningConfig((config as any) as Config);\n+    const signingConfig = createJWTSigningConfig(input, \"RS256\");\n \n     expect(signingConfig.algorithm).toEqual(\"RS256\");\n     expect(signingConfig.secret.toString()).toMatchSnapshot();"
    },
    {
      "sha": "ab57f1efd4ac2942363d4120fd681767562a7ae1",
      "filename": "src/core/server/services/jwt/index.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 6,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/jwt/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/jwt/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/jwt/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -9,7 +9,6 @@ import uuid from \"uuid/v4\";\n \n import { DEFAULT_SESSION_LENGTH } from \"coral-common/constants\";\n import { Omit } from \"coral-common/types\";\n-import { Config } from \"coral-server/config\";\n import {\n   AuthenticationError,\n   JWTRevokedError,\n@@ -230,12 +229,11 @@ function isAsymmetricSigningAlgorithm(\n \n /**\n  * Parses the config and provides the signing config.\n- *\n- * @param config the server configuration\n  */\n-export function createJWTSigningConfig(config: Config): JWTSigningConfig {\n-  const secret = config.get(\"signing_secret\");\n-  const algorithm = config.get(\"signing_algorithm\");\n+export function createJWTSigningConfig(\n+  secret: string,\n+  algorithm: string = SymmetricSigningAlgorithm.HS256\n+): JWTSigningConfig {\n   if (isSymmetricSigningAlgorithm(algorithm)) {\n     return createSymmetricSigningConfig(algorithm, secret);\n   } else if (isAsymmetricSigningAlgorithm(algorithm)) {"
    },
    {
      "sha": "af41cea8fe01c3ee9e868ff8b715280ab58b9258",
      "filename": "src/core/server/services/management/index.ts",
      "status": "added",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/management/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/management/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/management/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1 @@\n+export * from \"./management\";"
    },
    {
      "sha": "1d5476776f374004d8de93b739cb36810b87dbcd",
      "filename": "src/core/server/services/management/management.ts",
      "status": "added",
      "additions": 58,
      "deletions": 0,
      "changes": 58,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/management/management.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/management/management.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/management/management.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -0,0 +1,58 @@\n+import Joi from \"joi\";\n+import { isNull } from \"lodash\";\n+\n+import { TokenInvalidError } from \"coral-server/errors\";\n+\n+import {\n+  JWTSigningConfig,\n+  StandardClaims,\n+  StandardClaimsSchema,\n+  verifyJWT,\n+} from \"../jwt\";\n+\n+export interface InstallationToken\n+  extends Required<Pick<StandardClaims, \"iat\" | \"exp\" | \"sub\">> {\n+  // aud specifies `installation` as the audience to indicate that this is a\n+  // installation token.\n+  aud: \"installation\";\n+}\n+\n+const InstallationTokenSchema = StandardClaimsSchema.keys({\n+  aud: Joi.string().only(\"installation\"),\n+}).requiredKeys([\"iat\", \"exp\", \"sub\", \"aud\"]);\n+\n+export function validateInstallationToken(\n+  token: InstallationToken | object\n+): Error | null {\n+  const { error } = Joi.validate(token, InstallationTokenSchema);\n+  return error || null;\n+}\n+\n+export function isInstallationToken(\n+  token: InstallationToken | object\n+): token is InstallationToken {\n+  return isNull(validateInstallationToken(token));\n+}\n+\n+export async function verifyInstallationTokenString(\n+  signingConfig: JWTSigningConfig,\n+  tokenString: string,\n+  now: Date\n+) {\n+  const token = verifyJWT(tokenString, signingConfig, now, {\n+    // Verify that this is a installation token based on the audience.\n+    audience: \"installation\",\n+  });\n+\n+  // Validate that this is indeed a installation token.\n+  if (!isInstallationToken(token)) {\n+    // TODO: (wyattjoh) look into a way of pulling the error into this one\n+    throw new TokenInvalidError(\n+      tokenString,\n+      \"does not conform to the installation token schema\"\n+    );\n+  }\n+\n+  // Now that we've verified that the token is valid, we're good to go!\n+  return { token };\n+}"
    },
    {
      "sha": "2a961d5745a90a33e183fb148754d63da73422d3",
      "filename": "src/core/server/services/migrate/manager.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/migrate/manager.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/migrate/manager.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/migrate/manager.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -133,9 +133,13 @@ export default class Manager {\n     return records.length > 0 ? records[records.length - 1] : null;\n   }\n \n-  public async executePendingMigrations(mongo: Db) {\n+  public async executePendingMigrations(mongo: Db, silent = false) {\n     // Error out if this is ran twice.\n     if (this.ran) {\n+      if (silent) {\n+        return;\n+      }\n+\n       throw new Error(\"pending migrations have already been executed\");\n     }\n "
    },
    {
      "sha": "3cb3d0931eb021a6a8c86b1fd43dd907d528a9e1",
      "filename": "src/core/server/services/stories/index.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/stories/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/stories/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/stories/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1,4 +1,4 @@\n-import { zip } from \"lodash\";\n+import { uniq, zip } from \"lodash\";\n import { Db } from \"mongodb\";\n \n import { StoryURLInvalidError } from \"coral-server/errors\";\n@@ -270,8 +270,13 @@ export async function merge(\n     return null;\n   }\n \n-  // Get the stories referenced.\n+  // Collect the story id's and check for duplicates.\n   const storyIDs = [destinationID, ...sourceIDs];\n+  if (uniq(storyIDs).length !== storyIDs.length) {\n+    throw new Error(\"cannot merge from/to the same story ID\");\n+  }\n+\n+  // Get the stories referenced.\n   const stories = await retrieveManyStories(mongo, tenant.id, storyIDs);\n \n   // Ensure that these are all defined."
    },
    {
      "sha": "81cb1d36911fd9f0cb0870a2a73522e1efea9cd5",
      "filename": "src/core/server/services/tenant/cache/index.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/tenant/cache/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/tenant/cache/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/tenant/cache/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -300,7 +300,10 @@ export default class TenantCache {\n       JSON.stringify(message)\n     );\n \n-    logger.debug({ tenantID: tenant.id, subscribers }, \"updated tenant\");\n+    logger.debug(\n+      { tenantID: tenant.id, subscribers },\n+      \"updated tenant in cache\"\n+    );\n \n     // Publish the event for the connected listeners.\n     this.emitter.emit(EMITTER_EVENT_NAME, tenant);"
    },
    {
      "sha": "bb4cecc19e7ff002da148b39d25a87ab68a8afbf",
      "filename": "src/core/server/services/tenant/index.ts",
      "status": "modified",
      "additions": 19,
      "deletions": 3,
      "changes": 22,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/tenant/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/tenant/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/tenant/index.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -80,8 +80,22 @@ export async function update(\n  * isInstalled will return a promise that if true, indicates that a Tenant has\n  * been installed.\n  */\n-export async function isInstalled(cache: TenantCache) {\n-  return (await cache.count()) > 0;\n+export async function isInstalled(cache: TenantCache, domain?: string) {\n+  const count = await cache.count();\n+  if (count === 0) {\n+    return false;\n+  }\n+\n+  if (domain) {\n+    const tenant = await cache.retrieveByDomain(domain);\n+    if (tenant) {\n+      return true;\n+    }\n+\n+    return false;\n+  }\n+\n+  return true;\n }\n \n export type InstallTenant = CreateTenantInput;\n@@ -94,7 +108,9 @@ export async function install(\n   input: InstallTenant,\n   now = new Date()\n ) {\n-  if (await isInstalled(cache)) {\n+  // Ensure that this Tenant isn't being installed onto a domain that already\n+  // exists.\n+  if (await isInstalled(cache, input.domain)) {\n     throw new TenantInstalledAlreadyError();\n   }\n "
    },
    {
      "sha": "14e8f0bcb0e35dcf44ab140cd2f51480b158f845",
      "filename": "src/core/server/services/users/users.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/users/users.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/ce4a3408fc955518c7b6bc8ca5e9d0c69e916958/src/core/server/services/users/users.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/users/users.ts?ref=ce4a3408fc955518c7b6bc8ca5e9d0c69e916958",
      "patch": "@@ -1251,7 +1251,10 @@ export async function updateUserLastWroteCommentTimestamp(\n     .expire(key, COMMENT_LIMIT_WINDOW_SECONDS)\n     .exec();\n   if (!set) {\n-    throw new RateLimitExceeded(\"createComment\", 1);\n+    const resetsAt = DateTime.fromJSDate(when)\n+      .plus({ seconds: COMMENT_LIMIT_WINDOW_SECONDS })\n+      .toJSDate();\n+    throw new RateLimitExceeded(\"createComment\", 1, resetsAt);\n   }\n }\n "
    }
  ]
}
