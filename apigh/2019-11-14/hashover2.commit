{
  "sha": "e8549f10b89b5d9505804e0ee79b890398ad95da",
  "node_id": "MDY6Q29tbWl0MTgwOTYzMjI6ZTg1NDlmMTBiODliNWQ5NTA1ODA0ZTBlZTc5Yjg5MDM5OGFkOTVkYQ==",
  "commit": {
    "author": {
      "name": "Jacob Barkdull",
      "email": "jacobbarkdull@gmail.com",
      "date": "2019-10-20T20:10:59Z"
    },
    "committer": {
      "name": "Jacob Barkdull",
      "email": "jacobbarkdull@gmail.com",
      "date": "2019-10-20T20:10:59Z"
    },
    "message": "Removed user login and cookie restrictions from Admin\n\nThe `setsCookies` and `allowsLogin` settings are intended to only apply to normal users, not Admin, but before now they applied to both. This meant that with any configuration that caused either cookies or the user login to be disabled that Admin would not be able to login either. This was likely the cause of issue #273.",
    "tree": {
      "sha": "b45f22a99bae03112f6d750a51cf4edc137121e2",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/git/trees/b45f22a99bae03112f6d750a51cf4edc137121e2"
    },
    "url": "https://api.github.com/repos/jacobwb/hashover-next/git/commits/e8549f10b89b5d9505804e0ee79b890398ad95da",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEq4pVVPF17yxZ5cYw5kqpM55vbrAFAl2swPkACgkQ5kqpM55v\nbrCeFA//d8j1ESIn4DOWPXZUAs9UawL1zNPsh8Pqtw9Yrn0T4TxSqmnzVHtYuCzk\n/MHy0a5ZHGj7HsKVEjhmF4o5iiL32kVfO7WGxTh0U0vtIhvoBHNADhmoprcJbkJ2\ngDFsEC29biUDHpmeyw2b28afp6S8OR2Qh6HKryxJZfrY0keYEUVQxVmFp1uQlLV1\nSzCzJOzQd++xYcKRrPt6XWLnzqvk1gJIMnK1SDnMRR0ZqxLPB3zIsPnJPZYc0gnv\nl88K9m5cw8StSJrVuvgQMdlLfbA14JMwUw5EdvmPIeHvHwrQgI4CeGuSsQQy1jsk\nd5BSzXIWw0MDfhWa7K7MhYEv62ciFnEB17BgFWcSyELszSTcT2nFnCijNy5ksDCD\nOucgxFJalsVyISYdTtp3VpSLXo2dz16q9Yi0L8GVhIPSPQouQgqkywl0pRsYxnnh\nGMSs3szFW2XFbdp34pHM9zFscHY+O9LZXpo6uS11MImAjmqHNPIp4tukP3kmU82U\nHF9IVtL0KIayQc0YHjKp3c4nNFzOhp3PpsctkD7zGnyWIVyRmXO6VC68Nh3zCh7d\nOdT373OKY6V/E6VHBNqhwehD1WicDGwMPfGgLveFy4HGrp0iJpZm/HzEMgzmLDgu\nBYuRJ4kEotLvXTbzQYPMGDY9RldHXEZd9kiMDqyw0HCRWWM6RJc=\n=ZtlU\n-----END PGP SIGNATURE-----",
      "payload": "tree b45f22a99bae03112f6d750a51cf4edc137121e2\nparent 86ce3c6143ceef606ebcf5fb4e88442afedfefa1\nauthor Jacob Barkdull <jacobbarkdull@gmail.com> 1571602259 -0700\ncommitter Jacob Barkdull <jacobbarkdull@gmail.com> 1571602259 -0700\n\nRemoved user login and cookie restrictions from Admin\n\nThe `setsCookies` and `allowsLogin` settings are intended to only apply to normal users, not Admin, but before now they applied to both. This meant that with any configuration that caused either cookies or the user login to be disabled that Admin would not be able to login either. This was likely the cause of issue #273.\n"
    }
  },
  "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/e8549f10b89b5d9505804e0ee79b890398ad95da",
  "html_url": "https://github.com/jacobwb/hashover-next/commit/e8549f10b89b5d9505804e0ee79b890398ad95da",
  "comments_url": "https://api.github.com/repos/jacobwb/hashover-next/commits/e8549f10b89b5d9505804e0ee79b890398ad95da/comments",
  "author": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "jacobwb",
    "id": 4677622,
    "node_id": "MDQ6VXNlcjQ2Nzc2MjI=",
    "avatar_url": "https://avatars3.githubusercontent.com/u/4677622?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jacobwb",
    "html_url": "https://github.com/jacobwb",
    "followers_url": "https://api.github.com/users/jacobwb/followers",
    "following_url": "https://api.github.com/users/jacobwb/following{/other_user}",
    "gists_url": "https://api.github.com/users/jacobwb/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jacobwb/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jacobwb/subscriptions",
    "organizations_url": "https://api.github.com/users/jacobwb/orgs",
    "repos_url": "https://api.github.com/users/jacobwb/repos",
    "events_url": "https://api.github.com/users/jacobwb/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jacobwb/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "86ce3c6143ceef606ebcf5fb4e88442afedfefa1",
      "url": "https://api.github.com/repos/jacobwb/hashover-next/commits/86ce3c6143ceef606ebcf5fb4e88442afedfefa1",
      "html_url": "https://github.com/jacobwb/hashover-next/commit/86ce3c6143ceef606ebcf5fb4e88442afedfefa1"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 35,
    "deletions": 18
  },
  "files": [
    {
      "sha": "438e0e0507e7a0b23104055e0bf25010ccd74145",
      "filename": "admin/login/index.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/admin/login/index.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/admin/login/index.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/admin/login/index.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -27,7 +27,7 @@\n \t// Check if the user submitted login information\n \tif (!empty ($_POST['name']) and !empty ($_POST['password'])) {\n \t\t// If so, attempt to log them in\n-\t\t$hashover->login->setLogin ();\n+\t\t$hashover->login->setAdminLogin ();\n \n \t\t// Check if user is admin\n \t\tif ($hashover->login->isAdmin () === true) {"
    },
    {
      "sha": "31ee00aa33e9fc62aec99a75511a53957e3a6112",
      "filename": "admin/view-setup.php",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/admin/view-setup.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/admin/view-setup.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/admin/view-setup.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -23,6 +23,9 @@\n // Instantiate HashOver class\n $hashover = new \\HashOver ();\n \n+// Ensure cookies are enabled\n+$hashover->setup->setsCookies = true;\n+\n // Instantiate Locale class\n $hashover->locale = new Locale ($hashover->setup);\n "
    },
    {
      "sha": "e7baa6d990d3a7c734c52548a09a4c958b4048bf",
      "filename": "backend/classes/commentparser.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/commentparser.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/commentparser.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/commentparser.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -40,7 +40,7 @@ public function __construct (Setup $setup)\n \n \t\t// Instantiate various classes\n \t\t$this->login = new Login ($setup);\n-\t\t$this->cookies = new Cookies ($setup);\n+\t\t$this->cookies = new Cookies ($setup, $this->login);\n \t\t$this->locale = new Locale ($setup);\n \t\t$this->avatars = new Avatars ($setup);\n "
    },
    {
      "sha": "4608023d62e90c70e48932b6693ae5b876405a06",
      "filename": "backend/classes/cookies.php",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/cookies.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/cookies.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/cookies.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -20,14 +20,17 @@\n class Cookies\n {\n \tprotected $setup;\n+\tprotected $login;\n \n \tprotected $domain;\n+\tprotected $enabled = true;\n \tprotected $secure = false;\n \n-\tpublic function __construct (Setup $setup)\n+\tpublic function __construct (Setup $setup, Login $login)\n \t{\n \t\t// Store parameters as properties\n \t\t$this->setup = $setup;\n+\t\t$this->login = $login;\n \n \t\t// Store domain from setup locally\n \t\t$this->domain = $setup->domain;\n@@ -78,8 +81,12 @@ public function set ($name, $value = '', $date = false)\n \t\t// Use specific expiration date or configured date\n \t\t$date = $date ?: $this->getCookieExpiration ();\n \n-\t\t// Set the cookie if cookies are enabled\n-\t\tif ($this->setup->setsCookies !== false) {\n+\t\t// Shorter variables for cleaner code\n+\t\t$set_cookie = $this->setup->setsCookies;\n+\t\t$is_admin = $this->login->userIsAdmin;\n+\n+\t\t// Set cookie only if they are enable or user is Admin\n+\t\tif ($set_cookie === true or $is_admin === true) {\n \t\t\tsetcookie ($name, $value, $date, '/', $this->domain, $this->secure, true);\n \t\t}\n \t}"
    },
    {
      "sha": "ee978bb745d99646f26e926aa60e219fa66f8634",
      "filename": "backend/classes/formdata.php",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/formdata.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/formdata.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/formdata.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -41,15 +41,15 @@ class FormData\n \t\t'zip'\n \t);\n \n-\tpublic function __construct (Setup $setup)\n+\tpublic function __construct (Setup $setup, Cookies $cookies)\n \t{\n \t\t// Store parameters as properties\n \t\t$this->setup = $setup;\n \n \t\t// Instantiate various classes\n \t\t$this->locale = new Locale ($setup);\n \t\t$this->spamCheck = new SpamCheck ($setup);\n-\t\t$this->cookies = new Cookies ($setup);\n+\t\t$this->cookies = $cookies;\n \n \t\t// Use POST or GET based on whether request is for JSONP\n \t\t$request = isset ($_GET['jsonp']) ? $_GET : $_POST;"
    },
    {
      "sha": "7cc20e0563968c1ee1f7615e4a4735b2cd2d5733",
      "filename": "backend/classes/formui.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/formui.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/formui.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/formui.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -48,7 +48,7 @@ public function __construct ($mode = 'javascript', Setup $setup, array $counts)\n \t\t// Instantiate various classes\n \t\t$this->locale = new Locale ($setup);\n \t\t$this->login = new Login ($setup);\n-\t\t$this->cookies = new Cookies ($setup);\n+\t\t$this->cookies = new Cookies ($setup, $this->login);\n \t\t$this->avatars = new Avatars ($setup);\n \t\t$this->pageTitle = $this->setup->pageTitle;\n \t\t$this->pageURL = $this->setup->pageURL;"
    },
    {
      "sha": "f27074a14caadde68ad01356ccb873f47729dfc9",
      "filename": "backend/classes/hashover.php",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/hashover.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/hashover.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/hashover.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -60,6 +60,9 @@ public function __construct ($mode = 'php')\n \t\t// Instantiate login class\n \t\t$this->login = new HashOver\\Login ($this->setup);\n \n+\t\t// Instantiate cookies class\n+\t\t$this->cookies = new HashOver\\Cookies ($this->setup, $this->login);\n+\n \t\t// Instantiate class for reading comments\n \t\t$this->thread = new HashOver\\Thread ($this->setup);\n \n@@ -132,9 +135,6 @@ public function initiate ()\n \t\t// Instantiate comment sorting class\n \t\t$this->sortComments = new HashOver\\SortComments ($this->setup);\n \n-\t\t// Instantiate cookies class\n-\t\t$this->cookies = new HashOver\\Cookies ($this->setup);\n-\n \t\t// Instantiate markdown class\n \t\t$this->markdown = new HashOver\\Markdown ();\n "
    },
    {
      "sha": "5d22c88a84ed8466de7445bb77d61f3d41565e92",
      "filename": "backend/classes/login.php",
      "status": "modified",
      "additions": 12,
      "deletions": 5,
      "changes": 17,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/login.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/login.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/login.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -41,8 +41,8 @@ public function __construct (Setup $setup)\n \t\t$this->setup = $setup;\n \n \t\t// Instantiate various classes\n-\t\t$this->cookies = new Cookies ($setup);\n-\t\t$this->formData = new FormData ($setup);\n+\t\t$this->cookies = new Cookies ($setup, $this);\n+\t\t$this->formData = new FormData ($setup, $this->cookies);\n \t\t$this->locale = new Locale ($setup);\n \t\t$this->crypto = new Crypto ();\n \n@@ -211,6 +211,16 @@ public function setLogin ()\n \t\t$this->loginMethod->setLogin ();\n \t}\n \n+\t// Admin login method\n+\tpublic function setAdminLogin ()\n+\t{\n+\t\t// Set login method credentials\n+\t\t$this->setCredentials ();\n+\n+\t\t// Execute login method's setLogin\n+\t\t$this->loginMethod->setLogin ();\n+\t}\n+\n \t// Weak verification of an admin login\n \tpublic function isAdmin ()\n \t{\n@@ -244,9 +254,6 @@ public function adminLogin ()\n \t\t// Update login credentials\n \t\t$this->updateCredentials ();\n \n-\t\t// Check if required fields have values\n-\t\t$this->validateFields ();\n-\n \t\t// And login method's setLogin\n \t\t$this->loginMethod->setLogin ();\n \t}"
    },
    {
      "sha": "d31875df0e6238a30582c6cdf5608624462a17e8",
      "filename": "backend/classes/writecomments.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/writecomments.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/classes/writecomments.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/classes/writecomments.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -137,7 +137,7 @@ public function __construct (Setup $setup, FormData $form_data, Thread $thread)\n \t\t// Instantiate various classes\n \t\t$this->locale = new Locale ($setup);\n \t\t$this->login = new Login ($setup);\n-\t\t$this->cookies = new Cookies ($setup);\n+\t\t$this->cookies = new Cookies ($setup, $this->login);\n \t\t$this->crypto = new Crypto ();\n \t\t$this->avatars = new Avatars ($setup);\n \t\t$this->templater = new Templater ($setup);"
    },
    {
      "sha": "2c3407c4f3cd942d60fba5d27bdd7ff6a6b8c30d",
      "filename": "backend/form-actions.php",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/jacobwb/hashover-next/blob/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/form-actions.php",
      "raw_url": "https://github.com/jacobwb/hashover-next/raw/e8549f10b89b5d9505804e0ee79b890398ad95da/backend/form-actions.php",
      "contents_url": "https://api.github.com/repos/jacobwb/hashover-next/contents/backend/form-actions.php?ref=e8549f10b89b5d9505804e0ee79b890398ad95da",
      "patch": "@@ -85,7 +85,7 @@ function display_json (\\HashOver $hashover, FormData $form_data, $data)\n \t$hashover->setup->setThreadName ('request');\n \n \t// Instantiate FormData class\n-\t$form_data = new FormData ($hashover->setup);\n+\t$form_data = new FormData ($hashover->setup, $hashover->cookies);\n \n \t// Handle user login\n \tif (isset ($request['login'])) {"
    }
  ]
}
