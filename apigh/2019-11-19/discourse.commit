{
  "sha": "266e4860378dae148718632f4e1eced6384f3d87",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoyNjZlNDg2MDM3OGRhZTE0ODcxODYzMmY0ZTFlY2VkNjM4NGYzZDg3",
  "commit": {
    "author": {
      "name": "Blake Erickson",
      "email": "o.blakeerickson@gmail.com",
      "date": "2019-11-19T14:24:18Z"
    },
    "committer": {
      "name": "Blake Erickson",
      "email": "o.blakeerickson@gmail.com",
      "date": "2019-11-19T14:27:49Z"
    },
    "message": "FIX: Turn off auto bumping for topics with scheduled bumps\n\nIf a topic has a timer scheduled to bump a topic it should be excluded\nfrom being auto bumped.",
    "tree": {
      "sha": "d1f6409656bba900cdf86fabf5634b9e43c0518d",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/d1f6409656bba900cdf86fabf5634b9e43c0518d"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/266e4860378dae148718632f4e1eced6384f3d87",
    "comment_count": 2,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/266e4860378dae148718632f4e1eced6384f3d87",
  "html_url": "https://github.com/discourse/discourse/commit/266e4860378dae148718632f4e1eced6384f3d87",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/266e4860378dae148718632f4e1eced6384f3d87/comments",
  "author": {
    "login": "oblakeerickson",
    "id": 1490496,
    "node_id": "MDQ6VXNlcjE0OTA0OTY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1490496?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/oblakeerickson",
    "html_url": "https://github.com/oblakeerickson",
    "followers_url": "https://api.github.com/users/oblakeerickson/followers",
    "following_url": "https://api.github.com/users/oblakeerickson/following{/other_user}",
    "gists_url": "https://api.github.com/users/oblakeerickson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/oblakeerickson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oblakeerickson/subscriptions",
    "organizations_url": "https://api.github.com/users/oblakeerickson/orgs",
    "repos_url": "https://api.github.com/users/oblakeerickson/repos",
    "events_url": "https://api.github.com/users/oblakeerickson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/oblakeerickson/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "oblakeerickson",
    "id": 1490496,
    "node_id": "MDQ6VXNlcjE0OTA0OTY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/1490496?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/oblakeerickson",
    "html_url": "https://github.com/oblakeerickson",
    "followers_url": "https://api.github.com/users/oblakeerickson/followers",
    "following_url": "https://api.github.com/users/oblakeerickson/following{/other_user}",
    "gists_url": "https://api.github.com/users/oblakeerickson/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/oblakeerickson/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oblakeerickson/subscriptions",
    "organizations_url": "https://api.github.com/users/oblakeerickson/orgs",
    "repos_url": "https://api.github.com/users/oblakeerickson/repos",
    "events_url": "https://api.github.com/users/oblakeerickson/events{/privacy}",
    "received_events_url": "https://api.github.com/users/oblakeerickson/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7886a3e58ac87b4f4d58b6afec4a62359597e72e",
      "url": "https://api.github.com/repos/discourse/discourse/commits/7886a3e58ac87b4f4d58b6afec4a62359597e72e",
      "html_url": "https://github.com/discourse/discourse/commit/7886a3e58ac87b4f4d58b6afec4a62359597e72e"
    }
  ],
  "stats": {
    "total": 42,
    "additions": 42,
    "deletions": 0
  },
  "files": [
    {
      "sha": "25aeff75fcc9ca84151a544f5e109e4956f29c36",
      "filename": "app/models/category.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/266e4860378dae148718632f4e1eced6384f3d87/app/models/category.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/266e4860378dae148718632f4e1eced6384f3d87/app/models/category.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/category.rb?ref=266e4860378dae148718632f4e1eced6384f3d87",
      "patch": "@@ -532,6 +532,7 @@ def auto_bump_topic!\n     topic = relation\n       .visible\n       .listable_topics\n+      .exclude_scheduled_bump_topics\n       .where(category_id: self.id)\n       .where('id <> ?', self.topic_id)\n       .where('bumped_at < ?', 1.day.ago)"
    },
    {
      "sha": "b537891597968d568496213345fb6ba8a5b94432",
      "filename": "app/models/topic.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/266e4860378dae148718632f4e1eced6384f3d87/app/models/topic.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/266e4860378dae148718632f4e1eced6384f3d87/app/models/topic.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/topic.rb?ref=266e4860378dae148718632f4e1eced6384f3d87",
      "patch": "@@ -158,6 +158,8 @@ def recover!(recovered_by = nil)\n \n   scope :created_since, lambda { |time_ago| where('topics.created_at > ?', time_ago) }\n \n+  scope :exclude_scheduled_bump_topics, -> { where.not(id: TopicTimer.scheduled_bump_topics) }\n+\n   scope :secured, lambda { |guardian = nil|\n     ids = guardian.secure_category_ids if guardian\n "
    },
    {
      "sha": "8c7f3056e67b3cc53c43adfd3a3c69417b5daad3",
      "filename": "app/models/topic_timer.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/266e4860378dae148718632f4e1eced6384f3d87/app/models/topic_timer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/266e4860378dae148718632f4e1eced6384f3d87/app/models/topic_timer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/topic_timer.rb?ref=266e4860378dae148718632f4e1eced6384f3d87",
      "patch": "@@ -17,6 +17,8 @@ class TopicTimer < ActiveRecord::Base\n \n   validate :ensure_update_will_happen\n \n+  scope :scheduled_bump_topics, -> { where(status_type: 6, deleted_at: nil).pluck(:topic_id) }\n+\n   before_save do\n     self.created_at ||= Time.zone.now if execute_at\n     self.public_type = self.public_type?"
    },
    {
      "sha": "f268c2c7356c4d56928982f6fac02e03e79e1fb9",
      "filename": "spec/models/category_spec.rb",
      "status": "modified",
      "additions": 37,
      "deletions": 0,
      "changes": 37,
      "blob_url": "https://github.com/discourse/discourse/blob/266e4860378dae148718632f4e1eced6384f3d87/spec/models/category_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/266e4860378dae148718632f4e1eced6384f3d87/spec/models/category_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/category_spec.rb?ref=266e4860378dae148718632f4e1eced6384f3d87",
      "patch": "@@ -891,6 +891,43 @@\n \n       expect(Category.auto_bump_topic!).to eq(false)\n     end\n+\n+    it 'should not automatically bump topics with a bump scheduled' do\n+      freeze_time 1.second.ago\n+      category = Fabricate(:category_with_definition)\n+      category.clear_auto_bump_cache!\n+\n+      freeze_time 1.second.from_now\n+      post1 = create_post(category: category)\n+\n+      # no limits on post creation or category creation please\n+      RateLimiter.enable\n+\n+      time = 1.month.from_now\n+      freeze_time time\n+\n+      expect(category.auto_bump_topic!).to eq(false)\n+      expect(Topic.where(bumped_at: time).count).to eq(0)\n+\n+      category.num_auto_bump_daily = 2\n+      category.save!\n+\n+      topic = Topic.find_by_id(post1.topic_id)\n+\n+      TopicTimer.create!(\n+        user_id: -1,\n+        topic: topic,\n+        execute_at: 1.hour.from_now,\n+        status_type: TopicTimer.types[:bump]\n+      )\n+\n+      expect(Topic.joins(:topic_timers).where(topic_timers: { status_type: 6, deleted_at: nil }).count).to eq(1)\n+\n+      expect(category.auto_bump_topic!).to eq(false)\n+      expect(Topic.where(bumped_at: time).count).to eq(0)\n+      # does not include a bump message\n+      expect(post1.topic.reload.posts_count).to eq(1)\n+    end\n   end\n \n   describe \"validate permissions compatibility\" do"
    }
  ]
}
