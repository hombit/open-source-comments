{
  "sha": "7615dc2aaf6caa64bf720ed349407120d8928f5e",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6NzYxNWRjMmFhZjZjYWE2NGJmNzIwZWQzNDk0MDcxMjBkODkyOGY1ZQ==",
  "commit": {
    "author": {
      "name": "Vinh",
      "email": "vinh@vinh.tech",
      "date": "2019-12-05T21:44:16Z"
    },
    "committer": {
      "name": "Kim Gardner",
      "email": "kgardnr@gmail.com",
      "date": "2019-12-05T21:44:16Z"
    },
    "message": "[CORL-720] Integrate`jest-axe` (#2741)\n\n* feat: axe checks for tests\r\n\r\n* test: add another axe check\r\n\r\n* fix: tests",
    "tree": {
      "sha": "e3422093f6a9afb55f4f6bdedf7acf222e9f4383",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/e3422093f6a9afb55f4f6bdedf7acf222e9f4383"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/7615dc2aaf6caa64bf720ed349407120d8928f5e",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/7615dc2aaf6caa64bf720ed349407120d8928f5e",
  "html_url": "https://github.com/coralproject/talk/commit/7615dc2aaf6caa64bf720ed349407120d8928f5e",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/7615dc2aaf6caa64bf720ed349407120d8928f5e/comments",
  "author": {
    "login": "cvle",
    "id": 14221600,
    "node_id": "MDQ6VXNlcjE0MjIxNjAw",
    "avatar_url": "https://avatars2.githubusercontent.com/u/14221600?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cvle",
    "html_url": "https://github.com/cvle",
    "followers_url": "https://api.github.com/users/cvle/followers",
    "following_url": "https://api.github.com/users/cvle/following{/other_user}",
    "gists_url": "https://api.github.com/users/cvle/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cvle/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cvle/subscriptions",
    "organizations_url": "https://api.github.com/users/cvle/orgs",
    "repos_url": "https://api.github.com/users/cvle/repos",
    "events_url": "https://api.github.com/users/cvle/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cvle/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "kgardnr",
    "id": 1077300,
    "node_id": "MDQ6VXNlcjEwNzczMDA=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1077300?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kgardnr",
    "html_url": "https://github.com/kgardnr",
    "followers_url": "https://api.github.com/users/kgardnr/followers",
    "following_url": "https://api.github.com/users/kgardnr/following{/other_user}",
    "gists_url": "https://api.github.com/users/kgardnr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kgardnr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kgardnr/subscriptions",
    "organizations_url": "https://api.github.com/users/kgardnr/orgs",
    "repos_url": "https://api.github.com/users/kgardnr/repos",
    "events_url": "https://api.github.com/users/kgardnr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kgardnr/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "51bfde8cf8f73a6b23b647335a6f8f67b3459328",
      "url": "https://api.github.com/repos/coralproject/talk/commits/51bfde8cf8f73a6b23b647335a6f8f67b3459328",
      "html_url": "https://github.com/coralproject/talk/commit/51bfde8cf8f73a6b23b647335a6f8f67b3459328"
    }
  ],
  "stats": {
    "total": 323,
    "additions": 283,
    "deletions": 40
  },
  "files": [
    {
      "sha": "5a9a48199e4eaeda9322ebcefa1abf5bb6485f58",
      "filename": "package-lock.json",
      "status": "modified",
      "additions": 38,
      "deletions": 9,
      "changes": 47,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/package-lock.json",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/package-lock.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package-lock.json?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -3904,19 +3904,23 @@\n       }\n     },\n     \"@types/jest\": {\n-      \"version\": \"24.0.13\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-24.0.13.tgz\",\n-      \"integrity\": \"sha512-3m6RPnO35r7Dg+uMLj1+xfZaOgIHHHut61djNjzwExXN4/Pm9has9C6I1KMYSfz7mahDhWUOVg4HW/nZdv5Pww==\",\n+      \"version\": \"24.0.23\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/jest/-/jest-24.0.23.tgz\",\n+      \"integrity\": \"sha512-L7MBvwfNpe7yVPTXLn32df/EK+AMBFAFvZrRuArGs7npEWnlziUXK+5GMIUTI4NIuwok3XibsjXCs5HxviYXjg==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"@types/jest-diff\": \"*\"\n+        \"jest-diff\": \"^24.3.0\"\n       }\n     },\n-    \"@types/jest-diff\": {\n-      \"version\": \"20.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/jest-diff/-/jest-diff-20.0.1.tgz\",\n-      \"integrity\": \"sha512-yALhelO3i0hqZwhjtcr6dYyaLoCHbAMshwtj6cGxTvHZAKXHsYGdff6E8EPw3xLKY0ELUTQ69Q1rQiJENnccMA==\",\n-      \"dev\": true\n+    \"@types/jest-axe\": {\n+      \"version\": \"3.2.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/jest-axe/-/jest-axe-3.2.1.tgz\",\n+      \"integrity\": \"sha512-sn+MFd66gNnvhtBkbQBY6q2aznzLXUIN/jJqXd11D0P+PbUnDrthqyOj81O8BLhEYopmUXIp/ktVvdtj/1GZdw==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"@types/jest\": \"*\",\n+        \"axe-core\": \"^3.0.3\"\n+      }\n     },\n     \"@types/joi\": {\n       \"version\": \"13.3.0\",\n@@ -4184,6 +4188,11 @@\n         \"@types/node\": \"*\"\n       }\n     },\n+    \"@types/prettier\": {\n+      \"version\": \"1.19.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/prettier/-/prettier-1.19.0.tgz\",\n+      \"integrity\": \"sha512-gDE8JJEygpay7IjA/u3JiIURvwZW08f0cZSZLAzFoX/ZmeqvS0Sqv+97aKuHpNsalAMMhwPe+iAS6fQbfmbt7A==\"\n+    },\n     \"@types/prop-types\": {\n       \"version\": \"15.5.8\",\n       \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.5.8.tgz\",\n@@ -19836,6 +19845,26 @@\n         }\n       }\n     },\n+    \"jest-axe\": {\n+      \"version\": \"3.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/jest-axe/-/jest-axe-3.2.0.tgz\",\n+      \"integrity\": \"sha512-QSQwSwG72/cpmhJU0fBsaUUvu9mb2uAqhccGQVG6JbIV8sK+aIXh8hYl7vxraMF/I6soQod1aqSdD/j7LjpVFQ==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"axe-core\": \"3.3.1\",\n+        \"chalk\": \"2.4.2\",\n+        \"jest-matcher-utils\": \"24.8.0\",\n+        \"lodash.merge\": \"4.6.2\"\n+      },\n+      \"dependencies\": {\n+        \"axe-core\": {\n+          \"version\": \"3.3.1\",\n+          \"resolved\": \"https://registry.npmjs.org/axe-core/-/axe-core-3.3.1.tgz\",\n+          \"integrity\": \"sha512-gw1T0JptHPF4AdLLqE8yQq3Z7YvsYkpFmFWd84r6hnq/QoKRr8icYHFumhE7wYl5TVIHgVlchMyJsAYh0CfwCQ==\",\n+          \"dev\": true\n+        }\n+      }\n+    },\n     \"jest-changed-files\": {\n       \"version\": \"24.8.0\",\n       \"resolved\": \"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-24.8.0.tgz\","
    },
    {
      "sha": "56dc116cad84d6470793d4fe2ec3931b00a22699",
      "filename": "package.json",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/package.json",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/package.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package.json?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -59,6 +59,7 @@\n   \"dependencies\": {\n     \"@coralproject/bunyan-prettystream\": \"^0.1.4\",\n     \"@metascraper/helpers\": \"^5.7.21\",\n+    \"@types/prettier\": \"^1.19.0\",\n     \"abort-controller\": \"^3.0.0\",\n     \"akismet-api\": \"^4.2.0\",\n     \"apollo-server-express\": \"^2.8.1\",\n@@ -186,7 +187,8 @@\n     \"@types/html-to-text\": \"^1.4.31\",\n     \"@types/html-webpack-plugin\": \"^3.2.0\",\n     \"@types/ioredis\": \"^4.0.10\",\n-    \"@types/jest\": \"^24.0.13\",\n+    \"@types/jest\": \"^24.0.23\",\n+    \"@types/jest-axe\": \"^3.2.1\",\n     \"@types/joi\": \"^13.0.8\",\n     \"@types/jsdom\": \"^12.2.3\",\n     \"@types/jsonwebtoken\": \"^7.2.7\",\n@@ -300,6 +302,7 @@\n     \"husky\": \"^2.2.0\",\n     \"intersection-observer\": \"^0.6.0\",\n     \"jest\": \"^24.8.0\",\n+    \"jest-axe\": \"^3.2.0\",\n     \"jest-junit\": \"^6.4.0\",\n     \"jest-localstorage-mock\": \"^2.4.0\",\n     \"jest-mock-console\": \"^1.0.0\","
    },
    {
      "sha": "456fb0f2769b05167893284b7ac8f64da873119d",
      "filename": "scripts/watcher/ChokidarWatcher.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/scripts/watcher/ChokidarWatcher.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/scripts/watcher/ChokidarWatcher.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/watcher/ChokidarWatcher.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -23,9 +23,10 @@ export default class ChokidarWatcher implements Watcher {\n     let firstError: Error | null = null;\n \n     // If this is set, a pending promise is waiting for the next result.\n-    let pending:\n-      | ({ resolve: (result: string) => void; reject: (error: Error) => void })\n-      | null = null;\n+    let pending: {\n+      resolve: (result: string) => void;\n+      reject: (error: Error) => void;\n+    } | null = null;\n \n     // Only start client if we have something to watch.\n     if (paths.length) {"
    },
    {
      "sha": "3984f4f7559f1cf9bfda64056fdfa4b2b227f729",
      "filename": "scripts/watcher/SaneWatcher.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/scripts/watcher/SaneWatcher.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/scripts/watcher/SaneWatcher.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/scripts/watcher/SaneWatcher.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -48,7 +48,7 @@ export default class SaneWatcher implements Watcher {\n     const queue: string[] = [];\n \n     // If this is set, a pending promise is waiting for the next result.\n-    let pending: ({ resolve: (result: string) => void }) | null = null;\n+    let pending: { resolve: (result: string) => void } | null = null;\n \n     // Only start client if we have something to watch.\n     if (paths.length) {"
    },
    {
      "sha": "57cdae59ed500e5657f663d855838bf969801e0a",
      "filename": "src/core/client/account/test/confirmEmail.spec.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/confirmEmail.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/confirmEmail.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/account/test/confirmEmail.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -31,7 +31,9 @@ it(\"renders missing confirm token\", async () => {\n   replaceHistoryLocation(\"http://localhost/account/email/confirm\");\n   const { root } = await createTestRenderer();\n   await waitForElement(() => within(root).getByTestID(\"invalid-link\"));\n+\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"renders form\", async () => {\n@@ -57,6 +59,7 @@ it(\"renders form\", async () => {\n     );\n   });\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n   restMock.verify();\n });\n \n@@ -98,6 +101,7 @@ it(\"renders error from server\", async () => {\n       );\n     });\n     restMock.verify();\n+    expect(await within(root).axe()).toHaveNoViolations();\n   }\n });\n "
    },
    {
      "sha": "a5d564b8c0dd368d34b5e59a11916d9ad09304f6",
      "filename": "src/core/client/account/test/resetPassword.spec.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/resetPassword.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/resetPassword.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/account/test/resetPassword.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -32,6 +32,7 @@ it(\"renders missing reset token\", async () => {\n   const { root } = await createTestRenderer();\n   await waitForElement(() => within(root).getByTestID(\"invalid-link\"));\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"renders form\", async () => {\n@@ -57,6 +58,7 @@ it(\"renders form\", async () => {\n     );\n   });\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n   restMock.verify();\n });\n \n@@ -98,6 +100,7 @@ it(\"renders error from server\", async () => {\n       );\n     });\n     restMock.verify();\n+    expect(await within(root).axe()).toHaveNoViolations();\n   }\n });\n "
    },
    {
      "sha": "e4c69b94d8be54b37c4a850b471cdfd793f7a1e8",
      "filename": "src/core/client/account/test/unsubscribeNotifications.spec.tsx",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/unsubscribeNotifications.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/account/test/unsubscribeNotifications.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/account/test/unsubscribeNotifications.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -32,6 +32,7 @@ it(\"renders missing confirm token\", async () => {\n   const { root } = await createTestRenderer();\n   await waitForElement(() => within(root).getByTestID(\"invalid-link\"));\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"renders form\", async () => {\n@@ -53,6 +54,7 @@ it(\"renders form\", async () => {\n     await waitForElement(() => within(root).getByTestID(\"unsubscribe-form\"));\n   });\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n   restMock.verify();\n });\n \n@@ -93,6 +95,7 @@ it(\"renders error from server\", async () => {\n       );\n     });\n     restMock.verify();\n+    expect(await within(root).axe()).toHaveNoViolations();\n   }\n });\n "
    },
    {
      "sha": "be5c2b0d6fe908504364e1713ee19dd441e7a211",
      "filename": "src/core/client/auth/test/addEmailAddress.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/addEmailAddress.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/addEmailAddress.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/addEmailAddress.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -68,6 +68,7 @@ it(\"renders addEmailAddress view\", async () => {\n       expect(toJSON(root)).toMatchSnapshot();\n     });\n   });\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"shows error when submitting empty form\", async () => {"
    },
    {
      "sha": "b3fba354446d10365c0f51705acc5f1c55a69fcf",
      "filename": "src/core/client/auth/test/createPassword.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/createPassword.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/createPassword.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/createPassword.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -60,6 +60,7 @@ async function createTestRenderer(\n it(\"renders createPassword view\", async () => {\n   const { root } = await createTestRenderer();\n   expect(toJSON(root)).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"shows error when submitting empty form\", async () => {"
    },
    {
      "sha": "b5da984c70cdd8e11adfc6697698b32781f075c2",
      "filename": "src/core/client/auth/test/createUsername.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/createUsername.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/createUsername.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/createUsername.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -58,6 +58,7 @@ async function createTestRenderer(\n it(\"renders createUsername view\", async () => {\n   const { root } = await createTestRenderer();\n   expect(toJSON(root)).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"shows error when submitting empty form\", async () => {"
    },
    {
      "sha": "f287709269455227214256fe327b7ad7c9e371f7",
      "filename": "src/core/client/auth/test/forgotPassword.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/forgotPassword.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/forgotPassword.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/forgotPassword.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -64,6 +64,7 @@ afterEach(async () => {\n it(\"renders forgot password view\", async () => {\n   const { testRenderer } = await createTestRenderer();\n   expect(testRenderer.toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });\n \n it(\"shows error when submitting empty form\", async () => {"
    },
    {
      "sha": "9d56b10efb5b869c8430bb522c4cebe276347cb7",
      "filename": "src/core/client/auth/test/signIn.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/signIn.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/signIn.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/signIn.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -58,6 +58,7 @@ async function createTestRenderer(\n it(\"renders sign in view\", async () => {\n   const { testRenderer } = await createTestRenderer();\n   expect(testRenderer.toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });\n \n it(\"renders sign in view with error\", async () => {"
    },
    {
      "sha": "3da11a7b80103ae89713da4e88afe0437fa1cd47",
      "filename": "src/core/client/auth/test/signUp.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/signUp.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/auth/test/signUp.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/auth/test/signUp.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -53,6 +53,7 @@ async function createTestRenderer(customResolver: any = {}) {\n it(\"renders sign up form\", async () => {\n   const { testRenderer } = await createTestRenderer();\n   expect(testRenderer.toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });\n \n it(\"shows error when submitting empty form\", async () => {"
    },
    {
      "sha": "c156a1bc1a8a1f9ba22ae78aa441400be44cc887",
      "filename": "src/core/client/framework/testHelpers/denormalize.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 7,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/denormalize.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/denormalize.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/denormalize.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -48,7 +48,7 @@ export function denormalizeComments(commentList: Array<Fixture<GQLComment>>) {\n }\n \n export function denormalizeStory(story: Fixture<GQLStory>) {\n-  const commentNodes =\n+  const commentEdges =\n     (story.comments &&\n       story.comments.edges &&\n       story.comments.edges.map((edge: any) => ({\n@@ -61,20 +61,21 @@ export function denormalizeStory(story: Fixture<GQLStory>) {\n   };\n   if (commentsPageInfo.endCursor === undefined) {\n     commentsPageInfo.endCursor =\n-      commentNodes.length > 0\n-        ? commentNodes[commentNodes.length - 1].node.createdAt\n+      commentEdges.length > 0\n+        ? commentEdges[commentEdges.length - 1].node.createdAt\n         : null;\n   }\n \n-  const featuredCommentsCount = commentNodes.filter(\n-    n => n.tags && n.tags.some((t: GQLTag) => t.code === GQLTAG.FEATURED)\n+  const featuredCommentsCount = commentEdges.filter(\n+    e =>\n+      e.node.tags && e.node.tags.some((t: GQLTag) => t.code === GQLTAG.FEATURED)\n   ).length;\n   return createFixture<GQLStory>({\n     ...story,\n-    comments: { edges: commentNodes, pageInfo: commentsPageInfo },\n+    comments: { edges: commentEdges, pageInfo: commentsPageInfo },\n     commentCounts: {\n       ...story.commentCounts,\n-      totalPublished: commentNodes.length,\n+      totalPublished: commentEdges.length,\n       tags: {\n         ...(story.commentCounts && story.commentCounts.tags),\n         FEATURED: featuredCommentsCount,"
    },
    {
      "sha": "ad2647b4f734955906cb8cbd0ef332b8edadeccb",
      "filename": "src/core/client/framework/testHelpers/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/index.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -46,3 +46,4 @@ export {\n   default as overwriteQueryResolver,\n   createQueryResolverOverwrite,\n } from \"./overwriteQueryResolver\";\n+export { default as toHTML } from \"./toHTML\";"
    },
    {
      "sha": "452ea3a539b8fbe2bb5bd474f38cd1c409e97897",
      "filename": "src/core/client/framework/testHelpers/toHTML.ts",
      "status": "added",
      "additions": 89,
      "deletions": 0,
      "changes": 89,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/toHTML.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/toHTML.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/toHTML.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -0,0 +1,89 @@\n+import { stripIndent } from \"common-tags\";\n+import prettier from \"prettier\";\n+import { ReactTestInstance } from \"react-test-renderer\";\n+\n+import toJSON, { ReactTestRendererNode } from \"./toJSON\";\n+\n+function convertPropertyToString(prop: string, value: any): string {\n+  let propOut = prop;\n+  let valueOut = \"\";\n+\n+  if (propOut === \"dangerouslySetInnerHTML\") {\n+    return \"\";\n+  }\n+\n+  // React uses `htmlFor` instead of `for` because of js restrictions.\n+  if (propOut === \"htmlFor\") {\n+    propOut = \"for\";\n+  }\n+\n+  switch (typeof value) {\n+    case \"function\":\n+      valueOut = \"[Function]\";\n+      break;\n+    case \"string\":\n+      valueOut = value;\n+      break;\n+    case \"undefined\":\n+      valueOut = propOut;\n+      return \"\";\n+    case \"boolean\":\n+      // Usually true means the property has been set without a value\n+      // and false the property is not set.\n+      // Exception: aria-labels need to be set to  \"true\" / \"false\".\n+      if (!prop.startsWith(\"aria-\")) {\n+        return value ? propOut : \"\";\n+      }\n+    // fall through\n+    default:\n+      valueOut = JSON.stringify(value);\n+  }\n+  valueOut = valueOut.replace('\"', \"&quot;\");\n+  return `${propOut}=\"${valueOut}\"`;\n+}\n+\n+function convertJSONToHTML(\n+  node: ReactTestRendererNode | ReactTestRendererNode[]\n+): string {\n+  if (typeof node === \"string\") {\n+    return node;\n+  }\n+  if (Array.isArray(node)) {\n+    return node.map(c => convertJSONToHTML(c)).join(\"\\n\");\n+  }\n+\n+  const props = Object.keys(node.props)\n+    .map(k => convertPropertyToString(k, node.props[k]))\n+    .join(\" \");\n+\n+  let innerHTML = \"\";\n+  if (\"dangerouslySetInnerHTML\" in node.props) {\n+    innerHTML = node.props.dangerouslySetInnerHTML.__html;\n+  } else if (node.children) {\n+    innerHTML = convertJSONToHTML(node.children);\n+  }\n+\n+  if (innerHTML === \"\") {\n+    return `<${node.type} ${props} />`;\n+  }\n+  return stripIndent`\n+    <${node.type} ${props}>\n+      ${innerHTML}\n+    </${node.type}>`;\n+}\n+\n+/**\n+ * Turns a ReactTestInstance into its HTML representation.\n+ */\n+export default function toHTML(\n+  inst: ReactTestInstance,\n+  options: { pretty?: boolean } = {}\n+) {\n+  const result = toJSON(inst);\n+  if (result === null) {\n+    return \"\";\n+  }\n+\n+  const output = convertJSONToHTML(result);\n+  return options.pretty ? prettier.format(output, { parser: \"html\" }) : output;\n+}"
    },
    {
      "sha": "1458f76e05022b564615d41a7ec6f74f60c0915f",
      "filename": "src/core/client/framework/testHelpers/toJSON.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/toJSON.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/toJSON.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/toJSON.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -1,12 +1,12 @@\n import { ReactTestInstance } from \"react-test-renderer\";\n \n-interface ReactTestRendererJSON {\n+export interface ReactTestRendererJSON {\n   type: string;\n   props: { [propName: string]: any };\n   children: null | ReactTestRendererNode[];\n   $$typeof?: symbol; // Optional because we add it with defineProperty().\n }\n-type ReactTestRendererNode = ReactTestRendererJSON | string;\n+export type ReactTestRendererNode = ReactTestRendererJSON | string;\n \n export function toJSONRecursive(\n   inst: ReactTestInstance"
    },
    {
      "sha": "0e9be557bc875d142729027f8cc1f6fefeca1744",
      "filename": "src/core/client/framework/testHelpers/within.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 1,
      "changes": 15,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/within.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/framework/testHelpers/within.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/framework/testHelpers/within.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -1,3 +1,4 @@\n+import { axe } from \"jest-axe\";\n import { ReactTestInstance } from \"react-test-renderer\";\n \n import { getByID, queryByID } from \"./byID\";\n@@ -22,6 +23,7 @@ import {\n   queryByType,\n   queryParentByType,\n } from \"./byType\";\n+import toHTML from \"./toHTML\";\n import toJSON from \"./toJSON\";\n \n type Func0<R> = () => R;\n@@ -68,6 +70,17 @@ export default function within(container: ReactTestInstance) {\n     queryByType: applyContainer(container, queryByType),\n     queryParentByType: applyContainer(container, queryParentByType),\n     queryAllByType: applyContainer(container, queryAllByType),\n-    toJSON: () => toJSON(container),\n+    toJSON: applyContainer(container, toJSON),\n+    toHTML: applyContainer(container, toHTML),\n+    /**\n+     * Check for some accessibility violations\n+     *\n+     * Example use:\n+     * `expect(await within(container).axe()).toHaveNoViolations();`\n+     */\n+    axe: () => axe(toHTML(container)),\n+    /** Output the html representation of the container */\n+    // eslint-disable-next-line no-console\n+    debug: () => console.log(toHTML(container, { pretty: true })),\n   };\n }"
    },
    {
      "sha": "6d4fd6d20a2f4bbb06b785e4e9dc5946c02fcfc5",
      "filename": "src/core/client/stream/test/comments/featured/__snapshots__/renderFeaturedStream.spec.tsx.snap",
      "status": "modified",
      "additions": 70,
      "deletions": 1,
      "changes": 71,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/featured/__snapshots__/renderFeaturedStream.spec.tsx.snap",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/featured/__snapshots__/renderFeaturedStream.spec.tsx.snap",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/featured/__snapshots__/renderFeaturedStream.spec.tsx.snap?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -253,6 +253,75 @@ exports[`renders comment stream 1`] = `\n               className=\"TabBar-root TabBar-secondary coral coral-tabBarSecondary coral-tabBarComments StreamContainer-tabBarRoot\"\n               role=\"tablist\"\n             >\n+              <div\n+                className=\"StreamContainer-featuredCommentsTabContainer\"\n+              >\n+                <li\n+                  className=\"Tab-root\"\n+                  id=\"tab-FEATURED_COMMENTS\"\n+                  role=\"presentation\"\n+                >\n+                  <button\n+                    aria-controls=\"tabPane-FEATURED_COMMENTS\"\n+                    aria-selected={true}\n+                    className=\"BaseButton-root Tab-button Tab-secondary StreamContainer-featuredCommentsTabButton Tab-active StreamContainer-fixedTab coral coral-tabBarSecondary-tab coral-tabBarComments-featured StreamContainer-featuredCommentsTab\"\n+                    onBlur={[Function]}\n+                    onClick={[Function]}\n+                    onFocus={[Function]}\n+                    onMouseOut={[Function]}\n+                    onMouseOver={[Function]}\n+                    onTouchEnd={[Function]}\n+                    role=\"tab\"\n+                    type=\"button\"\n+                  >\n+                    <div\n+                      className=\"Box-root Flex-root Flex-flex Flex-alignCenter gutter Flex-spacing-1\"\n+                    >\n+                      <span>\n+                        Featured\n+                      </span>\n+                      <span\n+                        className=\"Counter-root Counter-colorPrimary Counter-sizeSmall coral coral-counter\"\n+                        data-testid=\"comments-featuredCount\"\n+                      >\n+                        <span\n+                          className=\"Counter-text\"\n+                        >\n+                          2\n+                        </span>\n+                      </span>\n+                    </div>\n+                  </button>\n+                </li>\n+                <div\n+                  className=\"Popover-root Tooltip-root StreamContainer-featuredCommentsInfo coral coral-tabBarComments-featuredTooltip\"\n+                >\n+                  <button\n+                    aria-label=\"Toggle featured comments tooltip\"\n+                    className=\"BaseButton-root TooltipButton-button\"\n+                    onBlur={[Function]}\n+                    onClick={[Function]}\n+                    onFocus={[Function]}\n+                    onMouseOut={[Function]}\n+                    onMouseOver={[Function]}\n+                    onTouchEnd={[Function]}\n+                    type=\"button\"\n+                  >\n+                    <i\n+                      aria-hidden=\"true\"\n+                      className=\"Icon-root Icon-sm Icon-colorPrimary\"\n+                    >\n+                      info\n+                    </i>\n+                  </button>\n+                  <div\n+                    aria-hidden={true}\n+                    aria-labelledby=\"comments-featuredCommentPopover-ariainfo\"\n+                    id=\"comments-featuredCommentPopover\"\n+                    role=\"dialog\"\n+                  />\n+                </div>\n+              </div>\n               <li\n                 className=\"Tab-root\"\n                 id=\"tab-ALL_COMMENTS\"\n@@ -261,7 +330,7 @@ exports[`renders comment stream 1`] = `\n                 <button\n                   aria-controls=\"tabPane-ALL_COMMENTS\"\n                   aria-selected={false}\n-                  className=\"BaseButton-root Tab-button Tab-secondary coral coral-tabBarSecondary-tab coral-tabBarComments-allComments\"\n+                  className=\"BaseButton-root Tab-button Tab-secondary StreamContainer-fixedTab coral coral-tabBarSecondary-tab coral-tabBarComments-allComments\"\n                   onBlur={[Function]}\n                   onClick={[Function]}\n                   onFocus={[Function]}"
    },
    {
      "sha": "6774d23fc7e247a13089570eea0c4024f735886a",
      "filename": "src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/featured/renderFeaturedStream.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -53,4 +53,5 @@ it(\"renders comment stream\", async () => {\n     within(testRenderer.root).getByTestID(\"comments-featuredComments-log\")\n   );\n   expect(within(testRenderer.root).toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });"
    },
    {
      "sha": "1b41857d1a97258df65781f735061a22488abbd3",
      "filename": "src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/permalink/permalinkView.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -93,6 +93,7 @@ it(\"renders permalink view\", async () => {\n     within(testRenderer.root).getByTestID(\"current-tab-pane\")\n   );\n   expect(within(tabPane).toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });\n \n it(\"show all comments\", async () => {"
    },
    {
      "sha": "f29e98d1ab97cb965ca8866666bc8682bdde44c2",
      "filename": "src/core/client/stream/test/comments/permalink/permalinkViewPostReply.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/permalink/permalinkViewPostReply.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/permalink/permalinkViewPostReply.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/permalink/permalinkViewPostReply.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -125,6 +125,8 @@ it(\"post a reply\", async () => {\n     }),\n   });\n \n+  expect(await within(form).axe()).toHaveNoViolations();\n+\n   // Write reply .\n   act(() => rte.props.onChange({ html: \"<b>Hello world!</b>\" }));\n   act(() => {"
    },
    {
      "sha": "d8f914b61176343465aa6e46eb6caf4f47816aa0",
      "filename": "src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/editComment.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/editComment.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -100,6 +100,7 @@ it(\"edit a comment\", async () => {\n       .props.onClick()\n   );\n   expect(within(comment).toJSON()).toMatchSnapshot(\"edit form\");\n+  expect(await within(comment).axe()).toHaveNoViolations();\n \n   act(() =>\n     testRenderer.root"
    },
    {
      "sha": "d7a09250fc765ba3168922d3bd47792537a89ea5",
      "filename": "src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/loadMore.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/loadMore.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -119,6 +119,8 @@ it(\"loads more comments\", async () => {\n     within(testRenderer.root).getByTestID(\"comments-allComments-log\")\n   );\n \n+  expect(await within(streamLog).axe()).toHaveNoViolations();\n+\n   // Get amount of comments before.\n   const commentsBefore = within(streamLog).getAllByTestID(/^comment-/).length;\n "
    },
    {
      "sha": "7757d56ef10aa68fb7a599913999f9d75e02f216",
      "filename": "src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderReplies.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -42,4 +42,5 @@ it(\"renders reply list\", async () => {\n   );\n   // Wait for loading.\n   expect(within(commentReplyList).toJSON()).toMatchSnapshot();\n+  expect(await within(commentReplyList).axe()).toHaveNoViolations();\n });"
    },
    {
      "sha": "9ee057d3e77f05bb4575d6b246aaacd28b05c719",
      "filename": "src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/comments/stream/renderStream.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/comments/stream/renderStream.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -45,4 +45,5 @@ it(\"renders comment stream\", async () => {\n     within(testRenderer.root).getByTestID(\"comments-allComments-log\")\n   );\n   expect(within(testRenderer.root).toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });"
    },
    {
      "sha": "384a2c3ba17d276980d7d6c5693dc66b2ec92d6e",
      "filename": "src/core/client/stream/test/configure/renderConfigure.spec.tsx",
      "status": "modified",
      "additions": 4,
      "deletions": 8,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/configure/renderConfigure.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/configure/renderConfigure.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/configure/renderConfigure.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -1,6 +1,6 @@\n import sinon from \"sinon\";\n \n-import { act, wait, waitForElement, within } from \"coral-framework/testHelpers\";\n+import { act, waitForElement, within } from \"coral-framework/testHelpers\";\n \n import { moderators, settings, stories } from \"../fixtures\";\n import create from \"./create\";\n@@ -42,11 +42,7 @@ async function createTestRenderer(\n }\n \n it(\"renders configure\", async () => {\n-  const { tabPane } = await createTestRenderer();\n-\n-  await act(async () => {\n-    await wait(() => {\n-      expect(within(tabPane).toJSON()).toMatchSnapshot();\n-    });\n-  });\n+  const { tabPane, testRenderer } = await createTestRenderer();\n+  expect(within(tabPane).toJSON()).toMatchSnapshot();\n+  expect(await within(testRenderer.root).axe()).toHaveNoViolations();\n });"
    },
    {
      "sha": "3bd1469b9ebd74a17d1843d0cbe199d120541c30",
      "filename": "src/core/client/stream/test/profile/account.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/account.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/account.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/account.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -67,6 +67,7 @@ it(\"renders the empty settings pane\", async () => {\n     testRenderer: { root },\n   } = await createTestRenderer();\n   expect(within(root).toJSON()).toMatchSnapshot();\n+  expect(await within(root).axe()).toHaveNoViolations();\n });\n \n it(\"doesn't show the change password pane when local auth is disabled\", async () => {\n@@ -112,6 +113,7 @@ it(\"render password change form\", async () => {\n   const newPassword = await waitForElement(() =>\n     within(form).getByID(\"newPassword\", { exact: false })\n   );\n+  expect(await within(changePassword).axe()).toHaveNoViolations();\n \n   // Submit an empty form.\n   act(() => {"
    },
    {
      "sha": "01d1eac3a2601f22851d334cb7d49926d4f602d9",
      "filename": "src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "status": "modified",
      "additions": 5,
      "deletions": 4,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/changeEmail.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/changeEmail.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -9,7 +9,7 @@ import {\n   within,\n } from \"coral-framework/testHelpers\";\n \n-import { baseUser, settings, stories } from \"../fixtures\";\n+import { settings, stories, userWithEmail } from \"../fixtures\";\n import create from \"./create\";\n \n const story = stories[0];\n@@ -23,7 +23,7 @@ async function createTestRenderer(\n       createResolversStub<GQLResolver>({\n         Query: {\n           settings: () => settings,\n-          viewer: () => baseUser,\n+          viewer: () => userWithEmail,\n           stream: () => story,\n         },\n       }),\n@@ -49,7 +49,7 @@ describe(\"change email form\", () => {\n     const setup = await createTestRenderer({\n       resolvers: createResolversStub<GQLResolver>({\n         Query: {\n-          viewer: () => baseUser,\n+          viewer: () => userWithEmail,\n         },\n         Mutation: {\n           updateEmail: ({ variables }) => {\n@@ -58,7 +58,7 @@ describe(\"change email form\", () => {\n             });\n             return {\n               user: {\n-                ...baseUser,\n+                ...userWithEmail,\n                 email: \"updated_email@test.com\",\n               },\n             };\n@@ -77,6 +77,7 @@ describe(\"change email form\", () => {\n     act(() => {\n       editButton.props.onClick();\n     });\n+    expect(await within(changeEmail).axe()).toHaveNoViolations();\n     const form = within(changeEmail).getByType(\"form\");\n     act(() => {\n       form.props.onSubmit();"
    },
    {
      "sha": "ccd0e0a9439f66935778b17989bb144997863b6a",
      "filename": "src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "status": "modified",
      "additions": 7,
      "deletions": 2,
      "changes": 9,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/changeUsername.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/changeUsername.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -76,7 +76,9 @@ describe(\"with recently changed username\", () => {\n     const form = within(changeUsername).queryByType(\"form\");\n     const message = within(changeUsername).queryByText(\n       \"Your username has been changed in the last 14 days\",\n-      { exact: false }\n+      {\n+        exact: false,\n+      }\n     );\n     expect(form).toBeNull();\n     expect(message).toBeTruthy();\n@@ -106,10 +108,13 @@ describe(\"with new username\", () => {\n     act(() => {\n       editButton.props.onClick();\n     });\n+    expect(await within(changeUsername).axe()).toHaveNoViolations();\n     within(changeUsername).getByType(\"form\");\n     const message = within(changeUsername).queryByText(\n       \"Your username has been changed in the last 14 days\",\n-      { exact: false }\n+      {\n+        exact: false,\n+      }\n     );\n     expect(message).toBeNull();\n   });"
    },
    {
      "sha": "0aca018130c52162fde4388093a3b40f9a0b4135",
      "filename": "src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/deleteAccount.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/deleteAccount.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -109,6 +109,8 @@ describe(\"delete account steps\", () => {\n         nextButton.props.onClick();\n       });\n     }\n+\n+    expect(await within(modal).axe()).toHaveNoViolations();\n     const form = within(modal).getByType(\"form\");\n     const confirm = within(modal).getByTestID(\"confirm-page-confirmation\");\n     const password = within(modal).getByTestID(\"confirm-page-password\");"
    },
    {
      "sha": "5f2ab7f682ccf1697ba1305052a1e3856316c0a2",
      "filename": "src/core/client/stream/test/profile/myComments.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/myComments.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/myComments.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/myComments.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -87,6 +87,7 @@ it(\"renders profile\", async () => {\n     within(testRenderer.root).getByTestID(\"profile-commentHistory\")\n   );\n   expect(within(commentHistory).toJSON()).toMatchSnapshot();\n+  expect(await within(commentHistory).axe()).toHaveNoViolations();\n });\n \n it(\"loads more comments\", async () => {"
    },
    {
      "sha": "51bfebcfd59f7feb29d328dca8c3fb60d068faa0",
      "filename": "src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/stream/test/profile/notificationSettings.spec.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/stream/test/profile/notificationSettings.spec.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -73,6 +73,7 @@ it(\"render notifications form\", async () => {\n   const container = await waitForElement(() =>\n     within(testRenderer.root).getByTestID(\"profile-account-notifications\")\n   );\n+  expect(await within(container).axe()).toHaveNoViolations();\n   const form = within(container).getByType(\"form\");\n \n   // Get the form fields."
    },
    {
      "sha": "1de7d463190c4bd160418eb3d142ecce9dda9dce",
      "filename": "src/core/client/test/setupTestFramework.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/test/setupTestFramework.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/test/setupTestFramework.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/test/setupTestFramework.ts?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -1,3 +1,5 @@\n+import { toHaveNoViolations } from \"jest-axe\";\n+\n import expectAndFail from \"./expectAndFail\";\n \n // Automatically unmock console.\n@@ -17,3 +19,5 @@ process.on(\"unhandledRejection\", err => {\n   // eslint-disable-next-line no-console\n   console.error(err);\n });\n+\n+expect.extend(toHaveNoViolations);"
    },
    {
      "sha": "a1c936835d83c9366e0b261e49b10f23e276d72e",
      "filename": "src/core/client/ui/components/Icon/Icon.tsx",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/ui/components/Icon/Icon.tsx",
      "raw_url": "https://github.com/coralproject/talk/raw/7615dc2aaf6caa64bf720ed349407120d8928f5e/src/core/client/ui/components/Icon/Icon.tsx",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/client/ui/components/Icon/Icon.tsx?ref=7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "patch": "@@ -43,7 +43,7 @@ const Icon: FunctionComponent<Props> = props => {\n   return (\n     <i\n       className={rootClassName}\n-      aria-hidden=\"true\"\n+      aria-hidden={rest[\"aria-label\"] ? \"false\" : \"true\"}\n       {...rest}\n       ref={forwardRef}\n     />"
    }
  ]
}
