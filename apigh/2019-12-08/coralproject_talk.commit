{
  "sha": "88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6ODhmNmNhZDg0MGExYzM1ZWExMmJhZTRjZGRhZjVhNTk5NTJiYmI0Mw==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2019-12-06T18:46:54Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-12-06T18:46:54Z"
    },
    "message": "fix: resolved issue with incorrect moderation url being generated (#2743)",
    "tree": {
      "sha": "97d84a4ef64facfc62338417fd624007267a7bfa",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/97d84a4ef64facfc62338417fd624007267a7bfa"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6qIeCRBK7hj4Ov3rIwAAdHIIAD/dglwugnU/n/N9PtwZJy5m\n4nNrRYj9kdjG3GTqF8yKRAejKEXArXmUfJgLZJHEDI1Z3I423LEA3Rf7MmiC5e7F\n31YnQvtUOQq9eH/cz34Sdw3/OCW4eIsi2iNCFjw1Jsdh3iYK2S7qv7gVaDETP1gk\n3HYuGh304JJ9DCNesi9eRT4brAJxKA9Klit1BckIhj+ybNjZt9ypXVMZ3ahp6c/W\nrLA/uHEybuAac/lztz8EBVvl9tms8JVX4Hbgz+uCBq/kXssEUVnK6E39F4UUrYPS\nAT4apFdBBdOnFyQFDjEIIbFtiscjobg7kjQnp/6rCg9+YuT/3vrnYxyRqe6pKjY=\n=QKHb\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 97d84a4ef64facfc62338417fd624007267a7bfa\nparent 7615dc2aaf6caa64bf720ed349407120d8928f5e\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1575658014 +0000\ncommitter GitHub <noreply@github.com> 1575658014 +0000\n\nfix: resolved issue with incorrect moderation url being generated (#2743)\n\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
  "html_url": "https://github.com/coralproject/talk/commit/88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "url": "https://api.github.com/repos/coralproject/talk/commits/7615dc2aaf6caa64bf720ed349407120d8928f5e",
      "html_url": "https://github.com/coralproject/talk/commit/7615dc2aaf6caa64bf720ed349407120d8928f5e"
    }
  ],
  "stats": {
    "total": 137,
    "additions": 82,
    "deletions": 55
  },
  "files": [
    {
      "sha": "32402f85956a7e29c7aee4f773ecad8deca8ea1a",
      "filename": "src/core/server/app/url.ts",
      "status": "modified",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/coralproject/talk/blob/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/app/url.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/app/url.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/url.ts?ref=88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
      "patch": "@@ -29,6 +29,24 @@ export function constructTenantURL(\n   return url.href;\n }\n \n+export function reconstructTenantURL(\n+  config: Config,\n+  tenant: Pick<Tenant, \"domain\">,\n+  req?: Request,\n+  path = \"/\"\n+) {\n+  // If the request is available, then prefer it over building from the tenant\n+  // as the tenant does not include the port number. This should only really\n+  // be a problem if the graph API is called internally.\n+  if (req) {\n+    return reconstructURL(req, path);\n+  }\n+\n+  // Note that when constructing the callback url with the tenant, the port\n+  // information is lost.\n+  return constructTenantURL(config, tenant, path);\n+}\n+\n export function doesRequireSchemePrefixing(url: string) {\n   return !url.startsWith(\"http\");\n }"
    },
    {
      "sha": "a9e16d650fcac2ce89fd5dcb23b515a5942edd75",
      "filename": "src/core/server/graph/tenant/context.ts",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/graph/tenant/context.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/graph/tenant/context.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/tenant/context.ts?ref=88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
      "patch": "@@ -61,7 +61,11 @@ export default class TenantContext extends CommonContext {\n     this.clientID = options.clientID;\n     this.publisher = createPublisher({\n       pubsub: this.pubsub,\n-      slackPublisher: createSlackPublisher(this.mongo, this.tenant),\n+      slackPublisher: createSlackPublisher(\n+        this.mongo,\n+        this.config,\n+        this.tenant\n+      ),\n       notifierQueue,\n       tenantID: this.tenant.id,\n       clientID: this.clientID,"
    },
    {
      "sha": "23c914c5c3144ac5a207ac814ec10066aca80bf6",
      "filename": "src/core/server/graph/tenant/resolvers/util.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 13,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/graph/tenant/resolvers/util.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/graph/tenant/resolvers/util.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/tenant/resolvers/util.ts?ref=88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
      "patch": "@@ -2,7 +2,7 @@ import { GraphQLResolveInfo } from \"graphql\";\n import graphqlFields from \"graphql-fields\";\n import { pull } from \"lodash\";\n \n-import { constructTenantURL, reconstructURL } from \"coral-server/app/url\";\n+import { reconstructTenantURL } from \"coral-server/app/url\";\n \n import TenantContext from \"../context\";\n \n@@ -16,16 +16,6 @@ export function getRequestedFields<T>(info: GraphQLResolveInfo) {\n }\n \n export function reconstructTenantURLResolver<T = any>(path: string) {\n-  return (parent: T, args: {}, ctx: TenantContext) => {\n-    // If the request is available, then prefer it over building from the tenant\n-    // as the tenant does not include the port number. This should only really\n-    // be a problem if the graph API is called internally.\n-    if (ctx.req) {\n-      return reconstructURL(ctx.req, path);\n-    }\n-\n-    // Note that when constructing the callback url with the tenant, the port\n-    // information is lost.\n-    return constructTenantURL(ctx.config, ctx.tenant, path);\n-  };\n+  return (parent: T, args: {}, ctx: TenantContext) =>\n+    reconstructTenantURL(ctx.config, ctx.tenant, ctx.req, path);\n }"
    },
    {
      "sha": "6122b0d99b35861994c4f88f09cf20fbd7808512",
      "filename": "src/core/server/services/slack/context.ts",
      "status": "modified",
      "additions": 16,
      "deletions": 7,
      "changes": 23,
      "blob_url": "https://github.com/coralproject/talk/blob/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/services/slack/context.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/services/slack/context.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/slack/context.ts?ref=88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
      "patch": "@@ -2,44 +2,53 @@ import Logger from \"bunyan\";\n import DataLoader from \"dataloader\";\n import { Db } from \"mongodb\";\n \n+import { Config } from \"coral-server/config\";\n import { Comment, retrieveManyComments } from \"coral-server/models/comment\";\n import { retrieveManyStories, Story } from \"coral-server/models/story\";\n+import { Tenant } from \"coral-server/models/tenant\";\n import { retrieveManyUsers, User } from \"coral-server/models/user\";\n+import { Request } from \"coral-server/types/express\";\n \n interface Options {\n   mongo: Db;\n-  tenantID: string;\n+  tenant: Pick<Tenant, \"id\" | \"domain\">;\n+  config: Config;\n+  req?: Request;\n }\n \n class SlackContext {\n   public readonly mongo: Db;\n-  public readonly tenantID: string;\n+  public readonly tenant: Pick<Tenant, \"id\" | \"domain\">;\n   public readonly logger: Logger;\n+  public readonly config: Config;\n+  public readonly req?: Request;\n \n   public readonly comments: DataLoader<\n     string,\n     Readonly<Comment> | null\n   > = new DataLoader(commentIDs =>\n-    retrieveManyComments(this.mongo, this.tenantID, commentIDs)\n+    retrieveManyComments(this.mongo, this.tenant.id, commentIDs)\n   );\n \n   public readonly stories: DataLoader<\n     string,\n     Readonly<Story> | null\n   > = new DataLoader(storyIDs =>\n-    retrieveManyStories(this.mongo, this.tenantID, storyIDs)\n+    retrieveManyStories(this.mongo, this.tenant.id, storyIDs)\n   );\n \n   public readonly users: DataLoader<\n     string,\n     Readonly<User> | null\n   > = new DataLoader(userIDs =>\n-    retrieveManyUsers(this.mongo, this.tenantID, userIDs)\n+    retrieveManyUsers(this.mongo, this.tenant.id, userIDs)\n   );\n \n-  constructor({ mongo, tenantID }: Options) {\n+  constructor({ mongo, tenant, config, req }: Options) {\n     this.mongo = mongo;\n-    this.tenantID = tenantID;\n+    this.tenant = tenant;\n+    this.config = config;\n+    this.req = req;\n   }\n }\n "
    },
    {
      "sha": "68d1c7a7fef16d0bdd93bac4f92de7a7013e3be5",
      "filename": "src/core/server/services/slack/publisher.ts",
      "status": "modified",
      "additions": 40,
      "deletions": 34,
      "changes": 74,
      "blob_url": "https://github.com/coralproject/talk/blob/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/services/slack/publisher.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/88f6cad840a1c35ea12bae4cddaf5a59952bbb43/src/core/server/services/slack/publisher.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/slack/publisher.ts?ref=88f6cad840a1c35ea12bae4cddaf5a59952bbb43",
      "patch": "@@ -1,3 +1,7 @@\n+import { Db } from \"mongodb\";\n+\n+import { reconstructTenantURL } from \"coral-server/app/url\";\n+import { Config } from \"coral-server/config\";\n import { CommentCreatedInput } from \"coral-server/graph/tenant/resolvers/Subscription/commentCreated\";\n import { CommentEnteredModerationQueueInput } from \"coral-server/graph/tenant/resolvers/Subscription/commentEnteredModerationQueue\";\n import { CommentFeaturedInput } from \"coral-server/graph/tenant/resolvers/Subscription/commentFeatured\";\n@@ -7,11 +11,15 @@ import { CommentReplyCreatedInput } from \"coral-server/graph/tenant/resolvers/Su\n import { CommentStatusUpdatedInput } from \"coral-server/graph/tenant/resolvers/Subscription/commentStatusUpdated\";\n import { SUBSCRIPTION_CHANNELS } from \"coral-server/graph/tenant/resolvers/Subscription/types\";\n import logger from \"coral-server/logger\";\n+import { getLatestRevision } from \"coral-server/models/comment/helpers\";\n+import {\n+  getStoryTitle,\n+  getURLWithCommentID,\n+} from \"coral-server/models/story/helpers\";\n+import { Tenant } from \"coral-server/models/tenant\";\n \n import { GQLMODERATION_QUEUE } from \"coral-server/graph/tenant/schema/__generated__/types\";\n \n-import { Tenant } from \"coral-server/models/tenant\";\n-import { Db } from \"mongodb\";\n import SlackContext from \"./context\";\n \n type Payload =\n@@ -55,21 +63,19 @@ function isPending(channel: SUBSCRIPTION_CHANNELS, payload: Payload) {\n   );\n }\n \n-function createModerationLink(rootURL: string, commentID: string) {\n-  return `${rootURL}/admin/moderate/comment/${commentID}`;\n-}\n-\n-function createCommentLink(storyURL: string, commentID: string) {\n-  const urlBuilder = new URL(storyURL);\n-  urlBuilder.searchParams.set(\"commentID\", commentID);\n-  return urlBuilder.href;\n+function createModerationLink(ctx: SlackContext, commentID: string) {\n+  return reconstructTenantURL(\n+    ctx.config,\n+    ctx.tenant,\n+    ctx.req,\n+    `/admin/moderate/comment/${commentID}`\n+  );\n }\n \n async function postCommentToSlack(\n   ctx: SlackContext,\n-  orgURL: string,\n   commentID: string,\n-  webhookURL: string\n+  hookURL: string\n ) {\n   const comment = await ctx.comments.load(commentID);\n   if (comment === null) {\n@@ -84,14 +90,14 @@ async function postCommentToSlack(\n     return;\n   }\n \n-  const storyTitle = story.metadata ? story.metadata.title : \"\";\n-  const commentBody =\n-    comment.revisions.length > 0\n-      ? comment.revisions[comment.revisions.length - 1].body\n-      : \"\";\n+  // Get some properties about the event.\n+  const storyTitle = getStoryTitle(story);\n+  const commentBody = getLatestRevision(comment).body;\n+  const moderateLink = createModerationLink(ctx, commentID);\n+  const commentLink = getURLWithCommentID(story.url, comment.id);\n+\n+  // Replace HTML link breaks with newlines.\n   const body = commentBody.replace(/<br\\/?>/g, \"\\n\");\n-  const moderateLink = createModerationLink(orgURL, comment.id);\n-  const commentLink = createCommentLink(story.url, comment.id);\n \n   const data = {\n     text: `${author.username} commented on: ${storyTitle}`,\n@@ -110,9 +116,7 @@ async function postCommentToSlack(\n           text: `<${moderateLink}|Go to Moderation> | <${commentLink}|See Comment>`,\n         },\n       },\n-      {\n-        type: \"divider\",\n-      },\n+      { type: \"divider\" },\n       {\n         type: \"section\",\n         text: {\n@@ -124,17 +128,17 @@ async function postCommentToSlack(\n   };\n \n   try {\n-    const response = await fetch(webhookURL, {\n+    // Send the post to the Slack URL.\n+    const res = await fetch(hookURL, {\n       method: \"POST\",\n-      cache: \"no-cache\",\n       headers: {\n         \"Content-Type\": \"application/json\",\n       },\n       body: JSON.stringify(data),\n     });\n \n-    if (response.ok) {\n-      logger.error({ response }, \"error sending Slack comment\");\n+    if (!res.ok) {\n+      logger.error({ res }, \"error sending Slack comment\");\n     }\n   } catch (err) {\n     logger.error({ err }, \"error sending Slack comment\");\n@@ -146,7 +150,11 @@ export type SlackPublisher = (\n   payload: Payload\n ) => Promise<void>;\n \n-function createSlackPublisher(mongo: Db, tenant: Tenant): SlackPublisher {\n+function createSlackPublisher(\n+  mongo: Db,\n+  config: Config,\n+  tenant: Tenant\n+): SlackPublisher {\n   if (\n     !tenant.slack ||\n     !tenant.slack.channels ||\n@@ -160,7 +168,7 @@ function createSlackPublisher(mongo: Db, tenant: Tenant): SlackPublisher {\n   const { channels } = tenant.slack;\n \n   return async (channel: SUBSCRIPTION_CHANNELS, payload: Payload) => {\n-    const ctx = new SlackContext({ mongo, tenantID: tenant.id });\n+    const ctx = new SlackContext({ mongo, config, tenant });\n \n     try {\n       const inModeration = enteredModeration(channel, payload);\n@@ -186,19 +194,17 @@ function createSlackPublisher(mongo: Db, tenant: Tenant): SlackPublisher {\n           return;\n         }\n \n-        const orgURL = tenant.organization.url;\n-\n         if (\n           triggers.allComments &&\n           (reported || pending || featured || inModeration)\n         ) {\n-          await postCommentToSlack(ctx, orgURL, commentID, hookURL);\n+          await postCommentToSlack(ctx, commentID, hookURL);\n         } else if (triggers.reportedComments && reported) {\n-          await postCommentToSlack(ctx, orgURL, commentID, hookURL);\n+          await postCommentToSlack(ctx, commentID, hookURL);\n         } else if (triggers.pendingComments && pending) {\n-          await postCommentToSlack(ctx, orgURL, commentID, hookURL);\n+          await postCommentToSlack(ctx, commentID, hookURL);\n         } else if (triggers.featuredComments && featured) {\n-          await postCommentToSlack(ctx, orgURL, commentID, hookURL);\n+          await postCommentToSlack(ctx, commentID, hookURL);\n         }\n       }\n     } catch (err) {"
    }
  ]
}
