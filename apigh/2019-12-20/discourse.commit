{
  "sha": "6ec3d42b16515bf0db1710840318205d8161c039",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODo2ZWMzZDQyYjE2NTE1YmYwZGIxNzEwODQwMzE4MjA1ZDgxNjFjMDM5",
  "commit": {
    "author": {
      "name": "Mark VanLandingham",
      "email": "mark.vanlandingham@discourse.org",
      "date": "2019-12-20T16:37:12Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2019-12-20T16:37:12Z"
    },
    "message": "FEATURE: Allow complex post params from plugin (#8598)",
    "tree": {
      "sha": "7f1fd59f226c487f4427a9b7f9806e8570458c43",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/7f1fd59f226c487f4427a9b7f9806e8570458c43"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/6ec3d42b16515bf0db1710840318205d8161c039",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/Pi4CRBK7hj4Ov3rIwAAdHIIAHj/ELPGnCrELt+xVkOWoyry\nTxKub+fxYWJnYMZto80BKmOhKTexlF1gBMZk5QJAAtkaP9cyX3gWNvPyYWtYzvNr\nXKubROH/NG4rGgJP5XluZA2VVVvktRa27b59kieJ0t7TZXPVG9Om5dTUbU9iqe8R\nuKlfSNUbwvUrNs8mwdzitlRNxKL+MpjuwlW2o2xQe+BmuhwvRvnlaoJrnnPv/DSH\nBDYy0VB8BozX7q/nAx+Ce/jxC083LEKw8KgczyeqCaQZpqFQjtz9dWz//U4HF0d5\nswNXk+mJiw7ErdH5hlMMtWejO8SVpvbvToWjetGdhh0HflbQu+9YVMPy8uqJnig=\n=IA9j\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 7f1fd59f226c487f4427a9b7f9806e8570458c43\nparent 1e4a83cc2a2758639c8ebecc19145f5225baaeeb\nauthor Mark VanLandingham <mark.vanlandingham@discourse.org> 1576859832 -0600\ncommitter GitHub <noreply@github.com> 1576859832 -0600\n\nFEATURE: Allow complex post params from plugin (#8598)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/6ec3d42b16515bf0db1710840318205d8161c039",
  "html_url": "https://github.com/discourse/discourse/commit/6ec3d42b16515bf0db1710840318205d8161c039",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/6ec3d42b16515bf0db1710840318205d8161c039/comments",
  "author": {
    "login": "markvanlan",
    "id": 16214023,
    "node_id": "MDQ6VXNlcjE2MjE0MDIz",
    "avatar_url": "https://avatars3.githubusercontent.com/u/16214023?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/markvanlan",
    "html_url": "https://github.com/markvanlan",
    "followers_url": "https://api.github.com/users/markvanlan/followers",
    "following_url": "https://api.github.com/users/markvanlan/following{/other_user}",
    "gists_url": "https://api.github.com/users/markvanlan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/markvanlan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/markvanlan/subscriptions",
    "organizations_url": "https://api.github.com/users/markvanlan/orgs",
    "repos_url": "https://api.github.com/users/markvanlan/repos",
    "events_url": "https://api.github.com/users/markvanlan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/markvanlan/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "1e4a83cc2a2758639c8ebecc19145f5225baaeeb",
      "url": "https://api.github.com/repos/discourse/discourse/commits/1e4a83cc2a2758639c8ebecc19145f5225baaeeb",
      "html_url": "https://github.com/discourse/discourse/commit/1e4a83cc2a2758639c8ebecc19145f5225baaeeb"
    }
  ],
  "stats": {
    "total": 73,
    "additions": 69,
    "deletions": 4
  },
  "files": [
    {
      "sha": "580d10a9943d2eb296d07dd812ed54640254d3c5",
      "filename": "app/controllers/posts_controller.rb",
      "status": "modified",
      "additions": 11,
      "deletions": 2,
      "changes": 13,
      "blob_url": "https://github.com/discourse/discourse/blob/6ec3d42b16515bf0db1710840318205d8161c039/app/controllers/posts_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/6ec3d42b16515bf0db1710840318205d8161c039/app/controllers/posts_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/posts_controller.rb?ref=6ec3d42b16515bf0db1710840318205d8161c039",
      "patch": "@@ -684,8 +684,17 @@ def create_params\n       :draft_key\n     ]\n \n-    Post.plugin_permitted_create_params.each do |key, plugin|\n-      permitted << key if plugin.enabled?\n+    Post.plugin_permitted_create_params.each do |key, value|\n+      if value[:plugin].enabled?\n+        permitted <<  case value[:type]\n+                      when :string\n+                        key.to_sym\n+                      when :array\n+                        { key => [] }\n+                      when :hash\n+                        { key => {} }\n+        end\n+      end\n     end\n \n     # param munging for WordPress"
    },
    {
      "sha": "958e608df3d8baf633a7444920915758c413071b",
      "filename": "lib/plugin/instance.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/6ec3d42b16515bf0db1710840318205d8161c039/lib/plugin/instance.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/6ec3d42b16515bf0db1710840318205d8161c039/lib/plugin/instance.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/plugin/instance.rb?ref=6ec3d42b16515bf0db1710840318205d8161c039",
      "patch": "@@ -250,9 +250,9 @@ def add_preloaded_topic_list_custom_field(field)\n   end\n \n   # Add a permitted_create_param to Post, respecting if the plugin is enabled\n-  def add_permitted_post_create_param(name)\n+  def add_permitted_post_create_param(name, type = :string)\n     reloadable_patch do |plugin|\n-      ::Post.plugin_permitted_create_params[name] = plugin\n+      ::Post.plugin_permitted_create_params[name] = { plugin: plugin, type: type }\n     end\n   end\n "
    },
    {
      "sha": "24bc394b54963c2ec60cb2e31d2694ef449abb35",
      "filename": "spec/requests/posts_controller_spec.rb",
      "status": "modified",
      "additions": 56,
      "deletions": 0,
      "changes": 56,
      "blob_url": "https://github.com/discourse/discourse/blob/6ec3d42b16515bf0db1710840318205d8161c039/spec/requests/posts_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/6ec3d42b16515bf0db1710840318205d8161c039/spec/requests/posts_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/posts_controller_spec.rb?ref=6ec3d42b16515bf0db1710840318205d8161c039",
      "patch": "@@ -1871,4 +1871,60 @@\n       expect(public_post.custom_fields[Post::NOTICE_ARGS]).to eq(nil)\n     end\n   end\n+\n+  describe Plugin::Instance do\n+    describe '#add_permitted_post_create_param' do\n+      fab!(:user) { Fabricate(:user) }\n+      let(:instance) { Plugin::Instance.new }\n+      let(:request) do\n+        Proc.new {\n+          post \"/posts.json\", params: {\n+            raw: 'this is the test content',\n+            title: 'this is the test title for the topic',\n+            composer_open_duration_msecs: 204,\n+            typing_duration_msecs: 100,\n+            reply_to_post_number: 123,\n+            string_arg: '123',\n+            hash_arg: { key1: 'val' },\n+            array_arg: ['1', '2', '3']\n+          }\n+        }\n+      end\n+\n+      before do\n+        sign_in(user)\n+        SiteSetting.min_first_post_typing_time = 0\n+      end\n+\n+      it 'allows strings to be added' do\n+        request.call\n+        expect(@controller.send(:create_params)).not_to include(string_arg: '123')\n+\n+        instance.add_permitted_post_create_param(:string_arg)\n+        request.call\n+        expect(@controller.send(:create_params)).to include(string_arg: '123')\n+      end\n+\n+      it 'allows hashes to be added' do\n+        instance.add_permitted_post_create_param(:hash_arg)\n+        request.call\n+        expect(@controller.send(:create_params)).not_to include(hash_arg: { key1: 'val' })\n+\n+        instance.add_permitted_post_create_param(:hash_arg, :hash)\n+        request.call\n+        expect(@controller.send(:create_params)).to include(hash_arg: { key1: 'val' })\n+      end\n+\n+      it 'allows strings to be added' do\n+        instance.add_permitted_post_create_param(:array_arg)\n+        request.call\n+        expect(@controller.send(:create_params)).not_to include(array_arg: ['1', '2', '3'])\n+\n+        instance.add_permitted_post_create_param(:array_arg, :array)\n+        request.call\n+        expect(@controller.send(:create_params)).to include(array_arg: ['1', '2', '3'])\n+      end\n+\n+    end\n+  end\n end"
    }
  ]
}
