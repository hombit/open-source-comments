{
  "sha": "eca1c643d5da8583e7a054f83c5b68713944afa8",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplY2ExYzY0M2Q1ZGE4NTgzZTdhMDU0ZjgzYzViNjg3MTM5NDRhZmE4",
  "commit": {
    "author": {
      "name": "Jeff Wong",
      "email": "awole20@gmail.com",
      "date": "2019-12-20T23:22:53Z"
    },
    "committer": {
      "name": "Jeff Wong",
      "email": "awole20@gmail.com",
      "date": "2019-12-20T23:25:21Z"
    },
    "message": "FEATURE: allow TL3 promotions for overturned penalties\n\nRestore tl3 reachability by calculating penalty counts vs unsuspend/unsilence.\n\nOnly count unsuspend or unsilences that have been made by a user other than\nthe Discourse system user.",
    "tree": {
      "sha": "38b426f533f9fce7c9d7ea18f95d2e78815ceb5a",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/38b426f533f9fce7c9d7ea18f95d2e78815ceb5a"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/eca1c643d5da8583e7a054f83c5b68713944afa8",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/eca1c643d5da8583e7a054f83c5b68713944afa8",
  "html_url": "https://github.com/discourse/discourse/commit/eca1c643d5da8583e7a054f83c5b68713944afa8",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/eca1c643d5da8583e7a054f83c5b68713944afa8/comments",
  "author": {
    "login": "featheredtoast",
    "id": 1322534,
    "node_id": "MDQ6VXNlcjEzMjI1MzQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1322534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/featheredtoast",
    "html_url": "https://github.com/featheredtoast",
    "followers_url": "https://api.github.com/users/featheredtoast/followers",
    "following_url": "https://api.github.com/users/featheredtoast/following{/other_user}",
    "gists_url": "https://api.github.com/users/featheredtoast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/featheredtoast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/featheredtoast/subscriptions",
    "organizations_url": "https://api.github.com/users/featheredtoast/orgs",
    "repos_url": "https://api.github.com/users/featheredtoast/repos",
    "events_url": "https://api.github.com/users/featheredtoast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/featheredtoast/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "featheredtoast",
    "id": 1322534,
    "node_id": "MDQ6VXNlcjEzMjI1MzQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1322534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/featheredtoast",
    "html_url": "https://github.com/featheredtoast",
    "followers_url": "https://api.github.com/users/featheredtoast/followers",
    "following_url": "https://api.github.com/users/featheredtoast/following{/other_user}",
    "gists_url": "https://api.github.com/users/featheredtoast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/featheredtoast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/featheredtoast/subscriptions",
    "organizations_url": "https://api.github.com/users/featheredtoast/orgs",
    "repos_url": "https://api.github.com/users/featheredtoast/repos",
    "events_url": "https://api.github.com/users/featheredtoast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/featheredtoast/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "00477d8f88ca8e5dd0ec0488c5d3a25ed6433518",
      "url": "https://api.github.com/repos/discourse/discourse/commits/00477d8f88ca8e5dd0ec0488c5d3a25ed6433518",
      "html_url": "https://github.com/discourse/discourse/commit/00477d8f88ca8e5dd0ec0488c5d3a25ed6433518"
    }
  ],
  "stats": {
    "total": 59,
    "additions": 56,
    "deletions": 3
  },
  "files": [
    {
      "sha": "d40283dbf86aa9afa1b2844b92595cf509b7b57f",
      "filename": "app/models/trust_level3_requirements.rb",
      "status": "modified",
      "additions": 18,
      "deletions": 3,
      "changes": 21,
      "blob_url": "https://github.com/discourse/discourse/blob/eca1c643d5da8583e7a054f83c5b68713944afa8/app/models/trust_level3_requirements.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/eca1c643d5da8583e7a054f83c5b68713944afa8/app/models/trust_level3_requirements.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/trust_level3_requirements.rb?ref=eca1c643d5da8583e7a054f83c5b68713944afa8",
      "patch": "@@ -104,18 +104,33 @@ def days_visited\n   def penalty_counts\n     args = {\n       user_id: @user.id,\n+      system_user_id: Discourse.system_user.id,\n       silence_user: UserHistory.actions[:silence_user],\n+      unsilence_user: UserHistory.actions[:unsilence_user],\n       suspend_user: UserHistory.actions[:suspend_user],\n+      unsuspend_user: UserHistory.actions[:unsuspend_user],\n       since: FORGIVENESS_PERIOD.ago\n     }\n \n     sql = <<~SQL\n       SELECT\n-        SUM(CASE WHEN action = :silence_user THEN 1 ELSE 0 END) AS silence_count,\n-        SUM(CASE WHEN action = :suspend_user THEN 1 ELSE 0 END) AS suspend_count\n+      SUM(\n+          CASE\n+            WHEN action = :silence_user THEN 1\n+            WHEN action = :unsilence_user AND acting_user_id != :system_user_id THEN -1\n+            ELSE 0\n+          END\n+        ) AS silence_count,\n+        SUM(\n+          CASE\n+            WHEN action = :suspend_user THEN 1\n+            WHEN action = :unsuspend_user AND acting_user_id != :system_user_id THEN -1\n+            ELSE 0\n+          END\n+        ) AS suspend_count\n       FROM user_histories AS uh\n       WHERE uh.target_user_id = :user_id\n-        AND uh.action IN (:silence_user, :suspend_user)\n+        AND uh.action IN (:silence_user, :suspend_user, :unsilence_user, :unsuspend_user)\n         AND uh.created_at > :since\n     SQL\n "
    },
    {
      "sha": "ede04a1c7b2a87dd2b3f588ab35392ed58f14dfa",
      "filename": "spec/models/trust_level3_requirements_spec.rb",
      "status": "modified",
      "additions": 38,
      "deletions": 0,
      "changes": 38,
      "blob_url": "https://github.com/discourse/discourse/blob/eca1c643d5da8583e7a054f83c5b68713944afa8/spec/models/trust_level3_requirements_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/eca1c643d5da8583e7a054f83c5b68713944afa8/spec/models/trust_level3_requirements_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/trust_level3_requirements_spec.rb?ref=eca1c643d5da8583e7a054f83c5b68713944afa8",
      "patch": "@@ -31,6 +31,17 @@ def like_at(created_by, post, created_at)\n         expect(tl3_requirements.penalty_counts.silenced).to eq(1)\n         expect(tl3_requirements.penalty_counts.total).to eq(1)\n         UserSilencer.new(user, moderator).unsilence\n+        expect(tl3_requirements.penalty_counts.silenced).to eq(0)\n+        expect(tl3_requirements.penalty_counts.total).to eq(0)\n+      end\n+\n+      it \"ignores system user unsilences\" do\n+        expect(tl3_requirements.penalty_counts.silenced).to eq(0)\n+        expect(tl3_requirements.penalty_counts.total).to eq(0)\n+        UserSilencer.new(user, moderator).silence\n+        expect(tl3_requirements.penalty_counts.silenced).to eq(1)\n+        expect(tl3_requirements.penalty_counts.total).to eq(1)\n+        UserSilencer.new(user, Discourse.system_user).unsilence\n         expect(tl3_requirements.penalty_counts.silenced).to eq(1)\n         expect(tl3_requirements.penalty_counts.total).to eq(1)\n       end\n@@ -43,6 +54,32 @@ def like_at(created_by, post, created_at)\n \n         UserHistory.create!(\n           target_user_id: user.id,\n+          acting_user_id: moderator.id,\n+          action: UserHistory.actions[:suspend_user]\n+        )\n+\n+        expect(tl3_requirements.penalty_counts.suspended).to eq(1)\n+        expect(tl3_requirements.penalty_counts.total).to eq(1)\n+\n+        UserHistory.create!(\n+          target_user_id: user.id,\n+          acting_user_id: moderator.id,\n+          action: UserHistory.actions[:unsuspend_user]\n+        )\n+\n+        expect(tl3_requirements.penalty_counts.suspended).to eq(0)\n+        expect(tl3_requirements.penalty_counts.total).to eq(0)\n+      end\n+\n+      it \"ignores system user un-suspend\" do\n+        user.save!\n+\n+        expect(tl3_requirements.penalty_counts.suspended).to eq(0)\n+        expect(tl3_requirements.penalty_counts.total).to eq(0)\n+\n+        UserHistory.create!(\n+          target_user_id: user.id,\n+          acting_user_id: Discourse.system_user.id,\n           action: UserHistory.actions[:suspend_user]\n         )\n \n@@ -51,6 +88,7 @@ def like_at(created_by, post, created_at)\n \n         UserHistory.create!(\n           target_user_id: user.id,\n+          acting_user_id: Discourse.system_user.id,\n           action: UserHistory.actions[:unsuspend_user]\n         )\n "
    }
  ]
}
