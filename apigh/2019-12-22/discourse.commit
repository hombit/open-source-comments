{
  "sha": "e36efb1edcb23abd0c91f37fe576d1850bbd1cd7",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplMzZlZmIxZWRjYjIzYWJkMGM5MWYzN2ZlNTc2ZDE4NTBiYmQxY2Q3",
  "commit": {
    "author": {
      "name": "Jeff Wong",
      "email": "awole20@gmail.com",
      "date": "2019-12-22T08:25:12Z"
    },
    "committer": {
      "name": "Jeff Wong",
      "email": "awole20@gmail.com",
      "date": "2019-12-22T08:25:12Z"
    },
    "message": "FIX: ensure that we encode a slug only once if slug generation method is encoded\n\nThis was re-encoding the search slug each loop - if the category list was not\nthe first category in the list, it'd continually search with a re-encoded search\nterm from the previous iteration. This results in ember 404ing when navigating\nto raw encoded category slugs of the form /c/encoded-slug-with-non-ascii\nthat have no ID attached.",
    "tree": {
      "sha": "08338162aa3688ed38ba6d6f793be54d4bae3d79",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/08338162aa3688ed38ba6d6f793be54d4bae3d79"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7",
  "html_url": "https://github.com/discourse/discourse/commit/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7/comments",
  "author": {
    "login": "featheredtoast",
    "id": 1322534,
    "node_id": "MDQ6VXNlcjEzMjI1MzQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1322534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/featheredtoast",
    "html_url": "https://github.com/featheredtoast",
    "followers_url": "https://api.github.com/users/featheredtoast/followers",
    "following_url": "https://api.github.com/users/featheredtoast/following{/other_user}",
    "gists_url": "https://api.github.com/users/featheredtoast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/featheredtoast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/featheredtoast/subscriptions",
    "organizations_url": "https://api.github.com/users/featheredtoast/orgs",
    "repos_url": "https://api.github.com/users/featheredtoast/repos",
    "events_url": "https://api.github.com/users/featheredtoast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/featheredtoast/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "featheredtoast",
    "id": 1322534,
    "node_id": "MDQ6VXNlcjEzMjI1MzQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/1322534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/featheredtoast",
    "html_url": "https://github.com/featheredtoast",
    "followers_url": "https://api.github.com/users/featheredtoast/followers",
    "following_url": "https://api.github.com/users/featheredtoast/following{/other_user}",
    "gists_url": "https://api.github.com/users/featheredtoast/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/featheredtoast/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/featheredtoast/subscriptions",
    "organizations_url": "https://api.github.com/users/featheredtoast/orgs",
    "repos_url": "https://api.github.com/users/featheredtoast/repos",
    "events_url": "https://api.github.com/users/featheredtoast/events{/privacy}",
    "received_events_url": "https://api.github.com/users/featheredtoast/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "eca1c643d5da8583e7a054f83c5b68713944afa8",
      "url": "https://api.github.com/repos/discourse/discourse/commits/eca1c643d5da8583e7a054f83c5b68713944afa8",
      "html_url": "https://github.com/discourse/discourse/commit/eca1c643d5da8583e7a054f83c5b68713944afa8"
    }
  ],
  "stats": {
    "total": 7,
    "additions": 3,
    "deletions": 4
  },
  "files": [
    {
      "sha": "a1dada71880c0905486509e03eeb75fe1b57f447",
      "filename": "app/assets/javascripts/discourse/models/category.js.es6",
      "status": "modified",
      "additions": 3,
      "deletions": 4,
      "changes": 7,
      "blob_url": "https://github.com/discourse/discourse/blob/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7/app/assets/javascripts/discourse/models/category.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/e36efb1edcb23abd0c91f37fe576d1850bbd1cd7/app/assets/javascripts/discourse/models/category.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/category.js.es6?ref=e36efb1edcb23abd0c91f37fe576d1850bbd1cd7",
      "patch": "@@ -308,11 +308,10 @@ Category.reopenClass({\n   },\n \n   findBySlugAndParent(slug, parentCategory) {\n+    if (Discourse.SiteSettings.slug_generation_method === \"encoded\") {\n+      slug = encodeURI(slug);\n+    }\n     return Category.list().find(category => {\n-      if (Discourse.SiteSettings.slug_generation_method === \"encoded\") {\n-        slug = encodeURI(slug);\n-      }\n-\n       return (\n         category.slug === slug &&\n         (category.parentCategory || null) === parentCategory"
    }
  ]
}
