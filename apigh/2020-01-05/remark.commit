{
  "sha": "d0925ba95f46163a1d19e02679665791cce8e2c5",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmQwOTI1YmE5NWY0NjE2M2ExZDE5ZTAyNjc5NjY1NzkxY2NlOGUyYzU=",
  "commit": {
    "author": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2020-01-05T03:06:59Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2020-01-05T03:09:27Z"
    },
    "message": "ident ci lists for better readability",
    "tree": {
      "sha": "b65e2c38e76bf46934c66c53a50733cb96946b62",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/b65e2c38e76bf46934c66c53a50733cb96946b62"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/d0925ba95f46163a1d19e02679665791cce8e2c5",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/d0925ba95f46163a1d19e02679665791cce8e2c5",
  "html_url": "https://github.com/umputun/remark/commit/d0925ba95f46163a1d19e02679665791cce8e2c5",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/d0925ba95f46163a1d19e02679665791cce8e2c5/comments",
  "author": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d06a27193cce53fa9df55228264c675858dc6e56",
      "url": "https://api.github.com/repos/umputun/remark/commits/d06a27193cce53fa9df55228264c675858dc6e56",
      "html_url": "https://github.com/umputun/remark/commit/d06a27193cce53fa9df55228264c675858dc6e56"
    }
  ],
  "stats": {
    "total": 158,
    "additions": 81,
    "deletions": 77
  },
  "files": [
    {
      "sha": "fa8426781a469b86596b5ddd92376de8c4ff1c1d",
      "filename": ".github/workflows/ci-build.yml",
      "status": "modified",
      "additions": 15,
      "deletions": 15,
      "changes": 30,
      "blob_url": "https://github.com/umputun/remark/blob/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-build.yml",
      "raw_url": "https://github.com/umputun/remark/raw/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-build.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/.github/workflows/ci-build.yml?ref=d0925ba95f46163a1d19e02679665791cce8e2c5",
      "patch": "@@ -5,27 +5,27 @@ on:\n     branches:\n     tags:\n     paths:\n-    - '.github/workflows/ci-build.yml'\n-    - 'backend/**'\n-    - 'frontend/**'\n-    - '.dockerignore'\n-    - 'docker-init.sh'\n-    - 'Dockerfile'\n+      - '.github/workflows/ci-build.yml'\n+      - 'backend/**'\n+      - 'frontend/**'\n+      - '.dockerignore'\n+      - 'docker-init.sh'\n+      - 'Dockerfile'\n   pull_request:\n     paths:\n-    - '.github/workflows/ci-build.yml'\n-    - 'backend/**'\n-    - 'frontend/**'\n-    - '.dockerignore'\n-    - 'docker-init.sh'\n-    - 'Dockerfile'\n+      - '.github/workflows/ci-build.yml'\n+      - 'backend/**'\n+      - 'frontend/**'\n+      - '.dockerignore'\n+      - 'docker-init.sh'\n+      - 'Dockerfile'\n \n jobs:\n   build:\n     runs-on: ubuntu-latest\n \n     steps:\n-    - uses: actions/checkout@v1\n+      - uses: actions/checkout@v1\n \n-    - name: build docker image\n-      run: docker build --build-arg SKIP_BACKEND_TEST=true --build-arg SKIP_FRONTEND_TEST=true --build-arg CI=github .\n+      - name: build docker image\n+        run: docker build --build-arg SKIP_BACKEND_TEST=true --build-arg SKIP_FRONTEND_TEST=true --build-arg CI=github ."
    },
    {
      "sha": "983864a6a8aa484e201fb394e1509a285f4fff79",
      "filename": ".github/workflows/ci-test-backend.yml",
      "status": "modified",
      "additions": 50,
      "deletions": 50,
      "changes": 100,
      "blob_url": "https://github.com/umputun/remark/blob/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-test-backend.yml",
      "raw_url": "https://github.com/umputun/remark/raw/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-test-backend.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/.github/workflows/ci-test-backend.yml?ref=d0925ba95f46163a1d19e02679665791cce8e2c5",
      "patch": "@@ -5,67 +5,67 @@ on:\n     branches:\n     tags:\n     paths:\n-    - '.github/workflows/ci-test-backend.yml'\n-    - 'backend/**'\n-    - '!backend/scripts/**'\n+      - '.github/workflows/ci-test-backend.yml'\n+      - 'backend/**'\n+      - '!backend/scripts/**'\n   pull_request:\n     paths:\n-    - '.github/workflows/ci-test-backend.yml'\n-    - 'backend/**'\n-    - '!backend/scripts/**'\n+      - '.github/workflows/ci-test-backend.yml'\n+      - 'backend/**'\n+      - '!backend/scripts/**'\n \n jobs:\n   backend:\n     runs-on: ubuntu-latest\n \n     steps:\n-    - uses: actions/checkout@v1\n+      - uses: actions/checkout@v1\n \n-    - name: debug if needed\n-      run: |\n-        export DEBUG=${DEBUG:-false}\n-        if [[ \"$DEBUG\" == \"true\" ]]; then\n-          env\n-        fi\n-      env:\n-        DEBUG: ${{secrets.DEBUG}}\n+      - name: debug if needed\n+        run: |\n+          export DEBUG=${DEBUG:-false}\n+          if [[ \"$DEBUG\" == \"true\" ]]; then\n+            env\n+          fi\n+        env:\n+          DEBUG: ${{secrets.DEBUG}}\n \n-    - name: install go\n-      uses: actions/setup-go@v1\n-      with:\n-        go-version: 1.13\n+      - name: install go\n+        uses: actions/setup-go@v1\n+        with:\n+          go-version: 1.13\n \n-    - name: test backend\n-      run: |\n-        export TZ=\"America/Chicago\"\n-        date\n-        cd backend/app\n-        go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...\n-        cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v \"_mock.go\" > $GITHUB_WORKSPACE/profile.cov\n-        cd ../_example/memory_store\n-        go test -race ./...\n+      - name: test backend\n+        run: |\n+          export TZ=\"America/Chicago\"\n+          date\n+          cd backend/app\n+          go test -mod=vendor -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...\n+          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v \"_mock.go\" > $GITHUB_WORKSPACE/profile.cov\n+          cd ../_example/memory_store\n+          go test -race ./...\n \n-    - name: install golangci-lint and goveralls\n-      run: |\n-        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.20.0\n-        go get -u github.com/mattn/goveralls\n+      - name: install golangci-lint and goveralls\n+        run: |\n+          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.20.0\n+          go get -u github.com/mattn/goveralls\n \n-    - name: run backend linters\n-      run: |\n-        cd backend\n-        $GITHUB_WORKSPACE/golangci-lint run --out-format=tab --disable-all --tests=false --enable=unconvert \\\n-          --enable=megacheck --enable=structcheck --enable=gas --enable=gocyclo --enable=dupl --enable=misspell \\\n-          --enable=unparam --enable=varcheck --enable=deadcode --enable=typecheck \\\n-          --enable=ineffassign --enable=varcheck ./... ;\n-        cd _example/memory_store\n-        $GITHUB_WORKSPACE/golangci-lint run --out-format=tab --disable-all --tests=false --enable=unconvert \\\n-          --enable=megacheck --enable=structcheck --enable=gas --enable=gocyclo --enable=dupl --enable=misspell \\\n-          --enable=unparam --enable=varcheck --enable=deadcode --enable=typecheck \\\n-          --enable=ineffassign --enable=varcheck ./... ;\n+      - name: run backend linters\n+        run: |\n+          cd backend\n+          $GITHUB_WORKSPACE/golangci-lint run --out-format=tab --disable-all --tests=false --enable=unconvert \\\n+            --enable=megacheck --enable=structcheck --enable=gas --enable=gocyclo --enable=dupl --enable=misspell \\\n+            --enable=unparam --enable=varcheck --enable=deadcode --enable=typecheck \\\n+            --enable=ineffassign --enable=varcheck ./... ;\n+          cd _example/memory_store\n+          $GITHUB_WORKSPACE/golangci-lint run --out-format=tab --disable-all --tests=false --enable=unconvert \\\n+            --enable=megacheck --enable=structcheck --enable=gas --enable=gocyclo --enable=dupl --enable=misspell \\\n+            --enable=unparam --enable=varcheck --enable=deadcode --enable=typecheck \\\n+            --enable=ineffassign --enable=varcheck ./... ;\n \n-    - name: submit coverage\n-      run: |\n-        cd backend\n-        $(go env GOPATH)/bin/goveralls -service=\"github\" -coverprofile=$GITHUB_WORKSPACE/profile.cov\n-      env:\n-        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+      - name: submit coverage\n+        run: |\n+          cd backend\n+          $(go env GOPATH)/bin/goveralls -service=\"github\" -coverprofile=$GITHUB_WORKSPACE/profile.cov\n+        env:\n+          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
    },
    {
      "sha": "2a3a6d3131e4cf7c2092418cf539f949a0af31d7",
      "filename": ".github/workflows/ci-test-frontend.yml",
      "status": "modified",
      "additions": 16,
      "deletions": 12,
      "changes": 28,
      "blob_url": "https://github.com/umputun/remark/blob/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-test-frontend.yml",
      "raw_url": "https://github.com/umputun/remark/raw/d0925ba95f46163a1d19e02679665791cce8e2c5/.github/workflows/ci-test-frontend.yml",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/.github/workflows/ci-test-frontend.yml?ref=d0925ba95f46163a1d19e02679665791cce8e2c5",
      "patch": "@@ -5,23 +5,27 @@ on:\n     branches:\n     tags:\n     paths:\n-    - '.github/workflows/ci-test-frontend.yml'\n-    - 'frontend/**'\n+      - '.github/workflows/ci-test-frontend.yml'\n+      - 'frontend/**'\n   pull_request:\n     paths:\n-    - '.github/workflows/ci-test-frontend.yml'\n-    - 'frontend/**'\n+      - '.github/workflows/ci-test-frontend.yml'\n+      - 'frontend/**'\n \n jobs:\n   frontend:\n     runs-on: ubuntu-latest\n \n     steps:\n-    - uses: actions/checkout@v1\n-    - uses: actions/setup-node@v1\n-    - run: npm ci\n-      working-directory: ./frontend\n-    - run: npx run-p check lint test build\n-      working-directory: ./frontend\n-    - run: npm run build\n-      working-directory: ./frontend\n+      - uses: actions/checkout@v1\n+\n+      - uses: actions/setup-node@v1\n+\n+      - run: npm ci\n+        working-directory: ./frontend\n+\n+      - run: npx run-p check lint test build\n+        working-directory: ./frontend\n+\n+      - run: npm run build\n+        working-directory: ./frontend"
    }
  ]
}
