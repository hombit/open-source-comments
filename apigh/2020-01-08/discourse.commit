{
  "sha": "e616b9251165d5bdb637fdb5f80e45cdc714c691",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplNjE2YjkyNTExNjVkNWJkYjYzN2ZkYjVmODBlNDVjZGM3MTRjNjkx",
  "commit": {
    "author": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2020-01-08T16:47:01Z"
    },
    "committer": {
      "name": "Robin Ward",
      "email": "robin.ward@gmail.com",
      "date": "2020-01-08T16:47:37Z"
    },
    "message": "FIX: If the admin sso sync has no external ID, don't throw an error\n\nInstead, return a HTTP error code and a message explaining the problem,\nto avoid log pollution.",
    "tree": {
      "sha": "7ccc6bd3d18969c80145477385326416612fd3e4",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/7ccc6bd3d18969c80145477385326416612fd3e4"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e616b9251165d5bdb637fdb5f80e45cdc714c691",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e616b9251165d5bdb637fdb5f80e45cdc714c691",
  "html_url": "https://github.com/discourse/discourse/commit/e616b9251165d5bdb637fdb5f80e45cdc714c691",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e616b9251165d5bdb637fdb5f80e45cdc714c691/comments",
  "author": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "eviltrout",
    "id": 17538,
    "node_id": "MDQ6VXNlcjE3NTM4",
    "avatar_url": "https://avatars0.githubusercontent.com/u/17538?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/eviltrout",
    "html_url": "https://github.com/eviltrout",
    "followers_url": "https://api.github.com/users/eviltrout/followers",
    "following_url": "https://api.github.com/users/eviltrout/following{/other_user}",
    "gists_url": "https://api.github.com/users/eviltrout/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/eviltrout/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/eviltrout/subscriptions",
    "organizations_url": "https://api.github.com/users/eviltrout/orgs",
    "repos_url": "https://api.github.com/users/eviltrout/repos",
    "events_url": "https://api.github.com/users/eviltrout/events{/privacy}",
    "received_events_url": "https://api.github.com/users/eviltrout/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4d5b142f1d8ca16e731690b8b44dd47a25218182",
      "url": "https://api.github.com/repos/discourse/discourse/commits/4d5b142f1d8ca16e731690b8b44dd47a25218182",
      "html_url": "https://github.com/discourse/discourse/commit/4d5b142f1d8ca16e731690b8b44dd47a25218182"
    }
  ],
  "stats": {
    "total": 13,
    "additions": 13,
    "deletions": 0
  },
  "files": [
    {
      "sha": "932de723b6f72693580cd859f2686cfd5bcb242c",
      "filename": "app/controllers/admin/users_controller.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/e616b9251165d5bdb637fdb5f80e45cdc714c691/app/controllers/admin/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e616b9251165d5bdb637fdb5f80e45cdc714c691/app/controllers/admin/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/admin/users_controller.rb?ref=e616b9251165d5bdb637fdb5f80e45cdc714c691",
      "patch": "@@ -423,6 +423,8 @@ def sync_sso\n       render_serialized(user, AdminDetailedUserSerializer, root: false)\n     rescue ActiveRecord::RecordInvalid => ex\n       render json: failed_json.merge(message: ex.message), status: 403\n+    rescue DiscourseSingleSignOn::BlankExternalId => ex\n+      render json: failed_json.merge(message: I18n.t('sso.blank_id_error')), status: 422\n     end\n   end\n "
    },
    {
      "sha": "80d2a02cf4f62f775387a7b469234f67496ca7b4",
      "filename": "config/locales/server.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/e616b9251165d5bdb637fdb5f80e45cdc714c691/config/locales/server.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/e616b9251165d5bdb637fdb5f80e45cdc714c691/config/locales/server.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/server.en.yml?ref=e616b9251165d5bdb637fdb5f80e45cdc714c691",
      "patch": "@@ -2231,6 +2231,7 @@ en:\n     unknown_error: \"There is a problem with your account. Please contact the site's administrator.\"\n     timeout_expired: \"Account login timed out, please try logging in again.\"\n     no_email: \"No email address was provided. Please contact the site's administrator.\"\n+    blank_id_error: \"The `external_id` is required but was blank\"\n     email_error: \"An account could not be registered with the email address <b>%{email}</b>. Please contact the site's administrator.\"\n     missing_secret: \"SSO authentication failed due to missing secret. Contact the site administrators to fix this problem.\"\n "
    },
    {
      "sha": "49a730ef641c7471d57e83753e8d050cc76f60c2",
      "filename": "spec/requests/admin/users_controller_spec.rb",
      "status": "modified",
      "additions": 10,
      "deletions": 0,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/e616b9251165d5bdb637fdb5f80e45cdc714c691/spec/requests/admin/users_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e616b9251165d5bdb637fdb5f80e45cdc714c691/spec/requests/admin/users_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/admin/users_controller_spec.rb?ref=e616b9251165d5bdb637fdb5f80e45cdc714c691",
      "patch": "@@ -872,6 +872,16 @@\n       expect(JSON.parse(response.body)[\"message\"]).to include(I18n.t('sso.login_error'))\n       expect(JSON.parse(response.body)[\"message\"]).not_to include(correct_payload[\"sig\"])\n     end\n+\n+    it \"returns 404 if the external id does not exist\" do\n+      sso.name = \"Dr. Claw\"\n+      sso.username = \"dr_claw\"\n+      sso.email = \"dr@claw.com\"\n+      sso.external_id = \"\"\n+      post \"/admin/users/sync_sso.json\", params: Rack::Utils.parse_query(sso.payload)\n+      expect(response.status).to eq(422)\n+      expect(JSON.parse(response.body)[\"message\"]).to include(I18n.t('sso.blank_id_error'))\n+    end\n   end\n \n   describe '#disable_second_factor' do"
    }
  ]
}
