{
  "sha": "852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6ODUyNDY2ZTlhMWNhZGI5ZDBjYjNlMWJiMGJlMzMyNjdhM2JkMGRjYQ==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-01-08T19:43:10Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-01-08T19:43:10Z"
    },
    "message": "feat: add additional log messages, added nudge to metadata (#2781)\n\nCo-authored-by: Kim Gardner <kgardnr@gmail.com>",
    "tree": {
      "sha": "995a05d3120efaab39b439a88c50ca7b8eca3299",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/995a05d3120efaab39b439a88c50ca7b8eca3299"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFjDOCRBK7hj4Ov3rIwAAdHIIAHQrGMeNgcbeJ3mVG93T2m0U\nxlseRVnV1A5blM7Uv171xCusvyVjscFPn5e9aA6pVMU//UBkhgTQCI1C7E7pAQXQ\nc2O33MUpaQqjg3GgvPj+JM299bph1OWqPVlBdDOtNhl1hL6UZVfw7T3+r0kiwXTS\nz0d3NSgHZh2pFUKV2gNnhcMV9vytSKqWW3boXIbTZB9dmFzT8fZ5aijrkCB0Ax1i\nvudJTOfd7cijowFzb9KPdRbERakDfNAtx42XBa7s+T0bFIQvh14rhIYT/SWQIqeV\n9lXBaWjOxMy+RhVDzwL2B1rp+adyMSkI0n/2b2AXtzPCdhRkFg8HC2YkhArguLI=\n=K6CQ\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 995a05d3120efaab39b439a88c50ca7b8eca3299\nparent f53db233ce9ba6371533dcf236482ed832275e29\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1578512590 +0000\ncommitter GitHub <noreply@github.com> 1578512590 +0000\n\nfeat: add additional log messages, added nudge to metadata (#2781)\n\nCo-authored-by: Kim Gardner <kgardnr@gmail.com>\r\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
  "html_url": "https://github.com/coralproject/talk/commit/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f53db233ce9ba6371533dcf236482ed832275e29",
      "url": "https://api.github.com/repos/coralproject/talk/commits/f53db233ce9ba6371533dcf236482ed832275e29",
      "html_url": "https://github.com/coralproject/talk/commit/f53db233ce9ba6371533dcf236482ed832275e29"
    }
  ],
  "stats": {
    "total": 54,
    "additions": 47,
    "deletions": 7
  },
  "files": [
    {
      "sha": "a28d3133ce3d7fe9b8697b2bb7e4078077705d4e",
      "filename": "src/core/server/models/comment/revision.ts",
      "status": "modified",
      "additions": 26,
      "deletions": 0,
      "changes": 26,
      "blob_url": "https://github.com/coralproject/talk/blob/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/models/comment/revision.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/models/comment/revision.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/comment/revision.ts?ref=852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
      "patch": "@@ -1,12 +1,38 @@\n import { EncodedCommentActionCounts } from \"coral-server/models/action/comment\";\n \n export interface RevisionMetadata {\n+  /**\n+   * akismet is true when it was determined to be spam.\n+   */\n   akismet?: boolean;\n+\n+  /**\n+   * linkCount is the number of links in a revision body that was detected.\n+   */\n   linkCount?: number;\n+\n+  /**\n+   * perspective stores the detected properties from checking with the\n+   * perspective model.\n+   */\n   perspective?: {\n+    /**\n+     * score is the percentage likelihood (in decimal form) that the comment\n+     * matches the selected model.\n+     */\n     score: number;\n+\n+    /**\n+     * model is the perspective model used to determine the above score.\n+     */\n     model: string;\n   };\n+\n+  /**\n+   * nudge when true indicates that the comment was written on the first try\n+   * without a warning.\n+   */\n+  nudge?: boolean;\n }\n \n /**"
    },
    {
      "sha": "afd924096d87861a304338ea5d26033ea9aa9722",
      "filename": "src/core/server/services/comments/pipeline/phases/toxic.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 6,
      "changes": 20,
      "blob_url": "https://github.com/coralproject/talk/blob/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/services/comments/pipeline/phases/toxic.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/services/comments/pipeline/phases/toxic.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/pipeline/phases/toxic.ts?ref=852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
      "patch": "@@ -12,7 +12,6 @@ import {\n import { LanguageCode } from \"coral-common/helpers\";\n import { Omit } from \"coral-common/types\";\n import { ToxicCommentError } from \"coral-server/errors\";\n-import logger from \"coral-server/logger\";\n import { ACTION_TYPE } from \"coral-server/models/action/comment\";\n import { hasFeatureFlag } from \"coral-server/models/tenant\";\n import {\n@@ -33,9 +32,12 @@ export const toxic: IntermediateModerationPhase = async ({\n   nudge,\n   log,\n   htmlStripped,\n+  // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n+  comment: { body },\n }: Pick<\n   ModerationPhaseContext,\n-  \"tenant\" | \"nudge\" | \"log\" | \"htmlStripped\"\n+  // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n+  \"tenant\" | \"nudge\" | \"log\" | \"htmlStripped\" | \"comment\"\n >): Promise<IntermediatePhaseResult | void> => {\n   if (!htmlStripped) {\n     return;\n@@ -91,7 +93,9 @@ export const toxic: IntermediateModerationPhase = async ({\n   const timeout = ms(\"800ms\");\n \n   try {\n-    logger.trace(\"checking comment toxicity\");\n+    // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n+    log.info({ body }, \"checking comment toxicity\");\n+    // log.trace(\"checking comment toxicity\");\n \n     // Pull the custom model out.\n     const model = integration.model || TOXICITY_MODEL_DEFAULT;\n@@ -116,11 +120,13 @@ export const toxic: IntermediateModerationPhase = async ({\n \n     const isToxic = score > threshold;\n     if (isToxic) {\n-      log.trace({ score, isToxic, threshold, model }, \"comment was toxic\");\n+      // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n+      log.info({ score, isToxic, threshold, model }, \"comment was toxic\");\n+      // log.trace({ score, isToxic, threshold, model }, \"comment was toxic\");\n \n       // Throw an error if we're nudging instead of recording.\n       if (nudge) {\n-        // Only if the feature flag for disabling this behavior is not enabled.\n+        // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n         if (\n           !hasFeatureFlag(\n             tenant,\n@@ -152,7 +158,9 @@ export const toxic: IntermediateModerationPhase = async ({\n       };\n     }\n \n-    log.trace({ score, isToxic, threshold }, \"comment was not toxic\");\n+    // FEATURE_FLAG:DISABLE_WARN_USER_OF_TOXIC_COMMENT\n+    log.info({ score, isToxic, threshold }, \"comment was not toxic\");\n+    // log.trace({ score, isToxic, threshold }, \"comment was not toxic\");\n \n     return {\n       metadata: {"
    },
    {
      "sha": "c4e8344283ca030897eff493e5c314f878536989",
      "filename": "src/core/server/services/comments/pipeline/pipeline.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 1,
      "changes": 8,
      "blob_url": "https://github.com/coralproject/talk/blob/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/services/comments/pipeline/pipeline.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca/src/core/server/services/comments/pipeline/pipeline.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/comments/pipeline/pipeline.ts?ref=852466e9a1cadb9d0cb3e1bb0be33267a3bd0dca",
      "patch": "@@ -81,7 +81,13 @@ export const compose = (\n     status: GQLCOMMENT_STATUS.NONE,\n     body: context.comment.body,\n     actions: [],\n-    metadata: context.comment.metadata || {},\n+    metadata: {\n+      // Merge in the passed comment metadata.\n+      ...(context.comment.metadata || {}),\n+\n+      // Add the nudge to the comment metadata.\n+      nudge: context.nudge,\n+    },\n     tags: [],\n   };\n "
    }
  ]
}
