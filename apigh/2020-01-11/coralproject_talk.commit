{
  "sha": "a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6YTg4NjQ0ZDk4ZThlZjg5YWNmMmRjZjAyOThjYTRlMjQ4NzZiYmM2OQ==",
  "commit": {
    "author": {
      "name": "Nick Funk",
      "email": "nick.funk@outlook.com",
      "date": "2020-01-10T23:55:22Z"
    },
    "committer": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-01-10T23:55:22Z"
    },
    "message": "[CORL-836] Create activeStories endpoint (#2787)\n\n* Create activeStories GraphQL query endpoint\r\n\r\nSet lastCommentedAt on stories when they are\r\ncommented upon.\r\nUse lastCommentedAt to retrieve the activeStories.\r\nCreate a migration to partial index\r\nlastCommentedAt on stories to make retrieval fast.\r\n\r\nCORL-836\r\n\r\n* fix: adjusted query to use index, more @auth directives\r\n\r\nCo-authored-by: Wyatt Johnson <accounts+github@wyattjoh.ca>",
    "tree": {
      "sha": "a26f2fa88a2599c33216f172740e12e2b304e058",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/a26f2fa88a2599c33216f172740e12e2b304e058"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
  "html_url": "https://github.com/coralproject/talk/commit/a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/comments",
  "author": {
    "login": "nick-funk",
    "id": 5751504,
    "node_id": "MDQ6VXNlcjU3NTE1MDQ=",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5751504?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nick-funk",
    "html_url": "https://github.com/nick-funk",
    "followers_url": "https://api.github.com/users/nick-funk/followers",
    "following_url": "https://api.github.com/users/nick-funk/following{/other_user}",
    "gists_url": "https://api.github.com/users/nick-funk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nick-funk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nick-funk/subscriptions",
    "organizations_url": "https://api.github.com/users/nick-funk/orgs",
    "repos_url": "https://api.github.com/users/nick-funk/repos",
    "events_url": "https://api.github.com/users/nick-funk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nick-funk/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "745fb4056cff172df80abaaf7e85d0fda707d093",
      "url": "https://api.github.com/repos/coralproject/talk/commits/745fb4056cff172df80abaaf7e85d0fda707d093",
      "html_url": "https://github.com/coralproject/talk/commit/745fb4056cff172df80abaaf7e85d0fda707d093"
    }
  ],
  "stats": {
    "total": 174,
    "additions": 143,
    "deletions": 31
  },
  "files": [
    {
      "sha": "cbdcade7e13f111ee22e6862c5cb2d0468ae3c9c",
      "filename": "src/core/server/graph/loaders/Comments.ts",
      "status": "modified",
      "additions": 14,
      "deletions": 13,
      "changes": 27,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/loaders/Comments.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/loaders/Comments.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/loaders/Comments.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -3,19 +3,6 @@ import { defaultTo, isNil, omitBy } from \"lodash\";\n import { DateTime } from \"luxon\";\n \n import Context from \"coral-server/graph/context\";\n-import {\n-  CommentToParentsArgs,\n-  CommentToRepliesArgs,\n-  GQLActionPresence,\n-  GQLCOMMENT_SORT,\n-  GQLTAG,\n-  GQLUSER_ROLE,\n-  QueryToCommentsArgs,\n-  StoryToCommentsArgs,\n-  UserToAllCommentsArgs,\n-  UserToCommentsArgs,\n-  UserToRejectedCommentsArgs,\n-} from \"coral-server/graph/schema/__generated__/types\";\n import { retrieveManyUserActionPresence } from \"coral-server/models/action/comment\";\n import {\n   Comment,\n@@ -36,6 +23,20 @@ import { Connection } from \"coral-server/models/helpers\";\n import { retrieveSharedModerationQueueQueuesCounts } from \"coral-server/models/story/counts/shared\";\n import { User } from \"coral-server/models/user\";\n \n+import {\n+  CommentToParentsArgs,\n+  CommentToRepliesArgs,\n+  GQLActionPresence,\n+  GQLCOMMENT_SORT,\n+  GQLTAG,\n+  GQLUSER_ROLE,\n+  QueryToCommentsArgs,\n+  StoryToCommentsArgs,\n+  UserToAllCommentsArgs,\n+  UserToCommentsArgs,\n+  UserToRejectedCommentsArgs,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n import { SingletonResolver } from \"./util\";\n \n const tagFilter = (tag?: GQLTAG): CommentConnectionInput[\"filter\"] => {"
    },
    {
      "sha": "730e3fa1e4bc6ae3456ad0da9877a3c0d02fb3b5",
      "filename": "src/core/server/graph/loaders/Stories.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/loaders/Stories.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/loaders/Stories.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/loaders/Stories.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -2,12 +2,9 @@ import DataLoader from \"dataloader\";\n import { defaultTo } from \"lodash\";\n \n import GraphContext from \"coral-server/graph/context\";\n-import {\n-  GQLSTORY_STATUS,\n-  QueryToStoriesArgs,\n-} from \"coral-server/graph/schema/__generated__/types\";\n import { Connection } from \"coral-server/models/helpers\";\n import {\n+  retrieveActiveStories,\n   retrieveManyStories,\n   retrieveStoryConnection,\n   Story,\n@@ -21,6 +18,11 @@ import {\n } from \"coral-server/services/stories\";\n import { scraper } from \"coral-server/services/stories/scraper\";\n \n+import {\n+  GQLSTORY_STATUS,\n+  QueryToStoriesArgs,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n import { createManyBatchLoadFn } from \"./util\";\n \n const statusFilter = (\n@@ -127,4 +129,6 @@ export default (ctx: GraphContext) => ({\n       cache: !ctx.disableCaching,\n     }\n   ),\n+  activeStories: (limit: number) =>\n+    retrieveActiveStories(ctx.mongo, ctx.tenant.id, limit),\n });"
    },
    {
      "sha": "2a13912a4f57e9e411e01e3a987e727e8f8700e0",
      "filename": "src/core/server/graph/resolvers/Query.ts",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/resolvers/Query.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/resolvers/Query.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/resolvers/Query.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -21,4 +21,6 @@ export const Query: Required<GQLQueryTypeResolver<void>> = {\n   debugScrapeStoryMetadata: (source, { url }, ctx) =>\n     ctx.loaders.Stories.debugScrapeMetadata.load(url),\n   moderationQueues: moderationQueuesResolver,\n+  activeStories: (source, { limit = 10 }, ctx) =>\n+    ctx.loaders.Stories.activeStories(limit),\n };"
    },
    {
      "sha": "3e7acfcdf243a70c407a4c5ea4a21897a312062f",
      "filename": "src/core/server/graph/schema/schema.graphql",
      "status": "modified",
      "additions": 33,
      "deletions": 2,
      "changes": 35,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/schema/schema.graphql",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/graph/schema/schema.graphql",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/graph/schema/schema.graphql?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -769,10 +769,11 @@ type Auth {\n   authentication solutions.\n   \"\"\"\n   integrations: AuthIntegrations!\n+\n   \"\"\"\n   sessionDuration determines the duration in seconds for which an access token is valid\n   \"\"\"\n-  sessionDuration: Int!\n+  sessionDuration: Int! @auth(roles: [ADMIN])\n }\n \n ################################################################################\n@@ -1597,6 +1598,7 @@ type PremodStatusHistory {\n   active when true, indicates that the given user is premodded.\n   \"\"\"\n   active: Boolean!\n+\n   \"\"\"\n   createdBy is the user that flagged the commenter as pre-mod\n   \"\"\"\n@@ -1815,6 +1817,7 @@ type User {\n   badges are user display badges\n   \"\"\"\n   badges: [String!]\n+\n   \"\"\"\n   email is the current email address for the User.\n   \"\"\"\n@@ -1953,17 +1956,32 @@ type User {\n   of their account data.\n   \"\"\"\n   lastDownloadedAt: Time\n+    @auth(\n+      userIDField: \"id\"\n+      roles: [ADMIN, MODERATOR]\n+      permit: [SUSPENDED, BANNED, PENDING_DELETION]\n+    )\n \n   \"\"\"\n   scheduledDeletionDate is the time when the User is\n   scheduled to be deleted.\n   \"\"\"\n   scheduledDeletionDate: Time\n+    @auth(\n+      userIDField: \"id\"\n+      roles: [ADMIN, MODERATOR]\n+      permit: [SUSPENDED, BANNED, PENDING_DELETION]\n+    )\n \n   \"\"\"\n   deletedAt is the time when the User was deleted.\n   \"\"\"\n   deletedAt: Time\n+    @auth(\n+      userIDField: \"id\"\n+      roles: [ADMIN, MODERATOR]\n+      permit: [SUSPENDED, BANNED, PENDING_DELETION]\n+    )\n }\n \n \"\"\"\n@@ -2583,7 +2601,7 @@ type Story {\n   scrapedAt is the Time that the Story had it's metadata scraped at. If the time\n   is null, the Story has not been scraped yet.\n   \"\"\"\n-  scrapedAt: Time\n+  scrapedAt: Time @auth(roles: [ADMIN, MODERATOR])\n \n   \"\"\"\n   featuredComments are the Comments with the FEATURED tag on the Story.\n@@ -2641,6 +2659,11 @@ type Story {\n   settings.\n   \"\"\"\n   settings: StorySettings!\n+\n+  \"\"\"\n+  lastCommentedAt is the last time someone commented on this story.\n+  \"\"\"\n+  lastCommentedAt: Time @auth(roles: [ADMIN])\n }\n \n \"\"\"\n@@ -2780,6 +2803,14 @@ type Query {\n   \"\"\"\n   moderationQueues(storyID: ID): ModerationQueues!\n     @auth(roles: [ADMIN, MODERATOR])\n+\n+  \"\"\"\n+  activeStories is the list of most recently commented on stories identified\n+  by their `lastCommentedAt` field\n+  \"\"\"\n+  activeStories(limit: Int = 10 @constraint(max: 25)): [Story!]!\n+    @auth(roles: [ADMIN])\n+    @rate(max: 2, seconds: 1)\n }\n \n ################################################################################"
    },
    {
      "sha": "6e969248fa2d090fb55f2d03691af8116053ef27",
      "filename": "src/core/server/models/comment/comment.ts",
      "status": "modified",
      "additions": 7,
      "deletions": 6,
      "changes": 13,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/models/comment/comment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/models/comment/comment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/comment/comment.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -6,12 +6,6 @@ import uuid from \"uuid\";\n import { Omit, Sub } from \"coral-common/types\";\n import { dotize } from \"coral-common/utils/dotize\";\n import { CommentNotFoundError } from \"coral-server/errors\";\n-import {\n-  GQLCOMMENT_SORT,\n-  GQLCOMMENT_STATUS,\n-  GQLCommentTagCounts,\n-  GQLTAG,\n-} from \"coral-server/graph/schema/__generated__/types\";\n import logger from \"coral-server/logger\";\n import {\n   EncodedCommentActionCounts,\n@@ -31,6 +25,13 @@ import {\n import { TenantResource } from \"coral-server/models/tenant\";\n import { comments as collection } from \"coral-server/services/mongodb/collections\";\n \n+import {\n+  GQLCOMMENT_SORT,\n+  GQLCOMMENT_STATUS,\n+  GQLCommentTagCounts,\n+  GQLTAG,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n import { PUBLISHED_STATUSES } from \"./constants\";\n import {\n   CommentStatusCounts,"
    },
    {
      "sha": "4d00117f27719503947fa09019d28fb219ddb31b",
      "filename": "src/core/server/models/story/index.ts",
      "status": "modified",
      "additions": 50,
      "deletions": 4,
      "changes": 54,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/models/story/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/models/story/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/models/story/index.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -7,10 +7,6 @@ import {\n   DuplicateStoryIDError,\n   DuplicateStoryURLError,\n } from \"coral-server/errors\";\n-import {\n-  GQLStoryMetadata,\n-  GQLStorySettings,\n-} from \"coral-server/graph/schema/__generated__/types\";\n import {\n   Connection,\n   ConnectionInput,\n@@ -21,6 +17,11 @@ import { GlobalModerationSettings } from \"coral-server/models/settings\";\n import { TenantResource } from \"coral-server/models/tenant\";\n import { stories as collection } from \"coral-server/services/mongodb/collections\";\n \n+import {\n+  GQLStoryMetadata,\n+  GQLStorySettings,\n+} from \"coral-server/graph/schema/__generated__/types\";\n+\n import { createEmptyCommentStatusCounts } from \"../comment/helpers\";\n import {\n   createEmptyCommentModerationQueueCounts,\n@@ -75,6 +76,11 @@ export interface Story extends TenantResource {\n    * createdAt is the date that the Story was added to the Coral database.\n    */\n   createdAt: Date;\n+\n+  /**\n+   * lastCommentedAt is the last time someone commented on this story.\n+   */\n+  lastCommentedAt?: Date;\n }\n \n export interface UpsertStoryInput {\n@@ -455,3 +461,43 @@ async function retrieveConnection(\n   // Return a connection.\n   return resolveConnection(query, input, story => story.createdAt);\n }\n+\n+export async function retrieveActiveStories(\n+  mongo: Db,\n+  tenantID: string,\n+  limit: number\n+) {\n+  const stories = await collection(mongo)\n+    .find({\n+      tenantID,\n+      // We limit this query to stories that have the following field. This\n+      // allows us to use the index.\n+      lastCommentedAt: {\n+        $exists: true,\n+      },\n+    })\n+    .sort({ lastCommentedAt: -1 })\n+    .limit(limit)\n+    .toArray();\n+\n+  return stories;\n+}\n+\n+export async function updateStoryLastCommentedAt(\n+  mongo: Db,\n+  tenantID: string,\n+  storyID: string,\n+  now: Date\n+) {\n+  await collection(mongo).updateOne(\n+    {\n+      tenantID,\n+      id: storyID,\n+    },\n+    {\n+      $set: {\n+        lastCommentedAt: now,\n+      },\n+    }\n+  );\n+}"
    },
    {
      "sha": "fd55641bdb115499505e117e63e1088abb13679c",
      "filename": "src/core/server/services/migrate/migrations/1578604997397_story_add_last_commented_at.ts",
      "status": "added",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/services/migrate/migrations/1578604997397_story_add_last_commented_at.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/services/migrate/migrations/1578604997397_story_add_last_commented_at.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/migrate/migrations/1578604997397_story_add_last_commented_at.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -0,0 +1,21 @@\n+import { Db } from \"mongodb\";\n+\n+import Migration from \"coral-server/services/migrate/migration\";\n+import collections from \"coral-server/services/mongodb/collections\";\n+\n+import { createIndexFactory } from \"../indexing\";\n+\n+export default class extends Migration {\n+  public async indexes(mongo: Db) {\n+    const createIndex = createIndexFactory(collections.stories(mongo));\n+\n+    // Create a partial sparse index on lastCommentedAt:\n+    //   tenantID: 1 <- ASC tenantIDs\n+    //   lastCommentedAt: -1 <- DESC dates (more recent to latest)\n+    //   ^ explained here: https://docs.mongodb.com/manual/core/index-compound/#sort-order\n+    await createIndex(\n+      { tenantID: 1, lastCommentedAt: -1 },\n+      { partialFilterExpression: { lastCommentedAt: { $exists: true } } }\n+    );\n+  }\n+}"
    },
    {
      "sha": "3401902e2c2a0f308295040b81b3de0e68e851e9",
      "filename": "src/core/server/stacks/createComment.ts",
      "status": "modified",
      "additions": 8,
      "deletions": 2,
      "changes": 10,
      "blob_url": "https://github.com/coralproject/talk/blob/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/stacks/createComment.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/a88644d98e8ef89acf2dcf0298ca4e24876bbc69/src/core/server/stacks/createComment.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/stacks/createComment.ts?ref=a88644d98e8ef89acf2dcf0298ca4e24876bbc69",
      "patch": "@@ -25,7 +25,10 @@ import {\n   hasAncestors,\n   hasPublishedStatus,\n } from \"coral-server/models/comment/helpers\";\n-import { retrieveStory } from \"coral-server/models/story\";\n+import {\n+  retrieveStory,\n+  updateStoryLastCommentedAt,\n+} from \"coral-server/models/story\";\n import { Tenant } from \"coral-server/models/tenant\";\n import { User } from \"coral-server/models/user\";\n import {\n@@ -174,7 +177,10 @@ export default async function create(\n     now\n   );\n \n-  await updateUserLastCommentID(redis, tenant, author, comment.id);\n+  await Promise.all([\n+    updateUserLastCommentID(redis, tenant, author, comment.id),\n+    updateStoryLastCommentedAt(mongo, tenant.id, story.id, now),\n+  ]);\n \n   // Pull the revision out.\n   const revision = getLatestRevision(comment);"
    }
  ]
}
