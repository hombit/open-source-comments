{
  "sha": "ab07b945c28682ce58c5149003d65e6f3fd26dff",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODphYjA3Yjk0NWMyODY4MmNlNThjNTE0OTAwM2Q2NWU2ZjNmZDI2ZGZm",
  "commit": {
    "author": {
      "name": "Gerhard Schlager",
      "email": "mail@gerhard-schlager.at",
      "date": "2020-01-17T16:24:49Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-01-17T16:24:49Z"
    },
    "message": "Merge pull request #8736 from gschlager/rename_reply_id_column\n\nREFACTOR: Rename `post_replies.reply_id` column to `post_replies.reply_post_id`",
    "tree": {
      "sha": "bb5a422a6efda665bd6b1e0c7a3ae22fe6d8bd6e",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/bb5a422a6efda665bd6b1e0c7a3ae22fe6d8bd6e"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/ab07b945c28682ce58c5149003d65e6f3fd26dff",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeId/RCRBK7hj4Ov3rIwAAdHIIAAeRL+lcIwVfh4CDkuChdWxv\nGK8L83SdcFZHJ7AO5oUFRoodbRGuDrtFbizMxXmSqTyWRCF4EAL4V5nw3fYMcEgn\nWZt3WPXvzQM2F7TZBZbZ4HjOqgbPkug5kqcJbp3+LxznJXxk18YzPNNuZZA4u31o\nXarp5hp7Sa3P5kCpctvkr/NprDeHlPgUxjEIn8CPnIEAOSvEG4nCDuHGyyZrmyOe\n2Fgbe28OOcRdeUC+PiQVk+IRfp06Mk90D3bOWJqF+oS4E2AMxBUuef4ZS+T3OIRR\ncfS2OIy96b28txHG7F41bCXnZGIeUfGRidycwy5Zdj/3BdewSMhvRZXwK0vaUPs=\n=uUa/\n-----END PGP SIGNATURE-----\n",
      "payload": "tree bb5a422a6efda665bd6b1e0c7a3ae22fe6d8bd6e\nparent 3b5a6c989576eafa083dd4b23cefe4b29771cd90\nauthor Gerhard Schlager <mail@gerhard-schlager.at> 1579278289 +0100\ncommitter GitHub <noreply@github.com> 1579278289 +0100\n\nMerge pull request #8736 from gschlager/rename_reply_id_column\n\nREFACTOR: Rename `post_replies.reply_id` column to `post_replies.reply_post_id`"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/ab07b945c28682ce58c5149003d65e6f3fd26dff",
  "html_url": "https://github.com/discourse/discourse/commit/ab07b945c28682ce58c5149003d65e6f3fd26dff",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/ab07b945c28682ce58c5149003d65e6f3fd26dff/comments",
  "author": {
    "login": "gschlager",
    "id": 473736,
    "node_id": "MDQ6VXNlcjQ3MzczNg==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/473736?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gschlager",
    "html_url": "https://github.com/gschlager",
    "followers_url": "https://api.github.com/users/gschlager/followers",
    "following_url": "https://api.github.com/users/gschlager/following{/other_user}",
    "gists_url": "https://api.github.com/users/gschlager/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gschlager/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gschlager/subscriptions",
    "organizations_url": "https://api.github.com/users/gschlager/orgs",
    "repos_url": "https://api.github.com/users/gschlager/repos",
    "events_url": "https://api.github.com/users/gschlager/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gschlager/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "3b5a6c989576eafa083dd4b23cefe4b29771cd90",
      "url": "https://api.github.com/repos/discourse/discourse/commits/3b5a6c989576eafa083dd4b23cefe4b29771cd90",
      "html_url": "https://github.com/discourse/discourse/commit/3b5a6c989576eafa083dd4b23cefe4b29771cd90"
    }
  ],
  "stats": {
    "total": 109,
    "additions": 80,
    "deletions": 29
  },
  "files": [
    {
      "sha": "27810f9e7180596b21f42dfc9bbbf1fc3d59b516",
      "filename": "app/controllers/application_controller.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/controllers/application_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/controllers/application_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/application_controller.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -483,7 +483,7 @@ def fetch_user_from_params(opts = nil, eager_load = [])\n \n   def post_ids_including_replies\n     post_ids  = params[:post_ids].map(&:to_i)\n-    post_ids |= PostReply.where(post_id: params[:reply_post_ids]).pluck(:reply_id) if params[:reply_post_ids]\n+    post_ids |= PostReply.where(post_id: params[:reply_post_ids]).pluck(:reply_post_id) if params[:reply_post_ids]\n     post_ids\n   end\n "
    },
    {
      "sha": "db05eb470e488a25aaf5989853e1336989a18a05",
      "filename": "app/models/post.rb",
      "status": "modified",
      "additions": 5,
      "deletions": 5,
      "changes": 10,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/post.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -817,19 +817,19 @@ def reply_ids(guardian = nil, only_replies_to_single_post: true)\n       WITH RECURSIVE breadcrumb(id, level) AS (\n         SELECT :post_id, 0\n         UNION\n-        SELECT reply_id, level + 1\n+        SELECT reply_post_id, level + 1\n         FROM post_replies AS r\n           JOIN breadcrumb AS b ON (r.post_id = b.id)\n-        WHERE r.post_id <> r.reply_id\n+        WHERE r.post_id <> r.reply_post_id\n               AND b.level < :max_reply_level\n       ), breadcrumb_with_count AS (\n           SELECT\n             id,\n             level,\n             COUNT(*) AS count\n           FROM post_replies AS r\n-            JOIN breadcrumb AS b ON (r.reply_id = b.id)\n-          WHERE r.reply_id <> r.post_id\n+            JOIN breadcrumb AS b ON (r.reply_post_id = b.id)\n+          WHERE r.reply_post_id <> r.post_id\n           GROUP BY id, level\n       )\n       SELECT id, level\n@@ -1063,7 +1063,7 @@ def add_to_quoted_post_numbers(num)\n \n   def create_reply_relationship_with(post)\n     return if post.nil? || self.deleted_at.present?\n-    post_reply = post.post_replies.new(reply_id: id)\n+    post_reply = post.post_replies.new(reply_post_id: id)\n     if post_reply.save\n       if Topic.visible_post_types.include?(self.post_type)\n         Post.where(id: post.id).update_all ['reply_count = reply_count + 1']"
    },
    {
      "sha": "4a8148f29714ab05af531a146f4bc877795990a3",
      "filename": "app/models/post_mover.rb",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post_mover.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post_mover.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/post_mover.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -250,7 +250,7 @@ def update_reply_counts\n       FROM (\n         SELECT r.post_id, mp.new_topic_id, COUNT(1) AS moved_reply_count\n         FROM moved_posts mp\n-               JOIN post_replies r ON (mp.old_post_id = r.reply_id)\n+               JOIN post_replies r ON (mp.old_post_id = r.reply_post_id)\n         GROUP BY r.post_id, mp.new_topic_id\n       ) x\n       WHERE x.post_id = p.id AND x.new_topic_id <> p.topic_id\n@@ -275,16 +275,16 @@ def move_first_post_replies\n       SET post_id = mp.new_post_id\n       FROM moved_posts mp\n       WHERE mp.old_post_id <> mp.new_post_id AND pr.post_id = mp.old_post_id AND\n-        EXISTS (SELECT 1 FROM moved_posts mr WHERE mr.new_post_id = pr.reply_id)\n+        EXISTS (SELECT 1 FROM moved_posts mr WHERE mr.new_post_id = pr.reply_post_id)\n     SQL\n   end\n \n   def delete_post_replies\n     DB.exec <<~SQL\n       DELETE\n       FROM post_replies pr USING moved_posts mp, posts p, posts r\n-      WHERE (pr.reply_id = mp.old_post_id OR pr.post_id = mp.old_post_id) AND\n-        p.id = pr.post_id AND r.id = pr.reply_id AND p.topic_id <> r.topic_id\n+      WHERE (pr.reply_post_id = mp.old_post_id OR pr.post_id = mp.old_post_id) AND\n+        p.id = pr.post_id AND r.id = pr.reply_post_id AND p.topic_id <> r.topic_id\n     SQL\n   end\n "
    },
    {
      "sha": "9cc9be2692298bb5bcfd929d9d082c6ecce70344",
      "filename": "app/models/post_reply.rb",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post_reply.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/app/models/post_reply.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/post_reply.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -1,10 +1,14 @@\n # frozen_string_literal: true\n \n class PostReply < ActiveRecord::Base\n+  self.ignored_columns = %w{\n+    reply_id\n+  }\n+\n   belongs_to :post\n-  belongs_to :reply, class_name: 'Post'\n+  belongs_to :reply, foreign_key: :reply_post_id, class_name: 'Post'\n \n-  validates_uniqueness_of :reply_id, scope: :post_id\n+  validates_uniqueness_of :reply_post_id, scope: :post_id\n   validate :ensure_same_topic\n \n   private\n@@ -23,13 +27,13 @@ def ensure_same_topic\n #\n # Table name: post_replies\n #\n-#  post_id    :integer\n-#  reply_id   :integer\n-#  created_at :datetime         not null\n-#  updated_at :datetime         not null\n+#  post_id       :integer\n+#  created_at    :datetime         not null\n+#  updated_at    :datetime         not null\n+#  reply_post_id :integer\n #\n # Indexes\n #\n-#  index_post_replies_on_post_id_and_reply_id  (post_id,reply_id) UNIQUE\n-#  index_post_replies_on_reply_id              (reply_id)\n+#  index_post_replies_on_post_id_and_reply_post_id  (post_id,reply_post_id) UNIQUE\n+#  index_post_replies_on_reply_post_id              (reply_post_id)\n #"
    },
    {
      "sha": "c90623aa4583fe3d12fefaf05097f24f0f011be8",
      "filename": "db/migrate/20200116140132_rename_reply_id_column.rb",
      "status": "added",
      "additions": 18,
      "deletions": 0,
      "changes": 18,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/db/migrate/20200116140132_rename_reply_id_column.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/db/migrate/20200116140132_rename_reply_id_column.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/db/migrate/20200116140132_rename_reply_id_column.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -0,0 +1,18 @@\n+# frozen_string_literal: true\n+\n+class RenameReplyIdColumn < ActiveRecord::Migration[6.0]\n+  def up\n+    Migration::ColumnDropper.mark_readonly(:post_replies, :reply_id)\n+\n+    add_column :post_replies, :reply_post_id, :integer\n+\n+    execute <<~SQL\n+      UPDATE post_replies\n+      SET reply_post_id = reply_id\n+    SQL\n+  end\n+\n+  def down\n+    raise ActiveRecord::IrreversibleMigration\n+  end\n+end"
    },
    {
      "sha": "0ba728edcc73fe232b9fa2751222cdeec8cee988",
      "filename": "db/migrate/20200117141138_update_post_reply_indexes.rb",
      "status": "added",
      "additions": 29,
      "deletions": 0,
      "changes": 29,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/db/migrate/20200117141138_update_post_reply_indexes.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/db/migrate/20200117141138_update_post_reply_indexes.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/db/migrate/20200117141138_update_post_reply_indexes.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -0,0 +1,29 @@\n+# frozen_string_literal: true\n+\n+class UpdatePostReplyIndexes < ActiveRecord::Migration[6.0]\n+  # Adding and removing indexes concurrently doesn't work within transaction.\n+  # It also needs existence checks for indexes in case the migration fails and needs to run again.\n+  disable_ddl_transaction!\n+\n+  def up\n+    if !index_exists?(:post_replies, [:post_id, :reply_post_id])\n+      add_index :post_replies, [:post_id, :reply_post_id], unique: true, algorithm: :concurrently\n+    end\n+\n+    if !index_exists?(:post_replies, [:reply_post_id])\n+      add_index :post_replies, [:reply_post_id], algorithm: :concurrently\n+    end\n+\n+    if index_exists?(:post_replies, [:post_id, :reply_id])\n+      remove_index :post_replies, column: [:post_id, :reply_id], algorithm: :concurrently\n+    end\n+\n+    if index_exists?(:post_replies, [:reply_id])\n+      remove_index :post_replies, column: [:reply_id], algorithm: :concurrently\n+    end\n+  end\n+\n+  def down\n+    raise ActiveRecord::IrreversibleMigration\n+  end\n+end"
    },
    {
      "sha": "9fab38906b3e3fc67fb5210fa1fbadab3ccf3a87",
      "filename": "lib/email/sender.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/email/sender.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/email/sender.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/email/sender.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -114,7 +114,7 @@ def send\n \n         referenced_posts = Post.includes(:incoming_email)\n           .joins(\"INNER JOIN post_replies ON post_replies.post_id = posts.id \")\n-          .where(\"post_replies.reply_id = ?\", post_id)\n+          .where(\"post_replies.reply_post_id = ?\", post_id)\n           .order(id: :desc)\n \n         referenced_post_message_ids = referenced_posts.map do |referenced_post|"
    },
    {
      "sha": "d53e33915ed3113a600486b0ddd5af34b97a8d81",
      "filename": "lib/post_destroyer.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/post_destroyer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/post_destroyer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/post_destroyer.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -307,10 +307,10 @@ def trash_user_actions\n   end\n \n   def remove_associated_replies\n-    post_ids = PostReply.where(reply_id: @post.id).pluck(:post_id)\n+    post_ids = PostReply.where(reply_post_id: @post.id).pluck(:post_id)\n \n     if post_ids.present?\n-      PostReply.where(reply_id: @post.id).delete_all\n+      PostReply.where(reply_post_id: @post.id).delete_all\n       Post.where(id: post_ids).each { |p| p.update_column :reply_count, p.replies.count }\n     end\n   end"
    },
    {
      "sha": "14212bfb9561998b4d662350d98b2278fe9d4842",
      "filename": "lib/tasks/import.rake",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/tasks/import.rake",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/lib/tasks/import.rake",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/tasks/import.rake?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -45,7 +45,7 @@ def insert_post_replies\n   log \"Inserting post replies...\"\n \n   DB.exec <<-SQL\n-    INSERT INTO post_replies (post_id, reply_id, created_at, updated_at)\n+    INSERT INTO post_replies (post_id, reply_post_id, created_at, updated_at)\n          SELECT p2.id, p.id, p.created_at, p.created_at\n            FROM posts p\n      INNER JOIN posts p2 ON p2.post_number = p.reply_to_post_number AND p2.topic_id = p.topic_id\n@@ -300,7 +300,7 @@ def update_posts\n   # WITH X AS (\n   #   SELECT pr.post_id, p.user_id\n   #     FROM post_replies pr\n-  #     JOIN posts p ON p.id = pr.reply_id\n+  #     JOIN posts p ON p.id = pr.reply_post_id\n   # )\n   # UPDATE posts\n   #    SET reply_to_user_id = X.user_id"
    },
    {
      "sha": "abe45f492d4268db6c5f35b91fc96a763aec2b05",
      "filename": "script/bulk_import/discourse_merger.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/script/bulk_import/discourse_merger.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/script/bulk_import/discourse_merger.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/script/bulk_import/discourse_merger.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -511,7 +511,7 @@ def process_post(post)\n   end\n \n   def process_post_reply(post_reply)\n-    post_reply['reply_id'] = post_id_from_imported_id(post_reply['reply_id']) if post_reply['reply_id']\n+    post_reply['reply_post_id'] = post_id_from_imported_id(post_reply['reply_post_id']) if post_reply['reply_post_id']\n     post_reply\n   end\n "
    },
    {
      "sha": "3b370e4dc30af5a9c4c9563fc09b48fbaa535fa2",
      "filename": "spec/components/post_destroyer_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/components/post_destroyer_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/components/post_destroyer_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/post_destroyer_spec.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -639,7 +639,7 @@\n     describe 'with a reply' do\n \n       fab!(:reply) { Fabricate(:basic_reply, user: coding_horror, topic: post.topic) }\n-      let!(:post_reply) { PostReply.create(post_id: post.id, reply_id: reply.id) }\n+      let!(:post_reply) { PostReply.create(post_id: post.id, reply_post_id: reply.id) }\n \n       it 'changes the post count of the topic' do\n         post.reload"
    },
    {
      "sha": "7ae87eab6a43943923cdfeb5762447e31a64a6fc",
      "filename": "spec/models/post_mover_spec.rb",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/models/post_mover_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/models/post_mover_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/post_mover_spec.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -955,10 +955,10 @@ def create_topic_user(user, topic, opts = {})\n             expect(topic.highest_post_number).to eq(p4.post_number)\n \n             # updates replies for posts moved to same topic\n-            expect(PostReply.where(reply_id: p2.id).pluck(:post_id)).to contain_exactly(new_first.id)\n+            expect(PostReply.where(reply_post_id: p2.id).pluck(:post_id)).to contain_exactly(new_first.id)\n \n             # leaves replies to the first post of the original topic unchanged\n-            expect(PostReply.where(reply_id: p3.id).pluck(:post_id)).to contain_exactly(p1.id)\n+            expect(PostReply.where(reply_post_id: p3.id).pluck(:post_id)).to contain_exactly(p1.id)\n           end\n \n           it \"preserves post actions in the new post\" do"
    },
    {
      "sha": "82990338847188b3ebb9f538f215bec14bb836cb",
      "filename": "spec/requests/posts_controller_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/requests/posts_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/requests/posts_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/posts_controller_spec.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -236,7 +236,7 @@\n \n       describe \"can delete replies\" do\n         before do\n-          PostReply.create(post_id: post1.id, reply_id: post2.id)\n+          PostReply.create(post_id: post1.id, reply_post_id: post2.id)\n         end\n \n         it \"deletes the post and the reply to it\" do"
    },
    {
      "sha": "9ac9edea0194a5d8fe651d50d6e96910799c312b",
      "filename": "spec/requests/topics_controller_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/requests/topics_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ab07b945c28682ce58c5149003d65e6f3fd26dff/spec/requests/topics_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/topics_controller_spec.rb?ref=ab07b945c28682ce58c5149003d65e6f3fd26dff",
      "patch": "@@ -162,7 +162,7 @@\n             user = sign_in(moderator)\n             p1 = Fabricate(:post, topic: topic, user: user)\n             p2 = Fabricate(:post, topic: topic, user: user, reply_to_post_number: p1.post_number)\n-            PostReply.create(post_id: p1.id, reply_id: p2.id)\n+            PostReply.create(post_id: p1.id, reply_post_id: p2.id)\n \n             post \"/t/#{topic.id}/move-posts.json\", params: {\n               title: 'new topic title',"
    }
  ]
}
