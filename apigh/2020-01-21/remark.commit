{
  "sha": "f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
  "node_id": "MDY6Q29tbWl0MTE0ODI5NTAzOmY5N2Q4MjMyZWRjMWFlMjdiZjk5YjBkZDZmZWZiZmYxMzg5MDViZGM=",
  "commit": {
    "author": {
      "name": "Dmitry Verkhoturov",
      "email": "paskal.07@gmail.com",
      "date": "2020-01-21T00:27:23Z"
    },
    "committer": {
      "name": "Umputun",
      "email": "umputun@gmail.com",
      "date": "2020-01-21T00:27:23Z"
    },
    "message": "Add subscription link support to notification email verification template (#573)\n\n* add subscription link support to notification email verification template\r\n\r\n* always show token for email subscription in verification email\r\n\r\n* hide SubscribeURL from users",
    "tree": {
      "sha": "6990b826493f3cc1d63fe39707af21a84c7ec7b4",
      "url": "https://api.github.com/repos/umputun/remark/git/trees/6990b826493f3cc1d63fe39707af21a84c7ec7b4"
    },
    "url": "https://api.github.com/repos/umputun/remark/git/commits/f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/umputun/remark/commits/f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
  "html_url": "https://github.com/umputun/remark/commit/f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
  "comments_url": "https://api.github.com/repos/umputun/remark/commits/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/comments",
  "author": {
    "login": "paskal",
    "id": 712534,
    "node_id": "MDQ6VXNlcjcxMjUzNA==",
    "avatar_url": "https://avatars1.githubusercontent.com/u/712534?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/paskal",
    "html_url": "https://github.com/paskal",
    "followers_url": "https://api.github.com/users/paskal/followers",
    "following_url": "https://api.github.com/users/paskal/following{/other_user}",
    "gists_url": "https://api.github.com/users/paskal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/paskal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/paskal/subscriptions",
    "organizations_url": "https://api.github.com/users/paskal/orgs",
    "repos_url": "https://api.github.com/users/paskal/repos",
    "events_url": "https://api.github.com/users/paskal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/paskal/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "umputun",
    "id": 535880,
    "node_id": "MDQ6VXNlcjUzNTg4MA==",
    "avatar_url": "https://avatars0.githubusercontent.com/u/535880?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/umputun",
    "html_url": "https://github.com/umputun",
    "followers_url": "https://api.github.com/users/umputun/followers",
    "following_url": "https://api.github.com/users/umputun/following{/other_user}",
    "gists_url": "https://api.github.com/users/umputun/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/umputun/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/umputun/subscriptions",
    "organizations_url": "https://api.github.com/users/umputun/orgs",
    "repos_url": "https://api.github.com/users/umputun/repos",
    "events_url": "https://api.github.com/users/umputun/events{/privacy}",
    "received_events_url": "https://api.github.com/users/umputun/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "091ac9b4c1ee10f194e9b0e8e3765186ac63e125",
      "url": "https://api.github.com/repos/umputun/remark/commits/091ac9b4c1ee10f194e9b0e8e3765186ac63e125",
      "html_url": "https://github.com/umputun/remark/commit/091ac9b4c1ee10f194e9b0e8e3765186ac63e125"
    }
  ],
  "stats": {
    "total": 72,
    "additions": 63,
    "deletions": 9
  },
  "files": [
    {
      "sha": "43c72da0f5c6a17c687260e5415386508a57e111",
      "filename": "backend/app/cmd/server.go",
      "status": "modified",
      "additions": 2,
      "deletions": 0,
      "changes": 2,
      "blob_url": "https://github.com/umputun/remark/blob/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/cmd/server.go",
      "raw_url": "https://github.com/umputun/remark/raw/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/cmd/server.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/cmd/server.go?ref=f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
      "patch": "@@ -766,6 +766,8 @@ func (s *ServerCommand) makeNotify(dataStore *service.DataStore, authenticator *\n \t\t\t\tFrom:                s.Notify.Email.From,\n \t\t\t\tVerificationSubject: s.Notify.Email.VerificationSubject,\n \t\t\t\tUnsubscribeURL:      s.RemarkURL + \"/email/unsubscribe.html\",\n+\t\t\t\t// TODO: uncomment after #560 frontend part is ready and URL is known\n+\t\t\t\t//SubscribeURL:        s.RemarkURL + \"/subscribe.html?token=\",\n \t\t\t\tTokenGenFn: func(userID, email, site string) (string, error) {\n \t\t\t\t\tclaims := token.Claims{\n \t\t\t\t\t\tHandshake: &token.Handshake{ID: userID + \"::\" + email},"
    },
    {
      "sha": "20622da0bf8ec0e54832e299c82e9cb4fe5ae212",
      "filename": "backend/app/notify/email.go",
      "status": "modified",
      "additions": 15,
      "deletions": 8,
      "changes": 23,
      "blob_url": "https://github.com/umputun/remark/blob/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/notify/email.go",
      "raw_url": "https://github.com/umputun/remark/raw/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/notify/email.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/email.go?ref=f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
      "patch": "@@ -23,6 +23,7 @@ type EmailParams struct {\n \tMsgTemplate          string // request message template\n \tVerificationSubject  string // verification message subject\n \tVerificationTemplate string // verification message template\n+\tSubscribeURL         string // full subscribe handler URL\n \tUnsubscribeURL       string // full unsubscribe handler URL\n \n \tTokenGenFn func(userID, email, site string) (string, error) // Unsubscribe token generation function\n@@ -91,10 +92,11 @@ type msgTmplData struct {\n \n // verifyTmplData store data for verification message template execution\n type verifyTmplData struct {\n-\tUser  string\n-\tToken string\n-\tEmail string\n-\tSite  string\n+\tUser         string\n+\tToken        string\n+\tEmail        string\n+\tSite         string\n+\tSubscribeURL string\n }\n \n const (\n@@ -178,6 +180,10 @@ const (\n \t<div style=\"text-align: center; font-family: Helvetica, Arial, sans-serif; font-size: 18px;\">\n \t\t<h1 style=\"position: relative; color: #4fbbd6; margin-top: 0.2em;\">Remark42</h1>\n \t\t<p style=\"position: relative; max-width: 20em; margin: 0 auto 1em auto; line-height: 1.4em; color:#000!important;\">Confirmation for <b>{{.User}}</b> on site <b>{{.Site}}</b></p>\n+\t\t{{if .SubscribeURL}}\n+\t\t<p style=\"position: relative; margin: 0 0 0.5em 0;color:#000!important;\"><a href=\"{{.SubscribeURL}}{{.Token}}\">Click here to subscribe to email notifications</a></p>\n+\t\t<p style=\"position: relative; margin: 0 0 0.5em 0;color:#000!important;\">Alternatively, you can use code below for subscription.</p>\n+\t\t{{ end }}\n \t\t<div style=\"background-color: #eee; max-width: 20em; margin: 0 auto; border-radius: 0.4em; padding: 0.5em;\">\n \t\t\t<p style=\"position: relative; margin: 0 0 0.5em 0;color:#000!important;\">TOKEN</p>\n \t\t\t<p style=\"position: relative; font-size: 0.7em; opacity: 0.8;\"><i style=\"color:#000!important;\">Copy and paste this text into “token” field on comments page</i></p>\n@@ -273,10 +279,11 @@ func (e *Email) buildVerificationMessage(user, email, token, site string) (strin\n \tsubject := e.VerificationSubject\n \tmsg := bytes.Buffer{}\n \terr := e.verifyTmpl.Execute(&msg, verifyTmplData{\n-\t\tUser:  user,\n-\t\tToken: token,\n-\t\tEmail: email,\n-\t\tSite:  site,\n+\t\tUser:         user,\n+\t\tToken:        token,\n+\t\tEmail:        email,\n+\t\tSite:         site,\n+\t\tSubscribeURL: e.SubscribeURL,\n \t})\n \tif err != nil {\n \t\treturn \"\", errors.Wrapf(err, \"error executing template to build verification message\")"
    },
    {
      "sha": "f05784a61e10cd81fee26e96195d87c92220ddb8",
      "filename": "backend/app/notify/email_test.go",
      "status": "modified",
      "additions": 46,
      "deletions": 1,
      "changes": 47,
      "blob_url": "https://github.com/umputun/remark/blob/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/notify/email_test.go",
      "raw_url": "https://github.com/umputun/remark/raw/f97d8232edc1ae27bf99b0dd6fefbff138905bdc/backend/app/notify/email_test.go",
      "contents_url": "https://api.github.com/repos/umputun/remark/contents/backend/app/notify/email_test.go?ref=f97d8232edc1ae27bf99b0dd6fefbff138905bdc",
      "patch": "@@ -189,7 +189,8 @@ func TestEmail_Send(t *testing.T) {\n \treq := Request{\n \t\tComment: store.Comment{ID: \"999\", User: store.User{ID: \"1\", Name: \"test_user\"}, PostTitle: \"test_title\"},\n \t\tparent:  store.Comment{ID: \"1\", User: store.User{ID: \"999\", Name: \"parent_user\"}},\n-\t\tEmail:   \"test@example.org\"}\n+\t\tEmail:   \"test@example.org\",\n+\t}\n \tassert.NoError(t, email.Send(context.TODO(), req))\n \tassert.Equal(t, \"from@example.org\", fakeSmtp.readMail())\n \tassert.Equal(t, 1, fakeSmtp.readQuitCount())\n@@ -208,6 +209,50 @@ List-Unsubscribe: <https://remark42.com/api/v1/email/unsubscribe?site=&tkn=token\n Date: `)\n }\n \n+func TestEmail_SendVerification(t *testing.T) {\n+\temail, err := NewEmail(EmailParams{From: \"from@example.org\"}, SmtpParams{})\n+\tassert.NoError(t, err)\n+\tassert.NotNil(t, email)\n+\tfakeSmtp := fakeTestSMTP{}\n+\temail.smtp = &fakeSmtp\n+\temail.TokenGenFn = TokenGenFn\n+\treq := Request{\n+\t\tEmail: \"test@example.org\",\n+\t\tVerification: VerificationMetadata{\n+\t\t\tSiteID: \"remark\",\n+\t\t\tUser:   \"test_username\",\n+\t\t\tToken:  \"secret_\",\n+\t\t},\n+\t}\n+\tassert.NoError(t, email.Send(context.TODO(), req))\n+\tassert.Equal(t, \"from@example.org\", fakeSmtp.readMail())\n+\tassert.Equal(t, 1, fakeSmtp.readQuitCount())\n+\tassert.Equal(t, \"test@example.org\", fakeSmtp.readRcpt())\n+\t// test buildMessageFromRequest separately for message text\n+\tres, err := email.buildVerificationMessage(req.Verification.User, req.Email, req.Verification.Token, req.Verification.SiteID)\n+\tassert.NoError(t, err)\n+\tassert.Contains(t, res, `From: from@example.org\n+To: test@example.org\n+Subject: Email verification\n+Content-Transfer-Encoding: quoted-printable\n+MIME-version: 1.0\n+Content-Type: text/html; charset=\"UTF-8\"\n+Date: `)\n+\tassert.Contains(t, res, `secret_`)\n+\tassert.NotContains(t, res, `https://example.org/`)\n+\temail.SubscribeURL = \"https://example.org/subscribe.html?token=\"\n+\tres, err = email.buildVerificationMessage(req.Verification.User, req.Email, req.Verification.Token, req.Verification.SiteID)\n+\tassert.NoError(t, err)\n+\tassert.Contains(t, res, `From: from@example.org\n+To: test@example.org\n+Subject: Email verification\n+Content-Transfer-Encoding: quoted-printable\n+MIME-version: 1.0\n+Content-Type: text/html; charset=\"UTF-8\"\n+Date: `)\n+\tassert.Contains(t, res, `https://example.org/subscribe.html?token=3Dsecret_`)\n+}\n+\n func Test_emailClient_Create(t *testing.T) {\n \tcreator := emailClient{}\n \tclient, err := creator.Create(SmtpParams{})"
    }
  ]
}
