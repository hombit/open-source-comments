{
  "sha": "2529c49b26040280609dc5e2f737aa5d25be34c7",
  "node_id": "MDY6Q29tbWl0OTkyNDI2NzE6MjUyOWM0OWIyNjA0MDI4MDYwOWRjNWUyZjczN2FhNWQyNWJlMzRjNw==",
  "commit": {
    "author": {
      "name": "xCss",
      "email": "yy.liu@foxmail.com",
      "date": "2019-08-29T02:14:10Z"
    },
    "committer": {
      "name": "xCss",
      "email": "yy.liu@foxmail.com",
      "date": "2019-08-29T02:14:10Z"
    },
    "message": "fix #175 #182 #201 #203 #206",
    "tree": {
      "sha": "d2af3b766f3aa6fb734be31b5f2e3c716022c97f",
      "url": "https://api.github.com/repos/xCss/Valine/git/trees/d2af3b766f3aa6fb734be31b5f2e3c716022c97f"
    },
    "url": "https://api.github.com/repos/xCss/Valine/git/commits/2529c49b26040280609dc5e2f737aa5d25be34c7",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/xCss/Valine/commits/2529c49b26040280609dc5e2f737aa5d25be34c7",
  "html_url": "https://github.com/xCss/Valine/commit/2529c49b26040280609dc5e2f737aa5d25be34c7",
  "comments_url": "https://api.github.com/repos/xCss/Valine/commits/2529c49b26040280609dc5e2f737aa5d25be34c7/comments",
  "author": {
    "login": "xCss",
    "id": 10877162,
    "node_id": "MDQ6VXNlcjEwODc3MTYy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/10877162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xCss",
    "html_url": "https://github.com/xCss",
    "followers_url": "https://api.github.com/users/xCss/followers",
    "following_url": "https://api.github.com/users/xCss/following{/other_user}",
    "gists_url": "https://api.github.com/users/xCss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xCss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xCss/subscriptions",
    "organizations_url": "https://api.github.com/users/xCss/orgs",
    "repos_url": "https://api.github.com/users/xCss/repos",
    "events_url": "https://api.github.com/users/xCss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xCss/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "xCss",
    "id": 10877162,
    "node_id": "MDQ6VXNlcjEwODc3MTYy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/10877162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xCss",
    "html_url": "https://github.com/xCss",
    "followers_url": "https://api.github.com/users/xCss/followers",
    "following_url": "https://api.github.com/users/xCss/following{/other_user}",
    "gists_url": "https://api.github.com/users/xCss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xCss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xCss/subscriptions",
    "organizations_url": "https://api.github.com/users/xCss/orgs",
    "repos_url": "https://api.github.com/users/xCss/repos",
    "events_url": "https://api.github.com/users/xCss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xCss/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "01211c04977fb043ce1a4cc18610914494fbaf51",
      "url": "https://api.github.com/repos/xCss/Valine/commits/01211c04977fb043ce1a4cc18610914494fbaf51",
      "html_url": "https://github.com/xCss/Valine/commit/01211c04977fb043ce1a4cc18610914494fbaf51"
    }
  ],
  "stats": {
    "total": 52,
    "additions": 21,
    "deletions": 31
  },
  "files": [
    {
      "sha": "ed540ceb4fc350b5e4e3a17b99271a252b7197f8",
      "filename": "dist/Valine.Pure.min.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/xCss/Valine/blob/2529c49b26040280609dc5e2f737aa5d25be34c7/dist/Valine.Pure.min.js",
      "raw_url": "https://github.com/xCss/Valine/raw/2529c49b26040280609dc5e2f737aa5d25be34c7/dist/Valine.Pure.min.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/dist/Valine.Pure.min.js?ref=2529c49b26040280609dc5e2f737aa5d25be34c7"
    },
    {
      "sha": "a8a062abf411b44b37a61b0d560c5ffa1d7e2749",
      "filename": "dist/Valine.min.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/xCss/Valine/blob/2529c49b26040280609dc5e2f737aa5d25be34c7/dist/Valine.min.js",
      "raw_url": "https://github.com/xCss/Valine/raw/2529c49b26040280609dc5e2f737aa5d25be34c7/dist/Valine.min.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/dist/Valine.min.js?ref=2529c49b26040280609dc5e2f737aa5d25be34c7"
    },
    {
      "sha": "3ce91eaa86bd92090513476ce1e6e0ddd05f6ddd",
      "filename": "src/index.js",
      "status": "modified",
      "additions": 9,
      "deletions": 19,
      "changes": 28,
      "blob_url": "https://github.com/xCss/Valine/blob/2529c49b26040280609dc5e2f737aa5d25be34c7/src/index.js",
      "raw_url": "https://github.com/xCss/Valine/raw/2529c49b26040280609dc5e2f737aa5d25be34c7/src/index.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/index.js?ref=2529c49b26040280609dc5e2f737aa5d25be34c7",
      "patch": "@@ -459,9 +459,8 @@ ValineFactory.prototype.ErrorHandler = function (ex) {\n         let code = ex.code || '',\n             t = root.locale['error'][code],\n             msg = t || ex.message || ex.error || '';\n-        if (code == 101) {\n-            root.nodata.show()\n-        } else root.el && root.nodata.show(`<pre style=\"text-align:left;\">Code ${code}: ${msg}</pre>`) ||\n+        if (code == 101) root.nodata.show()\n+        else root.el && root.nodata.show(`<pre style=\"text-align:left;\">Code ${code}: ${msg}</pre>`) ||\n             console && console.error(`Code ${code}: ${msg}`)\n     } else {\n         root.el && root.nodata.show(`<pre style=\"text-align:left;\">${JSON.stringify(ex)}</pre>`) ||\n@@ -610,20 +609,14 @@ ValineFactory.prototype.bind = function (option) {\n     // 显示/隐藏 Emojis\n     Utils.on('click', _emojiCtrl, (e) => {\n         let _vi = Utils.attr(_emojiCtrl, 'v');\n-        if (_vi) {\n-            root.emoji.hide()\n-        } else {\n-            root.emoji.show();\n-        }\n+        if (_vi) root.emoji.hide()\n+        else root.emoji.show();\n     });\n \n     Utils.on('click', _vpreviewCtrl, function (e) {\n         let _vi = Utils.attr(_vpreviewCtrl, 'v');\n-        if (_vi) {\n-            root.preview.hide();\n-        } else {\n-            root.preview.show();\n-        }\n+        if (_vi) root.preview.hide();\n+        else root.preview.show();\n     });\n \n     let meta = root.config.meta;\n@@ -642,11 +635,8 @@ ValineFactory.prototype.bind = function (option) {\n             let _el = Utils.find(root.el, `.${i}`);\n             inputs[_v] = _el;\n             _el && Utils.on('input change blur', _el, (e) => {\n-                if (_v === 'comment') {\n-                    syncContentEvt(_el)\n-                } else {\n-                    defaultComment[_v] = Utils.escape(_el.value.replace(/(^\\s*)|(\\s*$)/g, \"\"));\n-                }\n+                if (_v === 'comment') syncContentEvt(_el)\n+                else defaultComment[_v] = Utils.escape(_el.value.replace(/(^\\s*)|(\\s*$)/g, \"\"));\n             });\n         }\n     }\n@@ -800,7 +790,7 @@ ValineFactory.prototype.bind = function (option) {\n             } catch (error) {\n \n             }\n-        }, 20)\n+        }, 200)\n     }\n \n     let _activeHLJS = () => {}"
    },
    {
      "sha": "3c531308979fa79595a7c9a660ebda006a44329b",
      "filename": "src/utils/deepClone.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/xCss/Valine/blob/2529c49b26040280609dc5e2f737aa5d25be34c7/src/utils/deepClone.js",
      "raw_url": "https://github.com/xCss/Valine/raw/2529c49b26040280609dc5e2f737aa5d25be34c7/src/utils/deepClone.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/utils/deepClone.js?ref=2529c49b26040280609dc5e2f737aa5d25be34c7",
      "patch": "@@ -28,7 +28,7 @@ function isCyclic (data) {\n             seenObjects.push(data);\n \n             // Begin iterating through the data passed to the method\n-            for (var key in data) {\n+            for (let key in data) {\n                 // Recall this method with the objects key\n                 if (data.hasOwnProperty(key) === true && detect(data[key])) {\n                     return true;\n@@ -75,7 +75,7 @@ const deepClone = function (data) {\n             // Create a new array that will have no references to the one we want to copy\n             let copiedArray = [];\n             // Iterate over the arrays elements\n-            for (var i = 0; i < data.length; i++) {\n+            for (let i = 0; i < data.length; i++) {\n                 // Push the arrays elements to this new array\n                 // First recall this method with the elements\n                 // This is so arrays of objects and other nested data structures get correctly cloned."
    },
    {
      "sha": "821938e9185bae63b271f3fbbd001b2bf5787503",
      "filename": "src/utils/domUtils.js",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/xCss/Valine/blob/2529c49b26040280609dc5e2f737aa5d25be34c7/src/utils/domUtils.js",
      "raw_url": "https://github.com/xCss/Valine/raw/2529c49b26040280609dc5e2f737aa5d25be34c7/src/utils/domUtils.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/utils/domUtils.js?ref=2529c49b26040280609dc5e2f737aa5d25be34c7",
      "patch": "@@ -42,16 +42,16 @@ const utils = {\n     /**\n      * 动态加载资源库 \n      * @param {String} sourceName 资源名 script/link\n-     * @param {String} sourceURI 需要加载的资源库链接\n+     * @param {Object} attrs 需要加载属性/值\n      * @param {Function} callback 回调函数\n      */\n-    dynamicLoadSource(sourceName, sourceURI, callback) {\n+    dynamicLoadSource(sourceName, attrs, callback) {\n         let attrNameMap = {'script':'src','link':'href'};\n-        let attr = attrNameMap[sourceName]\n-        if (utils.find(doc, `${sourceName}[${attr}=\"${sourceURI}\"]`)) {\n+        let attr = attrNameMap[sourceName];\n+        if (utils.find(doc, `${sourceName}[${attr}=\"${attrs[attr]}\"]`)) {\n             typeof (callback) === 'function' && callback()\n         } else {\n-            let s = utils.create(sourceName, attr, sourceURI);\n+            let s = utils.create(sourceName, attrs);\n             let h = doc.getElementsByTagName(\"head\")[0];\n             h.appendChild(s);\n             s.onload = s.onreadystatechange = function () {\n@@ -192,7 +192,7 @@ const utils = {\n                     if (el.nodeName == 'CODE') return false\n                     let clazz = attr.value\n                     if (clazz.indexOf('at') > -1) utils.attr(el, 'class', 'at');\n-                    if (clazz.indexOf('vemoji') > -1) utils.attr(el,'class','vemoji');\n+                    else if (clazz.indexOf('vemoji') > -1) utils.attr(el,'class','vemoji');\n                     else utils.removeAttr(el, 'class')\n                     break;\n                 default:"
    }
  ]
}
