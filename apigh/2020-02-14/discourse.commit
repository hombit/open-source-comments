{
  "sha": "fadb2b7157d744226c85eccba92af1cbd2924c43",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpmYWRiMmI3MTU3ZDc0NDIyNmM4NWVjY2JhOTJhZjFjYmQyOTI0YzQz",
  "commit": {
    "author": {
      "name": "Roman Rizzi",
      "email": "rizziromanalejandro@gmail.com",
      "date": "2020-02-14T16:43:48Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-02-14T16:43:48Z"
    },
    "message": "FEATURE: Users cannot reflag recently handled items using the same reason unless the post was edited, or it was reviewed more than 24 hours ago. (#8969)",
    "tree": {
      "sha": "4af390c4e314108322784ecf910e1418ccedb7d2",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/4af390c4e314108322784ecf910e1418ccedb7d2"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/fadb2b7157d744226c85eccba92af1cbd2924c43",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRs5ECRBK7hj4Ov3rIwAAdHIIADrc4Q/dRiM8MZjqRhy7zD2a\nnTKvLgWF2vkKC0najSwr2bTVC9jixkIkiKi3oVY+iWWPQ1TeYN7NvLhbKDAEJq4U\nPNix+FvQhc4caTdAkm5nDNmpAM3k2mL1qYoVxpphaUCLleBc6xKTT2qwAbht0ozl\nHqqa0YOq94ang5OO5kZlVaUWpk0b8Zn7xPOX4nMln8c214Z+bGg21GdBUr4p1jhD\n5dBuwRvrXAHSg5HfIMqdooLoM6PhzPTLu1Z3nLQ0Zt9ZWBSK05jSrorFIiQzStdF\nkhAdaOHfsRBz2XC4IrIMsEd8RdM5cooC1V2wiwMGLh3WAVwbZcIXDPmVTjbA5wY=\n=ADfl\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 4af390c4e314108322784ecf910e1418ccedb7d2\nparent ea0f20e33107cc6cbae8b6222d368c0232492867\nauthor Roman Rizzi <rizziromanalejandro@gmail.com> 1581698628 -0300\ncommitter GitHub <noreply@github.com> 1581698628 -0300\n\nFEATURE: Users cannot reflag recently handled items using the same reason unless the post was edited, or it was reviewed more than 24 hours ago. (#8969)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/fadb2b7157d744226c85eccba92af1cbd2924c43",
  "html_url": "https://github.com/discourse/discourse/commit/fadb2b7157d744226c85eccba92af1cbd2924c43",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/fadb2b7157d744226c85eccba92af1cbd2924c43/comments",
  "author": {
    "login": "romanrizzi",
    "id": 5025816,
    "node_id": "MDQ6VXNlcjUwMjU4MTY=",
    "avatar_url": "https://avatars1.githubusercontent.com/u/5025816?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/romanrizzi",
    "html_url": "https://github.com/romanrizzi",
    "followers_url": "https://api.github.com/users/romanrizzi/followers",
    "following_url": "https://api.github.com/users/romanrizzi/following{/other_user}",
    "gists_url": "https://api.github.com/users/romanrizzi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/romanrizzi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/romanrizzi/subscriptions",
    "organizations_url": "https://api.github.com/users/romanrizzi/orgs",
    "repos_url": "https://api.github.com/users/romanrizzi/repos",
    "events_url": "https://api.github.com/users/romanrizzi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/romanrizzi/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "ea0f20e33107cc6cbae8b6222d368c0232492867",
      "url": "https://api.github.com/repos/discourse/discourse/commits/ea0f20e33107cc6cbae8b6222d368c0232492867",
      "html_url": "https://github.com/discourse/discourse/commit/ea0f20e33107cc6cbae8b6222d368c0232492867"
    }
  ],
  "stats": {
    "total": 57,
    "additions": 55,
    "deletions": 2
  },
  "files": [
    {
      "sha": "7b26f70d08c7af6a23f9ccfd01fcb9e8230ff25b",
      "filename": "config/locales/server.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/fadb2b7157d744226c85eccba92af1cbd2924c43/config/locales/server.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/fadb2b7157d744226c85eccba92af1cbd2924c43/config/locales/server.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/server.en.yml?ref=fadb2b7157d744226c85eccba92af1cbd2924c43",
      "patch": "@@ -4650,6 +4650,7 @@ en:\n       restored: Restored\n \n   reviewables:\n+    already_handled: \"Thanks, but we've already reviewed that post and determined it does not need to be flagged again.\"\n     priorities:\n       low: \"Low\"\n       medium: \"Medium\""
    },
    {
      "sha": "0f78ab6fb6d6ef04b651b6f160dff93873a5896c",
      "filename": "lib/post_action_creator.rb",
      "status": "modified",
      "additions": 21,
      "deletions": 1,
      "changes": 22,
      "blob_url": "https://github.com/discourse/discourse/blob/fadb2b7157d744226c85eccba92af1cbd2924c43/lib/post_action_creator.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/fadb2b7157d744226c85eccba92af1cbd2924c43/lib/post_action_creator.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/post_action_creator.rb?ref=fadb2b7157d744226c85eccba92af1cbd2924c43",
      "patch": "@@ -66,6 +66,13 @@ def perform\n \n     PostAction.limit_action!(@created_by, @post, @post_action_type_id)\n \n+    reviewable = Reviewable.includes(:reviewable_scores).find_by(target: @post)\n+\n+    if reviewable && flagging_post? && cannot_flag_again?(reviewable)\n+      result.add_error(I18n.t(\"reviewables.already_handled\"))\n+      return result\n+    end\n+\n     # create meta topic / post if needed\n     if @message.present? && [:notify_moderators, :notify_user, :spam].include?(@post_action_name)\n       creator = create_message_creator\n@@ -115,6 +122,19 @@ def perform\n \n private\n \n+  def flagging_post?\n+    PostActionType.notify_flag_type_ids.include?(@post_action_type_id)\n+  end\n+\n+  def cannot_flag_again?(reviewable)\n+    return false if @post_action_type_id == PostActionType.types[:notify_moderators]\n+    flag_type_already_used = reviewable.reviewable_scores.any? { |rs| rs.reviewable_score_type == @post_action_type_id }\n+    not_edited_since_last_review = @post.last_version_at.blank? || reviewable.updated_at > @post.last_version_at\n+    handled_recently = reviewable.updated_at > 24.hours.ago\n+\n+    !reviewable.pending? && flag_type_already_used && not_edited_since_last_review && handled_recently\n+  end\n+\n   def notify_subscribers\n     if self.class.notify_types.include?(@post_action_name)\n       @post.publish_change_to_clients! :acted\n@@ -261,7 +281,7 @@ def create_message_creator\n   end\n \n   def create_reviewable(result)\n-    return unless PostActionType.notify_flag_type_ids.include?(@post_action_type_id)\n+    return unless flagging_post?\n     return if @post.user_id.to_i < 0\n \n     result.reviewable = ReviewableFlaggedPost.needs_review!("
    },
    {
      "sha": "dd5c97f560d419113de3096e56b0d7f2d6692395",
      "filename": "spec/components/post_action_creator_spec.rb",
      "status": "modified",
      "additions": 32,
      "deletions": 0,
      "changes": 32,
      "blob_url": "https://github.com/discourse/discourse/blob/fadb2b7157d744226c85eccba92af1cbd2924c43/spec/components/post_action_creator_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/fadb2b7157d744226c85eccba92af1cbd2924c43/spec/components/post_action_creator_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/components/post_action_creator_spec.rb?ref=fadb2b7157d744226c85eccba92af1cbd2924c43",
      "patch": "@@ -115,6 +115,38 @@\n         expect(score.reviewed_by).to be_blank\n         expect(score.reviewed_at).to be_blank\n       end\n+\n+      describe \"When the post was already reviewed by staff\" do\n+        fab!(:admin) { Fabricate(:admin) }\n+\n+        before { reviewable.perform(admin, :ignore) }\n+\n+        it \"fails because the post was recently reviewed\" do\n+          result = PostActionCreator.create(user, post, :inappropriate)\n+\n+          expect(result.success?).to eq(false)\n+        end\n+\n+        it \"succesfully flags the post if it was edited after being reviewed\" do\n+          reviewable.update!(updated_at: 25.hours.ago)\n+          post.last_version_at = 30.hours.ago\n+\n+          result = PostActionCreator.create(user, post, :inappropriate)\n+\n+          expect(result.success?).to eq(true)\n+          expect(result.reviewable).to be_present\n+        end\n+\n+        it 'succesfully flags the post if it was reviewed more than 24 hours ago' do\n+          reviewable.update!(updated_at: 10.minutes.ago)\n+          post.last_version_at = 1.minute.ago\n+\n+          result = PostActionCreator.create(user, post, :inappropriate)\n+\n+          expect(result.success?).to eq(true)\n+          expect(result.reviewable).to be_present\n+        end\n+      end\n     end\n   end\n "
    },
    {
      "sha": "9b46eb7c529375f00d9b60b33d4948927c6afb51",
      "filename": "spec/models/reviewable_spec.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/fadb2b7157d744226c85eccba92af1cbd2924c43/spec/models/reviewable_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/fadb2b7157d744226c85eccba92af1cbd2924c43/spec/models/reviewable_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/reviewable_spec.rb?ref=fadb2b7157d744226c85eccba92af1cbd2924c43",
      "patch": "@@ -266,7 +266,7 @@\n     end\n \n     it \"triggers a notification on update\" do\n-      reviewable = PostActionCreator.spam(moderator, post).reviewable\n+      reviewable = PostActionCreator.create(moderator, post, :inappropriate).reviewable\n       reviewable.perform(moderator, :disagree)\n \n       expect { PostActionCreator.spam(Fabricate(:user), post) }"
    }
  ]
}
