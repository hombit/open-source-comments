{
  "sha": "0ea11a9d497c504cf640fa9dea073cffcc43f265",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODowZWExMWE5ZDQ5N2M1MDRjZjY0MGZhOWRlYTA3M2NmZmNjNDNmMjY1",
  "commit": {
    "author": {
      "name": "Joffrey JAFFEUX",
      "email": "j.jaffeux@gmail.com",
      "date": "2020-02-24T14:55:12Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-02-24T14:55:12Z"
    },
    "message": "FIX: ensures we don't attempt to create a new PM on an existing topic (#9029)\n\nThis fix attempts to both fix it at UI level and server side. A previous attempt related to this behavior has been made in commit: https://github.com/discourse/discourse/commit/49c750ca7890490b1405f940b1eb2e7a4f3f69f6",
    "tree": {
      "sha": "e67959638d9f923588b00a0ea7c8b73945fe487b",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/e67959638d9f923588b00a0ea7c8b73945fe487b"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/0ea11a9d497c504cf640fa9dea073cffcc43f265",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeU+PQCRBK7hj4Ov3rIwAAdHIIALDzbQFzWrehkOeFFmwRs0T6\n8qRTcfI1DFR1nqi2nW/bnaljiyg1ZHRsxJG1SgDIiQ/sKLKnhFbE4A132ohS2jWT\nvYrZsoOj5XKlczYR5/FX/jg/qqUBfH1vnNz8XpfTWNdpwf4zTGiZd2pSlfUbpZyZ\nhIMuwJCWhNOcs9TwnCeGsOdmxUSOifTlsVwP9Fe5rr9mrwWtpOrSzINMMrohtJAH\nN1CwRHcbs5OP7h2ICDclOcm3nYqscf66nyWY+PcDtc/NYjvV8kAZrl1R2+gmRZPJ\ncG4s+AmXXLImo+OJby5qKyzYKhVWsEeFMIERjwRK2p5RZK8w2Ue9HfvnLEEYrsg=\n=Ia3h\n-----END PGP SIGNATURE-----\n",
      "payload": "tree e67959638d9f923588b00a0ea7c8b73945fe487b\nparent 31f3ed8d3610b63c7b1146e1a67ee51b703dbc41\nauthor Joffrey JAFFEUX <j.jaffeux@gmail.com> 1582556112 +0100\ncommitter GitHub <noreply@github.com> 1582556112 -0600\n\nFIX: ensures we don't attempt to create a new PM on an existing topic (#9029)\n\nThis fix attempts to both fix it at UI level and server side. A previous attempt related to this behavior has been made in commit: https://github.com/discourse/discourse/commit/49c750ca7890490b1405f940b1eb2e7a4f3f69f6\r\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/0ea11a9d497c504cf640fa9dea073cffcc43f265",
  "html_url": "https://github.com/discourse/discourse/commit/0ea11a9d497c504cf640fa9dea073cffcc43f265",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/0ea11a9d497c504cf640fa9dea073cffcc43f265/comments",
  "author": {
    "login": "jjaffeux",
    "id": 339945,
    "node_id": "MDQ6VXNlcjMzOTk0NQ==",
    "avatar_url": "https://avatars3.githubusercontent.com/u/339945?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jjaffeux",
    "html_url": "https://github.com/jjaffeux",
    "followers_url": "https://api.github.com/users/jjaffeux/followers",
    "following_url": "https://api.github.com/users/jjaffeux/following{/other_user}",
    "gists_url": "https://api.github.com/users/jjaffeux/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jjaffeux/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jjaffeux/subscriptions",
    "organizations_url": "https://api.github.com/users/jjaffeux/orgs",
    "repos_url": "https://api.github.com/users/jjaffeux/repos",
    "events_url": "https://api.github.com/users/jjaffeux/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jjaffeux/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "31f3ed8d3610b63c7b1146e1a67ee51b703dbc41",
      "url": "https://api.github.com/repos/discourse/discourse/commits/31f3ed8d3610b63c7b1146e1a67ee51b703dbc41",
      "html_url": "https://github.com/discourse/discourse/commit/31f3ed8d3610b63c7b1146e1a67ee51b703dbc41"
    }
  ],
  "stats": {
    "total": 40,
    "additions": 35,
    "deletions": 5
  },
  "files": [
    {
      "sha": "2150396102b3902480eb5f0269184248e37faf56",
      "filename": "app/assets/javascripts/discourse/models/composer.js.es6",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/app/assets/javascripts/discourse/models/composer.js.es6",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/app/assets/javascripts/discourse/models/composer.js.es6",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/models/composer.js.es6?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -912,7 +912,7 @@ const Composer = RestModel.extend({\n   },\n \n   createPost(opts) {\n-    if (this.action === CREATE_TOPIC) {\n+    if (CREATE_TOPIC === this.action || PRIVATE_MESSAGE === this.action) {\n       this.set(\"topic\", null);\n     }\n "
    },
    {
      "sha": "00e24df01cb8d85408973c527af100b1c371a009",
      "filename": "config/locales/server.en.yml",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/config/locales/server.en.yml",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/config/locales/server.en.yml",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/locales/server.en.yml?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -339,6 +339,7 @@ en:\n   pm_reached_recipients_limit: \"Sorry, you can't have more than %{recipients_limit} recipients in a message.\"\n   removed_direct_reply_full_quotes: \"Automatically removed quote of whole previous post.\"\n   secure_upload_not_allowed_in_public_topic: \"Sorry, the following secure upload(s) cannot be used in a public topic: %{upload_filenames}.\"\n+  create_pm_on_existing_topic: \"Sorry, you can't create a PM on an existing topic.\"\n \n   just_posted_that: \"is too similar to what you recently posted\"\n   invalid_characters: \"contains invalid characters\""
    },
    {
      "sha": "8340c6c7b7a4c895db1102c64bb5cb9a3fb99b05",
      "filename": "lib/post_creator.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/lib/post_creator.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/lib/post_creator.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/post_creator.rb?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -136,6 +136,12 @@ def valid?\n       return false unless skip_validations? || validate_child(topic_creator)\n     else\n       @topic = Topic.find_by(id: @opts[:topic_id])\n+\n+      if @topic.present? && @opts[:archetype] == Archetype.private_message\n+        errors.add(:base, I18n.t(:create_pm_on_existing_topic))\n+        return false\n+      end\n+\n       unless @topic.present? && (@opts[:skip_guardian] || guardian.can_create?(Post, @topic))\n         errors.add(:base, I18n.t(:topic_not_found))\n         return false"
    },
    {
      "sha": "8da5cdc059b4c6b82d8a800b859ded8da6ff04ab",
      "filename": "plugins/discourse-narrative-bot/lib/discourse_narrative_bot/advanced_user_narrative.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/advanced_user_narrative.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/advanced_user_narrative.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/advanced_user_narrative.rb?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -176,12 +176,12 @@ def start_advanced_track\n       if @post &&\n          @post.topic.private_message? &&\n          @post.topic.topic_allowed_users.pluck(:user_id).include?(@user.id)\n-\n-        opts = opts.merge(topic_id: @post.topic_id)\n       end\n \n       if @data[:topic_id]\n-        opts = opts.merge(topic_id: @data[:topic_id])\n+        opts = opts\n+          .merge(topic_id: @data[:topic_id])\n+          .except(:title, :target_usernames, :archetype)\n       end\n       post = reply_to(@post, raw, opts)\n "
    },
    {
      "sha": "8d033ac6be968e65d063f59d18d28d6e2893cc32",
      "filename": "plugins/discourse-narrative-bot/lib/discourse_narrative_bot/new_user_narrative.rb",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/new_user_narrative.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/new_user_narrative.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/plugins/discourse-narrative-bot/lib/discourse_narrative_bot/new_user_narrative.rb?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -208,7 +208,9 @@ def say_hello\n       end\n \n       if @data[:topic_id]\n-        opts = opts.merge(topic_id: @data[:topic_id])\n+        opts = opts\n+          .merge(topic_id: @data[:topic_id])\n+          .except(:title, :target_usernames, :archetype)\n       end\n \n       post = reply_to(@post, raw, opts)"
    },
    {
      "sha": "59042ed8e8098e3e32a6b19e3f77e81cc62cb85f",
      "filename": "spec/requests/posts_controller_spec.rb",
      "status": "modified",
      "additions": 21,
      "deletions": 0,
      "changes": 21,
      "blob_url": "https://github.com/discourse/discourse/blob/0ea11a9d497c504cf640fa9dea073cffcc43f265/spec/requests/posts_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0ea11a9d497c504cf640fa9dea073cffcc43f265/spec/requests/posts_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/posts_controller_spec.rb?ref=0ea11a9d497c504cf640fa9dea073cffcc43f265",
      "patch": "@@ -1126,6 +1126,27 @@\n         end\n       end\n \n+      context \"when topic_id is set\" do\n+        fab!(:topic) { Fabricate(:topic) }\n+\n+        it \"errors when creating a private post\" do\n+          user_2 = Fabricate(:user)\n+\n+          post \"/posts.json\", params: {\n+            raw: 'this is the test content',\n+            archetype: 'private_message',\n+            title: \"this is some post\",\n+            target_recipients: user_2.username,\n+            topic_id: topic.id\n+          }\n+\n+          expect(response.status).to eq(422)\n+          expect(JSON.parse(response.body)[\"errors\"]).to include(\n+            I18n.t(\"create_pm_on_existing_topic\")\n+          )\n+        end\n+      end\n+\n       context \"errors\" do\n         it \"does not succeed\" do\n           post \"/posts.json\", params: { raw: 'test' }"
    }
  ]
}
