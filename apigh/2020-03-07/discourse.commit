{
  "sha": "20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODoyMGNmYTdiODEwYzQ4MjkyZmU3ZmUwYjFhODRlOTJhMzAxZmI5ZmE4",
  "commit": {
    "author": {
      "name": "Bianca Nenciu",
      "email": "nbianca@users.noreply.github.com",
      "date": "2020-03-07T13:04:12Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-03-07T13:04:12Z"
    },
    "message": "FIX: Check if auth token exists before revocation (#9095)",
    "tree": {
      "sha": "0c8750125d44ea037a4024978ec2ab50bd657f41",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/0c8750125d44ea037a4024978ec2ab50bd657f41"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeY5vMCRBK7hj4Ov3rIwAAdHIIAHhMao5y8hFcTSTm7fvtapoc\nUj6fXfFDodu9AsB/WGNqhgS9TO3d3/jBs7BhkR5b4vu+j232YoJohDsMrqgKiyxk\nPmqjgIeUvGGdwXcNqxTj4CnCzCRtXPk2JJ6NoCdVGu4lb3vBsJT1nkaeZoXqV/3v\nKFWp+mcISFdxc/cdKDpj7EH1S4gVKQxiHUtyKvTjoXBLNJ2v9WWpj7M3nHSJxhBJ\nm39jo8DXfOjo6krCU7WqRDbfpT/xyuaikRXQ2DSOk3dBRHiKB/zdz78TuO6iMdQs\nH6MuY8/IgNy0IOYk+cwJ6NhUxec/6LgNRAkLzFWGxeTANxSHwMkAesbUoQwFP0o=\n=OENG\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 0c8750125d44ea037a4024978ec2ab50bd657f41\nparent f14dd1f82d4742142734fc2c4cfe63777c320963\nauthor Bianca Nenciu <nbianca@users.noreply.github.com> 1583586252 +0200\ncommitter GitHub <noreply@github.com> 1583586252 +0200\n\nFIX: Check if auth token exists before revocation (#9095)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
  "html_url": "https://github.com/discourse/discourse/commit/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8/comments",
  "author": {
    "login": "nbianca",
    "id": 23153890,
    "node_id": "MDQ6VXNlcjIzMTUzODkw",
    "avatar_url": "https://avatars3.githubusercontent.com/u/23153890?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nbianca",
    "html_url": "https://github.com/nbianca",
    "followers_url": "https://api.github.com/users/nbianca/followers",
    "following_url": "https://api.github.com/users/nbianca/following{/other_user}",
    "gists_url": "https://api.github.com/users/nbianca/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nbianca/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nbianca/subscriptions",
    "organizations_url": "https://api.github.com/users/nbianca/orgs",
    "repos_url": "https://api.github.com/users/nbianca/repos",
    "events_url": "https://api.github.com/users/nbianca/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nbianca/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f14dd1f82d4742142734fc2c4cfe63777c320963",
      "url": "https://api.github.com/repos/discourse/discourse/commits/f14dd1f82d4742142734fc2c4cfe63777c320963",
      "html_url": "https://github.com/discourse/discourse/commit/f14dd1f82d4742142734fc2c4cfe63777c320963"
    }
  ],
  "stats": {
    "total": 16,
    "additions": 15,
    "deletions": 1
  },
  "files": [
    {
      "sha": "6afac2bacb90eab63a8d495797bd9d559adb3e88",
      "filename": "app/controllers/users_controller.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8/app/controllers/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8/app/controllers/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users_controller.rb?ref=20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
      "patch": "@@ -1347,7 +1347,7 @@ def revoke_auth_token\n     if params[:token_id]\n       token = UserAuthToken.find_by(id: params[:token_id], user_id: user.id)\n       # The user should not be able to revoke the auth token of current session.\n-      raise Discourse::InvalidParameters.new(:token_id) if guardian.auth_token == token.auth_token\n+      raise Discourse::InvalidParameters.new(:token_id) if !token || guardian.auth_token == token.auth_token\n       UserAuthToken.where(id: params[:token_id], user_id: user.id).each(&:destroy!)\n \n       MessageBus.publish \"/file-change\", [\"refresh\"], user_ids: [user.id]"
    },
    {
      "sha": "05077074820b0686ceb87f04cb19df86a4eacbea",
      "filename": "spec/requests/users_controller_spec.rb",
      "status": "modified",
      "additions": 14,
      "deletions": 0,
      "changes": 14,
      "blob_url": "https://github.com/discourse/discourse/blob/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8/spec/requests/users_controller_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8/spec/requests/users_controller_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/requests/users_controller_spec.rb?ref=20cfa7b810c48292fe7fe0b1a84e92a301fb9fa8",
      "patch": "@@ -3935,6 +3935,20 @@ def revoke(user, skip_remote: false)\n         expect(user.user_auth_tokens.first.id).to eq(ids[1])\n       end\n \n+      it 'checks if token exists' do\n+        ids = user.user_auth_tokens.order(:created_at).pluck(:id)\n+\n+        post \"/u/#{user.username}/preferences/revoke-auth-token.json\",\n+          params: { token_id: ids[0] }\n+\n+        expect(response.status).to eq(200)\n+\n+        post \"/u/#{user.username}/preferences/revoke-auth-token.json\",\n+          params: { token_id: ids[0] }\n+\n+        expect(response.status).to eq(400)\n+      end\n+\n       it 'does not let user log out of current session' do\n         token = UserAuthToken.generate!(user_id: user.id)\n         env = Rack::MockRequest.env_for(\"/\", \"HTTP_COOKIE\" => \"_t=#{token.unhashed_auth_token};\")"
    }
  ]
}
