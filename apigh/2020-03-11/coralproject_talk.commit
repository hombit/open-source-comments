{
  "sha": "7abd703f72bb3ee7808539927750355649063174",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6N2FiZDcwM2Y3MmJiM2VlNzgwODUzOTkyNzc1MDM1NTY0OTA2MzE3NA==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-03-10T20:46:44Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-03-10T20:46:44Z"
    },
    "message": "fix: addressed issues with cache headers (#2873)\n\nCo-authored-by: Kim Gardner <kgardnr@gmail.com>",
    "tree": {
      "sha": "5634402746c72e58a0330ec76408696b9856efe1",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/5634402746c72e58a0330ec76408696b9856efe1"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/7abd703f72bb3ee7808539927750355649063174",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeZ/y0CRBK7hj4Ov3rIwAAdHIIAD6h7i8XoNWZ+aoAwwH3Fw3R\nqadtwexjXeGvjSYnkIv/6PXaDwLZA/fwZMVN3GW3lW4z5xKPBKIC/T4P2IMGUWtt\nJ3Twm5anoY0Z/HmmPOQFQWni/lTUI+wSkrPvjZQEEptRxu9dWMM8u4L4xt3j7gVb\nP5WzTjIm6+423wiK3UdYz7cSFlpwBuJ554EPM1tiP7AgIJwOnrj6gFS64Iwuuxnm\nWSst7A4bmmy0igFLgmXcuIWDJI/18S5mWxOoqhKccy/mZ2Btn0ufV+hw1TGaRJ4M\nMOb/Dx81j1+hFZ2VEDo18b5Vjb155cCo8qW/mOTMz6gfnhuTGj/Lc/XYDntMwok=\n=zzxW\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 5634402746c72e58a0330ec76408696b9856efe1\nparent 6f1014289bd8efd57526acacc4803ed6e17fb9b6\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1583873204 +0000\ncommitter GitHub <noreply@github.com> 1583873204 -0400\n\nfix: addressed issues with cache headers (#2873)\n\nCo-authored-by: Kim Gardner <kgardnr@gmail.com>"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/7abd703f72bb3ee7808539927750355649063174",
  "html_url": "https://github.com/coralproject/talk/commit/7abd703f72bb3ee7808539927750355649063174",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/7abd703f72bb3ee7808539927750355649063174/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6f1014289bd8efd57526acacc4803ed6e17fb9b6",
      "url": "https://api.github.com/repos/coralproject/talk/commits/6f1014289bd8efd57526acacc4803ed6e17fb9b6",
      "html_url": "https://github.com/coralproject/talk/commit/6f1014289bd8efd57526acacc4803ed6e17fb9b6"
    }
  ],
  "stats": {
    "total": 60,
    "additions": 39,
    "deletions": 21
  },
  "files": [
    {
      "sha": "100fbc652b3af0fdac53171e3ed360e65b4fd24c",
      "filename": "src/core/server/app/router/api/account.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/account.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/account.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/account.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -1,5 +1,4 @@\n import bodyParser from \"body-parser\";\n-import express from \"express\";\n \n import { AppOptions } from \"coral-server/app\";\n import {\n@@ -17,11 +16,13 @@ import { jsonMiddleware } from \"coral-server/app/middleware/json\";\n import { authenticate } from \"coral-server/app/middleware/passport\";\n import { RouterOptions } from \"coral-server/app/router/types\";\n \n+import { createAPIRouter } from \"./helpers\";\n+\n export function createNewAccountRouter(\n   app: AppOptions,\n   { passport }: Pick<RouterOptions, \"passport\">\n ) {\n-  const router = express.Router();\n+  const router = createAPIRouter();\n \n   router.post(\n     \"/confirm\","
    },
    {
      "sha": "6bc5e1b5609fb82b37262dbfdd6d0100bc76adbe",
      "filename": "src/core/server/app/router/api/auth.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/auth.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/auth.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/auth.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -19,6 +19,8 @@ import {\n } from \"coral-server/app/middleware/passport\";\n import { RouterOptions } from \"coral-server/app/router/types\";\n \n+import { createAPIRouter } from \"./helpers\";\n+\n function wrapPath(\n   app: AppOptions,\n   { passport }: Pick<RouterOptions, \"passport\">,\n@@ -36,7 +38,7 @@ export function createNewAuthRouter(\n   app: AppOptions,\n   { passport }: Pick<RouterOptions, \"passport\">\n ) {\n-  const router = express.Router();\n+  const router = createAPIRouter();\n \n   // Mount the Local Authentication handlers.\n   router.post("
    },
    {
      "sha": "9dc08e196c447a43925103acfcf4c5ddbe9a6b36",
      "filename": "src/core/server/app/router/api/helpers.ts",
      "status": "added",
      "additions": 16,
      "deletions": 0,
      "changes": 16,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/helpers.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/helpers.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/helpers.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -0,0 +1,16 @@\n+import express from \"express\";\n+\n+import { cacheHeadersMiddleware } from \"coral-server/app/middleware/cacheHeaders\";\n+\n+interface Options {\n+  cache?: false | string;\n+}\n+\n+export function createAPIRouter({ cache = false }: Options = {}) {\n+  const router = express.Router();\n+\n+  // Add the cache headers middleware.\n+  router.use(cacheHeadersMiddleware(cache));\n+\n+  return router;\n+}"
    },
    {
      "sha": "cc138c48d0f467f415af7cd4db1513cad83ab9dc",
      "filename": "src/core/server/app/router/api/index.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/index.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -36,14 +36,16 @@ export function createAPIRouter(app: AppOptions, options: RouterOptions) {\n   // only proceed if there is a valid Tenant for the hostname.\n   router.use(tenantMiddleware({ cache: app.tenantCache }));\n \n+  // We don't need auth for the story router, so mount it earlier.\n+  router.use(\"/story\", createStoryRouter(app));\n+\n   // Setup Passport middleware.\n   router.use(passport.initialize());\n \n   // Create the auth router.\n   router.use(\"/auth\", createNewAuthRouter(app, options));\n   router.use(\"/account\", createNewAccountRouter(app, options));\n   router.use(\"/user\", createNewUserRouter(app));\n-  router.use(\"/story\", createStoryRouter(app));\n \n   // Configure the GraphQL route.\n   router.use("
    },
    {
      "sha": "a270548b3d7b3beba3215db76354b7862a96a3ea",
      "filename": "src/core/server/app/router/api/install.ts",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/install.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/install.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/install.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -1,13 +1,15 @@\n-import express, { Router } from \"express\";\n+import { Router } from \"express\";\n \n import { AppOptions } from \"coral-server/app\";\n import { installCheckHandler, installHandler } from \"coral-server/app/handlers\";\n import { jsonMiddleware } from \"coral-server/app/middleware/json\";\n import { tenantMiddleware } from \"coral-server/app/middleware/tenant\";\n \n+import { createAPIRouter } from \"./helpers\";\n+\n export function createNewInstallRouter(app: AppOptions): Router {\n   // Create a router.\n-  const router = express.Router();\n+  const router = createAPIRouter();\n \n   router.get(\n     \"/\","
    },
    {
      "sha": "cdd6fd1c24bf6076466c202d95346c992e4abbca",
      "filename": "src/core/server/app/router/api/story.ts",
      "status": "modified",
      "additions": 6,
      "deletions": 6,
      "changes": 12,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/story.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/story.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/story.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -1,13 +1,13 @@\n-import express from \"express\";\n-\n import { AppOptions } from \"coral-server/app\";\n import { countHandler } from \"coral-server/app/handlers\";\n-import { cacheHeadersMiddleware } from \"coral-server/app/middleware/cacheHeaders\";\n \n-export function createStoryRouter(app: AppOptions) {\n-  const router = express.Router();\n+import { createAPIRouter } from \"./helpers\";\n \n+export function createStoryRouter(app: AppOptions) {\n   // TODO: (cvle) make caching time configurable?\n-  router.get(\"/count.js\", cacheHeadersMiddleware(\"2m\"), countHandler(app));\n+  const router = createAPIRouter({ cache: \"2m\" });\n+\n+  router.get(\"/count.js\", countHandler(app));\n+\n   return router;\n }"
    },
    {
      "sha": "d954dd0e07a590825a2621b29348769d0e9a0b0a",
      "filename": "src/core/server/app/router/api/user.ts",
      "status": "modified",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/user.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/api/user.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/api/user.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -1,10 +1,10 @@\n-import express from \"express\";\n-\n import { AppOptions } from \"coral-server/app\";\n import { userDownloadHandler } from \"coral-server/app/handlers\";\n \n+import { createAPIRouter } from \"./helpers\";\n+\n export function createNewUserRouter(app: AppOptions) {\n-  const router = express.Router();\n+  const router = createAPIRouter();\n \n   router.get(\"/download\", userDownloadHandler(app));\n "
    },
    {
      "sha": "7696dd0a70b9c8377f762259757ac0ec5340ec98",
      "filename": "src/core/server/app/router/index.ts",
      "status": "modified",
      "additions": 1,
      "deletions": 6,
      "changes": 7,
      "blob_url": "https://github.com/coralproject/talk/blob/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/index.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/7abd703f72bb3ee7808539927750355649063174/src/core/server/app/router/index.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/app/router/index.ts?ref=7abd703f72bb3ee7808539927750355649063174",
      "patch": "@@ -18,12 +18,7 @@ export function createRouter(app: AppOptions, options: RouterOptions) {\n   const router = express.Router();\n \n   // Attach the API router.\n-  router.use(\n-    \"/api\",\n-    noCacheMiddleware,\n-    cookies(),\n-    createAPIRouter(app, options)\n-  );\n+  router.use(\"/api\", cookies(), createAPIRouter(app, options));\n \n   // Attach the GraphiQL if enabled.\n   if (app.config.get(\"enable_graphiql\")) {"
    }
  ]
}
