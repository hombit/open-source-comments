{
  "sha": "ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplYzJkNDlkNDhhOTU3NmE5ZDA3ZjJjOTliNDliZjNmNmI3OWNkMzJm",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2020-03-12T16:35:28Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-03-12T16:35:28Z"
    },
    "message": "DEV: Allow plugins to add theme modifiers via db migrations (#9192)",
    "tree": {
      "sha": "f0ea5fc214f161ec6d009246fb4ead3e53809450",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/f0ea5fc214f161ec6d009246fb4ead3e53809450"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeamTRCRBK7hj4Ov3rIwAAdHIIAJkTjP5fBep3T07E90IYw3jM\nU0D7dUVGZ51o21f7VLwtF5bf4PiEoujSw7sGwxmhsggwtV5PFH7S52HnSqLkMANo\n1FtYI8I/EYowlzfXYl82g7mcRi7J04bJMYB4RiISTsO6FqE9QYFcUbNSX1Aopbvf\nlHOP4zBaXrSLrdJ7DEmi4I/bwZG3BjtBGzH/aQDjaGHjtlOm4+hsf1DZ6Ho2inLK\n7bSEoBzMbEM5tGX3Wkhh8AaPLIHgiSLMElj6Q4V17bkRHQ1V9p/2nhO83UwZ/9QM\n4Z9OuGT5s5iB0ASeKu11xlvkc+H5sFc1vEGfwDYbmyMo6V/wxdez+AbSjwhGIoY=\n=rjx6\n-----END PGP SIGNATURE-----\n",
      "payload": "tree f0ea5fc214f161ec6d009246fb4ead3e53809450\nparent 6102c287f776682c63be1ffb6554622267fe2522\nauthor David Taylor <david@taylorhq.com> 1584030928 +0000\ncommitter GitHub <noreply@github.com> 1584030928 +0000\n\nDEV: Allow plugins to add theme modifiers via db migrations (#9192)\n\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
  "html_url": "https://github.com/discourse/discourse/commit/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "6102c287f776682c63be1ffb6554622267fe2522",
      "url": "https://api.github.com/repos/discourse/discourse/commits/6102c287f776682c63be1ffb6554622267fe2522",
      "html_url": "https://github.com/discourse/discourse/commit/6102c287f776682c63be1ffb6554622267fe2522"
    }
  ],
  "stats": {
    "total": 53,
    "additions": 40,
    "deletions": 13
  },
  "files": [
    {
      "sha": "e95fe25c51754eea5e1d7370b1ce6cfde8aad018",
      "filename": "app/models/remote_theme.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/remote_theme.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/remote_theme.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/remote_theme.rb?ref=ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
      "patch": "@@ -145,7 +145,7 @@ def update_from_remote(importer = nil, skip_update: false)\n       raise ImportError, I18n.t(\"themes.import_error.about_json_values\", errors: self.errors.full_messages.join(\",\"))\n     end\n \n-    ThemeModifierSet::MODIFIERS.keys.each do |modifier_name|\n+    ThemeModifierSet.modifiers.keys.each do |modifier_name|\n       theme.theme_modifier_set.public_send(:\"#{modifier_name}=\", theme_info.dig(\"modifiers\", modifier_name.to_s))\n     end\n     if !theme.theme_modifier_set.valid?"
    },
    {
      "sha": "c20e04d9053bd41086524752fb139e8b54366d5b",
      "filename": "app/models/theme.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/theme.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/theme.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/theme.rb?ref=ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
      "patch": "@@ -538,7 +538,7 @@ def generate_metadata_hash\n       end\n \n       meta[:modifiers] = {}.tap do |hash|\n-        ThemeModifierSet::MODIFIERS.keys.each do |modifier|\n+        ThemeModifierSet.modifiers.keys.each do |modifier|\n           value = self.theme_modifier_set.public_send(modifier)\n           hash[modifier] = value if !value.nil?\n         end"
    },
    {
      "sha": "99a8818f58cae9d12fa296e7f34a2235f7a7fd7a",
      "filename": "app/models/theme_modifier_set.rb",
      "status": "modified",
      "additions": 31,
      "deletions": 10,
      "changes": 41,
      "blob_url": "https://github.com/discourse/discourse/blob/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/theme_modifier_set.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/app/models/theme_modifier_set.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/models/theme_modifier_set.rb?ref=ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
      "patch": "@@ -4,16 +4,14 @@ class ThemeModifierSetError < StandardError; end\n \n   belongs_to :theme\n \n-  MODIFIERS ||= {\n-    serialize_topic_excerpts: { combine_mode: :any, type: :boolean },\n-    csp_extensions: { combine_mode: :flatten, type: :string_array },\n-    svg_icons: { combine_mode: :flatten, type: :string_array },\n-  }\n+  def self.modifiers\n+    @modifiers ||= self.load_modifiers\n+  end\n \n   validate :type_validator\n \n   def type_validator\n-    MODIFIERS.each do |k, config|\n+    ThemeModifierSet.modifiers.each do |k, config|\n       value = public_send(k)\n       next if value.nil?\n \n@@ -39,18 +37,41 @@ def type_validator\n   # Given the ids of multiple active themes / theme components, this function\n   # will combine them into a 'resolved' behavior\n   def self.resolve_modifier_for_themes(theme_ids, modifier_name)\n-    return nil if !(config = MODIFIERS[modifier_name])\n+    return nil if !(config = self.modifiers[modifier_name])\n \n     all_values = self.where(theme_id: theme_ids).where.not(modifier_name => nil).pluck(modifier_name)\n-    case config[:combine_mode]\n-    when :any\n+    case config[:type]\n+    when :boolean\n       all_values.any?\n-    when :flatten\n+    when :string_array\n       all_values.flatten(1)\n     else\n       raise ThemeModifierSetError \"Invalid theme modifier combine_mode\"\n     end\n   end\n+\n+  private\n+\n+  # Build the list of modifiers from the DB schema.\n+  # This allows plugins to introduce new modifiers by adding columns to the table\n+  def self.load_modifiers\n+    hash = {}\n+    columns_hash.each do |column_name, info|\n+      next if [\"id\", \"theme_id\"].include?(column_name)\n+\n+      type = nil\n+      if info.type == :string && info.array?\n+        type = :string_array\n+      elsif info.type == :boolean && !info.array?\n+        type = :boolean\n+      else\n+        raise ThemeModifierSetError \"Invalid theme modifier column type\" if ![:boolean, :string].include?(info.type)\n+      end\n+\n+      hash[column_name.to_sym] = { type: type }\n+    end\n+    hash\n+  end\n end\n \n # == Schema Information"
    },
    {
      "sha": "74f49b322a1c137ba44b12e4035e34389ea80000",
      "filename": "lib/theme_modifier_helper.rb",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/discourse/discourse/blob/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/lib/theme_modifier_helper.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/lib/theme_modifier_helper.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/theme_modifier_helper.rb?ref=ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
      "patch": "@@ -4,7 +4,7 @@ def initialize(request: nil, theme_ids: nil)\n     @theme_ids = theme_ids || request&.env&.[](:resolved_theme_ids)\n   end\n \n-  ThemeModifierSet::MODIFIERS.keys.each do |modifier|\n+  ThemeModifierSet.modifiers.keys.each do |modifier|\n     define_method(modifier) do\n       Theme.lookup_modifier(@theme_ids, modifier)\n     end"
    },
    {
      "sha": "9e7cbf0e021685eb55265de57ad92aed3a6babfb",
      "filename": "spec/models/theme_modifier_set_spec.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 0,
      "changes": 6,
      "blob_url": "https://github.com/discourse/discourse/blob/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/spec/models/theme_modifier_set_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f/spec/models/theme_modifier_set_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/theme_modifier_set_spec.rb?ref=ec2d49d48a9576a9d07f2c99b49bf3f6b79cd32f",
      "patch": "@@ -20,5 +20,11 @@\n \n       expect(ThemeModifierSet.resolve_modifier_for_themes([t1.id, t2.id], :serialize_topic_excerpts)).to eq(false)\n     end\n+\n+    it \"builds modifiers list from database\" do\n+      expect(ThemeModifierSet.modifiers.keys).to include(:serialize_topic_excerpts, :csp_extensions)\n+      expect(ThemeModifierSet.modifiers[:serialize_topic_excerpts][:type]).to eq(:boolean)\n+      expect(ThemeModifierSet.modifiers[:csp_extensions][:type]).to eq(:string_array)\n+    end\n   end\n end"
    }
  ]
}
