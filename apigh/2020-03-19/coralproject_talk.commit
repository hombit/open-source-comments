{
  "sha": "78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
  "node_id": "MDY6Q29tbWl0NzI0NTQyNDI6NzhjZmI0Y2FjODU2ZDY1ZWJmODc2MGUxMWM0ODU3N2QzMGJiN2ZkMg==",
  "commit": {
    "author": {
      "name": "Wyatt Johnson",
      "email": "wyattjoh@gmail.com",
      "date": "2020-03-18T20:53:16Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-03-18T20:53:16Z"
    },
    "message": "fix: added more checks to migration (#2894)",
    "tree": {
      "sha": "9a65e59c1d6d0550519751f9880090bb2ae36fdd",
      "url": "https://api.github.com/repos/coralproject/talk/git/trees/9a65e59c1d6d0550519751f9880090bb2ae36fdd"
    },
    "url": "https://api.github.com/repos/coralproject/talk/git/commits/78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJecoo8CRBK7hj4Ov3rIwAAdHIIABK2Bm7BnpI7rsdhOUbfIdPZ\nHEiEQA3POEcDJ2nx/sPSbk+Z4HRUJ1FvRXDsxSDiqD1ZhqmdosSiZbuqECGp54bC\nc+0ERIgW1N2ICPHGU0q/mxDGkFOVkejiKHZ5ypWVMpOMDb7BY0EUFxwjUUUPt7Dm\nGu96qVuMGMd4vjffB7p1CcFz46lzG3EdQNMqsm7bjPJvxRJsSP3d9jf9jSJn8OGJ\nn/iT5Nrtif+fDd6NfKdZu/KVHkH/mdqYQrxrfC1FWEoDEWLU/Ldc7s3lM2eF2K85\nub0IYA/eCtasOiIQWvIxXFH/1I/EIArDbIKl7kWpyliQOxFpjMEgJPSwCdYe16g=\n=jwmX\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 9a65e59c1d6d0550519751f9880090bb2ae36fdd\nparent d513e3807abb128b059adcaeb2733c5bbbc16bef\nauthor Wyatt Johnson <wyattjoh@gmail.com> 1584564796 +0000\ncommitter GitHub <noreply@github.com> 1584564796 +0000\n\nfix: added more checks to migration (#2894)\n\n"
    }
  },
  "url": "https://api.github.com/repos/coralproject/talk/commits/78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
  "html_url": "https://github.com/coralproject/talk/commit/78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
  "comments_url": "https://api.github.com/repos/coralproject/talk/commits/78cfb4cac856d65ebf8760e11c48577d30bb7fd2/comments",
  "author": {
    "login": "wyattjoh",
    "id": 633002,
    "node_id": "MDQ6VXNlcjYzMzAwMg==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/633002?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wyattjoh",
    "html_url": "https://github.com/wyattjoh",
    "followers_url": "https://api.github.com/users/wyattjoh/followers",
    "following_url": "https://api.github.com/users/wyattjoh/following{/other_user}",
    "gists_url": "https://api.github.com/users/wyattjoh/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wyattjoh/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wyattjoh/subscriptions",
    "organizations_url": "https://api.github.com/users/wyattjoh/orgs",
    "repos_url": "https://api.github.com/users/wyattjoh/repos",
    "events_url": "https://api.github.com/users/wyattjoh/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wyattjoh/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "d513e3807abb128b059adcaeb2733c5bbbc16bef",
      "url": "https://api.github.com/repos/coralproject/talk/commits/d513e3807abb128b059adcaeb2733c5bbbc16bef",
      "html_url": "https://github.com/coralproject/talk/commit/d513e3807abb128b059adcaeb2733c5bbbc16bef"
    }
  ],
  "stats": {
    "total": 100,
    "additions": 69,
    "deletions": 31
  },
  "files": [
    {
      "sha": "b91ebd5f9ec9bcedf3c0656e88b8c8706f5b5216",
      "filename": "package.json",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/coralproject/talk/blob/78cfb4cac856d65ebf8760e11c48577d30bb7fd2/package.json",
      "raw_url": "https://github.com/coralproject/talk/raw/78cfb4cac856d65ebf8760e11c48577d30bb7fd2/package.json",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/package.json?ref=78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
      "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"@coralproject/talk\",\n-  \"version\": \"6.0.0\",\n+  \"version\": \"6.0.1\",\n   \"author\": \"The Coral Project\",\n   \"homepage\": \"https://coralproject.net/\",\n   \"sideEffects\": ["
    },
    {
      "sha": "81e1992576a3aa32338b58f18bc637a744d1e49e",
      "filename": "src/core/server/services/migrate/migrations/1579189174931_create_sites.ts",
      "status": "modified",
      "additions": 68,
      "deletions": 30,
      "changes": 98,
      "blob_url": "https://github.com/coralproject/talk/blob/78cfb4cac856d65ebf8760e11c48577d30bb7fd2/src/core/server/services/migrate/migrations/1579189174931_create_sites.ts",
      "raw_url": "https://github.com/coralproject/talk/raw/78cfb4cac856d65ebf8760e11c48577d30bb7fd2/src/core/server/services/migrate/migrations/1579189174931_create_sites.ts",
      "contents_url": "https://api.github.com/repos/coralproject/talk/contents/src/core/server/services/migrate/migrations/1579189174931_create_sites.ts?ref=78cfb4cac856d65ebf8760e11c48577d30bb7fd2",
      "patch": "@@ -16,6 +16,7 @@ import {\n import {\n   createSite,\n   getURLOrigins,\n+  retrieveTenantSites,\n   Site,\n   updateSiteCounts,\n } from \"coral-server/models/site\";\n@@ -24,68 +25,99 @@ import Migration from \"coral-server/services/migrate/migration\";\n import collections from \"coral-server/services/mongodb/collections\";\n \n import { MigrationError } from \"../error\";\n+import { createIndexesFactory } from \"../indexing\";\n \n interface OldTenant extends Tenant {\n   allowedDomains: string[];\n }\n \n-export default class extends Migration {\n-  private async createSite(mongo: Db, tenant: Readonly<OldTenant>) {\n-    const {\n-      organization: { name },\n-      domain,\n-      allowedDomains,\n-    } = tenant;\n+async function findOrCreateSite(\n+  mongo: Db,\n+  tenant: Readonly<OldTenant>\n+): Promise<Site> {\n+  // Get all the sites attached to this Tenant (if there are any).\n+  const sites = await retrieveTenantSites(mongo, tenant.id);\n+  if (sites && sites.length > 0) {\n+    // There was at least one site! If there is exactly one, then return it,\n+    // otherwise there is more than one site.\n+    if (sites.length === 1) {\n+      return sites[0];\n+    }\n \n-    // Convert a tenant's domains into origins that we will re-use on the site.\n-    const allowedOrigins = getURLOrigins([...allowedDomains, domain]);\n+    // There were more than 1 site! We can't handle this case.\n+    throw new Error(\"more than one site for this tenant is available\");\n+  }\n \n-    // Create the new site.\n-    const site = await createSite(mongo, {\n-      name,\n-      tenantID: tenant.id,\n-      allowedOrigins,\n-    });\n+  // Convert a tenant's domains into origins that we will re-use on the site.\n+  const allowedOrigins = getURLOrigins([\n+    ...tenant.allowedDomains,\n+    tenant.domain,\n+  ]);\n+\n+  return createSite(mongo, {\n+    tenantID: tenant.id,\n+    name: tenant.organization.name,\n+    allowedOrigins,\n+  });\n+}\n \n-    this.logger.info({ site }, \"created site\");\n+export default class extends Migration {\n+  private async findOrCreateSite(mongo: Db, tenant: Readonly<OldTenant>) {\n+    // Try to find the site.\n+    const site = await findOrCreateSite(mongo, tenant);\n+\n+    this.log(tenant.id).info(\"starting stories migration\");\n \n     // Add the siteID to all the stories.\n     let result = await collections\n       .stories(mongo)\n-      .updateMany({ tenantID: tenant.id }, { $set: { siteID: site.id } });\n+      .updateMany(\n+        { tenantID: tenant.id, siteID: null },\n+        { $set: { siteID: site.id } }\n+      );\n \n     this.log(tenant.id).info(\n       {\n         matchedCount: result.matchedCount,\n         modifiedCount: result.modifiedCount,\n       },\n-      \"added siteID to stories\"\n+      \"finished stories migration\"\n     );\n \n+    this.log(tenant.id).info(\"starting comments migration\");\n+\n     // Add the siteID to all comments.\n     result = await collections\n       .comments(mongo)\n-      .updateMany({ tenantID: tenant.id }, { $set: { siteID: site.id } });\n+      .updateMany(\n+        { tenantID: tenant.id, siteID: null },\n+        { $set: { siteID: site.id } }\n+      );\n \n     this.log(tenant.id).info(\n       {\n         matchedCount: result.matchedCount,\n         modifiedCount: result.modifiedCount,\n       },\n-      \"added siteID to comments\"\n+      \"finished comments migration\"\n     );\n \n+    this.log(tenant.id).info(\"starting commentActions migration\");\n+\n     // Add the siteID to all commentActions.\n     result = await collections\n       .commentActions(mongo)\n-      .updateMany({ tenantID: tenant.id }, { $set: { siteID: site.id } });\n+      .updateMany(\n+        { tenantID: tenant.id, siteID: null },\n+        { $set: { siteID: site.id } }\n+      );\n \n     this.log(tenant.id).info(\n       {\n         matchedCount: result.matchedCount,\n         modifiedCount: result.modifiedCount,\n       },\n-      \"added siteID to commentActions\"\n+      \"finished commentActions migration\"\n     );\n \n     return site;\n@@ -216,20 +248,26 @@ export default class extends Migration {\n       ]);\n     }\n \n-    // Try to find any site to see if this migration is needed.\n-    let site = await collections.sites(mongo).findOne({ tenantID });\n-    if (site) {\n-      this.log(tenantID).info({ site }, \"site has already been created\");\n-      return;\n-    }\n-\n     // Create the site.\n-    site = await this.createSite(mongo, tenant);\n+    const site = await this.findOrCreateSite(mongo, tenant);\n \n     // Update the story action counts on the stories.\n     await this.updateStoryActionCommentCounts(mongo, tenant);\n \n     // Update the site comment counts from the stories.\n     await this.updateCommentCounts(mongo, tenant, site);\n   }\n+\n+  public async indexes(mongo: Db) {\n+    // Create the indexes factory.\n+    const index = createIndexesFactory(mongo);\n+\n+    // Add indexes for { tenantID, siteID }.\n+    await index.comments({ tenantID: 1, siteID: 1 }, { background: true });\n+    await index.stories({ tenantID: 1, siteID: 1 }, { background: true });\n+    await index.commentActions(\n+      { tenantID: 1, siteID: 1 },\n+      { background: true }\n+    );\n+  }\n }"
    }
  ]
}
