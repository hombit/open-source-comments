{
  "sha": "bca126f3f523d5667fe0f92c2a29c68f438103bb",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODpiY2ExMjZmM2Y1MjNkNTY2N2ZlMGY5MmMyYTI5YzY4ZjQzODEwM2Ji",
  "commit": {
    "author": {
      "name": "Daniel Waterworth",
      "email": "me@danielwaterworth.com",
      "date": "2020-03-30T11:01:06Z"
    },
    "committer": {
      "name": "Daniel Waterworth",
      "email": "me@danielwaterworth.com",
      "date": "2020-04-02T15:44:44Z"
    },
    "message": "REFACTOR: Move the multisite middleware to the front\n\nBoth request tracking and message bus rely on multisite before the\nmiddleware has run which is not ideal.\n\nFollow-up-to: ca1208a63669d4d4ad7452367008d40fa090f645",
    "tree": {
      "sha": "2956460f8bd5fe53f41d1260febf479151cc9316",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/2956460f8bd5fe53f41d1260febf479151cc9316"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/bca126f3f523d5667fe0f92c2a29c68f438103bb",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/bca126f3f523d5667fe0f92c2a29c68f438103bb",
  "html_url": "https://github.com/discourse/discourse/commit/bca126f3f523d5667fe0f92c2a29c68f438103bb",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/bca126f3f523d5667fe0f92c2a29c68f438103bb/comments",
  "author": {
    "login": "danielwaterworth",
    "id": 663767,
    "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danielwaterworth",
    "html_url": "https://github.com/danielwaterworth",
    "followers_url": "https://api.github.com/users/danielwaterworth/followers",
    "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
    "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
    "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
    "repos_url": "https://api.github.com/users/danielwaterworth/repos",
    "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "danielwaterworth",
    "id": 663767,
    "node_id": "MDQ6VXNlcjY2Mzc2Nw==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/663767?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/danielwaterworth",
    "html_url": "https://github.com/danielwaterworth",
    "followers_url": "https://api.github.com/users/danielwaterworth/followers",
    "following_url": "https://api.github.com/users/danielwaterworth/following{/other_user}",
    "gists_url": "https://api.github.com/users/danielwaterworth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/danielwaterworth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/danielwaterworth/subscriptions",
    "organizations_url": "https://api.github.com/users/danielwaterworth/orgs",
    "repos_url": "https://api.github.com/users/danielwaterworth/repos",
    "events_url": "https://api.github.com/users/danielwaterworth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/danielwaterworth/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "724d2e99de9ed0d5331eb67458e2ab3f0d978d98",
      "url": "https://api.github.com/repos/discourse/discourse/commits/724d2e99de9ed0d5331eb67458e2ab3f0d978d98",
      "html_url": "https://github.com/discourse/discourse/commit/724d2e99de9ed0d5331eb67458e2ab3f0d978d98"
    }
  ],
  "stats": {
    "total": 45,
    "additions": 21,
    "deletions": 24
  },
  "files": [
    {
      "sha": "2647fd039a4bc124d63b3df827ca6890316f218e",
      "filename": "config/initializers/200-first_middlewares.rb",
      "status": "renamed",
      "additions": 15,
      "deletions": 2,
      "changes": 17,
      "blob_url": "https://github.com/discourse/discourse/blob/bca126f3f523d5667fe0f92c2a29c68f438103bb/config/initializers/200-first_middlewares.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/bca126f3f523d5667fe0f92c2a29c68f438103bb/config/initializers/200-first_middlewares.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/config/initializers/200-first_middlewares.rb?ref=bca126f3f523d5667fe0f92c2a29c68f438103bb",
      "patch": "@@ -1,9 +1,11 @@\n # frozen_string_literal: true\n \n-# we want MesageBus in the absolute front\n+# we want MesageBus to be close to the front\n # this is important cause the vast majority of web requests go to it\n # this allows us to avoid full middleware crawls each time\n-# Pending https://github.com/rails/rails/pull/27936\n+#\n+# We aren't manipulating the middleware stack directly because of\n+# https://github.com/rails/rails/pull/27936\n session_operations = Rails::Configuration::MiddlewareStackProxy.new([\n    [:delete, MessageBus::Rack::Middleware],\n    [:unshift, MessageBus::Rack::Middleware],\n@@ -21,3 +23,14 @@\n     MethodProfiler.ensure_discourse_instrumentation!\n   end\n end\n+\n+if Rails.configuration.multisite\n+  # Multisite needs to be first, because the request tracker and message bus\n+  # rely on it\n+  session_operations = Rails::Configuration::MiddlewareStackProxy.new([\n+     [:delete, RailsMultisite::Middleware],\n+     [:unshift, [RailsMultisite::Middleware, RailsMultisite::DiscoursePatches.config]],\n+  ])\n+\n+  Rails.configuration.middleware = Rails.configuration.middleware + session_operations\n+end",
      "previous_filename": "config/initializers/200-message_bus_request_tracker.rb"
    },
    {
      "sha": "c4627daa2a7a88a3fcd7c455246491f13fb50a1a",
      "filename": "lib/freedom_patches/rails_multisite.rb",
      "status": "renamed",
      "additions": 0,
      "deletions": 8,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/bca126f3f523d5667fe0f92c2a29c68f438103bb/lib/freedom_patches/rails_multisite.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/bca126f3f523d5667fe0f92c2a29c68f438103bb/lib/freedom_patches/rails_multisite.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/freedom_patches/rails_multisite.rb?ref=bca126f3f523d5667fe0f92c2a29c68f438103bb",
      "patch": "@@ -26,11 +26,3 @@ def self.config\n     end\n   end\n end\n-\n-if Rails.configuration.multisite\n-  Rails.configuration.middleware.swap(\n-    RailsMultisite::Middleware,\n-    RailsMultisite::Middleware,\n-    RailsMultisite::DiscoursePatches.config\n-  )\n-end",
      "previous_filename": "config/initializers/004-rails_multisite.rb"
    },
    {
      "sha": "4fbe3d1b2a3895c21302dbee95a048ee373e59e0",
      "filename": "lib/middleware/request_tracker.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 14,
      "changes": 20,
      "blob_url": "https://github.com/discourse/discourse/blob/bca126f3f523d5667fe0f92c2a29c68f438103bb/lib/middleware/request_tracker.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/bca126f3f523d5667fe0f92c2a29c68f438103bb/lib/middleware/request_tracker.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/lib/middleware/request_tracker.rb?ref=bca126f3f523d5667fe0f92c2a29c68f438103bb",
      "patch": "@@ -51,14 +51,6 @@ def initialize(app, settings = {})\n     @app = app\n   end\n \n-  def self.log_request_on_site(data, host)\n-    RailsMultisite::ConnectionManagement.with_hostname(host) do\n-      unless Discourse.pg_readonly_mode?\n-        log_request(data)\n-      end\n-    end\n-  end\n-\n   def self.log_request(data)\n     status = data[:status]\n     track_view = data[:track_view]\n@@ -135,7 +127,6 @@ def log_request_info(env, result, info)\n \n     # we got to skip this on error ... its just logging\n     data = self.class.get_data(env, result, info) rescue nil\n-    host = RailsMultisite::ConnectionManagement.host(env)\n \n     if data\n       if result && (headers = result[1])\n@@ -146,7 +137,7 @@ def log_request_info(env, result, info)\n         @@detailed_request_loggers.each { |logger| logger.call(env, data) }\n       end\n \n-      log_later(data, host)\n+      log_later(data)\n     end\n \n   end\n@@ -296,10 +287,11 @@ def rate_limit(request)\n     end\n   end\n \n-  def log_later(data, host)\n-    Scheduler::Defer.later(\"Track view\", _db = nil) do\n-      self.class.log_request_on_site(data, host)\n+  def log_later(data)\n+    Scheduler::Defer.later(\"Track view\") do\n+      unless Discourse.pg_readonly_mode?\n+        self.class.log_request(data)\n+      end\n     end\n   end\n-\n end"
    }
  ]
}
