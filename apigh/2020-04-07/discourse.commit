{
  "sha": "e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODplOGZhZDdhNjllZWUxMTQ5YmIwYTYyMDFiMmNjZGZlNzNkOGI4NmM5",
  "commit": {
    "author": {
      "name": "Neil Lalonde",
      "email": "neillalonde@gmail.com",
      "date": "2020-04-07T15:58:49Z"
    },
    "committer": {
      "name": "GitHub",
      "email": "noreply@github.com",
      "date": "2020-04-07T15:58:49Z"
    },
    "message": "DEV: changes so plugins can customize invites UI (#9365)\n\n* DEV: changes so plugins can customize invites UI\r\n\r\nCo-Authored-By: Robin Ward <robin.ward@gmail.com>",
    "tree": {
      "sha": "3ac5f886b3b36381525376d23cf350daec15c933",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/3ac5f886b3b36381525376d23cf350daec15c933"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejKM5CRBK7hj4Ov3rIwAAdHIIAEnLLwCfszD9Y1I2+rWZgTjE\nDYyDnvgNeqYJ9VHpCw+xX09kgEbp/LlPEqnjxFXDhZCmsMhUzCVXaJ8aHA1ykpP5\nK+wyGuv9OOQGmkNjohxZv5WC/E2TndMr34fuq8nxWnVeEu/KtbAQp3d0WD0o8/i/\nxLUrPf/M8FDdmtgyZF8y2bUQ5DMfNzfOM6116mRf4nyMEWzFj4LQJlSqVIw+q175\nqgzgnGa+Hj9q5mvMG604MJU3F75uOCJSl6icHGanOJVhX+5pEewZLAOsoiGU9ZLe\ntF7ozni/aXs8j5dvYhH+fMFo0ucMUijk7Og7kbg5x/hRfE/LybJNq7Ijz1v5eoQ=\n=aspA\n-----END PGP SIGNATURE-----\n",
      "payload": "tree 3ac5f886b3b36381525376d23cf350daec15c933\nparent 4f42bb1fd2519463d977c33155ef6f03a2bcd243\nauthor Neil Lalonde <neillalonde@gmail.com> 1586275129 -0400\ncommitter GitHub <noreply@github.com> 1586275129 -0400\n\nDEV: changes so plugins can customize invites UI (#9365)\n\n* DEV: changes so plugins can customize invites UI\r\n\r\nCo-Authored-By: Robin Ward <robin.ward@gmail.com>"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
  "html_url": "https://github.com/discourse/discourse/commit/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/comments",
  "author": {
    "login": "nlalonde",
    "id": 151885,
    "node_id": "MDQ6VXNlcjE1MTg4NQ==",
    "avatar_url": "https://avatars2.githubusercontent.com/u/151885?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nlalonde",
    "html_url": "https://github.com/nlalonde",
    "followers_url": "https://api.github.com/users/nlalonde/followers",
    "following_url": "https://api.github.com/users/nlalonde/following{/other_user}",
    "gists_url": "https://api.github.com/users/nlalonde/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nlalonde/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nlalonde/subscriptions",
    "organizations_url": "https://api.github.com/users/nlalonde/orgs",
    "repos_url": "https://api.github.com/users/nlalonde/repos",
    "events_url": "https://api.github.com/users/nlalonde/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nlalonde/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "web-flow",
    "id": 19864447,
    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19864447?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/web-flow",
    "html_url": "https://github.com/web-flow",
    "followers_url": "https://api.github.com/users/web-flow/followers",
    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
    "organizations_url": "https://api.github.com/users/web-flow/orgs",
    "repos_url": "https://api.github.com/users/web-flow/repos",
    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
    "received_events_url": "https://api.github.com/users/web-flow/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "4f42bb1fd2519463d977c33155ef6f03a2bcd243",
      "url": "https://api.github.com/repos/discourse/discourse/commits/4f42bb1fd2519463d977c33155ef6f03a2bcd243",
      "html_url": "https://github.com/discourse/discourse/commit/4f42bb1fd2519463d977c33155ef6f03a2bcd243"
    }
  ],
  "stats": {
    "total": 34,
    "additions": 32,
    "deletions": 2
  },
  "files": [
    {
      "sha": "06110e01130da4523d88f12d2ef241ea1968c608",
      "filename": "app/assets/javascripts/discourse/controllers/share-and-invite.js",
      "status": "added",
      "additions": 4,
      "deletions": 0,
      "changes": 4,
      "blob_url": "https://github.com/discourse/discourse/blob/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/assets/javascripts/discourse/controllers/share-and-invite.js",
      "raw_url": "https://github.com/discourse/discourse/raw/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/assets/javascripts/discourse/controllers/share-and-invite.js",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/assets/javascripts/discourse/controllers/share-and-invite.js?ref=e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
      "patch": "@@ -0,0 +1,4 @@\n+import Controller from \"@ember/controller\";\n+import ModalFunctionality from \"discourse/mixins/modal-functionality\";\n+\n+export default Controller.extend(ModalFunctionality);"
    },
    {
      "sha": "b3acc1f74cf397ab54ecd2f80884229a5c54d742",
      "filename": "app/controllers/users_controller.rb",
      "status": "modified",
      "additions": 6,
      "deletions": 2,
      "changes": 8,
      "blob_url": "https://github.com/discourse/discourse/blob/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/controllers/users_controller.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/controllers/users_controller.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/controllers/users_controller.rb?ref=e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
      "patch": "@@ -317,8 +317,12 @@ def invited\n       filter_sql = '(LOWER(invites.email) LIKE :filter) or (LOWER(users.username) LIKE :filter)' if show_emails\n       invites = invites.where(filter_sql, filter: \"%#{params[:search].downcase}%\")\n     end\n-    render_json_dump invites: serialize_data(invites.to_a, InviteSerializer, show_emails: show_emails),\n-                     can_see_invite_details: guardian.can_see_invite_details?(inviter)\n+\n+    render json: MultiJson.dump(InvitedSerializer.new(\n+      OpenStruct.new(invite_list: invites.to_a, show_emails: show_emails, inviter: inviter),\n+      scope: guardian,\n+      root: false\n+    ))\n   end\n \n   def invited_count"
    },
    {
      "sha": "c0b07faa866049857df39560c2580777d98fed2a",
      "filename": "app/serializers/invited_serializer.rb",
      "status": "added",
      "additions": 22,
      "deletions": 0,
      "changes": 22,
      "blob_url": "https://github.com/discourse/discourse/blob/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/serializers/invited_serializer.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9/app/serializers/invited_serializer.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/app/serializers/invited_serializer.rb?ref=e8fad7a69eee1149bb0a6201b2ccdfe73d8b86c9",
      "patch": "@@ -0,0 +1,22 @@\n+# frozen_string_literal: true\n+\n+class InvitedSerializer < ApplicationSerializer\n+  attributes :invites, :can_see_invite_details\n+\n+  def invites\n+    ActiveModel::ArraySerializer.new(\n+      object.invite_list,\n+      scope: scope,\n+      root: false,\n+      show_emails: object.show_emails\n+    ).as_json\n+  end\n+\n+  def can_see_invite_details\n+    scope.can_see_invite_details?(object.inviter)\n+  end\n+\n+  def read_attribute_for_serialization(attr)\n+    object.respond_to?(attr) ? object.public_send(attr) : public_send(attr)\n+  end\n+end"
    }
  ]
}
