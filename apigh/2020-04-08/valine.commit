{
  "sha": "32b31777bf97b175f449744ae2aaac7adcdf6fb2",
  "node_id": "MDY6Q29tbWl0OTkyNDI2NzE6MzJiMzE3NzdiZjk3YjE3NWY0NDk3NDRhZTJhYWFjN2FkY2RmNmZiMg==",
  "commit": {
    "author": {
      "name": "xcss",
      "email": "yy.liu@foxmail.com",
      "date": "2020-04-08T15:14:58Z"
    },
    "committer": {
      "name": "xcss",
      "email": "yy.liu@foxmail.com",
      "date": "2020-04-08T15:14:58Z"
    },
    "message": "Closed beta version",
    "tree": {
      "sha": "b1e7785ed2e6fed898ec6d31d5fea9e7dc90c5f4",
      "url": "https://api.github.com/repos/xCss/Valine/git/trees/b1e7785ed2e6fed898ec6d31d5fea9e7dc90c5f4"
    },
    "url": "https://api.github.com/repos/xCss/Valine/git/commits/32b31777bf97b175f449744ae2aaac7adcdf6fb2",
    "comment_count": 0,
    "verification": {
      "verified": false,
      "reason": "unsigned",
      "signature": null,
      "payload": null
    }
  },
  "url": "https://api.github.com/repos/xCss/Valine/commits/32b31777bf97b175f449744ae2aaac7adcdf6fb2",
  "html_url": "https://github.com/xCss/Valine/commit/32b31777bf97b175f449744ae2aaac7adcdf6fb2",
  "comments_url": "https://api.github.com/repos/xCss/Valine/commits/32b31777bf97b175f449744ae2aaac7adcdf6fb2/comments",
  "author": {
    "login": "xCss",
    "id": 10877162,
    "node_id": "MDQ6VXNlcjEwODc3MTYy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/10877162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xCss",
    "html_url": "https://github.com/xCss",
    "followers_url": "https://api.github.com/users/xCss/followers",
    "following_url": "https://api.github.com/users/xCss/following{/other_user}",
    "gists_url": "https://api.github.com/users/xCss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xCss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xCss/subscriptions",
    "organizations_url": "https://api.github.com/users/xCss/orgs",
    "repos_url": "https://api.github.com/users/xCss/repos",
    "events_url": "https://api.github.com/users/xCss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xCss/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "xCss",
    "id": 10877162,
    "node_id": "MDQ6VXNlcjEwODc3MTYy",
    "avatar_url": "https://avatars2.githubusercontent.com/u/10877162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xCss",
    "html_url": "https://github.com/xCss",
    "followers_url": "https://api.github.com/users/xCss/followers",
    "following_url": "https://api.github.com/users/xCss/following{/other_user}",
    "gists_url": "https://api.github.com/users/xCss/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xCss/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xCss/subscriptions",
    "organizations_url": "https://api.github.com/users/xCss/orgs",
    "repos_url": "https://api.github.com/users/xCss/repos",
    "events_url": "https://api.github.com/users/xCss/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xCss/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "f9a0659fe8a0edfb724a1a2bc161fe358d188103",
      "url": "https://api.github.com/repos/xCss/Valine/commits/f9a0659fe8a0edfb724a1a2bc161fe358d188103",
      "html_url": "https://github.com/xCss/Valine/commit/f9a0659fe8a0edfb724a1a2bc161fe358d188103"
    },
    {
      "sha": "6812ad04239117cd822feb3884598b6b5e9afc91",
      "url": "https://api.github.com/repos/xCss/Valine/commits/6812ad04239117cd822feb3884598b6b5e9afc91",
      "html_url": "https://github.com/xCss/Valine/commit/6812ad04239117cd822feb3884598b6b5e9afc91"
    }
  ],
  "stats": {
    "total": 342,
    "additions": 142,
    "deletions": 200
  },
  "files": [
    {
      "sha": "a78e667b77369bb8601ace9163e61fb23619e666",
      "filename": ".github/renovate.json",
      "status": "added",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/.github/renovate.json",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/.github/renovate.json",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/.github/renovate.json?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -0,0 +1,5 @@\n+{\n+    \"extends\": [\n+      \"config:base\"\n+    ]\n+  }\n\\ No newline at end of file"
    },
    {
      "sha": "ebfcb67c3f850e87890c68914794ebf37e61a22e",
      "filename": "package.json",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/package.json",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/package.json",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/package.json?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"valine\",\n-  \"version\": \"1.3.9\",\n+  \"version\": \"1.4.0\",\n   \"description\": \"A simple comment system based on Leancloud.\",\n   \"main\": \"/dist/Valine.min.js\",\n   \"author\": \"xCss <xioveliu@gmail.com> (https://github.com/xCss)\",\n@@ -42,7 +42,10 @@\n     \"style-loader\": \"^0.18.2\",\n     \"url-loader\": \"^0.6.2\",\n     \"webpack\": \"^2.6.1\",\n-    \"webpack-cli\": \"^3.3.0\",\n+    \"webpack-cli\": \"^3.3.5\",\n     \"webpack-dev-server\": \"^2.9.1\"\n+  },\n+  \"dependencies\": {\n+    \"leancloud-storage\": \"^3.0.4\"\n   }\n }"
    },
    {
      "sha": "c7dc8dd19c90fca010de62066ff5d94f3014f327",
      "filename": "src/index.js",
      "status": "modified",
      "additions": 129,
      "deletions": 124,
      "changes": 253,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/index.js",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/index.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/index.js?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -7,8 +7,7 @@ const detect = require('./utils/detect');\n const Utils = require('./utils/domUtils');\n const Emoji = require('./plugins/emojis');\n const hanabi = require('hanabi');\n-const LINKREG = /^https?\\:\\/\\//;\n-const AVSdkUri = '//cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js';\n+const AV = require('leancloud-storage');\n const defaultComment = {\n     comment: '',\n     nick: 'Anonymous',\n@@ -103,8 +102,7 @@ let _avatarSetting = {\n         hide: false\n     },\n     META = ['nick', 'mail', 'link'],\n-    _store = Storage && localStorage && localStorage instanceof Storage && localStorage,\n-    _path = location.pathname.replace(/index\\.html?$/, '');\n+    _store = Storage && localStorage && localStorage instanceof Storage && localStorage;\n \n function ValineFactory(option) {\n     let root = this;\n@@ -123,16 +121,7 @@ ValineFactory.prototype.init = function (option) {\n         console && console.warn('Sorry, Valine does not support Server-side rendering.')\n         return;\n     }\n-    if(typeof AV === 'undefined') {\n-        Utils.dynamicLoadSource('script', AVSdkUri, () => {\n-            if (typeof AV === 'undefined') {\n-                setTimeout(() => {\n-                    root.init(option)\n-                }, 300)\n-                return;\n-            } else !!option && root._init();\n-        })\n-    } else !!option && root._init();\n+    !!option && root._init();\n     return root;\n }\n \n@@ -148,10 +137,12 @@ ValineFactory.prototype._init = function(){\n             notify,\n             verify,\n             visitor,\n+            path = location.pathname,\n             pageSize,\n             recordIP,\n             clazzName = 'Comment'\n         } = root.config;\n+        root['config']['path'] = path.replace(/index\\.html?$/, '');\n         root['config']['clazzName'] = clazzName;\n         let ds = _avatarSetting['ds'];\n         let force = avatarForce ? '&q=' + Math.random().toString(32).substring(2) : '';\n@@ -161,9 +152,7 @@ ValineFactory.prototype._init = function(){\n         root.verify = verify || false;\n         _avatarSetting['params'] = `?d=${(ds.indexOf(avatar) > -1 ? avatar : 'mp')}&v=${VERSION}${force}`;\n         _avatarSetting['hide'] = avatar === 'hide' ? true : false;\n-        _avatarSetting['cdn'] = LINKREG.test(avatar_cdn) ? avatar_cdn : _avatarSetting['cdn']\n-\n-        _path = root.config.path || _path;\n+        _avatarSetting['cdn'] = /^https?\\:\\/\\//.test(avatar_cdn) ? avatar_cdn : _avatarSetting['cdn']\n \n         let size = Number(pageSize || 10);\n         root.config.pageSize = !isNaN(size) ? (size < 1 ? 10 : size) : 10;\n@@ -175,34 +164,50 @@ ValineFactory.prototype._init = function(){\n             tables: true,\n             breaks: true,\n             pedantic: false,\n-            sanitize: false,\n+            sanitize: true,\n             smartLists: true,\n             smartypants: true\n         });\n \n+\n         if (recordIP) {\n-            let ipScript = Utils.create('script', 'src', '//api.ip.sb/jsonip?callback=getIP');\n-            let s = document.getElementsByTagName(\"script\")[0];\n-            s.parentNode.insertBefore(ipScript, s);\n-            // 获取IP\n-            window.getIP = function (json) {\n-                defaultComment['ip'] = json.ip;\n-            }\n+                let ipScript = Utils.create('script', 'src', '//api.ip.sb/jsonip?callback=getIP');\n+                let s = document.getElementsByTagName(\"script\")[0];\n+                s.parentNode.insertBefore(ipScript, s);\n+                // 获取IP\n+                window.getIP = function (json) {\n+                    defaultComment['ip'] = json.ip;\n+                }\n         }\n \n         let id = root.config.app_id || root.config.appId;\n         let key = root.config.app_key || root.config.appKey;\n         if (!id || !key) throw 99;\n-        AV.applicationId && delete AV._config.applicationId || (AV.applicationId = void 0);\n-        AV.applicationKey && delete AV._config.applicationKey || (AV.applicationKey = void 0);\n \n-        let serverURLs = id.slice(-9) === '-MdYXbMMI' ? 'https://us.avoscloud.com' : 'https://avoscloud.com'\n-        \n-        AV.init({\n-            appId: id,\n-            appKey: key,\n-            serverURLs: serverURLs,\n-        });\n+        let prefix = 'https://';\n+        let serverURLs = '';\n+        if(!root.config['serverURLs']){\n+            switch (id.slice(-9)) {\n+                // TAB \n+                case '-9Nh9j0Va':\n+                    prefix += 'tab.';\n+                    break;\n+                // US\n+                case '-MdYXbMMI':\n+                    prefix += 'us.';\n+                    break;\n+                default:\n+                    break;\n+            }\n+        }\n+        serverURLs = root.config['serverURLs'] || prefix + 'avoscloud.com';\n+        try {\n+            AV.init({\n+                appId: id,\n+                appKey: key,\n+                serverURLs: serverURLs,\n+            });\n+        } catch (ex) { }\n \n         // get comment count\n         let els = Utils.findAll(document, '.valine-comment-count');\n@@ -220,14 +225,15 @@ ValineFactory.prototype._init = function(){\n         })\n \n         // Counter\n-        visitor && CounterFactory.add(AV.Object.extend('Counter'));\n+        visitor && CounterFactory.add(AV.Object.extend('Counter'),root.config.path);\n+\n \n         let el = root.config.el || null;\n         let _el = Utils.findAll(document, el);\n         el = el instanceof HTMLElement ? el : (_el[_el.length - 1] || null);\n         if (!el) return;\n         root.el = el;\n-        root.el.classList.add('v');\n+        try{root.el.classList.add('v');}catch(ex){root.el.setAttribute('class',root.el.getAttribute('class')+' v')}\n \n         _avatarSetting['hide'] && root.el.classList.add('hide-avatar');\n         root.config.meta = (root.config.guest_info || root.config.meta || META).filter(item => META.indexOf(item) > -1);\n@@ -238,6 +244,7 @@ ValineFactory.prototype._init = function(){\n         root.placeholder = root.config.placeholder || 'Just Go Go';\n \n         root.el.innerHTML = `<div class=\"vwrap\"><div class=\"${`vheader item${inputEl.length}`}\">${inputEl.join('')}</div><div class=\"vedit\"><textarea id=\"veditor\" class=\"veditor vinput\" placeholder=\"${root.placeholder}\"></textarea><div class=\"vctrl\"><span class=\"vemoji-btn\">${root.locale['ctrl']['emoji']}</span> | <span class=\"vpreview-btn\">${root.locale['ctrl']['preview']}</span></div><div class=\"vemojis\" style=\"display:none;\"></div><div class=\"vinput vpreview\" style=\"display:none;\"></div></div><div class=\"vcontrol\"><div class=\"col col-20\" title=\"Markdown is supported\"><a href=\"https://segmentfault.com/markdown\" target=\"_blank\"><svg class=\"markdown\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"></path></svg></a></div><div class=\"col col-80 text-right\"><button type=\"button\" title=\"Cmd|Ctrl+Enter\" class=\"vsubmit vbtn\">${root.locale['ctrl']['reply']}</button></div></div><div style=\"display:none;\" class=\"vmark\"></div></div><div class=\"vinfo\" style=\"display:none;\"><div class=\"vcount col\"></div></div><div class=\"vlist\"></div><div class=\"vempty\" style=\"display:none;\"></div><div class=\"vpage txt-center\"></div><div class=\"info\"><div class=\"power txt-right\">Powered By <a href=\"https://valine.js.org\" target=\"_blank\">Valine</a><br>v${VERSION}</div></div>`;\n+    \n \n         // Empty Data\n         let vempty = Utils.find(root.el, '.vempty');\n@@ -252,7 +259,6 @@ ValineFactory.prototype._init = function(){\n                 return root;\n             }\n         }\n-\n         // loading\n         let _spinner = Utils.create('div', 'class', 'vloading');\n         // loading control\n@@ -310,11 +316,12 @@ ValineFactory.prototype._init = function(){\n                 return root;\n             }\n         }\n+\n         // Bind Event\n         root.bind();\n \n     } catch (ex) {\n-        root.ErrorHandler(ex)\n+        root.ErrorHandler(ex,'init')\n     }\n }\n \n@@ -336,7 +343,8 @@ let createCounter = function (Counter, o) {\n     });\n }\n let CounterFactory = {\n-    add(Counter) {\n+    add(Counter,currPath) {\n+        let root = this\n         let lvs = Utils.findAll(document, '.leancloud_visitors,.leancloud-visitors');\n         if (lvs.length) {\n             let lv = lvs[0];\n@@ -350,7 +358,7 @@ let CounterFactory = {\n                 title: title\n             }\n             // 判断是否需要+1\n-            if (decodeURI(url) === decodeURI(_path)) {\n+            if (decodeURI(url) === decodeURI(currPath)) {\n                 let query = new AV.Query(Counter);\n                 query.equalTo('url', url);\n                 query.find().then(ret => {\n@@ -391,7 +399,7 @@ let CounterFactory = {\n                     Utils.each(ret, (idx, item) => {\n                         let url = item.get('url');\n                         let time = item.get('time');\n-                        let els = Utils.findAll(document, `.leancloud_visitors[id=\"${url}\"]`) || Utils.findAll(document, `.leancloud-visitors[id=\"${url}\"]`);\n+                        let els = Utils.findAll(document, `.leancloud_visitors[id=\"${url}\"],.leancloud-visitors[id=\"${url}\"]`);\n                         Utils.each(els, (idx, el) => {\n                             let cel = Utils.find(el, COUNT_CONTAINER_REF);\n                             if (cel) cel.innerText = time\n@@ -431,17 +439,18 @@ ValineFactory.prototype.Q = function (k) {\n     }\n }\n \n-ValineFactory.prototype.ErrorHandler = function (ex) {\n-    // console.log(ex.code,ex.message)\n+ValineFactory.prototype.ErrorHandler = function (ex,origin) {\n+    console.log(origin)\n+    console.error(ex)\n+    console.error(ex.code,ex.message)\n     let root = this;\n     root.el && root.loading.hide().nodata.hide()\n     if (({}).toString.call(ex) === \"[object Error]\") {\n         let code = ex.code || '',\n             t = root.locale['error'][code],\n             msg = t || ex.message || ex.error || '';\n-        if (code == 101) {\n-            root.nodata.show()\n-        } else root.el && root.nodata.show(`<pre style=\"text-align:left;\">Code ${code}: ${msg}</pre>`) ||\n+        if (code == 101) root.nodata.show()\n+        else root.el && root.nodata.show(`<pre style=\"text-align:left;\">Code ${code}: ${msg}</pre>`) ||\n             console && console.error(`Code ${code}: ${msg}`)\n     } else {\n         root.el && root.nodata.show(`<pre style=\"text-align:left;\">${JSON.stringify(ex)}</pre>`) ||\n@@ -471,7 +480,7 @@ ValineFactory.prototype.installLocale = function (locale, mode) {\n  * @param {String} path \n  */\n ValineFactory.prototype.setPath = function (path) {\n-    _path = path || _path;\n+    this.config.path = path\n     return this\n }\n \n@@ -506,6 +515,7 @@ ValineFactory.prototype.bind = function (option) {\n             })(key, emojiData[key])\n         }\n     }\n+\n     root.emoji = {\n         show() {\n             root.preview.hide();\n@@ -559,7 +569,6 @@ ValineFactory.prototype.bind = function (option) {\n         Utils.each(ns, (idx, n) => {\n             if (n.nodeType !== 1) return;\n             if (rejectNodes.indexOf(n.nodeName) > -1) {\n-                // console.log(n.nodeName)\n                 if (n.nodeName === 'INPUT' && Utils.attr(n, 'type') === 'checkbox') Utils.attr(n, 'disabled', 'disabled');\n                 else Utils.remove(n);\n             }\n@@ -578,7 +587,6 @@ ValineFactory.prototype.bind = function (option) {\n         let _v = 'comment';\n         let _val = (_el.value || '');\n         _val = Emoji.parse(_val);\n-        // _el.value = _val.replace(/\\n(\\n)*( )*(\\n)*\\n/g,'');\n         _el.value = _val;\n         let ret = xssFilter(marked(_val));\n         defaultComment[_v] = ret;\n@@ -590,20 +598,14 @@ ValineFactory.prototype.bind = function (option) {\n     // 显示/隐藏 Emojis\n     Utils.on('click', _emojiCtrl, (e) => {\n         let _vi = Utils.attr(_emojiCtrl, 'v');\n-        if (_vi) {\n-            root.emoji.hide()\n-        } else {\n-            root.emoji.show();\n-        }\n+        if (_vi) root.emoji.hide()\n+        else root.emoji.show();\n     });\n \n     Utils.on('click', _vpreviewCtrl, function (e) {\n         let _vi = Utils.attr(_vpreviewCtrl, 'v');\n-        if (_vi) {\n-            root.preview.hide();\n-        } else {\n-            root.preview.show();\n-        }\n+        if (_vi) root.preview.hide();\n+        else root.preview.show();\n     });\n \n     let meta = root.config.meta;\n@@ -622,11 +624,8 @@ ValineFactory.prototype.bind = function (option) {\n             let _el = Utils.find(root.el, `.${i}`);\n             inputs[_v] = _el;\n             _el && Utils.on('input change blur', _el, (e) => {\n-                if (_v === 'comment') {\n-                    syncContentEvt(_el)\n-                } else {\n-                    defaultComment[_v] = Utils.escape(_el.value.replace(/(^\\s*)|(\\s*$)/g, \"\"));\n-                }\n+                if (_v === 'comment') syncContentEvt(_el)\n+                else defaultComment[_v] = Utils.escape(_el.value.replace(/(^\\s*)|(\\s*$)/g, \"\")).substring(0,20);\n             });\n         }\n     }\n@@ -667,7 +666,7 @@ ValineFactory.prototype.bind = function (option) {\n         let size = root.config.pageSize;\n         let count = Number(Utils.find(root.el, '.vnum').innerText);\n         root.loading.show();\n-        let cq = root.Q(_path);\n+        let cq = root.Q(root.config.path);\n         cq.limit(size);\n         cq.skip((no - 1) * size);\n         cq.find().then(rets => {\n@@ -679,7 +678,7 @@ ValineFactory.prototype.bind = function (option) {\n                 insertDom(ret, Utils.find(root.el, '.vlist'), !0)\n             }\n             // load children comment\n-            root.Q(_path, rids).then(ret => {\n+            root.Q(root.config.path, rids).then(ret => {\n                 let childs = ret && ret.results || []\n                 for (let k = 0; k < childs.length; k++) {\n                     let child = childs[k];\n@@ -697,11 +696,10 @@ ValineFactory.prototype.bind = function (option) {\n             }\n             root.loading.hide();\n         }).catch(ex => {\n-            root.loading.hide().ErrorHandler(ex)\n+            root.loading.hide().ErrorHandler(ex,'query')\n         })\n     }\n-\n-    root.Q(_path).count().then(num => {\n+    root.Q(root.config.path).count().then(num => {\n         if (num > 0) {\n             Utils.attr(Utils.find(root.el, '.vinfo'), 'style', 'display:block;');\n             Utils.find(root.el, '.vcount').innerHTML = `<span class=\"vnum\">${num}</span> ${root.locale['tips']['comments']}`;\n@@ -710,7 +708,7 @@ ValineFactory.prototype.bind = function (option) {\n             root.loading.hide();\n         }\n     }).catch(ex => {\n-        root.ErrorHandler(ex)\n+        root.ErrorHandler(ex,'count')\n     });\n \n     let insertDom = (rt, node, mt) => {\n@@ -728,8 +726,9 @@ ValineFactory.prototype.bind = function (option) {\n             let os = `<span class=\"vsys\">${ua.os} ${ua.osVersion}</span>`;\n             uaMeta = `${browser} ${os}`;\n         }\n+        if(root.config.path === '*') uaMeta = `<a href=\"${rt.get('url')}\" class=\"vsys\">${rt.get('url')}</a>`\n         let _nick = '';\n-        let _t = rt.get('link') || '';\n+        let _t = rt.get('link')?(/^https?\\:\\/\\//.test(rt.get('link')) ? rt.get('link') : 'http://'+rt.get('link')) : '';\n         _nick = _t ? `<a class=\"vnick\" rel=\"nofollow\" href=\"${_t}\" target=\"_blank\" >${rt.get(\"nick\")}</a>` : `<span class=\"vnick\">${rt.get('nick')}</span>`;\n         _vcard.innerHTML = `${_img}\n             <div class=\"vh\" rootid=${rt.get('rid') || rt.id}>\n@@ -776,21 +775,16 @@ ValineFactory.prototype.bind = function (option) {\n                         hljs.lineNumbersBlock(block);\n                     });\n                 }\n-            } catch (error) {\n-\n-            }\n-        }, 20)\n+            } catch (ex) {}\n+        }, 200)\n     }\n \n-    let _activeHLJS = () => {}\n-\n     // expand event\n     let expandEvt = (el) => {\n         setTimeout(function () {\n             if (el.offsetHeight > 180) {\n                 el.classList.add('expand');\n-                Utils.on('click', el, (e) => {\n-                    e.preventDefault();\n+                Utils.on('click', el, e => {\n                     Utils.attr(el, 'class', 'vcontent');\n                 })\n             }\n@@ -867,18 +861,18 @@ ValineFactory.prototype.bind = function (option) {\n     let getAcl = () => {\n         let acl = new AV.ACL();\n         acl.setPublicReadAccess(!0);\n-        acl.setPublicWriteAccess(false);\n+        acl.setPublicWriteAccess(!1);\n         return acl;\n     }\n \n     let commitEvt = () => {\n         Utils.attr(submitBtn, 'disabled', !0);\n         root.loading.show(!0);\n         // 声明类型\n-        let Ct = AV.Object.extend('Comment');\n+        let Ct = AV.Object.extend(root.config.clazzName || 'Comment');\n         // 新建对象\n         let comment = new Ct();\n-        defaultComment['url'] = decodeURI(_path);\n+        defaultComment['url'] = decodeURI(root.config.path);\n         defaultComment['insertedAt'] = new Date();\n         if (atData['rid']) {\n             let pid = atData['pid'] || atData['rid'];\n@@ -913,6 +907,7 @@ ValineFactory.prototype.bind = function (option) {\n                         Utils.find(root.el, '.vcount').innerHTML = '<span class=\"num\">1</span> ' + root.locale['tips']['comments']\n                     }\n                     insertDom(ret, Utils.find(root.el, '.vlist'));\n+                    root.config.pageSize++\n                 }\n \n                 defaultComment['mail'] && signUp({\n@@ -928,10 +923,10 @@ ValineFactory.prototype.bind = function (option) {\n                 root.loading.hide();\n                 reset();\n             } catch (ex) {\n-                root.ErrorHandler(ex);\n+                root.ErrorHandler(ex,'save');\n             }\n         }).catch(ex => {\n-            root.ErrorHandler(ex);\n+            root.ErrorHandler(ex,'commitEvt');\n         })\n     }\n \n@@ -1012,48 +1007,58 @@ ValineFactory.prototype.bind = function (option) {\n             }\n         }\n     });\n-    // Utils.on('paste',document,(e)=>{\n-    //     let clipboardData = \"clipboardData\" in e ? e.clipboardData : window.clipboardData\n-    //     let items = clipboardData && clipboardData.items;\n-    //     let file = null;\n-    //     if (items && items.length) {\n-    //         // 检索剪切板items\n-    //         for (let i = 0; i < items.length; i++) {\n-    //             if (items[i].type.indexOf('image') !== -1) {\n-    //                 file = items[i].getAsFile();\n-    //                 break;\n-    //             }\n-    //         }\n-    //         if(file) {\n-    //             console.log(file)\n-    //             uploadImage(file,function(err,ret){\n-    //                 console.log(ret)\n-    //             })\n-    //         }\n-    //     }\n-    // })\n+    Utils.on('paste',document,(e)=>{\n+        let clipboardData = \"clipboardData\" in e ? e.clipboardData : (e.originalEvent && e.originalEvent.clipboardData || window.clipboardData)\n+        let items = clipboardData && clipboardData.items;\n+        let files = [];\n+        if (items && items.length>0) {\n+            // 检索剪切板items\n+            for (let i = 0; i < items.length; i++) {\n+                if (items[i].type.indexOf('image') !== -1) {\n+                    files.push(items[i].getAsFile());\n+                    break;\n+                }\n+            }\n+            if(files.length) {\n+                for(let idx in files){\n+                    let file = files[idx],\n+                        uploadText = `![Uploading ${file['name']}]()`;\n+                    _insertAtCaret(_veditor, uploadText);\n+                    file && uploadImage(file,function(err,ret){\n+                        if(!err && ret) _veditor.value = _veditor.value.replace(uploadText,`\\r\\n![${file['name']}](${ret['data']})`)\n+                    })\n+                }\n+            }\n+        }\n+\n+    })\n+\n \n+    let uploadImage = (file,callback)=>{\n+        let formData = new FormData();\n+        formData.append('file', file);\n+        let xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\n+        xhr.onreadystatechange = function () {\n+            if (xhr.readyState == 4 && xhr.status == 200) {\n+                try {\n+                    let json = JSON.parse(xhr.responseText);\n+                    callback && callback(null,json)\n+                } catch (err) {\n+                    callback && callback(err)\n+                }\n+            } else {\n+                callback && callback(xhr.status)\n+            }\n+        }\n+        xhr.onerror = function(e){\n+            console.log(e)\n+        }\n+        // xhr.open('POST', 'https://sm.ms/api/v2/upload?inajax=1',true);\n+        // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n+        xhr.open('POST','https://imgkr.com/api/files/upload',true);\n+        xhr.send(formData);\n+    }\n \n-    // let uploadImage = (file,callback)=>{\n-    //     let formData = new FormData();\n-    //     formData.append('smfile', file);\n-    //     // formData.append('test','test')\n-    //     let xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\n-    //     xhr.onreadystatechange = function () {\n-    //         if (xhr.readyState == 4 && xhr.status == 200) {\n-    //             let json = JSON.parse(xhr.responseText);\n-    //             callback && callback(null,json)\n-    //         } else {\n-    //             callback && callback(xhr.status)\n-    //         }\n-    //     }\n-    //     xhr.onerror = function(e){\n-    //         console.log(e)\n-    //     }\n-    //     xhr.open('POST', 'https://sm.ms/api/upload',true);\n-    //     // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n-    //     xhr.send(formData);\n-    // }\n }\n \n function Valine(options) {"
    },
    {
      "sha": "5ca9f90fe8ad867d06fa2e12f1a89301fa8bbe3b",
      "filename": "src/index.scss",
      "status": "modified",
      "additions": 0,
      "deletions": 30,
      "changes": 30,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/index.scss",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/index.scss",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/index.scss?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -29,23 +29,8 @@\n         color: #1abc9c;\n         text-decoration:none;\n         display:inline-block;\n-        &::before{\n-            content:'';\n-            position:absolute;\n-            width:0;\n-            right:0;\n-            bottom:0;\n-            height:1px;\n-            background:#1abc9c;\n-            transition: width .3s ease;\n-        }\n         &:hover {\n             color: #D7191A;\n-            &::before{\n-                width:100%;\n-                left:0;\n-                right:auto;\n-            }\n         }\n     }\n     pre,code{\n@@ -359,23 +344,8 @@\n                     color: #1abc9c;\n                     text-decoration:none;\n                     display:inline-block;\n-                    &::before{\n-                        content:'';\n-                        position:absolute;\n-                        width:0;\n-                        right:0;\n-                        bottom:0;\n-                        height:1px;\n-                        background:#1abc9c;\n-                        transition: width .3s ease;\n-                    }\n                     &:hover {\n                         color: #D7191A;\n-                        &::before{\n-                            width:100%;\n-                            left:0;\n-                            right:auto;\n-                        }\n                     }\n                 }\n                 .vsys {"
    },
    {
      "sha": "3c531308979fa79595a7c9a660ebda006a44329b",
      "filename": "src/utils/deepClone.js",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/utils/deepClone.js",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/utils/deepClone.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/utils/deepClone.js?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -28,7 +28,7 @@ function isCyclic (data) {\n             seenObjects.push(data);\n \n             // Begin iterating through the data passed to the method\n-            for (var key in data) {\n+            for (let key in data) {\n                 // Recall this method with the objects key\n                 if (data.hasOwnProperty(key) === true && detect(data[key])) {\n                     return true;\n@@ -75,7 +75,7 @@ const deepClone = function (data) {\n             // Create a new array that will have no references to the one we want to copy\n             let copiedArray = [];\n             // Iterate over the arrays elements\n-            for (var i = 0; i < data.length; i++) {\n+            for (let i = 0; i < data.length; i++) {\n                 // Push the arrays elements to this new array\n                 // First recall this method with the elements\n                 // This is so arrays of objects and other nested data structures get correctly cloned."
    },
    {
      "sha": "9a7ce6e06de4f88a3a7dcf6ab1746d0fe81cd7a8",
      "filename": "src/utils/domUtils.js",
      "status": "modified",
      "additions": 1,
      "deletions": 42,
      "changes": 43,
      "blob_url": "https://github.com/xCss/Valine/blob/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/utils/domUtils.js",
      "raw_url": "https://github.com/xCss/Valine/raw/32b31777bf97b175f449744ae2aaac7adcdf6fb2/src/utils/domUtils.js",
      "contents_url": "https://api.github.com/repos/xCss/Valine/contents/src/utils/domUtils.js?ref=32b31777bf97b175f449744ae2aaac7adcdf6fb2",
      "patch": "@@ -22,47 +22,6 @@ const reHasEscapedHtml = RegExp(reEscapedHtml.source)\n \n \n const utils = {\n-    /**\n-     * 检测DOM是否加载完毕\n-     * @param {Function} callback \n-     */\n-    domReady(callback) {\n-        if (doc.readyState === \"complete\" || (doc.readyState !== \"loading\" && !doc.documentElement.doScroll))\n-            setTimeout(() => callback && callback(), 0)\n-        else {\n-            let handler = () => {\n-                doc.removeEventListener(\"DOMContentLoaded\", handler, false)\n-                win.removeEventListener(\"load\", handler, false)\n-                callback && callback()\n-            }\n-            doc.addEventListener(\"DOMContentLoaded\", handler, false)\n-            win.addEventListener(\"load\", handler, false)\n-        }\n-    },\n-    /**\n-     * 动态加载资源库 \n-     * @param {String} sourceName 资源名 script/link\n-     * @param {String} sourceURI 需要加载的资源库链接\n-     * @param {Function} callback 回调函数\n-     */\n-    dynamicLoadSource(sourceName, sourceURI, callback) {\n-        let attrNameMap = {'script':'src','link':'href'};\n-        let attr = attrNameMap[sourceName]\n-        if (utils.find(doc, `${sourceName}[${attr}=\"${sourceURI}\"]`)) {\n-            typeof (callback) === 'function' && callback()\n-        } else {\n-            let s = utils.create(sourceName, attr, sourceURI);\n-            let h = doc.getElementsByTagName(\"head\")[0];\n-            h.appendChild(s);\n-            s.onload = s.onreadystatechange = function () {\n-                let vm = this;\n-                if (! /*@cc_on!@*/ 0 || vm.readyState === 'loaded' || vm.readyState === 'complete') {\n-                    vm.onload = vm.onreadystatechange = null;\n-                    typeof (callback) === 'function' && callback()\n-                }\n-            }\n-        }\n-    },\n     on(type, el, handler, capture) {\n         type = type.split(' ')\n         for (let i = 0, len = type.length; i < len; i++) {\n@@ -192,7 +151,7 @@ const utils = {\n                     if (el.nodeName == 'CODE') return false\n                     let clazz = attr.value\n                     if (clazz.indexOf('at') > -1) utils.attr(el, 'class', 'at');\n-                    if (clazz.indexOf('vemoji') > -1) utils.attr(el,'class','vemoji');\n+                    else if (clazz.indexOf('vemoji') > -1) utils.attr(el,'class','vemoji');\n                     else utils.removeAttr(el, 'class')\n                     break;\n                 default:"
    }
  ]
}
