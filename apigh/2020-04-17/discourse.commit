{
  "sha": "0e4497b6be081371e15e28d54c528391858b53f9",
  "node_id": "MDY6Q29tbWl0NzU2OTU3ODowZTQ0OTdiNmJlMDgxMzcxZTE1ZTI4ZDU0YzUyODM5MTg1OGI1M2Y5",
  "commit": {
    "author": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2020-04-17T16:23:40Z"
    },
    "committer": {
      "name": "David Taylor",
      "email": "david@taylorhq.com",
      "date": "2020-04-17T16:24:14Z"
    },
    "message": "DEV: Update tl3 spec to remove hard-coded primary keys\n\nIn some test runs, the hard-coded ids could correspond to real topics created earlier in the tests, and cause random test failures",
    "tree": {
      "sha": "1370a11610afbeb8a9765a8f93fce3d09c8fc128",
      "url": "https://api.github.com/repos/discourse/discourse/git/trees/1370a11610afbeb8a9765a8f93fce3d09c8fc128"
    },
    "url": "https://api.github.com/repos/discourse/discourse/git/commits/0e4497b6be081371e15e28d54c528391858b53f9",
    "comment_count": 0,
    "verification": {
      "verified": true,
      "reason": "valid",
      "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEHsYLdRGl7BC5CQY1RpBMGLHT9DQFAl6Z2C4ACgkQRpBMGLHT\n9DR8kw/+LB6RXelbSLD4H/RcLyDdPSjL2glrtOtI9xIqG2n7P2mOFslkze9D5lV0\nZ1oIiggkbWPQvIA+0BjJeMg+5CCJ1QFwlhRZV3TCPyXqfmCX9pg3Y/wP2t6SuQ+B\n3ToAhjmjovbzj4+qMwBqNcbHgrcuv2o3WQJTXGLzNhnhyU9BGIereJLlFJ7gaiwe\nq7rrGsARRc5C8JqQ/DHpKRP5ca2xTskEPFLvMZtoc921AXemF0SforE48ymkYydh\nl6789U6eUgmNINE87TGB8w+XKF3fhOa+3tKGcJR1dLsan2b9hq9ySmV9MK6pLYfW\nGY6oQWnW+AHn9Y7RqjiersvegKloUuYFvLQvqohgMcanMnEtzyJAbGFBUz1FHJVP\n1bp7OQG8i8gHiCbjlCdfsPrszX6M2Fxswp1+fsyozeVLLENyABmtsb6wag2un/tE\nDltuafapmN1cYLLDuktpEupA/QBB1CwVmZ19LlTCfLqdu1hgfSRepKyR8MEMa8HF\neJYb/meGLNzcy1saTQ7kZtj/M+2Y5U2WnCxggONWbtaKwo4RsZRnALZBSyoY6vYH\no9tfjo0315MATArIE9QYa33Hb3zH/e/4vTsaCBQxtvk0gk6UTOoIGdpf8q0wLT/a\n/1na3EjPpfmzQRioblSVpaFHcIHQ9L7CJBkRJuF2Oklw/cEFdzQ=\n=l4Oj\n-----END PGP SIGNATURE-----",
      "payload": "tree 1370a11610afbeb8a9765a8f93fce3d09c8fc128\nparent 77dd31a642ecbf36a63ea7a823b636255811f538\nauthor David Taylor <david@taylorhq.com> 1587140620 +0100\ncommitter David Taylor <david@taylorhq.com> 1587140654 +0100\n\nDEV: Update tl3 spec to remove hard-coded primary keys\n\nIn some test runs, the hard-coded ids could correspond to real topics created earlier in the tests, and cause random test failures\n"
    }
  },
  "url": "https://api.github.com/repos/discourse/discourse/commits/0e4497b6be081371e15e28d54c528391858b53f9",
  "html_url": "https://github.com/discourse/discourse/commit/0e4497b6be081371e15e28d54c528391858b53f9",
  "comments_url": "https://api.github.com/repos/discourse/discourse/commits/0e4497b6be081371e15e28d54c528391858b53f9/comments",
  "author": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "committer": {
    "login": "davidtaylorhq",
    "id": 6270921,
    "node_id": "MDQ6VXNlcjYyNzA5MjE=",
    "avatar_url": "https://avatars0.githubusercontent.com/u/6270921?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/davidtaylorhq",
    "html_url": "https://github.com/davidtaylorhq",
    "followers_url": "https://api.github.com/users/davidtaylorhq/followers",
    "following_url": "https://api.github.com/users/davidtaylorhq/following{/other_user}",
    "gists_url": "https://api.github.com/users/davidtaylorhq/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/davidtaylorhq/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/davidtaylorhq/subscriptions",
    "organizations_url": "https://api.github.com/users/davidtaylorhq/orgs",
    "repos_url": "https://api.github.com/users/davidtaylorhq/repos",
    "events_url": "https://api.github.com/users/davidtaylorhq/events{/privacy}",
    "received_events_url": "https://api.github.com/users/davidtaylorhq/received_events",
    "type": "User",
    "site_admin": false
  },
  "parents": [
    {
      "sha": "77dd31a642ecbf36a63ea7a823b636255811f538",
      "url": "https://api.github.com/repos/discourse/discourse/commits/77dd31a642ecbf36a63ea7a823b636255811f538",
      "html_url": "https://github.com/discourse/discourse/commit/77dd31a642ecbf36a63ea7a823b636255811f538"
    }
  ],
  "stats": {
    "total": 48,
    "additions": 26,
    "deletions": 22
  },
  "files": [
    {
      "sha": "3189c5e2e650bd14b184f31cb2a55db84142b2ba",
      "filename": "spec/models/trust_level3_requirements_spec.rb",
      "status": "modified",
      "additions": 26,
      "deletions": 22,
      "changes": 48,
      "blob_url": "https://github.com/discourse/discourse/blob/0e4497b6be081371e15e28d54c528391858b53f9/spec/models/trust_level3_requirements_spec.rb",
      "raw_url": "https://github.com/discourse/discourse/raw/0e4497b6be081371e15e28d54c528391858b53f9/spec/models/trust_level3_requirements_spec.rb",
      "contents_url": "https://api.github.com/repos/discourse/discourse/contents/spec/models/trust_level3_requirements_spec.rb?ref=0e4497b6be081371e15e28d54c528391858b53f9",
      "patch": "@@ -8,13 +8,17 @@\n   subject(:tl3_requirements) { described_class.new(user) }\n   fab!(:moderator) { Fabricate(:moderator) }\n \n+  fab!(:topic1) { Fabricate(:topic) }\n+  fab!(:topic2) { Fabricate(:topic) }\n+  fab!(:topic3) { Fabricate(:topic) }\n+  fab!(:topic4) { Fabricate(:topic) }\n+\n   before do\n     described_class.clear_cache\n   end\n \n-  def make_view(id, at, user_id)\n-    Fabricate(:topic, id: id) unless Topic.where(id: id).exists?\n-    TopicViewItem.add(id, '11.22.33.44', user_id, at, _skip_redis = true)\n+  def make_view(topic, at, user_id)\n+    TopicViewItem.add(topic.id, '11.22.33.44', user_id, at, _skip_redis = true)\n   end\n \n   def like_at(created_by, post, created_at)\n@@ -270,21 +274,21 @@ def like_at(created_by, post, created_at)\n   describe \"topics_viewed\" do\n     it \"counts topics views within last 100 days (default time period), not counting a topic more than once\" do\n       user.save\n-      make_view(9, 1.day.ago,    user.id)\n-      make_view(9, 3.days.ago,   user.id) # same topic, different day\n-      make_view(3, 4.days.ago,   user.id)\n-      make_view(2, 101.days.ago, user.id) # too long ago\n+      make_view(topic1, 1.day.ago,    user.id)\n+      make_view(topic1, 3.days.ago,   user.id) # same topic, different day\n+      make_view(topic2, 4.days.ago,   user.id)\n+      make_view(topic3, 101.days.ago, user.id) # too long ago\n       expect(tl3_requirements.topics_viewed).to eq(2)\n     end\n \n     it \"counts topics views within last 200 days, respecting tl3_time_period setting\" do\n       SiteSetting.tl3_time_period = 200\n       user.save\n-      make_view(9, 1.day.ago,    user.id)\n-      make_view(9, 3.days.ago,   user.id) # same topic, different day\n-      make_view(3, 4.days.ago,   user.id)\n-      make_view(2, 101.days.ago, user.id)\n-      make_view(4, 201.days.ago, user.id) # too long ago\n+      make_view(topic1, 1.day.ago,    user.id)\n+      make_view(topic1, 3.days.ago,   user.id) # same topic, different day\n+      make_view(topic2, 4.days.ago,   user.id)\n+      make_view(topic3, 101.days.ago, user.id)\n+      make_view(topic4, 201.days.ago, user.id) # too long ago\n       expect(tl3_requirements.topics_viewed).to eq(3)\n     end\n \n@@ -296,8 +300,8 @@ def like_at(created_by, post, created_at)\n         target_usernames: [user.username, moderator.username]\n       ).topic\n \n-      make_view(9, 1.day.ago, user.id)\n-      make_view(private_topic.id, 1.day.ago, user.id)\n+      make_view(topic1, 1.day.ago, user.id)\n+      make_view(private_topic, 1.day.ago, user.id)\n       expect(tl3_requirements.topics_viewed).to eq(1)\n     end\n   end\n@@ -316,9 +320,9 @@ def like_at(created_by, post, created_at)\n   describe \"topics_viewed_all_time\" do\n     it \"counts topics viewed at any time\" do\n       user.save\n-      make_view(10, 1.day.ago,    user.id)\n-      make_view(9,  100.days.ago, user.id)\n-      make_view(8,  101.days.ago, user.id)\n+      make_view(topic1, 1.day.ago,    user.id)\n+      make_view(topic2,  100.days.ago, user.id)\n+      make_view(topic3,  101.days.ago, user.id)\n       expect(tl3_requirements.topics_viewed_all_time).to eq(3)\n     end\n \n@@ -330,11 +334,11 @@ def like_at(created_by, post, created_at)\n         target_usernames: [user.username, moderator.username]\n       ).topic\n \n-      make_view(10, 1.day.ago,    user.id)\n-      make_view(9,  100.days.ago, user.id)\n-      make_view(8,  101.days.ago, user.id)\n-      make_view(private_topic.id, 1.day.ago, user.id)\n-      make_view(private_topic.id, 100.days.ago, user.id)\n+      make_view(topic1, 1.day.ago,    user.id)\n+      make_view(topic2,  100.days.ago, user.id)\n+      make_view(topic3,  101.days.ago, user.id)\n+      make_view(private_topic, 1.day.ago, user.id)\n+      make_view(private_topic, 100.days.ago, user.id)\n       expect(tl3_requirements.topics_viewed_all_time).to eq(3)\n     end\n   end"
    }
  ]
}
